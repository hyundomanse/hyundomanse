<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BO.AdjInteg">
	<typeAlias  alias="commMap" type="com.devwork.common.map.CommonMap"/>
	
	<!-- 페이징 Header -->
	<sql id="pagingHeader">
	
		<![CDATA[
		SELECT * 
		  FROM (
				SELECT A.*
				     , ROWNUM  AS RNUM
				  FROM (
		]]>	  
	</sql>
	
	<!-- 페이징 Footer -->
	<sql id="pagingFooter">
		<![CDATA[
                       ) A	WHERE ROWNUM <= #lastIndex#
		       ) WHERE RNUM >= #firstIndex#
		]]>
	</sql>
	
	<!-- 현재 정산확정 상태 정산확정 대상 -->
	<select id="selectSuppAdjustDaySettled" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT 	  1
	         	, IS_TARGET_SETTLED
	         	, IS_SUPP_DAY_STR
	         	, LAST_SUPP_ADJ_FIN_DATE
	         	, ADJ_START_DAY
	         	, ADJ_END_DAY
	         	, ADJ_CONFIRM_DAY
	         	, NEW_NEXT_START_DAY
	         	, IS_CTRT_TRANSF_SUPP_ADJ
	         	, SUPP_ADJ_YN
    	FROM
   	 	(
      			SELECT 	  GBN
         	  			, IS_TARGET_SETTLED
         				, IS_SUPP_DAY_STR
			         	, LAST_SUPP_ADJ_FIN_DATE
			         	, ADJ_START_DAY
			         	, ADJ_END_DAY
			         	, ADJ_CONFIRM_DAY
			         	, NEW_NEXT_START_DAY
         				, CASE WHEN TO_CHAR(TO_DATE(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(ADJ_START_DAY, 'YYYYMMDD'), 1), 'YYYYMMDD'), 1, 6)||01, 'YYYYMMDD') - 1, 'YYYYMMDD') BETWEEN ADJ_START_DAY AND ADJ_END_DAY THEN 'Y'
            				ELSE 'N'
           					END AS IS_CTRT_TRANSF_SUPP_ADJ
         				, SUPP_ADJ_YN
      			FROM
      			(
        				SELECT 	  TO_CHAR(TO_DATE(LAST_SUPP_ADJ_FIN_DATE, 'YYYY/MM/DD'), 'YYYYMMDD') AS LAST_SUPP_ADJ_FIN_DATE
           						, TO_CHAR(TO_DATE(LAST_SUPP_ADJ_FIN_DATE, 'YYYY/MM/DD') + 1, 'YYYYMMDD') AS ADJ_START_DAY
        				FROM
        				(
          						SELECT 	MAX(END_DAY) AS LAST_SUPP_ADJ_FIN_DATE
          						FROM 	ST_HISTORY_ADJUST
          						WHERE 	SUPP_ADJ_YN = 'Y'
        				)
      			)A,
      			(
        		SELECT 	  GBN
           				, IS_TARGET_SETTLED
           				, IS_SUPP_DAY_STR
           				, ADJ_END_DAY
           				, ADJ_CONFIRM_DAY
           				, NEW_NEXT_START_DAY
           				, SUPP_ADJ_YN
        		FROM
        		(
          				SELECT 	  GBN
             					, IS_TARGET_SETTLED
             					, IS_SUPP_DAY_STR
             					, ADJ_END_DAY
             					, ADJ_CONFIRM_DAY
             					, NEW_NEXT_START_DAY
             					, SUPP_ADJ_YN
          				FROM
          				(
		          				SELECT    1 AS GBN
		             					, 'Y' AS IS_TARGET_SETTLED
		             					, 'IS_SUPP_DAY_SETTLED' AS IS_SUPP_DAY_STR
		             					, TO_CHAR(TO_DATE(END_DAY, 'YYYY/MM/DD'), 'YYYYMMDD') AS ADJ_END_DAY
		             					, TO_CHAR(TO_DATE(CONFIRM_DAY, 'YYYY/MM/DD'), 'YYYYMMDD') AS ADJ_CONFIRM_DAY
		             					, TO_CHAR(TO_DATE(END_DAY, 'YYYY/MM/DD')+1, 'YYYYMMDD') AS NEW_NEXT_START_DAY
		             					, NVL(SUPP_ADJ_YN, 'B') AS SUPP_ADJ_YN
		          				FROM
		          				(
		            					SELECT 	CONFIRM_DAY, END_DAY, SUPP_ADJ_YN
		            					FROM 	ST_HISTORY_ADJUST
		            					WHERE 	CONFIRM_DAY > (SELECT MAX(END_DAY) AS LAST_SUPP_ADJ_FIN_DATE FROM ST_HISTORY_ADJUST WHERE SUPP_ADJ_YN = 'Y' )
		            					AND 	NVL(SUPP_ADJ_YN, 'S') NOT IN('C', 'Y')
		            					ORDER BY CONFIRM_DAY DESC, END_DAY DESC
		          				)
		          				WHERE ROWNUM <= 1
		          				UNION ALL
		          				SELECT    2 AS GBN
		             					, 'N' AS IS_TARGET_SETTLED
		             					, 'NOT_SUPP_DAY_SETTLED' AS IS_SUPP_DAY_STR
		             					, '' AS ADJ_END_DAY
		             					, '' AS ADJ_CONFIRM_DAY
		             					, '' AS NEW_NEXT_START_DAY
		             					, '' AS SUPP_ADJ_YN
		          				FROM 	DUAL
          				)
          				ORDER BY GBN
         		)
         		WHERE ROWNUM <= 1
      		)B
   	)
	]]>
	</select>
	
	<select id="selectSuppAdjustDaySettledB2B" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT       1
                 , IS_TARGET_SETTLED
                 , IS_SUPP_DAY_STR
                 , LAST_SUPP_ADJ_FIN_DATE
                 , ADJ_START_DAY
                 , ADJ_END_DAY
                 , ADJ_CONFIRM_DAY
                 , NEW_NEXT_START_DAY
                 , IS_CTRT_TRANSF_SUPP_ADJ
                 , SUPP_ADJ_YN
        FROM
            (
                  SELECT       GBN
                           , IS_TARGET_SETTLED
                         , IS_SUPP_DAY_STR
                         , LAST_SUPP_ADJ_FIN_DATE
                         , ADJ_START_DAY
                         , ADJ_END_DAY
                         , ADJ_CONFIRM_DAY
                         , NEW_NEXT_START_DAY
                         , CASE WHEN TO_CHAR(TO_DATE(SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(ADJ_START_DAY, 'YYYYMMDD'), 1), 'YYYYMMDD'), 1, 6)||01, 'YYYYMMDD') - 1, 'YYYYMMDD') BETWEEN ADJ_START_DAY AND ADJ_END_DAY THEN 'Y'
                            ELSE 'N'
                               END AS IS_CTRT_TRANSF_SUPP_ADJ
                         , SUPP_ADJ_YN
                  FROM
                  (
                        SELECT       TO_CHAR(TO_DATE(LAST_SUPP_ADJ_FIN_DATE, 'YYYY/MM/DD'), 'YYYYMMDD') AS LAST_SUPP_ADJ_FIN_DATE
                                   , TO_CHAR(TO_DATE(LAST_SUPP_ADJ_FIN_DATE, 'YYYY/MM/DD') + 1, 'YYYYMMDD') AS ADJ_START_DAY
                        FROM
                        (
                                  SELECT     MAX(END_DAY) AS LAST_SUPP_ADJ_FIN_DATE
                                  FROM     ST_B2B_HISTORY_ADJUST
                                  WHERE     SUPP_ADJ_YN = 'Y'
                        )
                  )A,
                  (
                SELECT       GBN
                           , IS_TARGET_SETTLED
                           , IS_SUPP_DAY_STR
                           , ADJ_END_DAY
                           , ADJ_CONFIRM_DAY
                           , NEW_NEXT_START_DAY
                           , SUPP_ADJ_YN
                FROM
                (
                          SELECT       GBN
                                 , IS_TARGET_SETTLED
                                 , IS_SUPP_DAY_STR
                                 , ADJ_END_DAY
                                 , ADJ_CONFIRM_DAY
                                 , NEW_NEXT_START_DAY
                                 , SUPP_ADJ_YN
                          FROM
                          (
                                  SELECT    1 AS GBN
                                         , 'Y' AS IS_TARGET_SETTLED
                                         , 'IS_SUPP_DAY_SETTLED' AS IS_SUPP_DAY_STR
                                         , TO_CHAR(TO_DATE(END_DAY, 'YYYY/MM/DD'), 'YYYYMMDD') AS ADJ_END_DAY
                                         , TO_CHAR(TO_DATE(CONFIRM_DAY, 'YYYY/MM/DD'), 'YYYYMMDD') AS ADJ_CONFIRM_DAY
                                         , TO_CHAR(TO_DATE(END_DAY, 'YYYY/MM/DD')+1, 'YYYYMMDD') AS NEW_NEXT_START_DAY
                                         , NVL(SUPP_ADJ_YN, 'B') AS SUPP_ADJ_YN
                                  FROM
                                  (
                                        SELECT     CONFIRM_DAY, END_DAY, SUPP_ADJ_YN
                                        FROM     ST_B2B_HISTORY_ADJUST
                                        WHERE     CONFIRM_DAY > (SELECT MAX(END_DAY) AS LAST_SUPP_ADJ_FIN_DATE FROM ST_HISTORY_ADJUST WHERE SUPP_ADJ_YN = 'Y' )
                                        AND     NVL(SUPP_ADJ_YN, 'S') NOT IN('C', 'Y')
                                        ORDER BY CONFIRM_DAY DESC, END_DAY DESC
                                  )
                                  WHERE ROWNUM <= 1
                                  UNION ALL
                                  SELECT    2 AS GBN
                                         , 'N' AS IS_TARGET_SETTLED
                                         , 'NOT_SUPP_DAY_SETTLED' AS IS_SUPP_DAY_STR
                                         , '' AS ADJ_END_DAY
                                         , '' AS ADJ_CONFIRM_DAY
                                         , '' AS NEW_NEXT_START_DAY
                                         , '' AS SUPP_ADJ_YN
                                  FROM     DUAL
                          )
                          ORDER BY GBN
                 )
                 WHERE ROWNUM <= 1
              )B
       )
	]]>
	</select>
	
	<!-- 센터정산 공급업체 현황 조회 -->
	<select id="selectAdjustCenterSupp" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT     X.COMN_CD_ID, X.COMN_CD_NM, NVL(Y.CNT,0) CNT
    FROM     CM_COMN_CD X,
           (
            SELECT
            A.ORDER_STUS_CD, COUNT(1) CNT
            FROM OD_ORDER_ITM A, OD_ORDER_MAST B
            WHERE A.ORDER_ID = B.ORDER_ID
            AND   B.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
            AND A.RETRNGD_YN = 'N'
            AND A.GOODS_CANCEL_YN = 'N'   
            ]]> 
             <!-- recvShop -->
	              <isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','07') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '04' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '02' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','09') ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '05' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '08' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
				  <![CDATA[
            GROUP BY A.ORDER_STUS_CD
            ) Y
    WHERE X.CD_GRP_ID='ORDER_STUS_CD' AND USE_YN = 'Y' AND X.COMN_CD_ID=Y.ORDER_STUS_CD(+) 
    AND   Y.ORDER_STUS_CD NOT IN ( 'O01' , 'O06' )
	]]>
	</select>
	
	<!-- 센터정산 정산내역 조회 -->
	<select id="selectAdjustCenterAdj" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT 	/*+ no_merge  push_pred   */
	        1,
            SUM(SETTLE_AMOUNT)                      AS SETTLE_AMOUNT,            
            SUM(AMOUNT_CASH)                        AS AMOUNT_CASH,              
            SUM(AMOUNT_CARD_POSTNET)                AS AMOUNT_CARD_POSTNET,      
            SUM(AMOUNT_ACCOUNT)                     AS AMOUNT_ACCOUNT,           
            SUM(AMOUNT_BANKTOWN)                    AS AMOUNT_BANKTOWN,        
            SUM(AMOUNT_OTHER_BANKTOWN)              AS AMOUNT_OTHER_BANKTOWN,        
            SUM(AMOUNT_CARD_EPOST)                  AS AMOUNT_CARD_EPOST,        
            SUM(AMOUNT_CARD_OVERSEA)                AS AMOUNT_CARD_OVERSEA,      
            SUM(AMOUNT_SP)                          AS AMOUNT_SP,                
            SUM(AMOUNT_RM)                          AS AMOUNT_RM,                
            SUM(AMOUNT_COUPON_CSF)                  AS AMOUNT_COUPON_CSF,        
            SUM(AMOUNT_COUPON_BIZ)                  AS AMOUNT_COUPON_BIZ,        
            SUM(AMOUNT_COUPON_THANK)                AS AMOUNT_COUPON_THANK,        
            SUM(AMOUNT_OKCASH)                      AS AMOUNT_OKCASH,
            SUM(DELIV_CERT_AMOUNT)                  AS DELIV_CERT_AMOUNT,        
            SUM(CONG_CARD_AMOUNT)                   AS CONG_CARD_AMOUNT,         
            SUM(FEE_AMOUNT)                         AS FEE_AMOUNT,               
            SUM(RET_CNT)                            AS RET_CNT,                  
            SUM(RET_AMOUNT)                         AS RET_AMOUNT,               
            SUM(DEFICIT_AMOUNT)                     AS DEFICIT_AMOUNT,           
            SUM(GOODS_CNT)                          AS GOODS_CNT,                
            SUM(GOODS_AMOUNT)                       AS GOODS_AMOUNT,             
            SUM(GIFT_GOODS_CNT)                     AS GIFT_GOODS_CNT,           
            SUM(TAX_GOODS_CNT)                      AS TAX_GOODS_CNT,            
            SUM(TAX_GOODS_AMOUNT)                   AS TAX_GOODS_AMOUNT,         
            SUM(GOODS_CNT_MALL)                     AS GOODS_CNT_MALL,           
            SUM(GOODS_CNT_FLWR)                     AS GOODS_CNT_FLWR,           
            SUM(GOODS_CNT_MART)                     AS GOODS_CNT_MART,           
            SUM(GOODS_AMOUNT_MALL)                  AS GOODS_AMOUNT_MALL,        
            SUM(GOODS_AMOUNT_FLWR)                  AS GOODS_AMOUNT_FLWR,        
            SUM(GOODS_AMOUNT_MART)                  AS GOODS_AMOUNT_MART,        
            SUM(ETC_SERVICE_FEE)                    AS ETC_SERVICE_FEE,          
            SUM(AMOUNT_RM2)                         AS AMOUNT_RM2,               
            SUM(AMOUNT_COUPON_CSF2)                 AS AMOUNT_COUPON_CSF2,       
            SUM(AMOUNT_COUPON_BIZ2)                 AS AMOUNT_COUPON_BIZ2,       
            SUM(AMOUNT_COUPON_THANK2)                 AS AMOUNT_COUPON_THANK2,       
            SUM(AMOUNT_SP2)                         AS AMOUNT_SP2,               
            SUM(IMMEDIATE_PRCL_PRC)                 AS IMMEDIATE_PRCL_PRC,       
            SUM(PO_FEE)                             AS PO_FEE,                   
            SUM(MART_FEE)                           AS MART_FEE,                 
            SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE,                  
            SUM(CSF_FEE_MALL) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE_MALL,             
            SUM(CSF_FEE_FLWR)                       AS CSF_FEE_FLWR,             
            SUM(CSF_FEE_MART)                       AS CSF_FEE_MART,             
            SUM(REFUND_CARD_SETL_FEE)               AS REFUND_CARD_SETL_FEE,     
            SUM(DEFICIT_CARD_SETL_FEE)              AS DEFICIT_CARD_SETL_FEE,    
            SUM(REFDIF_CARD_SETL_FEE)               AS REFDIF_CARD_SETL_FEE,     
            SUM(REFUND_CARD_SETL_FEE_MALL)          AS REFUND_CARD_SETL_FEE_MALL,
            SUM(REFUND_CARD_SETL_FEE_FLWR)          AS REFUND_CARD_SETL_FEE_FLWR,
            SUM(REFUND_CARD_SETL_FEE_MART)          AS REFUND_CARD_SETL_FEE_MART,
            SUM(REFUND_CSF_FEE)                     AS REFUND_CSF_FEE,           
            SUM(REFUND_CSF_FEE_MALL)                AS REFUND_CSF_FEE_MALL,      
            SUM(REFUND_CSF_FEE_FLWR)                AS REFUND_CSF_FEE_FLWR,      
            SUM(REFUND_CSF_FEE_MART)                AS REFUND_CSF_FEE_MART,      
            SUM(CSF_FEE_TRANS)                      AS CSF_FEE_TRANS,            
            SUM(CSF_FEE_TRANS_MALL)                 AS CSF_FEE_TRANS_MALL,       
            SUM(CSF_FEE_TRANS_FLWR)                 AS CSF_FEE_TRANS_FLWR,       
            SUM(CSF_FEE_TRANS_MART)                 AS CSF_FEE_TRANS_MART,       
            SUM(REFUND_GOODS_AMT)                   AS REFUND_GOODS_AMT,         
            SUM(LATER_PRCL_PRC)                     AS LATER_PRCL_PRC,        
            SUM(LATER_PRCL_SALE_PRC)                AS LATER_PRCL_SALE_PRC,   
            SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT,
            SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE,
            SUM(SUPP_ADJ_AMOUNT)                    AS SUPP_ADJ_AMOUNT,
            SUM(IMCOMM_CENTER_AMT)                  AS IMCOMM_CENTER_AMT,
            NVL(SUM(AMOUNT_KAKAO),0)                AS AMOUNT_KAKAO,
            NVL(SUM(AMOUNT_MOBILE),0)               AS AMOUNT_MOBILE,
            NVL(SUM(AMOUNT_WALLET),0)               AS AMOUNT_WALLET,
			NVL(SUM(AMOUNT_CMPND_SETL),0)           AS AMOUNT_CMPND_SETL,
			NVL(SUM(AMOUNT_POSTMPAY),0)             AS AMOUNT_POSTMPAY,
			NVL(SUM(AMOUNT_SYRUP_PAY),0)            AS AMOUNT_SYRUP_PAY,
			NVL(SUM(AMOUNT_NAVER_PAY),0)            AS AMOUNT_NAVER_PAY,
			NVL(SUM(AMOUNT_PAYNOW),0)               AS AMOUNT_PAYNOW,
			NVL(SUM(AMOUNT_PAYCO),0)                AS AMOUNT_PAYCO,
			NVL(SUM(AMOUNT_BANK_KAKAO),0)           AS AMOUNT_BANK_KAKAO,
			NVL(SUM(AMOUNT_RPAY),0)                 AS AMOUNT_RPAY,
			NVL(SUM(AMOUNT_PAYPAL),0)               AS AMOUNT_PAYPAL,
			NVL(SUM(AMOUNT_ONURI),0)                AS AMOUNT_ONURI,
			NVL(SUM(AMOUNT_SMLAMT_SETL),0)          AS AMOUNT_SMLAMT_SETL,
			NVL(SUM(IMCOMM_CENTER_AMT1),0)          AS IMCOMM_CENTER_AMT1,
			NVL(SUM(IMCOMM_CENTER_AMT1 - AMOUNT_CASH2),0)          AS IMCOMM_CENTER_AMT2,
			NVL(SUM(AMOUNT_CARD_EPOST1),0)          AS AMOUNT_CARD_EPOST1,
			NVL(SUM(AMOUNT_CARD_EPOST2),0)          AS AMOUNT_CARD_EPOST2,
			NVL(SUM(AMOUNT_SPCSAL),0)               AS AMOUNT_SPCSAL,
			NVL(SUM(ADJAFTER_NETCANCEL_REVAMT),0)   AS ADJAFTER_NETCANCEL_REVAMT,
			NVL(SUM(AMOUNT_CARD_POSTNET1),0)        AS AMOUNT_CARD_POSTNET1,
			NVL(SUM(AMOUNT_CARD_POSTNET2),0)        AS AMOUNT_CARD_POSTNET2,
			NVL(SUM(AMOUNT_KAKAO_POSTNET1),0)       AS AMOUNT_KAKAO_POSTNET1,
			NVL(SUM(AMOUNT_KAKAO_POSTNET2),0)       AS AMOUNT_KAKAO_POSTNET2,
			NVL(SUM(AMOUNT_KAKAO1),0)                AS AMOUNT_KAKAO1,
			NVL(SUM(AMOUNT_KAKAO2),0)                AS AMOUNT_KAKAO2,
			NVL(SUM(AMOUNT_CASH1),0)                AS AMOUNT_CASH1,
			NVL(SUM(AMOUNT_CASH2),0)                AS AMOUNT_CASH2,
			NVL(SUM(AMOUNT_KAKAO_POSTNET),0)        AS AMOUNT_KAKAO_POSTNET
	FROM
        (
            SELECT  1,
	                SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT,
	                SUM(AMOUNT_CASH) AS AMOUNT_CASH,
	                SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET,
	                SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT,
	                SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN,
	                SUM(AMOUNT_OTHER_BANKTOWN) AS AMOUNT_OTHER_BANKTOWN,
	                SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST,
	                SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA,
	                SUM(AMOUNT_SP) AS AMOUNT_SP,
	                SUM(AMOUNT_RM) AS AMOUNT_RM,
	                SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF,
	                SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ,
	                SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK,
	                SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH,
	                SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT,
	                SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT,
	                SUM(FEE_AMOUNT) AS FEE_AMOUNT,
	                SUM(RET_CNT) AS RET_CNT,
	                SUM(RET_AMOUNT ) AS RET_AMOUNT,
	                SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT,
	                SUM(GOODS_CNT -RET_CNT -DEFICIT_CNT) AS GOODS_CNT,
	                SUM(GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT) AS GOODS_AMOUNT,
	                0 AS GIFT_GOODS_CNT,
	                SUM(DECODE(CSF_FEE,0,0,GOODS_CNT -RET_CNT -DEFICIT_CNT)) AS TAX_GOODS_CNT,
	                SUM(DECODE(CSF_FEE,0,0,GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT)) AS TAX_GOODS_AMOUNT,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, GOODS_CNT -RET_CNT -DEFICIT_CNT)) AS GOODS_CNT_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', GOODS_CNT -RET_CNT -DEFICIT_CNT, 0)) AS GOODS_CNT_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', GOODS_CNT -RET_CNT -DEFICIT_CNT, 0)) AS GOODS_CNT_MART,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT)) AS GOODS_AMOUNT_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT, 0)) AS GOODS_AMOUNT_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT, 0)) AS GOODS_AMOUNT_MART,
	                SUM(DELIV_CERT_AMOUNT+CONG_CARD_AMOUNT) AS ETC_SERVICE_FEE,
	                SUM(AMOUNT_RM) AS AMOUNT_RM2,
	                SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF2,
	                SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ2,
	                SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK2,
	                SUM(AMOUNT_SP) AS AMOUNT_SP2,
	                SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC,
	                SUM(PO_FEE) AS PO_FEE,
	                SUM(MART_FEE) AS MART_FEE,
	                SUM(CSF_FEE) AS CSF_FEE,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, CSF_FEE)) AS CSF_FEE_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', CSF_FEE, 0)) AS CSF_FEE_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', CSF_FEE, 0)) AS CSF_FEE_MART,
	                SUM(REFUND_CARD_SETL_FEE) AS REFUND_CARD_SETL_FEE,
	                SUM(DEFICIT_CARD_SETL_FEE) AS DEFICIT_CARD_SETL_FEE,
	                SUM(REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE) AS REFDIF_CARD_SETL_FEE,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE)) AS REFUND_CARD_SETL_FEE_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE, 0)) AS REFUND_CARD_SETL_FEE_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE, 0)) AS REFUND_CARD_SETL_FEE_MART,
	                SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, REFUND_CSF_FEE)) AS REFUND_CSF_FEE_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', REFUND_CSF_FEE, 0)) AS REFUND_CSF_FEE_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', REFUND_CSF_FEE, 0)) AS REFUND_CSF_FEE_MART,
	                SUM(CSF_FEE - (REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE + REFUND_CSF_FEE)) AS CSF_FEE_TRANS,
	                SUM(DECODE(PAVLN_DIV_CD, '04', 0, '02', 0, CSF_FEE - (REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE + REFUND_CSF_FEE))) AS CSF_FEE_TRANS_MALL,
	                SUM(DECODE(PAVLN_DIV_CD, '04', CSF_FEE - (REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE + REFUND_CSF_FEE), 0)) AS CSF_FEE_TRANS_FLWR,
	                SUM(DECODE(PAVLN_DIV_CD, '02', CSF_FEE - (REFUND_CARD_SETL_FEE + DEFICIT_CARD_SETL_FEE + REFUND_CSF_FEE), 0)) AS CSF_FEE_TRANS_MART,
	                SUM(REFUND_GOODS_AMT - REFUND_CSF_FEE) AS REFUND_GOODS_AMT,
	                SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC,
	                SUM(LATER_PRCL_SALE_PRC) AS LATER_PRCL_SALE_PRC,
	                SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT,
	                SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE,
	                SUM( CASE WHEN A.COMPLETE_DATE < '20130121' THEN GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - PO_FEE - MART_FEE - CSF_FEE - decode(PAVLN_DIV_CD, '02', 0, FEE_AMOUNT) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
	                          ELSE GOODS_AMOUNT -RET_AMOUNT -DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
	                     END) AS SUPP_ADJ_AMOUNT, 
	                SUM( CASE WHEN A.COMPLETE_DATE < '20130121' THEN SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - decode(PAVLN_DIV_CD, '02', 0, FEE_AMOUNT) - AMOUNT_COUPON_BIZ
	                          ELSE SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - FEE_AMOUNT - AMOUNT_COUPON_BIZ
	                     END) AS IMCOMM_CENTER_AMT,
	                SUM(AMOUNT_KAKAO)  AMOUNT_KAKAO,
	                SUM(AMOUNT_MOBILE) AMOUNT_MOBILE,
	                SUM(AMOUNT_WALLET) AMOUNT_WALLET,
					SUM(AMOUNT_CMPND_SETL) AMOUNT_CMPND_SETL,
					SUM(AMOUNT_POSTMPAY) AMOUNT_POSTMPAY,
					SUM(AMOUNT_SYRUP_PAY) AMOUNT_SYRUP_PAY,
					SUM(AMOUNT_NAVER_PAY) AMOUNT_NAVER_PAY,
					SUM(AMOUNT_PAYNOW) AMOUNT_PAYNOW,
					SUM(AMOUNT_PAYCO) AMOUNT_PAYCO,
					SUM(AMOUNT_BANK_KAKAO) AMOUNT_BANK_KAKAO,
					SUM(AMOUNT_RPAY) AMOUNT_RPAY,
					SUM(AMOUNT_PAYPAL) AMOUNT_PAYPAL,
					SUM(AMOUNT_ONURI) AMOUNT_ONURI,
					SUM(AMOUNT_SMLAMT_SETL) AMOUNT_SMLAMT_SETL,
					0 IMCOMM_CENTER_AMT1,
					0 IMCOMM_CENTER_AMT2,
					0 AS AMOUNT_CARD_EPOST1,
			        0 AS AMOUNT_CARD_EPOST2,
			        SUM(AMOUNT_SPCSAL) AS AMOUNT_SPCSAL,
			        SUM(ADJAFTER_NETCANCEL_REVAMT) AS ADJAFTER_NETCANCEL_REVAMT,
			        0 AS AMOUNT_CARD_POSTNET1,
					0 AS AMOUNT_CARD_POSTNET2,
					0 AS AMOUNT_KAKAO_POSTNET1,
					0 AS AMOUNT_KAKAO_POSTNET2,
					0 AS AMOUNT_KAKAO1,
			        0 AS AMOUNT_KAKAO2,
			        0 AS AMOUNT_CASH1,
			        0 AS AMOUNT_CASH2,
					SUM(KAKAO_WICKET_SETL_AMT) AS AMOUNT_KAKAO_POSTNET
	              FROM ST_ADJ_GOODS A 
	              WHERE COMPLETE_DATE BETWEEN #startDate# AND #endDate#
	              AND GOODS_CANCEL_YN='N'
	              ]]>
	              <!-- recvShop -->
	              <isEmpty property="recvShop">
	              	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
	              </isEmpty>
	              <isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','07') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '04' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '02' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','09') ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '05' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '08' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
				  <!-- recvType -->
				  <isEqual property="recvType" compareValue="EC">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('01','03','04', '06') ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="P">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='05' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="E">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='01' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="C">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='04' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="M">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('03', '06')]]>
				  </isEqual>
	              <![CDATA[
	              UNION ALL
	              SELECT 1,
	                  0 AS SETTLE_AMOUNT,
	                  0 AS AMOUNT_CASH,
	                  0 AS AMOUNT_CARD_POSTNET,
	                  0 AS AMOUNT_ACCOUNT,
	                  0 AS AMOUNT_BANKTOWN,
	                  0 AS AMOUNT_OTHER_BANKTOWN,
	                  0 AS AMOUNT_CARD_EPOST,
	                  0 AS AMOUNT_CARD_OVERSEA,
	                  0 AS AMOUNT_SP,
	                  0 AS AMOUNT_RM,
	                  0 AS AMOUNT_COUPON_CSF,
	                  0 AS AMOUNT_COUPON_BIZ,
	                  0 AS AMOUNT_COUPON_THANK,
	                  0 AS AMOUNT_OKCASH,
	                  0 AS DELIV_CERT_AMOUNT,
	                  0 AS CONG_CARD_AMOUNT,
	                  0 AS FEE_AMOUNT,
	                  0 AS RET_CNT,
	                  0 AS RET_AMOUNT,
	                  0 AS DEFICIT_AMOUNT,
	                  0 AS GOODS_CNT,
	                  0 AS GOODS_AMOUNT,
	                  0 AS GIFT_GOODS_CNT,
	                  0 AS TAX_GOODS_CNT,
	                  0 AS TAX_GOODS_AMOUNT,
	                  0 AS GOODS_CNT_MALL,
	                  0 AS GOODS_CNT_FLWR,
	                  0 AS GOODS_CNT_MART,
	                  0 AS GOODS_AMOUNT_MALL,
	                  0 AS GOODS_AMOUNT_FLWR,
	                  0 AS GOODS_AMOUNT_MART,
	                  0 AS ETC_SERVICE_FEE,
	                  0 AS AMOUNT_RM2,
	                  0 AS AMOUNT_COUPON_CSF2,
	                  0 AS AMOUNT_COUPON_BIZ2,
	                  0 AS AMOUNT_COUPON_THANK2,
	                  0 AS AMOUNT_SP2,
	                  0 AS IMMEDIATE_PRCL_PRC,
	                  0 AS PO_FEE,
	                  0 AS MART_FEE,
	                  0 AS CSF_FEE,
	                  0 AS CSF_FEE_MALL,
	                  0 AS CSF_FEE_FLWR,
	                  0 AS CSF_FEE_MART,
	                  0 AS REFUND_CARD_SETL_FEE,
	                  0 AS DEFICIT_CARD_SETL_FEE,
	                  0 AS REFDIF_CARD_SETL_FEE,
	                  0 AS REFUND_CARD_SETL_FEE_MALL,
	                  0 AS REFUND_CARD_SETL_FEE_FLWR,
	                  0 AS REFUND_CARD_SETL_FEE_MART,
	                  0 AS REFUND_CSF_FEE,
	                  0 AS REFUND_CSF_FEE_MALL,
	                  0 AS REFUND_CSF_FEE_FLWR,
	                  0 AS REFUND_CSF_FEE_MART,
	                  0 AS CSF_FEE_TRANS,
	                  0 AS CSF_FEE_TRANS_MALL,
	                  0 AS CSF_FEE_TRANS_FLWR,
	                  0 AS CSF_FEE_TRANS_MART,
	                  0 AS REFUND_GOODS_AMT,
	                  0 AS LATER_PRCL_PRC,
	                  0 AS LATER_PRCL_SALE_PRC,
	                  0 AS AMOUNT_MULTIGIFT,
	                  0 AS AMOUNT_EXT_MALL_FEE,
	                  0 AS SUPP_ADJ_AMOUNT,
	                  0 AS IMCOMM_CENTER_AMT,
	                  0 AS AMOUNT_KAKAO,
	                  0 AS AMOUNT_MOBILE,
	                  0 AS AMOUNT_WALLET,
					  0 AS AMOUNT_CMPND_SETL,
					  0 AS AMOUNT_POSTMPAY,
					  0 AS AMOUNT_SYRUP_PAY,
					  0 AS AMOUNT_NAVER_PAY,
					  0 AS AMOUNT_PAYNOW,
					  0 AS AMOUNT_PAYCO,
					  0 AS AMOUNT_BANK_KAKAO,
					  0 AS AMOUNT_RPAY,
					  0 AS AMOUNT_PAYPAL,
					  0 AS AMOUNT_ONURI,
					  0 AS AMOUNT_SMLAMT_SETL,
					  SUM( CASE WHEN A.COMPLETE_DATE < '20130121' THEN SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - decode(PAVLN_DIV_CD, '02', 0, FEE_AMOUNT) - AMOUNT_COUPON_BIZ
	                            ELSE SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - FEE_AMOUNT - AMOUNT_COUPON_BIZ
	                       END) AS IMCOMM_CENTER_AMT1,
					  0 AS IMCOMM_CENTER_AMT2,
					  SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST1,
			          0 AS AMOUNT_CARD_EPOST2,
			          0 AS AMOUNT_SPCSAL,
			          0 AS ADJAFTER_NETCANCEL_REVAMT,
			          SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET1,
					  0 AS AMOUNT_CARD_POSTNET2,
					  SUM(KAKAO_WICKET_SETL_AMT) AS AMOUNT_KAKAO_POSTNET1,
					  0 AS AMOUNT_KAKAO_POSTNET2,
					  SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO1,
			          0 AS AMOUNT_KAKAO2,
			          SUM(AMOUNT_CASH) AS AMOUNT_CASH1,
			          0 AS AMOUNT_CASH2,
					  0 AS AMOUNT_KAKAO_POSTNET
	              FROM ST_ADJ_GOODS A 
	              WHERE COMPLETE_DATE BETWEEN #startDate# AND #endDate#
	              AND GOODS_CANCEL_YN='N'
	              ]]>
	              <isEmpty property="recvShop">
	              	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
	              </isEmpty>
	              <isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','07') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '04' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '02' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
	              <!-- recvType -->
				  <isEqual property="recvType" compareValue="EC">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('01','03','04', '06') ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="P">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='05' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="E">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='01' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="C">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='04' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="M">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('03', '06')]]>
				  </isEqual>
				  <![CDATA[
	              UNION ALL
	              SELECT 1,
	                  0 AS SETTLE_AMOUNT,
	                  0 AS AMOUNT_CASH,
	                  0 AS AMOUNT_CARD_POSTNET,
	                  0 AS AMOUNT_ACCOUNT,
	                  0 AS AMOUNT_BANKTOWN,
	                  0 AS AMOUNT_OTHER_BANKTOWN,
	                  0 AS AMOUNT_CARD_EPOST,
	                  0 AS AMOUNT_CARD_OVERSEA,
	                  0 AS AMOUNT_SP,
	                  0 AS AMOUNT_RM,
	                  0 AS AMOUNT_COUPON_CSF,
	                  0 AS AMOUNT_COUPON_BIZ,
	                  0 AS AMOUNT_COUPON_THANK,
	                  0 AS AMOUNT_OKCASH,
	                  0 AS DELIV_CERT_AMOUNT,
	                  0 AS CONG_CARD_AMOUNT,
	                  0 AS FEE_AMOUNT,
	                  0 AS RET_CNT,
	                  0 AS RET_AMOUNT,
	                  0 AS DEFICIT_AMOUNT,
	                  0 AS GOODS_CNT,
	                  0 AS GOODS_AMOUNT,
	                  0 AS GIFT_GOODS_CNT,
	                  0 AS TAX_GOODS_CNT,
	                  0 AS TAX_GOODS_AMOUNT,
	                  0 AS GOODS_CNT_MALL,
	                  0 AS GOODS_CNT_FLWR,
	                  0 AS GOODS_CNT_MART,
	                  0 AS GOODS_AMOUNT_MALL,
	                  0 AS GOODS_AMOUNT_FLWR,
	                  0 AS GOODS_AMOUNT_MART,
	                  0 AS ETC_SERVICE_FEE,
	                  0 AS AMOUNT_RM2,
	                  0 AS AMOUNT_COUPON_CSF2,
	                  0 AS AMOUNT_COUPON_BIZ2,
	                  0 AS AMOUNT_COUPON_THANK2,
	                  0 AS AMOUNT_SP2,
	                  0 AS IMMEDIATE_PRCL_PRC,
	                  0 AS PO_FEE,
	                  0 AS MART_FEE,
	                  0 AS CSF_FEE,
	                  0 AS CSF_FEE_MALL,
	                  0 AS CSF_FEE_FLWR,
	                  0 AS CSF_FEE_MART,
	                  0 AS REFUND_CARD_SETL_FEE,
	                  0 AS DEFICIT_CARD_SETL_FEE,
	                  0 AS REFDIF_CARD_SETL_FEE,
	                  0 AS REFUND_CARD_SETL_FEE_MALL,
	                  0 AS REFUND_CARD_SETL_FEE_FLWR,
	                  0 AS REFUND_CARD_SETL_FEE_MART,
	                  0 AS REFUND_CSF_FEE,
	                  0 AS REFUND_CSF_FEE_MALL,
	                  0 AS REFUND_CSF_FEE_FLWR,
	                  0 AS REFUND_CSF_FEE_MART,
	                  0 AS CSF_FEE_TRANS,
	                  0 AS CSF_FEE_TRANS_MALL,
	                  0 AS CSF_FEE_TRANS_FLWR,
	                  0 AS CSF_FEE_TRANS_MART,
	                  0 AS REFUND_GOODS_AMT,
	                  0 AS LATER_PRCL_PRC,
	                  0 AS LATER_PRCL_SALE_PRC,
	                  0 AS AMOUNT_MULTIGIFT,
	                  0 AS AMOUNT_EXT_MALL_FEE,
	                  0 AS SUPP_ADJ_AMOUNT,
	                  0 AS IMCOMM_CENTER_AMT,
	                  0 AS AMOUNT_KAKAO,
	                  0 AS AMOUNT_MOBILE,
	                  0 AS AMOUNT_WALLET,
					  0 AS AMOUNT_CMPND_SETL,
					  0 AS AMOUNT_POSTMPAY,
					  0 AS AMOUNT_SYRUP_PAY,
					  0 AS AMOUNT_NAVER_PAY,
					  0 AS AMOUNT_PAYNOW,
					  0 AS AMOUNT_PAYCO,
					  0 AS AMOUNT_BANK_KAKAO,
					  0 AS AMOUNT_RPAY,
					  0 AS AMOUNT_PAYPAL,
					  0 AS AMOUNT_ONURI,
					  0 AS AMOUNT_SMLAMT_SETL,
					  0 AS IMCOMM_CENTER_AMT1,
					  SUM( CASE WHEN A.COMPLETE_DATE < '20130121' THEN SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - decode(PAVLN_DIV_CD, '02', 0, FEE_AMOUNT) - AMOUNT_COUPON_BIZ
	                            ELSE SETTLE_AMOUNT - AMOUNT_CASH - DELIV_CERT_AMOUNT - CONG_CARD_AMOUNT - FEE_AMOUNT - AMOUNT_COUPON_BIZ
	                       END) IMCOMM_CENTER_AMT2,
	                  0 AS AMOUNT_CARD_EPOST1,
			          SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST2,
			          0 AS AMOUNT_SPCSAL,
			          0 AS ADJAFTER_NETCANCEL_REVAMT,
			          0 AS AMOUNT_CARD_POSTNET1,
					  SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET2,
					  0 AS AMOUNT_KAKAO_POSTNET1,
					  SUM(KAKAO_WICKET_SETL_AMT) AS AMOUNT_KAKAO_POSTNET2,
					  0 AS AMOUNT_KAKAO1,
			          SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO2,
			          0 AS AMOUNT_CASH1,
			          SUM(AMOUNT_CASH) AS AMOUNT_CASH2,
					  0 AS AMOUNT_KAKAO_POSTNET
	              FROM ST_ADJ_GOODS A 
	              WHERE COMPLETE_DATE BETWEEN #startDate# AND #endDate#
	              AND GOODS_CANCEL_YN='N'
	              ]]>
	              <isEmpty property="recvShop">
	              	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
	              </isEmpty>
	              <isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
	              <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','09') ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '05' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   PAVLN_DIV_CD = '08' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   PAVLN_DIV_CD = 'QQ' ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
	              <!-- recvType -->
				  <isEqual property="recvType" compareValue="EC">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('01','03','04', '06') ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="P">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='05' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="E">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='01' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="C">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD ='04' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="M">
				  	<![CDATA[ AND   ORDER_MDA_DIV_CD IN('03', '06')]]>
				  </isEqual>
				  <![CDATA[
	              UNION ALL
	              SELECT /*+   USE_hash(OD_ORDER_MAST, OD_ORDER_ITM )   index(OD_ORDER_ITM_IX14) */
	                  1,
	                  0 AS SETTLE_AMOUNT,
	                  0 AS AMOUNT_CASH,
	                  0 AS AMOUNT_CARD_POSTNET,
	                  0 AS AMOUNT_ACCOUNT,
	                  0 AS AMOUNT_BANKTOWN,
	                  0 AS AMOUNT_OTHER_BANKTOWN,
	                  0 AS AMOUNT_CARD_EPOST,
	                  0 AS AMOUNT_CARD_OVERSEA,
	                  0 AS AMOUNT_SP,
	                  0 AS AMOUNT_RM,
	                  0 AS AMOUNT_COUPON_CSF,
	                  0 AS AMOUNT_COUPON_BIZ,
	                  0 AS AMOUNT_COUPON_THANK,
	                  0 AS AMOUNT_OKCASH,
	                  0 AS DELIV_CERT_AMOUNT,
	                  0 AS CONG_CARD_AMOUNT,
	                  0 AS FEE_AMOUNT,
	                  0 AS RET_CNT,
	                  0 AS RET_AMOUNT,
	                  0 AS DEFICIT_AMOUNT,
	                  0 AS GOODS_CNT,
	                  0 AS GOODS_AMOUNT,
	                  SUM(EXTRA_GOODS_CNT) AS GIFT_GOODS_CNT,
	                  0 AS TAX_GOODS_CNT,
	                  0 AS TAX_GOODS_AMOUNT,
	                  0 AS GOODS_CNT_MALL,
	                  0 AS GOODS_CNT_FLWR,
	                  0 AS GOODS_CNT_MART,
	                  0 AS GOODS_AMOUNT_MALL,
	                  0 AS GOODS_AMOUNT_FLWR,
	                  0 AS GOODS_AMOUNT_MART,
	                  0 AS ETC_SERVICE_FEE,
	                  0 AS AMOUNT_RM2,
	                  0 AS AMOUNT_COUPON_CSF2,
	                  0 AS AMOUNT_COUPON_BIZ2,
	                  0 AS AMOUNT_COUPON_THANK2,
	                  0 AS AMOUNT_SP2,
	                  0 AS IMMEDIATE_PRCL_PRC,
	                  0 AS PO_FEE,
	                  0 AS MART_FEE,
	                  0 AS CSF_FEE,
	                  0 AS CSF_FEE_MALL,
	                  0 AS CSF_FEE_FLWR,
	                  0 AS CSF_FEE_MART,
	                  0 AS REFUND_CARD_SETL_FEE,
	                  0 AS DEFICIT_CARD_SETL_FEE,
	                  0 AS REFDIF_CARD_SETL_FEE,
	                  0 AS REFUND_CARD_SETL_FEE_MALL,
	                  0 AS REFUND_CARD_SETL_FEE_FLWR,
	                  0 AS REFUND_CARD_SETL_FEE_MART,
	                  0 AS REFUND_CSF_FEE,
	                  0 AS REFUND_CSF_FEE_MALL,
	                  0 AS REFUND_CSF_FEE_FLWR,
	                  0 AS REFUND_CSF_FEE_MART,
	                  0 AS CSF_FEE_TRANS,
	                  0 AS CSF_FEE_TRANS_MALL,
	                  0 AS CSF_FEE_TRANS_FLWR,
	                  0 AS CSF_FEE_TRANS_MART,
	                  0 AS REFUND_GOODS_AMT,
	                  0 AS LATER_PRCL_PRC,
	                  0 AS LATER_PRCL_SALE_PRC,
	                  0 AS AMOUNT_MULTIGIFT,
	                  0 AS AMOUNT_EXT_MALL_FEE,
	                  0 AS SUPP_ADJ_AMOUNT,
	                  0 AS IMCOMM_CENTER_AMT,
	                  0 AS AMOUNT_KAKAO,
	                  0 AS AMOUNT_MOBILE,
	                  0 AS AMOUNT_WALLET,
					  0 AS AMOUNT_CMPND_SETL,
					  0 AS AMOUNT_POSTMPAY,
					  0 AS AMOUNT_SYRUP_PAY,
					  0 AS AMOUNT_NAVER_PAY,
					  0 AS AMOUNT_PAYNOW,
					  0 AS AMOUNT_PAYCO,
					  0 AS AMOUNT_BANK_KAKAO,
					  0 AS AMOUNT_RPAY,
					  0 AS AMOUNT_PAYPAL,
					  0 AS AMOUNT_ONURI,
					  0 AS AMOUNT_SMLAMT_SETL,
					  0 IMCOMM_CENTER_AMT1,
					  0 IMCOMM_CENTER_AMT2,
					  0 AS AMOUNT_CARD_EPOST1,
			          0 AS AMOUNT_CARD_EPOST2,
			          0 AS AMOUNT_SPCSAL,
			          0 AS ADJAFTER_NETCANCEL_REVAMT,
			          0 AS AMOUNT_CARD_POSTNET1,
					  0 AS AMOUNT_CARD_POSTNET2,
					  0 AS AMOUNT_KAKAO_POSTNET1,
					  0 AS AMOUNT_KAKAO_POSTNET2,
					  0 AS AMOUNT_KAKAO1,
			          0 AS AMOUNT_KAKAO2,
			          0 AS AMOUNT_CASH1,
			          0 AS AMOUNT_CASH2,
					  0 AS AMOUNT_KAKAO_POSTNET
	              FROM OD_ORDER_ITM A, OD_ORDER_MAST B
	              WHERE A.ORDER_ID = B.ORDER_ID
	              AND   B.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
	              AND   A.GOODS_CANCEL_YN = 'N'
	              AND   A.ORDER_STUS_CD IN ( 'O02' , 'O04', 'D02', 'D03', 'D04', 'O05', 'O08' )
	              ]]>
	              <!-- recvShop -->
	              <isEmpty property="recvShop">
	              	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
	              </isEmpty>
	              <isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
				  </isEqual>
	              <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD  IN ('03','09') ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  </isEqual>
				  <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
				  <!-- recvType -->
				  <isEqual property="recvType" compareValue="EC">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD IN ('89903', '85414') ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="P">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD NOT IN ('89903', '85414') ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="E">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '89903' AND B.ORDER_MDA_DIV_CD = '01' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="C">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '85414' AND B.ORDER_MDA_DIV_CD = '04' ]]>
				  </isEqual>
				  <isEqual property="recvType" compareValue="M">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '89903' AND B.ORDER_MDA_DIV_CD IN('03', '06') ]]>
				  </isEqual>
	              <![CDATA[
	              AND   EXTRA_GOODS_YN = 'Y'
    	)
    	WHERE ROWNUM < 6  
	]]>
	</select>
	<!-- 센터정산 정산내역 정산후 환불 조회 -->
	<select id="selectAdjustCenterRefund" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT 1
         , NVL(SUM(REFUND_RETRNGD_CSF_FEE), 0) AS REFUND_RETRN_GD_CSF_FEE
         , NVL(SUM(CLAIM_TREAT_AMT - NVL(REFUND_RETRNGD_CSF_FEE, 0)), 0) AS REFUND_AMT
    FROM   OD_RET_INTERFACE A, OD_ORDER_ITM B
    WHERE  1=1
    AND    A.ORDER_ITM_ID = B.ORDER_ITM_ID
    AND    A.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
    AND    A.RETRNGD_REFUND_METH_CD = '04'
    AND    A.POSA_ACC_TRANSF_TRGT_YN = 'Y'
    AND    A.TREAT_STUS_CD <> '004'      
	]]>
	</select>
	
	<select id="selectAdjEntireTotInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT     	SUM(GOODS_QTY) TOT_QTY,         /* 판매수량*/
	                SUM(AMOUNT) TOT_AMT,            /* 판매금액*/
	                SUM(C_AMT) TOT_C_AMT,           /* 국내카드대금*/
	                SUM(C_FEE) TOT_C_FEE,           /* 국내카드대금 수수료*/
	                SUM(D_AMT) TOT_D_AMT,           /* 해외카드대금*/
	                SUM(D_FEE) TOT_D_FEE,           /* 해외카드대금 수수료*/
	                SUM(O_AMT_CASH) TOT_O_AMT,      /* 온라인대금*/
	                SUM(O_AMT_DTV) TOT_DTV_AMT,     /* 우체국적금(D-TV)*/
	                SUM(S_AMT)  TOT_S_AMT,          /* 소액결제대금*/
	                SUM(B_AMT)  TOT_B_AMT,          /* 즉시이체대금*/
	                SUM(B_FEE)  TOT_B_FEE,          /* 즉시이체대금 수수료*/
	                SUM(B_AMT2)  TOT_B_AMT2,          /* 즉시이체대금*/
	                SUM(B_FEE2)  TOT_B_FEE2,          /* 즉시이체대금 수수료*/
	                SUM(G_AMT)  TOT_G_AMT,          /* KT-POINT(멀티상품권)대금*/
	                SUM(G_FEE)  TOT_G_FEE,          /* KT-POINT(멀티상품권)대금 수수료*/
	                SUM(R_AMT)  TOT_R_AMT,          /* 마일리지 상품사용대금*/
	                SUM(R1_AMT) TOT_R1_AMT,         /* 마일리지 상품취소대금*/
	                SUM(SP_AMT)  TOT_SP_AMT,        /* 우수고객 상품사용대금*/
	                SUM(SP1_AMT) TOT_SP1_AMT,       /* 우수고객 상품취소대금*/
	                SUM(nvl(AMOUNT_OKCASH,0)) AMOUNT_OKCASH,  /*OK 캐쉬백 대금*/
	                SUM(B_POST_AMT) TOT_B_POST_AMT, /* 즉시이체대금_우체국계좌*/
	                SUM(B_POST_FEE) TOT_B_POST_FEE, /* 즉시이체대금 우체국계좌 수수료*/
	                SUM(POST_AMT) TOT_POST_AMT,     /* 우체국계좌 사용대금*/
	                SUM(CP_AMT) TOT_CP_AMT,         /* 할인쿠폰대금(지원단)*/
	                SUM(CP_BIZ_AMT) TOT_CP_BIZ_AMT, /* 할인쿠폰대금(공급업체)*/
	                SUM(CP_BIZ_THANK_AMT)  TOT_CP_BIZ_THANK_AMT ,  /* 감사쿠폰대금(공급업체)*/
	                SUM(MART_POST_FEE) TOT_MART_FEE,  /* 창구판매생활용품(대기업상품) 인터넷우체국 수수료(6%)*/
	                SUM(FLOWER_POST_FEE) TOT_FLW_FEE, /* 꽃배달 공급국 세입(6%)*/
	                SUM(AMOUNT-C_FEE-D_FEE-B_FEE-G_FEE-CSF_FEE-MART_POST_FEE - A_FEE - I_FEE) TOT_POST_AMT, /* 공급국 실지급액*/
	                SUM(AMOUNT-C_FEE-D_FEE-B_FEE-G_FEE-CSF_FEE-MART_POST_FEE-FLOWER_POST_FEE - A_FEE - I_FEE) TOT_BIZ_AMT, /* 공급업체 실지급액*/
	                SUM(CSF_FEE) TOT_CSF_FEE        /* 체성회 수수료*/
	                ,SUM(CM_FEE) AS TOT_CM_FEE
	                ,SUM(DM_FEE) AS TOT_DM_FEE
	                ,SUM(BM_FEE) AS TOT_BM_FEE
	                ,SUM(GM_FEE) AS TOT_GM_FEE
	                ,SUM(A_AMT) TOT_A_AMT /* 카카오페이대금*/
	                ,SUM(A_AMT2) TOT_A_AMT2 
	                ,SUM(A_AMT3) TOT_A_AMT3
	                ,SUM(A_AMT4) TOT_A_AMT4
	                ,SUM(A_AMT5) TOT_A_AMT5
	                ,SUM(A_AMT6) TOT_A_AMT6
	                ,SUM(A_AMT7) TOT_A_AMT7
	                ,SUM(A_AMT8) TOT_A_AMT8
	                ,SUM(A_AMT9) TOT_A_AMT9
	                ,SUM(ONR_AMT) TOT_ONR_AMT
	                ,SUM(AM_FEE) TOT_AM_FEE /* 카카오페이대금 수수료*/
	                ,SUM(AM_FEE2) TOT_AM_FEE2
	                ,SUM(AM_FEE3) TOT_AM_FEE3
	                ,SUM(AM_FEE4) TOT_AM_FEE4
	                ,SUM(AM_FEE5) TOT_AM_FEE5
	                ,SUM(AM_FEE6) TOT_AM_FEE6
	                ,SUM(AM_FEE7) TOT_AM_FEE7
	                ,SUM(AM_FEE8) TOT_AM_FEE8
	                ,SUM(AM_FEE9) TOT_AM_FEE9
	                ,SUM(ONRM_FEE) TOT_ONRM_FEE
	                ,SUM(A_FEE) TOT_A_FEE   /* 카카오페이대금 수수료*/
	                ,SUM(A_FEE2) TOT_A_FEE2 /* 페이팔*/
	                ,SUM(A_FEE3) TOT_A_FEE3 /* PostMPay*/
	                ,SUM(A_FEE4) TOT_A_FEE4 /* 시럽*/
	                ,SUM(A_FEE5) TOT_A_FEE5 /* 네이버페이*/
	                ,SUM(A_FEE6) TOT_A_FEE6 /* 페이나우*/
	                ,SUM(A_FEE7) TOT_A_FEE7 /* 페이코*/
	                ,SUM(A_FEE8) TOT_A_FEE8 /* 뱅크월넷카카오*/
	                ,SUM(A_FEE9) TOT_A_FEE9 /* 알리페이*/
	                ,SUM(ONR_FEE) TOT_ONR_FEE /* 알리페이*/
	                ,SUM(I_AMT) TOT_I_AMT   /* 핸드폰대금*/
	                ,SUM(IM_FEE) TOT_IM_FEE /* 핸드폰대금 수수료*/
	                ,SUM(I_FEE) TOT_I_FEE   /* 핸드폰대금 수수료*/
	                ,SUM(O_FEE) TOT_O_FEE   /* 가상계좌 수수료*/
	                ,SUM(Q_AMT) TOT_Q_AMT   /* 특판*/
	                ,SUM(Q_FEE) TOT_Q_FEE   /* 특판 수수료*/
	                ,SUM(W_AMT) TOT_W_AMT   /* 전자지갑*/
	                
 		FROM (
                	SELECT      
                                A.ORDER_ID,
                                SUM(A.REQ_CNT)    GOODS_QTY,
                                SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0))      AMOUNT,           
                                SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0),
                                                          '16',NVL(C.CARD_AMT1,0)+NVL(C.CARD_AMT2,0),0)) C_AMT,    
                                SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) D_AMT,    
                                SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) O_AMT,
                                DECODE(B.SETL_MEAN_CD,'01',SUM(NVL(C.FEE_AMT,0)) , 0) O_FEE,    
                                NVL(SUM(DECODE( B.SETL_MEAN_CD, '01', DECODE(A.DTV_CHK,'2', 0, (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ), 0 ) ),  0 ) O_AMT_CASH , 
                                NVL(SUM(DECODE( B.SETL_MEAN_CD, '01', DECODE(A.DTV_CHK,'2', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) , 0), 0 ) ),  0 ) O_AMT_DTV ,  
                                SUM(DECODE(B.SETL_MEAN_CD,'12',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) S_AMT,    
                                SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 
                                                          '16',DECODE(B.PO_FNC_YN,'P',NVL(C.TRANS_AMT,0),0),0)) B_AMT,   
                                SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0),
                                                          '16',DECODE(B.PO_FNC_YN,'P',0,NVL(C.TRANS_AMT,0)) ,0)) B_AMT2,
                                SUM(DECODE(B.SETL_MEAN_CD,'28',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) G_AMT,    
                                SUM(nvl(A.PNT_USE_AMT,0)) R_AMT,         
                                SUM(nvl(A.PNT_REFUND_SETL_AMT,0)) R1_AMT,    
                                SUM(nvl(A.PREMI_CUST_PNT_SETL_AMT,0)) SP_AMT,         
                                SUM(nvl(A.PREMI_CUST_PNT_REFUND_APRV_AMT,0)) SP1_AMT,    
                                SUM(nvl(A.OKCASH_USE_AMT,0)) AMOUNT_OKCASH, 
                                SUM(DECODE(B.PO_FNC_YN,'P',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) B_POST_AMT,    
                                SUM(DECODE(B.PO_FNC_YN,'P',NVL(C.FEE_AMT,0),0)) B_POST_FEE,    
                                SUM(nvl(A.PO_PNT_USE_AMT,0)) POST_AMT,         
                                SUM(DECODE(A.CP_CMP_CD1,'1',A.CPN_DC_AMT1, 0) + DECODE(A.CP_CMP_CD2,'1',A.CPN_DC_AMT2, 0)) CP_AMT, 
                                SUM(DECODE(A.CP_CMP_CD1,'2',A.CPN_DC_AMT1, 0) + DECODE(A.CP_CMP_CD2,'2',A.CPN_DC_AMT2, 0)) CP_BIZ_AMT,
                                SUM(DECODE(A.CP_CMP_CD1,'3',A.CPN_DC_AMT1, 0) + DECODE(A.CP_CMP_CD2,'3',A.CPN_DC_AMT2, 0)) CP_BIZ_THANK_AMT,
                                SUM(DECODE(B.SETL_MEAN_CD,'02',NVL(C.FEE_AMT,0),'16',NVL(C.CARD_FEE_AMT1,0)+NVL(C.CARD_FEE_AMT2,0) , 0)) C_FEE, 
                                DECODE(B.SETL_MEAN_CD,'03',SUM(NVL(C.FEE_AMT,0)) , 0) D_FEE, 
                                DECODE(B.SETL_MEAN_CD,'28',SUM(NVL(C.FEE_AMT,0)) , 0) G_FEE, 
                                SUM(DECODE(B.SETL_MEAN_CD,'05',NVL(C.FEE_AMT,0),'16',DECODE(B.PO_FNC_YN,'P',NVL(C.TRANS_FEE_AMT,0),0), 0)) B_FEE,
                                SUM(DECODE(B.SETL_MEAN_CD,'06',NVL(C.FEE_AMT,0),'16',DECODE(B.PO_FNC_YN,'P',0,NVL(C.TRANS_FEE_AMT,0)), 0)) B_FEE2, 
                                SUM(NVL(C.POSA_FEE,0)) CSF_FEE, 
                                SUM(FLOOR(DECODE(A.PAVLN_DIV_CD, '04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) * 0.06, 0))) FLOWER_POST_FEE, 
                                SUM(FLOOR(DECODE(A.PAVLN_DIV_CD, '92', DECODE(NVL(A.ONOFF_FLAG,'N'), 'Y', 0, (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) * 0.06), 0))) MART_POST_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'02',(NVL(C.FEE_AMT,0)), 0))) CM_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'03',(NVL(C.FEE_AMT,0)), 0))) DM_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'28',(NVL(C.FEE_AMT,0)), 0))) GM_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'05',(NVL(C.FEE_AMT,0)),'06',(NVL(C.FEE_AMT,0)), 0))) BM_FEE, 
                                SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT, 
                                SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) I_AMT, 
                                DECODE(B.SETL_MEAN_CD,'20',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE, 
                                DECODE(B.SETL_MEAN_CD,'13',SUM(NVL(C.FEE_AMT,0)) , 0) I_FEE, 
                                SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT2,
                                SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT3,
                                SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT4,
                                SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT5,
                                SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT6,
                                SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT7,
                                SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT8,
                                SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) A_AMT9,
                                SUM(DECODE(B.SETL_MEAN_CD,'08',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 
                                                          '16',NVL(C.ONNURI_AMT,0),0)) ONR_AMT,
                                DECODE(B.SETL_MEAN_CD,'07',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE2,
                                DECODE(B.SETL_MEAN_CD,'21',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE3, 
                                DECODE(B.SETL_MEAN_CD,'22',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE4, 
                                DECODE(B.SETL_MEAN_CD,'23',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE5, 
                                DECODE(B.SETL_MEAN_CD,'24',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE6, 
                                DECODE(B.SETL_MEAN_CD,'25',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE7, 
                                DECODE(B.SETL_MEAN_CD,'26',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE8, 
                                DECODE(B.SETL_MEAN_CD,'27',SUM(NVL(C.FEE_AMT,0)) , 0) A_FEE9,  
                                SUM(DECODE(B.SETL_MEAN_CD,'08',NVL(C.FEE_AMT,0),'16',NVL(C.ONNURI_FEE_AMT,0) , 0)) ONR_FEE,
                                SUM(DECODE(B.SETL_MEAN_CD,'16',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) M_AMT,
                                DECODE(B.SETL_MEAN_CD,'16',SUM(NVL(C.FEE_AMT,0)) , 0) M_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'07',(NVL(C.FEE_AMT,0)), 0))) AM_FEE, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'20',(NVL(C.FEE_AMT,0)), 0))) AM_FEE2, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'21',(NVL(C.FEE_AMT,0)), 0))) AM_FEE3, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'22',(NVL(C.FEE_AMT,0)), 0))) AM_FEE4, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'23',(NVL(C.FEE_AMT,0)), 0))) AM_FEE5, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'24',(NVL(C.FEE_AMT,0)), 0))) AM_FEE6, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'25',(NVL(C.FEE_AMT,0)), 0))) AM_FEE7, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'26',(NVL(C.FEE_AMT,0)), 0))) AM_FEE8, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'27',(NVL(C.FEE_AMT,0)), 0))) AM_FEE9, 
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'08',(NVL(C.FEE_AMT,0)), 0))) ONRM_FEE,
                                SUM(DECODE(A.PAVLN_DIV_CD, '02', DECODE(B.SETL_MEAN_CD,'13',(NVL(C.FEE_AMT,0)), 0))) IM_FEE ,
                                SUM(DECODE(B.SETL_MEAN_CD,'11',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) ,0)) Q_AMT,
                                SUM(NVL(A.WALLET_SETL_AMT,0)) AS W_AMT,
                                DECODE(B.SETL_MEAN_CD,'11',SUM(NVL(C.FEE_AMT,0)) , 0) Q_FEE
               		FROM        OD_ORDER_ITM A, OD_ORDER_MAST B, GD_GOODS_MAST  H, OD_ORDER_FEE C
               		WHERE      	A.ORDER_ID = B.ORDER_ID
	               	AND         A.GOODS_CD = H.GOODS_CD
	               	AND         A.ORDER_ITM_ID = C.ORDER_ITM_ID
	               	AND         B.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
	               	<isEqual property="recvShop" compareValue="ALL">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
	                <isEqual property="recvShop" compareValue="01">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
	                <isEqual property="recvShop" compareValue="04">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="03">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD  IN ('03','09') ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="05">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="08">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
				  </isEqual>
				    <isEqual property="recvShop" compareValue="EP">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				    </isEqual>
				    <isEqual property="recvShop" compareValue="EN">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  </isEqual>
				   <isEqual property="recvShop" compareValue="EA">
				  	<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  </isEqual>
				    <!-- recvType -->
				    <isEqual property="recvType" compareValue="EC">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD IN ('89903', '85414') ]]>
				    </isEqual>
				    <isEqual property="recvType" compareValue="P">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD NOT IN ('89903', '85414') ]]>
				    </isEqual>
				    <isEqual property="recvType" compareValue="E">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '89903' AND B.ORDER_MDA_DIV_CD = '01' ]]>
				    </isEqual>
				    <isEqual property="recvType" compareValue="C">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '85414' AND B.ORDER_MDA_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvType" compareValue="M">
				  	<![CDATA[ AND B.RECEVPO_RGISTPOCD = '89903' AND B.ORDER_MDA_DIV_CD IN('03', '06') ]]>
				    </isEqual>
	               	AND         A.GOODS_CANCEL_YN = 'N'
	               	AND         B.SETL_MEAN_CD NOT IN ('15','04','17','29')
	               	AND         A.DC_APPLY_PRC  >  0
	               	GROUP BY  A.ORDER_ID, B.SETL_MEAN_CD
      	)
	</select>
	
	<select id="selectAdjNetCancelList" parameterClass ="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		<![CDATA[
			SELECT A.*,
			       SUM(AMOUNT) OVER() AS TOT_AMOUNT
			FROM(
				SELECT    A.CLAIM_CONF_YMD AS COMPLETE_DATE
	                    , C.SUPP_COMP_ID AS SUPP_COMP_ID
	                    , (SELECT CM.BCNC_NM FROM CO_SUPP_COMP_MAST CM WHERE CM.SUPP_COMP_ID = C.SUPP_COMP_ID) AS SUPP_COMP_NM
	                    , C.GOODS_CD AS GOODS_CODE
	                    , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=C.GOODS_CD AND ROWNUM=1 ) GOODS_NM
	                    , A.CLAIM_TREAT_AMT AS AMOUNT
	                    , D.FEE_AMT, 0 ADJAFTER_NETCANCEL_REVFEE
	                    , A.ORDER_ID
		        FROM 	OD_RET_INTERFACE A, OD_ORDER_MAST B, OD_ORDER_ITM C, OD_ORDER_FEE D
		        WHERE 	1 = 1
		        AND 	A.ORDER_ID = B.ORDER_ID
		        AND 	A.ORDER_ITM_ID = C.ORDER_ITM_ID    /* 조인조건 확인 */
		        AND 	B.ORDER_ID = C.ORDER_ID
		        AND 	C.ORDER_ITM_ID= D.ORDER_ITM_ID
		        AND 	A.CLAIM_CONF_YMD BETWEEN TO_CHAR(TO_DATE(#startDate#,'YYYY-MM-DD'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#endDate#,'YYYY-MM-DD'),'YYYYMMDD')                            
		        AND 	C.PAVLN_DIV_CD IN ('01','02','04','07','99')
		        AND 	C.GOODS_CANCEL_YN = 'N'
		        AND 	A.RETRNGD_REFUND_METH_CD IN ('07','09')
		        AND 	A.TREAT_STUS_CD <> '004'
		    ) A
		]]>
		<include refid="pagingFooter"/>
	</select>
	
	<select id="selectAdjNetCancelListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
			SELECT  COUNT(1)
	        FROM 	OD_RET_INTERFACE A, OD_ORDER_MAST B, OD_ORDER_ITM C, OD_ORDER_FEE D
	        WHERE 	1 = 1
	        AND 	A.ORDER_ID = B.ORDER_ID
	        AND 	A.ORDER_ITM_ID = C.ORDER_ITM_ID    /* 조인조건 확인 */
	        AND 	B.ORDER_ID = C.ORDER_ID
	        AND 	C.ORDER_ITM_ID= D.ORDER_ITM_ID
	        AND 	A.CLAIM_CONF_YMD BETWEEN TO_CHAR(TO_DATE(#startDate#,'YYYY-MM-DD'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#endDate#,'YYYY-MM-DD'),'YYYYMMDD')                                
	        AND 	C.PAVLN_DIV_CD IN ('01','02','04','07','99')
	        AND 	C.GOODS_CANCEL_YN = 'N'
	        AND 	A.RETRNGD_REFUND_METH_CD IN ('07','09')
	        AND 	A.TREAT_STUS_CD <> '004'
		]]>
	</select>
	
	<!-- 정산대상 기간 내의 주문취소 요청 처리중인 건수 조회 -->
	<select id="selectCanReqProgressCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT 	NVL(COUNT(1), 0) AS CAN_REQ_CNT 
        FROM 	OD_ORDER_MAST A, OD_ORDER_ITM B
        WHERE 	A.ORDER_ID = B.ORDER_ID
        AND     A.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
        AND     B.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
        AND 	B.ORDER_STUS_CD IN ('O05', 'O08')
        AND 	B.GOODS_CANCEL_YN = 'N'
		]]>
	</select>
	
	<!-- 정산대상 기간 내의 주문취소 요청 처리중인 건수 조회 -->
	<select id="selectCancelRequestCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT  COUNT(*) AS RET_CNT
        FROM    OD_ORDER_ITM A, OD_ORDER_MAST D, OD_RET_INTERFACE RET
        WHERE   1 = 1
        AND     A.ORDER_ID = D.ORDER_ID
        AND     A.ORDER_ID = RET.ORDER_ID
        AND     A.ORDER_ITM_ID = RET.ORDER_ITM_ID
        AND     A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)   >  0
        AND     RET.TREAT_STUS_CD <> '004'
        AND     D.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
        AND     A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
        AND     A.GOODS_CANCEL_YN = 'N'  
        AND     RET.CLAIM_DIV_CD = '001'  
        AND     RET.TREAT_STUS_CD IN ('002','003')
        AND     RET.RETRNGD_REFUND_METH_CD = '05'
		]]>
	</select>
	
	<!-- 정산확정기간내 CANCEL_STATE = 'Y' ORDER_CANCEL_ADJ_YN = 'Y' 처리 -->
	<update id="modifyAdjustJungChk" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE  OD_ORDER_ITM
        SET     ADJ_YN = 'Y'
        WHERE   1 = 1
		    AND ORDER_ITM_ID IN ( 
		                           SELECT B.ORDER_ITM_ID 
		                           FROM   OD_ORDER_MAST A, OD_ORDER_ITM B
		                           WHERE 1 = 1
		                           AND A.ORDER_ID = B.ORDER_ID
		                           AND B.GOODS_CANCEL_YN = 'Y'
		                           AND B.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
		                           AND A.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
		                           )
		                 
		]]>
	</update>
	
	<!-- 상품별 금액에 맞추어 수수료 보정(평탄화) -->
	<update id="updateFeeAmount1" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE    OD_ORDER_FEE A 
        SET       A.FEE_AMT =  (
                                    SELECT 
                                    CASE  
                                      WHEN NVL(Z.GOODS_CANCEL_YN, 'N') = 'Y' THEN 0 
                                      WHEN NVL(Z.EXTRA_GOODS_YN, 'N')  = 'Y' THEN 0 
                                      WHEN Y.SETL_MEAN_CD = '01' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * NVL(( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                                                          AND   CR.PG_DIV_CD = (
                                                                                                                                                SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                                                                WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT Y.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = Y.ORDER_ID ) 
                                                                                                                                                )
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       ),0)
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     NVL(( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '01' 
			                                                                                                           AND   CR.PG_DIV_CD = (
                                                                                                                                             SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                                                             WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT Y.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = Y.ORDER_ID ) 
                                                                                                                                             )
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ),0) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID AND SM.GOODS_CANCEL_YN = 'N')
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '05' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.0128)
                                      WHEN Y.SETL_MEAN_CD = '06' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.014)
                                      WHEN Y.SETL_MEAN_CD = '07' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '07' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID AND SM.GOODS_CANCEL_YN = 'N')
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '20' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '20' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) /* 0.027 */ 
                                      WHEN Y.SETL_MEAN_CD = '21' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '21' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) /* 0.01 */ 
                                      WHEN Y.SETL_MEAN_CD = '22' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '22' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '23' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '23' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '24' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '24' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )  
                                      WHEN Y.SETL_MEAN_CD = '25' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '25' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '26' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '26' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '27' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '27' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '13' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '13' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '02' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT /*+ ordered use_nl(c b) */
                                                                                                                   		  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
			                                                                                                              FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
			                                                                                                              WHERE   C.MEMBER_NO   = B.JOIN_NO
			                                                                                                              AND     B.SITE_DIV_CD  = Y.SITE_DIV_CD
			                                                                                                              AND     TO_CHAR(Y.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
			                                                                                                              AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT Y.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = Y.ORDER_ID )
                                                                                                                     )) /* 0.013 */ 
                                      WHEN Y.SETL_MEAN_CD = '16' THEN FEE_AMOUNT                                                                            
                                      WHEN Y.SETL_MEAN_CD = '03' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT /*+ ordered use_nl(c b) */
                                                                                                                          NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
                                                                                                                          FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
                                                                                                                          WHERE   B.JOIN_NO   = '00971011184'
                                                                                                                          AND     B.SITE_DIV_CD  = Y.SITE_DIV_CD
                                                                                                                          AND     SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                          AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT Y.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = Y.ORDER_ID )
                                                                                                                    )) /* 0.025 */ 
                                      WHEN Y.SETL_MEAN_CD = '04' THEN FLOOR(((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT /*+ ordered use_nl(c b e) index(b OD_CARDFEES_IX01) */
                                                                                                                                 NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                          FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                          WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                          AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                          AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                          AND C.DEALSTUSCD       ='S'
                                                                                                                          AND C.JOINNO           = B.JOIN_NO
                                                                                                                          AND B.SITE_DIV_CD      = '01'
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                      )) /* 0.013 */ 
                                      WHEN Y.SETL_MEAN_CD = '17' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) - Z.CASH_BILL_AMT) * ( 
                                                                                                                          SELECT /*+ ordered use_nl(c b e) index(b OD_CARDFEES_IX01) */
                                                                                                                                 NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                          FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                          WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                          AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                          AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                          AND C.DEALSTUSCD       ='S'
                                                                                                                          AND C.JOINNO           = B.JOIN_NO
                                                                                                                          AND B.SITE_DIV_CD      = '01'
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                     )) /* 0.013 */ 
                                END
                                FROM    OD_ORDER_ITM Z, OD_ORDER_MAST Y, OD_ORDER_FEE W
                                WHERE   Z.ORDER_ID = Y.ORDER_ID
                                AND     Z.ORDER_ITM_ID = W.ORDER_ITM_ID
                                AND     Z.ORDER_ITM_ID = A.ORDER_ITM_ID
                                )
        WHERE     A.ORDER_ITM_ID IN 
                ( 
                       SELECT     ORDER_ITM_ID 
                       FROM 
                       ( 
                        SELECT  1, ORDER_ITM_ID, SETL_MEAN_CD 
                              , FEE_AMOUNT 
                              , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
                                     WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
                                     WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * NVL(( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                          AND   CR.PG_DIV_CD = (
                                                                                                                SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                                WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                                )
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        ),0)
                                                                    ) + 
                                                                    FLOOR(NVL(( SELECT DOM_FEE2 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                          AND   CR.PG_DIV_CD = (
                                                                                                                SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                                WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                                )
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        ),0) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID AND SM.GOODS_CANCEL_YN = 'N')
                                                                    )
                                     WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
                                     														  SELECT  /*+ ordered use_nl(c b) */
							                       													  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																							  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																							  WHERE   C.MEMBER_NO   = B.JOIN_NO
																							  AND     B.SITE_DIV_CD  = A.SITE_DIV_CD
																							  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																							  AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = A.ORDER_ID )
                                                                                             )
                                                                    ) /* 0.013 */
                                     WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT
									 WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) + 
                                                                    FLOOR(( SELECT DOM_FEE2 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID AND SM.GOODS_CANCEL_YN = 'N')
                                                                    )
                                     WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '20' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) /* 0.013 */
                                     WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '21' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) 
                                     WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '22' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) 
                                     WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '23' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '24' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '25' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '26' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '27' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
                                                                                           FROM OD_SETL_MEAN_FEE CR 
                                                                                           WHERE CR.SETL_MEAN_CD = '13' 
                                                                                           AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                         )
                                                                    ) /* 0.013 */ 
                                     WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * (  SELECT /*+ ordered use_nl(c b) */
				                                                                                           NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																								  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																								  WHERE   B.JOIN_NO   = '00971011184'
																								  AND     B.SITE_DIV_CD  = A.SITE_DIV_CD
																								  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																								  AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = A.ORDER_ID )
                                                                                               )
                                                                    ) /* 0.025 */
                                     WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
                                     															  SELECT /*+ ordered use_nl(c b e) index(b OD_CARDFEES_IX01) */
                       															         				 NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
																								  FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
																								  WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
																								  AND C.RECEVNO          = E.ACCEPT_NUM
																								  AND C.CREDITCARDAPPRNO = E.AGREE_NUM
																								  AND C.DEALSTUSCD       ='S'
																								  AND C.JOINNO           = B.JOIN_NO
																								  AND B.SITE_DIV_CD      = '01'
																								  AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                      )
                                                                           ) /* 0.013 */
                                     ELSE 0                                       
                                END AS FEE_AMOUNT_RIGHT 
                              , CASE     WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
                                         WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN
                                         WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
                                         WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
                                         WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
                                         WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
                                         WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
                                         WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
                                         WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
                                         WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
                                         WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
                                         WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
                                         WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
                                         WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
                                         WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
                                         WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
                                END AS SETTLE_AMOUNT 
                              , AMOUNT_BANKTOWN 
                              , AMOUNT_OTHER_BANKTOWN
                              , AMOUNT_CARD_POSTNET 
                              , AMOUNT_CARD_EPOST 
                              , AMOUNT_CARD_OVERSEA
                              , AMOUNT_KAKAO 
                              , AMOUNT_MOBILE
                              , AMOUNT_ACCOUNT
                              , AMOUNT_PAYPAL
                              , AMOUNT_POSTMPAY
                              , AMOUNT_SYRUP_PAY
                              , AMOUNT_NAVER_PAY
                              , AMOUNT_PAYNOW
                              , AMOUNT_PAYCO
                              , AMOUNT_BANK_KAKAO
                              , AMOUNT_RPAY
                        FROM 
                        ( 
                                 SELECT     A.ORDER_ID, A.ORDER_ITM_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD,
                                           SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
                                           SUM(D.FEE_AMT) AS FEE_AMOUNT, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN,
                                           SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET,  
                                           SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
                                           SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE,
                                           SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
                                           SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
                                           SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
                                           SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
                                           SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
                                           SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY, 
                                           1 
                                 FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
                                 WHERE   A.ORDER_ID = B.ORDER_ID
                                 AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
                                 AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
                                 AND     A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99') 
                                 AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','21','22','23','24','25','26','27')
                                 AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
                                 AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
                                 GROUP BY A.ORDER_ID, A.ORDER_ITM_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD
                        ) A
                    ) 
                    WHERE FEE_AMOUNT <> FEE_AMOUNT_RIGHT 
                )
		]]>
<!-- 		AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 가상계좌 페이팔은 따로 수수료 보정 -->
	</update>
	
	<select id="retrieveFeeAmount1_1List" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ID, ORDER_ITM_ID , FEE_AMOUNT AS ORG_FEE,  FEE_AMOUNT_RIGHT AS RIGHT_FEE, SETL_MEAN_CD, DOM_FEE2, SETTLE_AMOUNT
        FROM 
        ( 
            SELECT  1, ORDER_ITM_ID, ORDER_ID, SETL_MEAN_CD
                 , FEE_AMOUNT 
                 , CASE WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * NVL(( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '01' 
                                                                             AND   CR.PG_DIV_CD = (
                                                                                                   SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                   WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                   )
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       ),0)
                                                       ) + 
                                                        FLOOR(NVL(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '01' 
                                                                              AND   CR.PG_DIV_CD = (
                                                                                                    SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                    WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                    )
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ),0)
                                                        )
                        WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '07' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) + 
                                                        FLOOR(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '07' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ) 
                                                        )
                  END AS FEE_AMOUNT_RIGHT 
                   , CASE WHEN SETL_MEAN_CD = '01' THEN FLOOR(NVL(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '01' 
                                                                              AND   CR.PG_DIV_CD = (
                                                                                                    SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                    WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                    )
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ),0)
                                                        )
                        WHEN SETL_MEAN_CD = '07' THEN  FLOOR(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '07' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ) 
                                                        )
                  END AS DOM_FEE2 
                 , CASE WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
                        WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
                     END AS SETTLE_AMOUNT 
                 , AMOUNT_ACCOUNT
                 , AMOUNT_PAYPAL
          FROM 
          ( 
            SELECT     MIN(A.ORDER_ITM_ID) AS ORDER_ITM_ID, A.ORDER_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD,
                            SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
                           SUM(D.FEE_AMT) AS FEE_AMOUNT, 
                           SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
                           SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
                           1 
            FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
            WHERE   A.ORDER_ID = B.ORDER_ID
            AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
            AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
            AND     A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
            AND     B.SETL_MEAN_CD IN ('01','07') 
            AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
            AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
            GROUP BY A.ORDER_ID,  B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD
          ) A
        ) 
        WHERE  FEE_AMOUNT <> FEE_AMOUNT_RIGHT
        AND    FEE_AMOUNT < FEE_AMOUNT_RIGHT
		]]>
	</select>	
	
	<select id="retrieveFeeAmount1_2List" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT     A.ORDER_ID, 
		           A.ORDER_ITM_ID,
                   SUM((A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT, 0)) AMT
        FROM    OD_ORDER_ITM A, OD_ORDER_MAST B
        WHERE   A.ORDER_ID = B.ORDER_ID
        AND     A.ORDER_ID = #orderId#
        AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
        AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
        GROUP BY A.ORDER_ID,  A.ORDER_ITM_ID
		]]>
	</select>	
	
	<update id="updateFeeAmount1_2" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	OD_ORDER_FEE A
		SET 	A.FEE_AMT =  #feeAmt#
		WHERE 	A.ORDER_ITM_ID = #orderItmId#
        ]]>
	</update>
	
	<select id="retrieveFeeAmount2List" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ID, ORDER_ITM_ID , FEE_AMOUNT AS ORG_FEE,  FEE_AMOUNT_RIGHT AS RIGHT_FEE
        FROM 
        ( 
            SELECT  1, ORDER_ITM_ID, ORDER_ID, SETL_MEAN_CD
                 , FEE_AMOUNT 
                 , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
                        WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
                        WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * NVL(( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '01' 
                                                                             AND   CR.PG_DIV_CD = (
                                                                                                   SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                   WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                   )
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       ),0)
                                                       ) + 
                                                        FLOOR(NVL(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '01' 
                                                                              AND   CR.PG_DIV_CD = (
                                                                                                    SELECT DECODE(OOP.BNK_CODE,'071','71','06') FROM OD_ONLINE_PAYMENT OOP
                                                                                                    WHERE (OOP.ORDER_ID, OOP.SETL_SEQ) IN (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_ONLINE_PAYMENT Q WHERE Q.ORDER_ID = A.ORDER_ID ) 
                                                                                                    )
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ),0)
                                                        )
                        WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
                                                                                  SELECT  /*+ ordered use_nl(c b) */
				                       													  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																				  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																				  WHERE   C.MEMBER_NO   = B.JOIN_NO
																				  AND     B.SITE_DIV_CD  = SITE_DIV_CD
																				  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																				  AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = A.ORDER_ID )
                                                                                )
                                                       ) /* 0.013 */
                        WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT                               
                        WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * ( 
                                                                                  SELECT /*+ ordered use_nl(c b) */
                                                                                           NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																				  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																				  WHERE   B.JOIN_NO   = '00971011184'
																				  AND     B.SITE_DIV_CD  = SITE_DIV_CD
																				  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																				  AND     (C.ORDER_ID, C.SETL_SEQ) in (SELECT A.ORDER_ID, MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = A.ORDER_ID )
                                                                                )
                                                       ) /* 0.025 */
                        WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '07' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) + 
                                                        FLOOR(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '07' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ) 
                                                        )
                        WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '20' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) /* 0.013 */
                        WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '21' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '22' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                         WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '23' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                         WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '24' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYCO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '25' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '26' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '27' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '13' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                        )
                                                       ) /* 0.013 */
                           WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
                                                                                                SELECT /*+ ordered use_nl(c b e) index(b OD_CARDFEES_IX01) */
                       															         			   NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
                                                                                                AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                AND C.DEALSTUSCD       ='S'
                                                                                                AND C.JOINNO           = B.JOIN_NO
                                                                                                AND B.SITE_DIV_CD      = '01'
                                                                                                AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                     )
                                                              ) /* 0.013 */ 
                  END AS FEE_AMOUNT_RIGHT 
                 , CASE WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
                        WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN 
                        WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
                        WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
                        WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
                        WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
                        WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
                        WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
                        WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
                        WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
                        WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
                        WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
                        WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
                        WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
                        WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
                        WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
                     END AS SETTLE_AMOUNT 
                 , AMOUNT_BANKTOWN 
                 , AMOUNT_OTHER_BANKTOWN
                 , AMOUNT_CARD_POSTNET 
                 , AMOUNT_CARD_EPOST 
                 , AMOUNT_CARD_OVERSEA
                 , AMOUNT_KAKAO 
                 , AMOUNT_MOBILE
                 , AMOUNT_ACCOUNT
                 , AMOUNT_PAYPAL
                 , AMOUNT_POSTMPAY
                 , AMOUNT_SYRUP_PAY
                 , AMOUNT_NAVER_PAY
                 , AMOUNT_PAYNOW
                 , AMOUNT_PAYCO
                 , AMOUNT_BANK_KAKAO
                 , AMOUNT_RPAY
          FROM 
          ( 
            SELECT     MIN(A.ORDER_ITM_ID) AS ORDER_ITM_ID, A.ORDER_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD,
                            SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
                           SUM(D.FEE_AMT) AS FEE_AMOUNT, 
                           SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN,
                           SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN, 
                           SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET, 
                           SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
                           SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
                           SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
                           SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE, 
                           SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
                           SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
                           SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
                           SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
                           SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
                           SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY,
                           1 
            FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
            WHERE   A.ORDER_ID = B.ORDER_ID
            AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
            AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
            AND     A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
            AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 
            AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
            AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
            GROUP BY A.ORDER_ID,  B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, B.SITE_DIV_CD
          ) A
        ) 
        WHERE  FEE_AMOUNT <> FEE_AMOUNT_RIGHT
        AND    FEE_AMOUNT < FEE_AMOUNT_RIGHT
		]]>
	</select>	
	<!-- 평탄화 보정 후 주문별 남는 금액을 첫번째 상품에 합산 -->
	<update id="updateFeeAmount2" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE     OD_ORDER_FEE A 
        SET        A.FEE_AMT = A.FEE_AMT + 
                               ( 
                               SELECT     FLOOR(SUM(
                                                           CASE         
                                                            WHEN Y.SETL_MEAN_CD = '05' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.0128)
                                                            WHEN Y.SETL_MEAN_CD = '06' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.014)
                                                            WHEN Y.SETL_MEAN_CD = '01' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '01' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                                            WHEN Y.SETL_MEAN_CD = '02' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( 
                                                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																												  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																												  WHERE   C.ORDER_ID = Y.ORDER_ID
																												  AND     C.MEMBER_NO   = B.JOIN_NO
																												  AND     B.SITE_DIV_CD  = DECODE(Z.PAVLN_DIV_CD,'05','03','01')
																												  AND     TO_CHAR(Y.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																												  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                    )
                                                                                      ) /* 0.013 */
                                                            WHEN Y.SETL_MEAN_CD = '16' THEN FEE_AMOUNT
                                                            WHEN Y.SETL_MEAN_CD = '07' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '07' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                                            WHEN Y.SETL_MEAN_CD = '20' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '20' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      ) /* 0.013 */ 
															WHEN Y.SETL_MEAN_CD = '21' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '21' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '22' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '22' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '23' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '23' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '24' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '24' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '25' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '25' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '26' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '26' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '27' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '27' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '13' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '13' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      ) /* 0.013 */ 
                                                            WHEN Y.SETL_MEAN_CD = '03' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( 
                                                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																												  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																												  WHERE   C.ORDER_ID = Y.ORDER_ID
																												  AND     B.JOIN_NO   = '00971011184'
																												  AND     B.SITE_DIV_CD  = DECODE(Z.PAVLN_DIV_CD,'05','03','01')
																												  AND     SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																												  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                  )
                                                                                      ) /* 0.025 */ 
                                                         WHEN Y.SETL_MEAN_CD = '04' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                   (
                                                                                                                    SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                    FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                    WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                    AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                    AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                    AND C.DEALSTUSCD       ='S'
                                                                                                                    AND C.JOINNO           = B.JOIN_NO
                                                                                                                    AND B.SITE_DIV_CD      = '01'
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                  )
                                                                                        ) /* 0.013 */ 
                                                         WHEN Y.SETL_MEAN_CD = '17' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) - Z.CASH_BILL_AMT ) * 
                                                                                                                   ( 
                                                                                                                    SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                    FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                    WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                    AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                    AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                    AND C.DEALSTUSCD       ='S'
                                                                                                                    AND C.JOINNO           = B.JOIN_NO
                                                                                                                    AND B.SITE_DIV_CD      = '01'
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                  )
                                                                                        ) /* 0.013 */ 
                                                         ELSE 0                               
                                                  END)) - SUM(W.FEE_AMT) as tt 
                               FROM    OD_ORDER_ITM Z, OD_ORDER_MAST Y, OD_ORDER_FEE W
                               WHERE   Z.ORDER_ID = Y.ORDER_ID
                               AND     Z.ORDER_ITM_ID = W.ORDER_ITM_ID
                               AND     NVL(Z.GOODS_CANCEL_YN, 'N') = 'N' 
                               AND     NVL(Z.EXTRA_GOODS_YN, 'N') <> 'Y' 
                               AND     Z.ORDER_ITM_ID = A.ORDER_ITM_ID 
                                 ) 
        WHERE 1=1 
        AND A.ORDER_ITM_ID IN ( 
        						SELECT MIN(ORDER_ITM_ID) 
                                FROM 
                                ( 
	        						SELECT ORDER_ID, ORDER_ITM_ID 
	                                FROM 
	                                ( 
	                                    SELECT  1, ORDER_ITM_ID, ORDER_ID, SETL_MEAN_CD
	                                         , FEE_AMOUNT 
	                                         , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
	                                                WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
	                                                WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '01' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) + 
				                                                                    FLOOR(( SELECT DOM_FEE2 
				                                                                                          FROM OD_SETL_MEAN_FEE CR 
				                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
				                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
				                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
				                                                                    )
	                                                WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
				                                                											  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																											  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																											  WHERE   C.ORDER_ID = A.ORDER_ID
																											  AND     C.MEMBER_NO   = B.JOIN_NO
																											  AND     B.SITE_DIV_CD  = DECODE(PAVLN_DIV_CD,'05','03','01')
																											  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																											  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
	                                                                                                        )
	                                                                               ) /* 0.013 */
	                                                WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT                               
	                                                WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * ( 
	                                                														  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																											  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																											  WHERE   C.ORDER_ID = A.ORDER_ID
																											  AND     B.JOIN_NO   = '00971011184'
																											  AND     B.SITE_DIV_CD  = DECODE(PAVLN_DIV_CD,'05','03','01')
																											  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																											  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
	                                                                                                        )
	                                                                               ) /* 0.025 */
	                                                WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '07' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) + 
				                                                                    FLOOR(( SELECT DOM_FEE2 
				                                                                                          FROM OD_SETL_MEAN_FEE CR 
				                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
				                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
				                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
				                                                                    )
	                                                WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '20' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) /* 0.013 */
	                                                WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '21' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '22' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                 WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '23' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                 WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '24' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYCO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '25' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '26' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '27' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
	                                                                                                      FROM OD_SETL_MEAN_FEE CR 
	                                                                                                      WHERE CR.SETL_MEAN_CD = '13' 
	                                                                                                      AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                                )
	                                                                               ) /* 0.013 */
	                                                   WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
	                                                    																	SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
	                                                                                                                        FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
	                                                                                                                        WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
	                                                                                                                        AND C.RECEVNO          = E.ACCEPT_NUM
	                                                                                                                        AND C.CREDITCARDAPPRNO = E.AGREE_NUM
	                                                                                                                        AND C.DEALSTUSCD       ='S'
	                                                                                                                        AND C.JOINNO           = B.JOIN_NO
	                                                                                                                        AND B.SITE_DIV_CD      = '01'
	                                                                                                                        AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
	                                                                                                             )
	                                                                                      ) /* 0.013 */ 
	                                          END AS FEE_AMOUNT_RIGHT 
	                                         , CASE WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
	                                                WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN 
	                                                WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
	                                                WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
	                                                WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
	                                                WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
	                                                WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
	                                                WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
	                                                WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
	                                                WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
	                                                WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
	                                                WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
	                                                WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
	                                                WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
	                                                WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
	                                                WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
	                                             END AS SETTLE_AMOUNT 
	                                         , AMOUNT_BANKTOWN 
	                                         , AMOUNT_OTHER_BANKTOWN
	                                         , AMOUNT_CARD_POSTNET 
	                                         , AMOUNT_CARD_EPOST 
	                                         , AMOUNT_CARD_OVERSEA
	                                         , AMOUNT_KAKAO 
	                                         , AMOUNT_MOBILE
	                                         , AMOUNT_ACCOUNT
	                                         , AMOUNT_PAYPAL
	                                         , AMOUNT_POSTMPAY
	                                         , AMOUNT_SYRUP_PAY
	                                         , AMOUNT_NAVER_PAY
	                                         , AMOUNT_PAYNOW
	                                         , AMOUNT_PAYCO
	                                         , AMOUNT_BANK_KAKAO
	                                         , AMOUNT_RPAY
	                                  FROM 
	                                  ( 
	                                    SELECT     MIN(A.ORDER_ITM_ID) AS ORDER_ITM_ID, A.ORDER_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, A.PAVLN_DIV_CD,
	                                                    SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
	                                                   SUM(D.FEE_AMT) AS FEE_AMOUNT, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY,
	                                                   1 
	                                    FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
	                                    WHERE   A.ORDER_ID = B.ORDER_ID
	                                    AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
	                                    AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
	                                    AND     A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
	                                    AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 
	                                    AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
	                                    AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
	                                    GROUP BY A.ORDER_ID,  B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, A.PAVLN_DIV_CD
	                                  ) A
	                                ) 
	                                WHERE  FEE_AMOUNT <> FEE_AMOUNT_RIGHT
	                                AND    FEE_AMOUNT < FEE_AMOUNT_RIGHT
                                )
                                GROUP BY ORDER_ID
                              )    
		]]>
	</update>
	
	<!-- 창구 다카드 결제건을 위한 수수료 보정 -->
	<select id="retrieveFeeAmount3List" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
        SELECT /*+ ordered use_nl(X A B E) */
               A.ORDER_ID AS ORDER_ID, A.ORDER_ITM_ID AS ORDER_ITM_ID, E.FEE_AMT AS TX_FEE
	        , (
	                  SELECT SUM(DECODE(CARDDEALDIVCD, '1', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100)
                                                 , '2', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100)
                                                 , '0', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) * -1))
	                  FROM   OD_ORDER_SETL SE, PRRWT0700 X, OD_CARDFEES C , PCSS_TRANS E 
	                  WHERE  1=1
	                  AND    SE.ORDER_ID = A.ORDER_ID
	                  AND    SE.USE_YN = 'Y'
	                  AND    SE.SETL_STUS_CD in ('2100','2200')
	                  AND    X.RECEVNO =  A.ORDER_ID || SE.SETL_SEQ
	                  AND    X.RECEVNO          = E.ACCEPT_NUM
	                  AND    X.CREDITCARDAPPRNO = E.AGREE_NUM
	                  AND    X.DEALSTUSCD='S'
	                  AND    C.SITE_DIV_CD    = '01'
	                  AND    X.JOINNO = C.JOIN_NO
	                  AND    B.APPR_DATE BETWEEN TO_DATE(START_DATE, 'YYYYMMDD') AND TO_DATE(END_DATE, 'YYYYMMDD') + .99999 
	        )
	        AS RIGHT_FEE
	        ,(
	                   SELECT   SUM(OP.FEE_AMT) AS FEE_AMOUNT
	                   FROM     OD_ORDER_ITM Y, OD_ORDER_MAST Z, OD_ORDER_FEE OP
	                   WHERE    Y.ORDER_ITM_ID = OP.ORDER_ITM_ID
	                   AND      Y.ORDER_ID = Z.ORDER_ID
	                   AND      Z.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
	                   AND      Y.ORDER_ID = A.ORDER_ID
	                   AND      Z.SETL_MEAN_CD IN('04', '17') 
	                   AND      NVL(Y.GOODS_CANCEL_YN, 'N') = 'N' 
	                   AND      NVL(Y.EXTRA_GOODS_YN, 'N') <> 'Y'
	        ) AS ORG_FEE
        FROM
          (
                          SELECT  /*+ ordered use_nl(A P C E) index(C OD_CARDFEES_IX01) */
                                  ORDER_ID, ORDER_ITM_ID_MIN
                          FROM 
                          ( 
                               SELECT A.ORDER_ID, B.APPR_DATE, MIN(A.ORDER_ITM_ID) ORDER_ITM_ID_MIN
                                     , SUM(D.FEE_AMT ) AS FEE_AMT
                                FROM   OD_ORDER_ITM A , OD_ORDER_MAST B, OD_ORDER_FEE D
                                WHERE  A.ORDER_ID = B.ORDER_ID 
                                AND    A.ORDER_ITM_ID = D.ORDER_ITM_ID
                                AND    B.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
                                AND    A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
                                AND    B.SETL_MEAN_CD IN('04', '17') 
                                AND    NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
                                AND    NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
                                GROUP BY A.ORDER_ID, B.SETL_MEAN_CD, B.APPR_DATE
                          ) A, PRRWT0700 P, OD_CARDFEES C , PCSS_TRANS E
                          WHERE 1=1
                          AND P.RECEVNO like A.ORDER_ID || '%'
                          AND P.DEALSTUSCD='S'
                          AND C.SITE_DIV_CD    = '01'
                          AND P.RECEVNO          = E.ACCEPT_NUM
                          AND P.CREDITCARDAPPRNO = E.AGREE_NUM
                          AND P.JOINNO      = C.JOIN_NO
                          AND A.APPR_DATE BETWEEN TO_DATE(START_DATE, 'YYYYMMDD') AND TO_DATE(END_DATE, 'YYYYMMDD') + .99999 
                          GROUP BY ORDER_ID, ORDER_ITM_ID_MIN, A.FEE_AMT
                          HAVING 1=1
                          AND A.FEE_AMT <> SUM(DECODE(CARDDEALDIVCD, '1', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100)
                                                                   , '2', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100)
                                                                   , '0', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) * -1))
          ) X, OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE E
          WHERE     A.ORDER_ID = B.ORDER_ID
          AND       A.ORDER_ITM_ID = E.ORDER_ITM_ID
          AND       A.ORDER_ID = X.ORDER_ID
          AND       A.ORDER_ITM_ID = X.ORDER_ITM_ID_MIN
          
      	]]>
      	
      	
<!--       	SELECT SUM(DECODE(CARDDEALDIVCD, '1', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!-- 	                                                 , '2', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!-- 	                                                 , '0', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) * -1)) -->
<!-- 	                  FROM   PRRWT0700 X, OD_CARDFEES C , PCSS_TRANS E -->
<!-- 	                  WHERE  1=1 -->
<!-- 	                  AND    X.RECEVNO like A.ORDER_ID || '%' -->
<!-- 	                  AND    X.RECEVNO          = E.ACCEPT_NUM -->
<!-- 	                  AND    X.CREDITCARDAPPRNO = E.AGREE_NUM -->
<!-- 	                  AND    X.DEALSTUSCD='S' -->
<!-- 	                  AND    C.SITE_DIV_CD    = '01' -->
<!-- 	                  AND    X.JOINNO = C.JOIN_NO -->
<!-- 	                  AND    SUBSTR(TO_CHAR(B.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN START_DATE AND END_DATE -->
      	
<!--       	SELECT A.ORDER_ID AS ORDER_ID, A.ORDER_ITM_ID AS ORDER_ITM_ID, E.FEE_AMT AS TX_FEE -->
<!--         , ( -->
<!--                   SELECT SUM(DECODE(CARDDEALDIVCD, '1', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!--                                                  , '2', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!--                                                  , '0', FLOOR(X.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) * -1)) -->
<!--                   FROM   PRRWT0700 X, OD_CARDFEES C , PCSS_TRANS E -->
<!--                   WHERE  1=1 -->
<!--                   AND    SUBSTR(X.RECEVNO, 1, 19) = A.ORDER_ID  -->
<!--                   AND    X.RECEVNO          = E.ACCEPT_NUM -->
<!--                   AND    X.CREDITCARDAPPRNO = E.AGREE_NUM -->
<!--                   AND    X.DEALSTUSCD='S' -->
<!--                   AND    C.SITE_DIV_CD    = '01' -->
<!--                   AND    X.JOINNO = C.JOIN_NO -->
<!--                   AND    SUBSTR(TO_CHAR(B.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN START_DATE AND END_DATE -->
<!--         ) -->
<!--         AS RIGHT_FEE -->
<!--         ,( -->
<!--                    SELECT   SUM(OP.FEE_AMT) AS FEE_AMOUNT -->
<!--                    FROM     OD_ORDER_ITM Y, OD_ORDER_MAST Z, OD_ORDER_FEE OP -->
<!--                    WHERE    Y.ORDER_ITM_ID = OP.ORDER_ITM_ID -->
<!--                    AND      Y.ORDER_ID = Z.ORDER_ID -->
<!--                    AND      TO_CHAR(Z.APPR_DATE,'YYYYMMDD') BETWEEN #startDate# AND #endDate# -->
<!--                    AND      Y.ORDER_ITM_ID = A.ORDER_ITM_ID -->
<!--                    AND      Z.SETL_MEAN_CD IN('04', '17')  -->
<!--                    AND      NVL(Y.GOODS_CANCEL_YN, 'N') = 'N'  -->
<!--                    AND      NVL(Y.EXTRA_GOODS_YN, 'N') <> 'Y' -->
<!--         ) AS ORG_FEE -->
<!--         FROM      OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE E -->
<!--         WHERE     A.ORDER_ID = B.ORDER_ID -->
<!--         AND       A.ORDER_ITM_ID = E.ORDER_ITM_ID -->
<!--         AND       A.ORDER_ITM_ID = (SELECT MIN(Z.ORDER_ITM_ID)  -->
<!--                                     FROM   OD_ORDER_ITM Z, OD_ORDER_MAST ZZ -->
<!--                                     WHERE  Z.ORDER_ID = ZZ.ORDER_ID  -->
<!--                                     AND    Z.ORDER_ID = A.ORDER_ID   -->
<!--                                     AND    TO_CHAR(ZZ.APPR_DATE,'YYYYMMDD') BETWEEN #startDate# AND #endDate# -->
<!--                                     AND    Z.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99') -->
<!--                                     AND    ZZ.SETL_MEAN_CD IN('04', '17')  -->
<!--                                     AND    NVL(Z.GOODS_CANCEL_YN, 'N') = 'N'  -->
<!--                                     AND    NVL(Z.EXTRA_GOODS_YN, 'N') <> 'Y'  -->
<!--                                       )  -->
<!--           AND     A.ORDER_ID IN ( -->
<!-- 		                  SELECT   ORDER_ID -->
<!-- 		                  FROM  -->
<!-- 		                  (  -->
<!-- 		                       SELECT A.ORDER_ID, B.APPR_DATE -->
<!-- 		                             , SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT -->
<!-- 		                             , SUM(D.FEE_AMT ) AS FEE_AMT -->
<!-- 		                        FROM   OD_ORDER_ITM A , OD_ORDER_MAST B, OD_ORDER_FEE D -->
<!-- 		                        WHERE  A.ORDER_ID = B.ORDER_ID  -->
<!-- 		                        AND    A.ORDER_ITM_ID = D.ORDER_ITM_ID -->
<!-- 		                        AND    B.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999  -->
<!-- 		                        AND    A.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99') -->
<!-- 		                        AND    B.SETL_MEAN_CD IN('04', '17')  -->
<!-- 		                        AND    NVL(A.GOODS_CANCEL_YN, 'N') = 'N'  -->
<!-- 		                        AND    NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y'  -->
<!-- 		                        GROUP BY A.ORDER_ID, B.SETL_MEAN_CD, B.APPR_DATE -->
<!-- 		                  ) A, PRRWT0700 P, OD_CARDFEES C , PCSS_TRANS E -->
<!-- 		                  WHERE 1=1 -->
<!-- 		                  AND SUBSTR(P.RECEVNO, 1, 19) = A.ORDER_ID  -->
<!-- 		                  AND P.DEALSTUSCD='S' -->
<!-- 		                  AND C.SITE_DIV_CD    = '01' -->
<!-- 		                  AND P.RECEVNO          = E.ACCEPT_NUM -->
<!-- 		                  AND P.CREDITCARDAPPRNO = E.AGREE_NUM -->
<!-- 		                  AND P.JOINNO      = C.JOIN_NO -->
<!-- 		                  AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN START_DATE AND END_DATE -->
<!-- 		                  GROUP BY ORDER_ID, A.FEE_AMT -->
<!-- 		                  HAVING 1=1 -->
<!-- 		                  AND A.FEE_AMT <> SUM(DECODE(CARDDEALDIVCD, '1', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!-- 		                                                           , '2', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) -->
<!-- 		                                                           , '0', FLOOR(P.DEALAMT * NVL(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',C.CHECK_FEE,C.CARD_FEE),1.3)/100) * -1)) -->
<!--           ) -->
	</select>
	
	<update id="updateFeeAmount3" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	OD_ORDER_FEE A
		SET 	A.FEE_AMT =  A.FEE_AMT + (#rightFee# - #orgFee#)
		WHERE 	A.ORDER_ITM_ID = #orderItmId#
        ]]>
	</update>
	
	
	<!-- 카드를 현금으로 준것 -->
	<update id="updateRefundCardSetlFee" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE   OD_ORDER_FEE 
        SET      RETRNGD_CARD_REFUND_FEE = NVL(FEE_AMT,0) 
        WHERE    ORDER_ITM_ID IN (
                                SELECT A.ORDER_ITM_ID
                                FROM OD_ORDER_ITM A, OD_RET_INTERFACE B,  OD_ORDER_MAST C, OD_ORDER_FEE E
                                WHERE  A.ORDER_ID =C.ORDER_ID
                                AND     A.ORDER_ID = B.ORDER_ID
                                AND     A.ORDER_ITM_ID = B.ORDER_ITM_ID
                                AND     A.ORDER_ITM_ID = E.ORDER_ITM_ID
                                AND  C.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
                                AND A.GOODS_CANCEL_YN = 'N' AND A.RETRNGD_YN = 'Y' 
                                AND C.SETL_MEAN_CD IN('04', '17') 
                                AND B.CLAIM_DIV_CD='001'
                                AND B.RETRNGD_REFUND_METH_CD = '02'
                                AND NVL(E.RETRNGD_CARD_REFUND_FEE, 0) <> NVL(E.FEE_AMT,0)
                              )  
        ]]>
	</update>
	
	<update id="retrnAmtConfirm" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE  OD_ONLINE_EX_PRICE
        SET 	REF_PRICE = PRE_REF_PRICE
        WHERE 	ORDER_ITM_ID IN (
        						SELECT 	B.ORDER_ITM_ID 
        						FROM  OD_ORDER_MAST A, OD_ORDER_ITM B 
        						WHERE A.ORDER_ID = B.ORDER_ID
        						AND   A.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
        						AND   B.PAVLN_DIV_CD IN ('01', '02', '03', '04', '05', '07', '09', '99')
        						AND   B.GOODS_CANCEL_YN = 'Y' 
        						AND   B.ORDER_DTAIL_STUS_CD = 'C08'
        )
        AND NVL(REF_PRICE,0) = 0
        ]]>
	</update>
	
	<insert id="settleThisAdjust" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO ST_HISTORY_ADJUST
			(
			CONFIRM_DAY, 
			START_DAY, 
			END_DAY, 
			TRANS_DAY, 
			SUPP_ADJ_YN
			)
        VALUES
        	(
		     TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
		     TO_CHAR(TO_DATE(#adjStartDay#, 'YYYYMMDD'), 'YYYY/MM/DD'),
		     TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD'),
		     NULL, 
		     NULL
        	)
    	]]>
	</insert>
	
	<!-- 정산대상 기간 내의 주문취소 요청 처리중인 건수 조회 -->
	<select id="selectCanReqProgressB2BCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT 	NVL(COUNT(1), 0) AS CAN_REQ_CNT 
        FROM 	OD_ORDER_MAST A, OD_ORDER_ITM B
        WHERE 	A.ORDER_ID = B.ORDER_ID
        AND     A.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
        AND     B.PAVLN_DIV_CD = '08'
        AND 	B.ORDER_STUS_CD IN ('O05', 'O08')
        AND 	B.GOODS_CANCEL_YN = 'N'
		]]>
	</select>
	
	<!-- 정산대상 기간 내의 주문취소 요청 처리중인 건수 조회 -->
	<select id="selectCancelRequestB2BCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT  COUNT(*) AS RET_CNT
        FROM    OD_ORDER_ITM A, OD_ORDER_MAST D, OD_RET_INTERFACE RET
        WHERE   1 = 1
        AND     A.ORDER_ID = D.ORDER_ID
        AND     A.ORDER_ID = RET.ORDER_ID
        AND     A.ORDER_ITM_ID = RET.ORDER_ITM_ID
        AND     A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)   >  0
        AND     RET.TREAT_STUS_CD <> '004'
        AND     D.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
        AND     A.PAVLN_DIV_CD = '08'
        AND     A.GOODS_CANCEL_YN = 'N'  
        AND     RET.CLAIM_DIV_CD = '001'  
        AND     RET.TREAT_STUS_CD IN ('002','003')
        AND     RET.RETRNGD_REFUND_METH_CD = '05'
		]]>
	</select>
	
	<!-- 정산확정기간내 CANCEL_STATE = 'Y' ORDER_CANCEL_ADJ_YN = 'Y' 처리 -->
	<update id="modifyAdjustJungB2BChk" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE  OD_ORDER_ITM A
        SET     A.ADJ_YN = 'Y'
        WHERE   A.GOODS_CANCEL_YN = 'Y'
        AND     A.PAVLN_DIV_CD = '08'
		AND     EXISTS ( SELECT 1 FROM OD_ORDER_MAST B 
		                 WHERE B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
		                 AND A.ORDER_ID=B.ORDER_ID )
		]]>
	</update>
	
	<!-- 상품별 금액에 맞추어 수수료 보정(평탄화) -->
	<update id="updateFeeAmountB2B1" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE    OD_ORDER_FEE A 
        SET       A.FEE_AMT =  (
                                    SELECT 
                                    CASE  
                                      WHEN NVL(Z.GOODS_CANCEL_YN, 'N') = 'Y' THEN 0 
                                      WHEN NVL(Z.EXTRA_GOODS_YN, 'N')  = 'Y' THEN 0 
                                      WHEN Y.SETL_MEAN_CD = '01' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '01' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '05' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.0128)
                                      WHEN Y.SETL_MEAN_CD = '06' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.014)
                                      WHEN Y.SETL_MEAN_CD = '07' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '07' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '20' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '20' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) /* 0.027 */ 
                                      WHEN Y.SETL_MEAN_CD = '21' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '21' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) /* 0.01 */ 
                                      WHEN Y.SETL_MEAN_CD = '22' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '22' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '23' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '23' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '24' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '24' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )  
                                      WHEN Y.SETL_MEAN_CD = '25' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '25' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '26' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '26' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '27' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '27' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     )
                                      WHEN Y.SETL_MEAN_CD = '13' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '13' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                       )
                                                                                                                     ) 
                                      WHEN Y.SETL_MEAN_CD = '02' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
                                                                                                                          FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
                                                                                                                          WHERE   C.ORDER_ID = Y.ORDER_ID
                                                                                                                          AND     C.MEMBER_NO   = B.JOIN_NO
                                                                                                                          AND     B.SITE_DIV_CD  = '01'
                                                                                                                          AND     TO_CHAR(Y.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                          AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                     )) /* 0.013 */ 
                                      WHEN Y.SETL_MEAN_CD = '16' THEN FEE_AMOUNT                                                                            
                                      WHEN Y.SETL_MEAN_CD = '03' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
                                                                                                                          FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
                                                                                                                          WHERE   C.ORDER_ID = Y.ORDER_ID
                                                                                                                          AND     B.JOIN_NO   = '00971011184'
                                                                                                                          AND     B.SITE_DIV_CD  = '01'
                                                                                                                          AND     SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                          AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                    )) /* 0.025 */ 
                                      WHEN Y.SETL_MEAN_CD = '04' THEN FLOOR(((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                          FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                          WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                          AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                          AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                          AND C.DEALSTUSCD       ='S'
                                                                                                                          AND C.JOINNO           = B.JOIN_NO
                                                                                                                          AND B.SITE_DIV_CD      = '01'
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                      )) /* 0.013 */ 
                                      WHEN Y.SETL_MEAN_CD = '17' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) - Z.CASH_BILL_AMT) * ( 
                                                                                                                          SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                          FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                          WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                          AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                          AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                          AND C.DEALSTUSCD       ='S'
                                                                                                                          AND C.JOINNO           = B.JOIN_NO
                                                                                                                          AND B.SITE_DIV_CD      = '01'
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                     )) /* 0.013 */ 
                                END
                                FROM    OD_ORDER_ITM Z, OD_ORDER_MAST Y, OD_ORDER_FEE W
                                WHERE   Z.ORDER_ID = Y.ORDER_ID
                                AND     Z.ORDER_ITM_ID = W.ORDER_ITM_ID
                                AND     Z.ORDER_ITM_ID = A.ORDER_ITM_ID
                                )
        WHERE     A.ORDER_ITM_ID IN 
                ( 
                       SELECT     ORDER_ITM_ID 
                       FROM 
                       ( 
                        SELECT  1, ORDER_ITM_ID, SETL_MEAN_CD 
                              , FEE_AMOUNT 
                              , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
                                     WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
                                     WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) + 
                                                                    FLOOR(( SELECT DOM_FEE2 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
                                                                    )
                                     WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
                                     														  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																							  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																							  WHERE   C.ORDER_ID = A.ORDER_ID
																							  AND     C.MEMBER_NO   = B.JOIN_NO
																							  AND     B.SITE_DIV_CD  = '01'
																							  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																							  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                             )
                                                                    ) /* 0.013 */
                                     WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT
									 WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) + 
                                                                    FLOOR(( SELECT DOM_FEE2 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
                                                                    )
                                     WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '20' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) /* 0.013 */
                                     WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '21' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) 
                                     WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '22' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    ) 
                                     WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '23' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '24' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '25' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '26' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                          WHERE CR.SETL_MEAN_CD = '27' 
                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                        )
                                                                    )
                                     WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
                                                                                           FROM OD_SETL_MEAN_FEE CR 
                                                                                           WHERE CR.SETL_MEAN_CD = '13' 
                                                                                           AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                         )
                                                                    ) /* 0.013 */ 
                                     WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * (  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																								  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																								  WHERE   C.ORDER_ID = A.ORDER_ID
																								  AND     B.JOIN_NO   = '00971011184'
																								  AND     B.SITE_DIV_CD  = '01'
																								  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																								  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                               )
                                                                    ) /* 0.025 */
                                     WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
                                     															  SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
																								  FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
																								  WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
																								  AND C.RECEVNO          = E.ACCEPT_NUM
																								  AND C.CREDITCARDAPPRNO = E.AGREE_NUM
																								  AND C.DEALSTUSCD       ='S'
																								  AND C.JOINNO           = B.JOIN_NO
																								  AND B.SITE_DIV_CD      = '01'
																								  AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                      )
                                                                           ) /* 0.013 */
                                     ELSE 0                                       
                                END AS FEE_AMOUNT_RIGHT 
                              , CASE     WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
                                         WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN
                                         WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
                                         WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
                                         WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
                                         WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
                                         WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
                                         WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
                                         WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
                                         WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
                                         WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
                                         WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
                                         WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
                                         WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
                                         WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
                                         WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
                                END AS SETTLE_AMOUNT 
                              , AMOUNT_BANKTOWN 
                              , AMOUNT_OTHER_BANKTOWN
                              , AMOUNT_CARD_POSTNET 
                              , AMOUNT_CARD_EPOST 
                              , AMOUNT_CARD_OVERSEA
                              , AMOUNT_KAKAO 
                              , AMOUNT_MOBILE
                              , AMOUNT_ACCOUNT
                              , AMOUNT_PAYPAL
                              , AMOUNT_POSTMPAY
                              , AMOUNT_SYRUP_PAY
                              , AMOUNT_NAVER_PAY
                              , AMOUNT_PAYNOW
                              , AMOUNT_PAYCO
                              , AMOUNT_BANK_KAKAO
                              , AMOUNT_RPAY
                        FROM 
                        ( 
                                 SELECT     A.ORDER_ID, A.ORDER_ITM_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, 
                                           SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
                                           SUM(D.FEE_AMT) AS FEE_AMOUNT, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN,
                                           SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET,  
                                           SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
                                           SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
                                           SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE,
                                           SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
                                           SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
                                           SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
                                           SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
                                           SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
                                           SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
                                           SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY, 
                                           1 
                                 FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
                                 WHERE   A.ORDER_ID = B.ORDER_ID
                                 AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
                                 AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
                                 AND     A.PAVLN_DIV_CD = '08'
                                 AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 
                                 AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
                                 AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
                                 GROUP BY A.ORDER_ID, A.ORDER_ITM_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE
                        ) A
                    ) 
                    WHERE FEE_AMOUNT <> FEE_AMOUNT_RIGHT 
                )
		]]>
	</update>
	
	<select id="retrieveFeeAmount2ListB2B" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ID, ORDER_ITM_ID , FEE_AMOUNT AS ORG_FEE,  FEE_AMOUNT_RIGHT AS RIGHT_FEE
        FROM 
        ( 
            SELECT  1, ORDER_ITM_ID, ORDER_ID, SETL_MEAN_CD
                 , FEE_AMOUNT 
                 , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
                        WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
                        WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '01' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) + 
                                                        FLOOR(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '01' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
                                                        )
                        WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
                                                                                  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
                                                                                  WHERE   C.ORDER_ID = A.ORDER_ID
                                                                                  AND     C.MEMBER_NO   = B.JOIN_NO
                                                                                  AND     B.SITE_DIV_CD  = DECODE(PAVLN_DIV_CD,'05','03','01')
                                                                                  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
                                                                                  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                )
                                                       ) /* 0.013 */
                        WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT                               
                        WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * ( 
                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
                                                                                  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
                                                                                  WHERE   C.ORDER_ID = A.ORDER_ID
                                                                                  AND     B.JOIN_NO   = '00971011184'
                                                                                  AND     B.SITE_DIV_CD  = DECODE(PAVLN_DIV_CD,'05','03','01')
                                                                                  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                )
                                                       ) /* 0.025 */
                        WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '07' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) + 
                                                        FLOOR(( SELECT DOM_FEE2 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '07' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                            ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
                                                        )
                        WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '20' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       ) /* 0.013 */
                        WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '21' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '22' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                         WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '23' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                         WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '24' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYCO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '25' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '26' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
                                                                             FROM OD_SETL_MEAN_FEE CR 
                                                                             WHERE CR.SETL_MEAN_CD = '27' 
                                                                             AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                       )
                                                       )
                        WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
                                                                              FROM OD_SETL_MEAN_FEE CR 
                                                                              WHERE CR.SETL_MEAN_CD = '13' 
                                                                              AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                        )
                                                       ) /* 0.013 */
                           WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
                                                                                                SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
                                                                                                AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                AND C.DEALSTUSCD       ='S'
                                                                                                AND C.JOINNO           = B.JOIN_NO
                                                                                                AND B.SITE_DIV_CD      = '01'
                                                                                                AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                     )
                                                              ) /* 0.013 */ 
                  END AS FEE_AMOUNT_RIGHT 
                 , CASE WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
                        WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN 
                        WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
                        WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
                        WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
                        WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
                        WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
                        WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
                        WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
                        WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
                        WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
                        WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
                        WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
                        WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
                        WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
                        WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
                     END AS SETTLE_AMOUNT 
                 , AMOUNT_BANKTOWN 
                 , AMOUNT_OTHER_BANKTOWN
                 , AMOUNT_CARD_POSTNET 
                 , AMOUNT_CARD_EPOST 
                 , AMOUNT_CARD_OVERSEA
                 , AMOUNT_KAKAO 
                 , AMOUNT_MOBILE
                 , AMOUNT_ACCOUNT
                 , AMOUNT_PAYPAL
                 , AMOUNT_POSTMPAY
                 , AMOUNT_SYRUP_PAY
                 , AMOUNT_NAVER_PAY
                 , AMOUNT_PAYNOW
                 , AMOUNT_PAYCO
                 , AMOUNT_BANK_KAKAO
                 , AMOUNT_RPAY
          FROM 
          ( 
            SELECT     MIN(A.ORDER_ITM_ID) AS ORDER_ITM_ID, A.ORDER_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, A.PAVLN_DIV_CD,
                            SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
                           SUM(D.FEE_AMT) AS FEE_AMOUNT, 
                           SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN,
                           SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN, 
                           SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET, 
                           SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
                           SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
                           SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
                           SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE, 
                           SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
                           SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
                           SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
                           SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
                           SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
                           SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
                           SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY,
                           1 
            FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
            WHERE   A.ORDER_ID = B.ORDER_ID
            AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
            AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
            AND     A.PAVLN_DIV_CD = '08'
            AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 
            AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
            AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
            GROUP BY A.ORDER_ID,  B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, A.PAVLN_DIV_CD
          ) A
        ) 
        WHERE  FEE_AMOUNT <> FEE_AMOUNT_RIGHT
        AND    FEE_AMOUNT < FEE_AMOUNT_RIGHT
		]]>
	</select>	
	
	<!-- 평탄화 보정 후 주문별 남는 금액을 첫번째 상품에 합산 -->
	<update id="updateFeeAmountB2B2" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE     OD_ORDER_FEE A 
        SET        A.FEE_AMT = A.FEE_AMT + 
                               ( 
                               SELECT     FLOOR(SUM(
                                                           CASE         
                                                            WHEN Y.SETL_MEAN_CD = '05' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.0128)
                                                            WHEN Y.SETL_MEAN_CD = '06' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 0.014)
                                                            WHEN Y.SETL_MEAN_CD = '01' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '01' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                                            WHEN Y.SETL_MEAN_CD = '02' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( 
                                                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																												  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																												  WHERE   C.ORDER_ID = Y.ORDER_ID
																												  AND     C.MEMBER_NO   = B.JOIN_NO
																												  AND     B.SITE_DIV_CD  = '01'
																												  AND     TO_CHAR(Y.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																												  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                    )
                                                                                      ) /* 0.013 */
                                                            WHEN Y.SETL_MEAN_CD = '16' THEN FEE_AMOUNT
                                                            WHEN Y.SETL_MEAN_CD = '07' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0)) * ( 
                                                                                                                          SELECT DOM_FEE1 
                                                                                                                          FROM OD_SETL_MEAN_FEE CR 
                                                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
                                                                                                                          AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD 
                                                                                                                       )
                                                                                                                     ) + 
                                                                                                                     FLOOR(
                                                                                                                     ( SELECT DOM_FEE2 
			                                                                                                           FROM OD_SETL_MEAN_FEE CR 
			                                                                                                           WHERE CR.SETL_MEAN_CD = '07' 
			                                                                                                           AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
			                                                                                                           ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = Z.ORDER_ID)
                                                                                                                     )
                                                            WHEN Y.SETL_MEAN_CD = '20' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '20' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      ) /* 0.013 */ 
															WHEN Y.SETL_MEAN_CD = '21' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '21' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '22' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '22' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '23' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '23' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '24' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '24' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '25' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '25' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '26' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '26' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '27' THEN (((Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '27' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      )
                                                            WHEN Y.SETL_MEAN_CD = '13' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( SELECT DOM_FEE1 
                                                                                                                    FROM OD_SETL_MEAN_FEE CR 
                                                                                                                    WHERE CR.SETL_MEAN_CD = '13' 
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
                                                                                                                  )
                                                                                      ) /* 0.013 */ 
                                                            WHEN Y.SETL_MEAN_CD = '03' THEN (( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                  ( 
                                                                                                                  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																												  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																												  WHERE   C.ORDER_ID = Y.ORDER_ID
																												  AND     B.JOIN_NO   = '00971011184'
																												  AND     B.SITE_DIV_CD  = '01'
																												  AND     SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																												  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
                                                                                                                  )
                                                                                      ) /* 0.025 */ 
                                                         WHEN Y.SETL_MEAN_CD = '04' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) ) * 
                                                                                                                   (
                                                                                                                    SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                    FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                    WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                    AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                    AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                    AND C.DEALSTUSCD       ='S'
                                                                                                                    AND C.JOINNO           = B.JOIN_NO
                                                                                                                    AND B.SITE_DIV_CD      = '01'
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                  )
                                                                                        ) /* 0.013 */ 
                                                         WHEN Y.SETL_MEAN_CD = '17' THEN FLOOR(( (Z.DC_APPLY_PRC + NVL(Z.OPTN_GOODS_APPLY_PRC,0) + NVL(Z.SEND_PRC,0)) - (Z.PREMI_CUST_PNT_SETL_AMT + NVL(Z.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (Z.PNT_USE_AMT + NVL(Z.PNT_REFUND_SETL_AMT, 0) + NVL(Z.WALLET_SETL_AMT, 0)) - Z.CPN_DC_AMT - NVL(Z.OKCASH_USE_AMT,0) - Z.CASH_BILL_AMT ) * 
                                                                                                                   ( 
                                                                                                                    SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
                                                                                                                    FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
                                                                                                                    WHERE C.RECEVNO LIKE Y.ORDER_ID||'%'
                                                                                                                    AND C.RECEVNO          = E.ACCEPT_NUM
                                                                                                                    AND C.CREDITCARDAPPRNO = E.AGREE_NUM
                                                                                                                    AND C.DEALSTUSCD       ='S'
                                                                                                                    AND C.JOINNO           = B.JOIN_NO
                                                                                                                    AND B.SITE_DIV_CD      = '01'
                                                                                                                    AND SUBSTR(TO_CHAR(Y.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
                                                                                                                  )
                                                                                        ) /* 0.013 */ 
                                                         ELSE 0                               
                                                  END)) - SUM(W.FEE_AMT) as tt 
                               FROM    OD_ORDER_ITM Z, OD_ORDER_MAST Y, OD_ORDER_FEE W
                               WHERE   Z.ORDER_ID = Y.ORDER_ID
                               AND     Z.ORDER_ITM_ID = W.ORDER_ITM_ID
                               AND     NVL(Z.GOODS_CANCEL_YN, 'N') = 'N' 
                               AND     NVL(Z.EXTRA_GOODS_YN, 'N') <> 'Y' 
                               AND     Z.ORDER_ITM_ID = A.ORDER_ITM_ID 
                                 ) 
        WHERE 1=1 
        AND A.ORDER_ITM_ID IN ( 
        						SELECT MIN(ORDER_ITM_ID) 
                                FROM 
                                ( 
	        						SELECT ORDER_ID, ORDER_ITM_ID 
	                                FROM 
	                                ( 
	                                    SELECT  1, ORDER_ITM_ID, ORDER_ID, SETL_MEAN_CD
	                                         , FEE_AMOUNT 
	                                         , CASE WHEN SETL_MEAN_CD = '05' THEN FLOOR(AMOUNT_BANKTOWN * 0.0128)
	                                                WHEN SETL_MEAN_CD = '06' THEN FLOOR(AMOUNT_OTHER_BANKTOWN * 0.014)
	                                                WHEN SETL_MEAN_CD = '01' THEN FLOOR(AMOUNT_ACCOUNT * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '01' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) + 
				                                                                    FLOOR(( SELECT DOM_FEE2 
				                                                                                          FROM OD_SETL_MEAN_FEE CR 
				                                                                                          WHERE CR.SETL_MEAN_CD = '01' 
				                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
				                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
				                                                                    )
	                                                WHEN SETL_MEAN_CD = '02' THEN FLOOR(AMOUNT_CARD_EPOST * ( 
				                                                											  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),1.3)/100 
																											  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																											  WHERE   C.ORDER_ID = A.ORDER_ID
																											  AND     C.MEMBER_NO   = B.JOIN_NO
																											  AND     B.SITE_DIV_CD  = '01'
																											  AND     TO_CHAR(A.APPR_DATE,'YYYYMMDD') BETWEEN B.START_DATE AND B.END_DATE
																											  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
	                                                                                                        )
	                                                                               ) /* 0.013 */
	                                                WHEN SETL_MEAN_CD = '16' THEN FEE_AMOUNT                               
	                                                WHEN SETL_MEAN_CD = '03' THEN FLOOR(AMOUNT_CARD_OVERSEA * ( 
	                                                														  SELECT  NVL(MAX(DECODE(NVL(C.RESERVED5,'N'),'Y',B.CHECK_FEE,B.CARD_FEE)),2.5)/100 
																											  FROM    OD_CREDIT_CARD_SETL_INFO C, OD_CARDFEES B
																											  WHERE   C.ORDER_ID = A.ORDER_ID
																											  AND     B.JOIN_NO   = '00971011184'
																											  AND     B.SITE_DIV_CD  = '01'
																											  AND     SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
																											  AND     SETL_SEQ = (SELECT MAX(Q.SETL_SEQ) FROM OD_CREDIT_CARD_SETL_INFO Q WHERE Q.ORDER_ID = C.ORDER_ID )
	                                                                                                        )
	                                                                               ) /* 0.025 */
	                                                WHEN SETL_MEAN_CD = '07' THEN FLOOR(AMOUNT_PAYPAL * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '07' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) + 
				                                                                    FLOOR(( SELECT DOM_FEE2 
				                                                                                          FROM OD_SETL_MEAN_FEE CR 
				                                                                                          WHERE CR.SETL_MEAN_CD = '07' 
				                                                                                          AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
				                                                                                        ) / (SELECT COUNT(1) FROM OD_ORDER_ITM SM WHERE SM.ORDER_ID = A.ORDER_ID)
				                                                                    )
	                                                WHEN SETL_MEAN_CD = '20' THEN FLOOR(AMOUNT_KAKAO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '20' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               ) /* 0.013 */
	                                                WHEN SETL_MEAN_CD = '21' THEN FLOOR(AMOUNT_POSTMPAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '21' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '22' THEN FLOOR(AMOUNT_SYRUP_PAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '22' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                 WHEN SETL_MEAN_CD = '23' THEN FLOOR(AMOUNT_NAVER_PAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '23' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                 WHEN SETL_MEAN_CD = '24' THEN FLOOR(AMOUNT_PAYNOW * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '24' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '25' THEN FLOOR(AMOUNT_PAYCO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '25' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '26' THEN FLOOR(AMOUNT_BANK_KAKAO * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '26' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '27' THEN FLOOR(AMOUNT_RPAY * ( SELECT DOM_FEE1 
	                                                                                                     FROM OD_SETL_MEAN_FEE CR 
	                                                                                                     WHERE CR.SETL_MEAN_CD = '27' 
	                                                                                                     AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                               )
	                                                                               )
	                                                WHEN SETL_MEAN_CD = '13' THEN FLOOR(AMOUNT_MOBILE * ( SELECT DOM_FEE1 
	                                                                                                      FROM OD_SETL_MEAN_FEE CR 
	                                                                                                      WHERE CR.SETL_MEAN_CD = '13' 
	                                                                                                      AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN CR.REFLCT_STRT_YMD AND CR.REFLCT_END_YMD
	                                                                                                )
	                                                                               ) /* 0.013 */
	                                                   WHEN SETL_MEAN_CD IN('04', '17') THEN FLOOR(AMOUNT_CARD_POSTNET * ( 
	                                                    																	SELECT NVL(AVG(DECODE(NVL(E.CARD_DIV_CODE,'00'),'01',B.CHECK_FEE,B.CARD_FEE)),1.3)/100
	                                                                                                                        FROM PRRWT0700 C, OD_CARDFEES B , PCSS_TRANS E
	                                                                                                                        WHERE C.RECEVNO LIKE A.ORDER_ID||'%'
	                                                                                                                        AND C.RECEVNO          = E.ACCEPT_NUM
	                                                                                                                        AND C.CREDITCARDAPPRNO = E.AGREE_NUM
	                                                                                                                        AND C.DEALSTUSCD       ='S'
	                                                                                                                        AND C.JOINNO           = B.JOIN_NO
	                                                                                                                        AND B.SITE_DIV_CD      = '01'
	                                                                                                                        AND SUBSTR(TO_CHAR(A.APPR_DATE,'YYYYMMDD'), 1, 8) BETWEEN B.START_DATE AND B.END_DATE
	                                                                                                             )
	                                                                                      ) /* 0.013 */ 
	                                          END AS FEE_AMOUNT_RIGHT 
	                                         , CASE WHEN SETL_MEAN_CD = '05' THEN AMOUNT_BANKTOWN 
	                                                WHEN SETL_MEAN_CD = '06' THEN AMOUNT_OTHER_BANKTOWN 
	                                                WHEN SETL_MEAN_CD = '02' THEN AMOUNT_CARD_EPOST 
	                                                WHEN SETL_MEAN_CD = '03' THEN AMOUNT_CARD_OVERSEA
	                                                WHEN SETL_MEAN_CD = '20' THEN AMOUNT_KAKAO 
	                                                WHEN SETL_MEAN_CD = '13' THEN AMOUNT_MOBILE 
	                                                WHEN SETL_MEAN_CD = '01' THEN AMOUNT_ACCOUNT 
	                                                WHEN SETL_MEAN_CD = '07' THEN AMOUNT_PAYPAL 
	                                                WHEN SETL_MEAN_CD = '21' THEN AMOUNT_POSTMPAY 
	                                                WHEN SETL_MEAN_CD = '22' THEN AMOUNT_SYRUP_PAY 
	                                                WHEN SETL_MEAN_CD = '23' THEN AMOUNT_NAVER_PAY 
	                                                WHEN SETL_MEAN_CD = '24' THEN AMOUNT_PAYNOW 
	                                                WHEN SETL_MEAN_CD = '25' THEN AMOUNT_PAYCO 
	                                                WHEN SETL_MEAN_CD = '26' THEN AMOUNT_BANK_KAKAO 
	                                                WHEN SETL_MEAN_CD = '27' THEN AMOUNT_RPAY 
	                                                WHEN SETL_MEAN_CD IN('04', '17') THEN AMOUNT_CARD_POSTNET 
	                                             END AS SETTLE_AMOUNT 
	                                         , AMOUNT_BANKTOWN 
	                                         , AMOUNT_OTHER_BANKTOWN
	                                         , AMOUNT_CARD_POSTNET 
	                                         , AMOUNT_CARD_EPOST 
	                                         , AMOUNT_CARD_OVERSEA
	                                         , AMOUNT_KAKAO 
	                                         , AMOUNT_MOBILE
	                                         , AMOUNT_ACCOUNT
	                                         , AMOUNT_PAYPAL
	                                         , AMOUNT_POSTMPAY
	                                         , AMOUNT_SYRUP_PAY
	                                         , AMOUNT_NAVER_PAY
	                                         , AMOUNT_PAYNOW
	                                         , AMOUNT_PAYCO
	                                         , AMOUNT_BANK_KAKAO
	                                         , AMOUNT_RPAY
	                                  FROM 
	                                  ( 
	                                    SELECT     MIN(A.ORDER_ITM_ID) AS ORDER_ITM_ID, A.ORDER_ID, B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE, 
	                                                    SUM(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)+D.DELIV_CERT_FEE+D.CONG_CARD_FEE) AS SETTLE_AMOUNT, 
	                                                   SUM(D.FEE_AMT) AS FEE_AMOUNT, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'05',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_BANKTOWN,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'06',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0))  AMOUNT_OTHER_BANKTOWN, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'04', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), '17', (A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0) - A.CASH_BILL_AMT, 0)) AS AMOUNT_CARD_POSTNET, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'02',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_EPOST, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'03',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_CARD_OVERSEA,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'20',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_KAKAO, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'13',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_MOBILE, 
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'01',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_ACCOUNT,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'07',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'21',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'22',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'23',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'24',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'25',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'26',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO,
	                                                   SUM(DECODE(B.SETL_MEAN_CD,'27',(A.DC_APPLY_PRC + NVL(A.OPTN_GOODS_APPLY_PRC,0) + NVL(A.SEND_PRC,0)) - (A.PREMI_CUST_PNT_SETL_AMT + NVL(A.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (A.PNT_USE_AMT + NVL(A.PNT_REFUND_SETL_AMT, 0) + NVL(A.WALLET_SETL_AMT, 0)) - A.CPN_DC_AMT - NVL(A.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY,
	                                                   1 
	                                    FROM    OD_ORDER_ITM A, OD_ORDER_MAST B, OD_ORDER_FEE D
	                                    WHERE   A.ORDER_ID = B.ORDER_ID
	                                    AND     A.ORDER_ITM_ID = D.ORDER_ITM_ID
	                                    AND     B.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
	                                    AND     A.PAVLN_DIV_CD = '08'
	                                    AND     B.SETL_MEAN_CD IN ('05', '06', '04', '02', '03','20','13','01','07','21','22','23','24','25','26','27') 
	                                    AND     NVL(A.GOODS_CANCEL_YN, 'N') = 'N' 
	                                    AND     NVL(A.EXTRA_GOODS_YN, 'N') <> 'Y' 
	                                    GROUP BY A.ORDER_ID,  B.SETL_MEAN_CD, B.PO_FNC_YN, B.APPR_DATE
	                                  ) A
	                                ) 
	                                WHERE  FEE_AMOUNT <> FEE_AMOUNT_RIGHT
	                                AND    FEE_AMOUNT < FEE_AMOUNT_RIGHT
                                )
                                GROUP BY ORDER_ID
                              )    
		]]>
	</update>
	
	<update id="retrnAmtConfirmB2B" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE  OD_ONLINE_EX_PRICE
        SET 	REF_PRICE = PRE_REF_PRICE
        WHERE 	ORDER_ITM_ID IN (
        						SELECT 	B.ORDER_ITM_ID 
        						FROM  OD_ORDER_MAST A, OD_ORDER_ITM B 
        						WHERE A.ORDER_ID = B.ORDER_ID
        						AND   A.APPR_DATE BETWEEN TO_DATE(#adjStartDay#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999 
        						AND   B.PAVLN_DIV_CD = '08'
        						AND   B.GOODS_CANCEL_YN = 'Y'
        						AND   B.ORDER_DTAIL_STUS_CD = 'C08'
        )
        AND NVL(REF_PRICE,0) = 0
        ]]>
	</update>
	
	<insert id="settleThisAdjustB2B" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO ST_B2B_HISTORY_ADJUST
			(
			CONFIRM_DAY, 
			START_DAY, 
			END_DAY, 
			TRANS_DAY, 
			SUPP_ADJ_YN
			)
        VALUES
        	(
		     TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
		     TO_CHAR(TO_DATE(#adjStartDay#, 'YYYYMMDD'), 'YYYY/MM/DD'),
		     TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD'),
		     NULL, 
		     NULL
        	)
    	]]>
	</insert>
	
	<!-- 정산주기에 대한 정산확정 취소대상 검색 -->
	<select id="selectRollbackAdjustCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT 	COUNT(*) 
		FROM   	ST_HISTORY_ADJUST
		WHERE 	END_DAY = TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD')
        AND 	NVL(SUPP_ADJ_YN, 'B') NOT IN('Y', 'C')
		]]>
	</select>
	
	<select id="selectRollbackAdjustCntB2B" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT 	COUNT(*) 
		FROM   	ST_B2B_HISTORY_ADJUST
		WHERE 	END_DAY = TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD')
        AND 	NVL(SUPP_ADJ_YN, 'B') NOT IN('Y', 'C')
		]]>
	</select>
	
	<!-- 정산주기에 대한 정산확정 취소 -->
	<update id="rollbackAdjust" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	ST_HISTORY_ADJUST 
        SET 	SUPP_ADJ_YN = 'C' 
        WHERE 	END_DAY = TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD')
        AND 	NVL(SUPP_ADJ_YN, 'B') NOT IN('Y', 'C')
		]]>
	</update>
	
	<update id="rollbackAdjustB2B" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	ST_B2B_HISTORY_ADJUST 
        SET 	SUPP_ADJ_YN = 'C' 
        WHERE 	END_DAY = TO_CHAR(TO_DATE(#endDate#, 'YYYYMMDD'), 'YYYY/MM/DD')
        AND 	NVL(SUPP_ADJ_YN, 'B') NOT IN('Y', 'C')
		]]>
	</update>
	
	<!-- 정산관리 정산손실액 조회 -->
	<select id="selectAdjLossList" parameterClass ="java.util.HashMap" resultClass="commMap">
		 SELECT * 
		 FROM(
        		SELECT 	A.COMPLETE_DATE SELLRECEVYMD,
               			'' SELLRECEVNO,
		               	A.SUPP_COMP_ID SUPPCOMPCD,
		               	(SELECT E.BCNC_NM FROM CO_SUPP_COMP_MAST E WHERE E.SUPP_COMP_ID = A.SUPP_COMP_ID) SUPPCOMPNM,
		               	A.SUPP_PO_REGI_PO_CD SUPPPOREGIPOCD, (SELECT F.PONM FROM PICMT0060 F WHERE F.REGIPOCD=A.SUPP_PO_REGI_PO_CD AND USEYN='Y') SUPPPOREGIPONM ,
		               	SUM(A.RET_CNT) TOTGOODSCNT,
		               	SUM(A.RET_AMOUNT) GOODSPRC,
		               	0 REFUNDRETRNGDTOTCNT,
		               	SUM(REFUND_GOODS_AMT) REFUNDRETRNGDAMT,
		               	SUM(REFUND_CARD_SETL_FEE) CARD_LOSSFEE,
		               	SUM(REFUND_CSF_FEE) LOSSFEE,
		               	' ' PAYMETHOD,
		               	' ' PAYMETHODNM
          		FROM 	ST_ADJ_GOODS A
          		WHERE 	A.COMPLETE_DATE BETWEEN #searchFromDt# AND #searchToDt#
            	AND 	A.GOODS_CANCEL_YN='N'
            	AND 	(A.REFUND_CARD_SETL_FEE>0 or REFUND_CSF_FEE >0)
            	AND     A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') 
        		GROUP BY  A.COMPLETE_DATE, A.SUPP_COMP_ID , A.SUPP_PO_REGI_PO_CD
        		ORDER BY  A.COMPLETE_DATE, A.SUPP_COMP_ID , A.SUPP_PO_REGI_PO_CD 
        )
        UNION ALL
        SELECT 	'합계' SELLRECEVYMD,
               	'' SELLRECEVNO,
               	'' SUPPCOMPCD,
               	'' SUPPCOMPNM, 
               	'' SUPPPOREGIPOCD,
               	'' SUPPPOREGIPONM ,
               	NVL(SUM(A.RET_CNT),0) TOTGOODSCNT,
                NVL(SUM(A.RET_AMOUNT),0) GOODSPRC,
                0 REFUNDRETRNGDTOTCNT,
                NVL(SUM(REFUND_GOODS_AMT),0) REFUNDRETRNGDAMT,
                NVL(SUM(REFUND_CARD_SETL_FEE),0) CARD_LOSSFEE,
                NVL(SUM(REFUND_CSF_FEE),0) LOSSFEE,
               	' ' PAYMETHOD,
               	' ' PAYMETHODNM
        FROM 	ST_ADJ_GOODS A
        WHERE 	A.COMPLETE_DATE BETWEEN #searchFromDt# AND #searchToDt#
        AND 	A.GOODS_CANCEL_YN='N'
        AND 	(A.REFUND_CARD_SETL_FEE>0 or REFUND_CSF_FEE >0)
        AND     A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99')
	</select>		
	
	<!-- 정산관리 정산손실액 조회 (결제일자별 업체정산) 건수-->
	<select id="selectAdjSuppCompTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT   COUNT(SUPP_COMP_CD)
		FROM (
		]]>
			SELECT 	1
                 		, A.SUPP_COMP_ID AS SUPP_COMP_CD
                 		, B.BCNC_NM AS SUPP_COMP_NM
                 		, COMPLETE_DATE
                 		, SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode(A.PAVLN_DIV_CD, '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                             	ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                        		END ) AS SUPP_ADJ_AMOUNT 
                 		, SUM(GOODS_CNT) AS GOODS_CNT
                 		, SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                 		, SUM(RET_CNT) AS RET_CNT
                 		, SUM(RET_AMOUNT) AS RET_AMOUNT
                 		, SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                 		, SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                 		, SUM(DEFICIT_CNT) AS DEFICIT_CNT
                 		, SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                 		, SUM(AMOUNT_CASH) AS AMOUNT_CASH
                 		, SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                 		, SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                 		, SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                 		, SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                 		, SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                 		, SUM(AMOUNT_SP) AS AMOUNT_SP
                 		, SUM(AMOUNT_RM) AS AMOUNT_RM
                 		, SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                 		, SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                 		, SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK
                 		, SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                 		, SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                 		, SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                 		, SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                 		, SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                 		, SUM(FEE_AMOUNT) AS FEE_AMOUNT
                 		, SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                 		, SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                 		, SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                 		, SUM(PO_FEE) AS PO_FEE
                 		, SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                 		, SUM(MART_FEE) AS MART_FEE
                 		, SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(A.AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                 		, SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                 		, ( SELECT MIN(TRANSF_REQ_YMD) AS TRANSF_REQ_YMD
                     		FROM ST_SUPP_POREGI_TRF_AMT T
                     		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                       		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                       		AND T.END_ADJ_PERIOD_YMD = #endDate#
                       		AND T.TRANSF_DATA_DIV_CD IN ('01')
                       		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
                   			) AS TRANSF_REQ_YMD
                 		, ( SELECT SUM(TRANSF_AMT) AS TRANSF_AMT
                     		FROM ST_SUPP_POREGI_TRF_AMT T
                     		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                       		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                       		AND T.END_ADJ_PERIOD_YMD = #endDate#
                       		AND T.TRANSF_DATA_DIV_CD IN ('01')
                       		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
                   			) AS TRANSF_AMT
                 		, SUM(A.AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                 		, SUM(A.AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                 		, SUM(A.REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                 		, SUM(A.REFUND_CSF_FEE) AS REFUND_CSF_FEE
                 		, SUM(A.AMOUNT_KAKAO) AMOUNT_KAKAO
                 		, SUM(A.AMOUNT_MOBILE) AMOUNT_MOBILE 
                 		, SUM(NVL(A.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                 		, SUM(NVL(A.AMOUNT_OTHER_BANKTOWN,0)) AMOUNT_OTHER_BANKTOWN
						, SUM(NVL(A.AMOUNT_POSTMPAY,0)) AMOUNT_POSTMPAY
						, SUM(NVL(A.AMOUNT_SYRUP_PAY,0)) AMOUNT_SYRUP_PAY
						, SUM(NVL(A.AMOUNT_NAVER_PAY,0)) AMOUNT_NAVER_PAY
						, SUM(NVL(A.AMOUNT_PAYNOW,0)) AMOUNT_PAYNOW
						, SUM(NVL(A.AMOUNT_PAYCO,0)) AMOUNT_PAYCO
						, SUM(NVL(A.AMOUNT_BANK_KAKAO,0)) AMOUNT_BANK_KAKAO
						, SUM(NVL(A.AMOUNT_RPAY,0)) AMOUNT_RPAY
						, SUM(NVL(A.AMOUNT_PAYPAL,0)) AMOUNT_PAYPAL
						, SUM(NVL(A.AMOUNT_ONURI,0)) AMOUNT_ONURI
						, SUM(NVL(A.AMOUNT_WALLET,0)) AMOUNT_WALLET
						, SUM(NVL(A.AMOUNT_SPCSAL,0)) AMOUNT_SPCSAL
 			FROM 		ST_ADJ_GOODS A, CO_SUPP_COMP_MAST B
            WHERE 		1 = 1
            AND 		A.SUPP_COMP_ID = B.SUPP_COMP_ID
            AND 		A.GOODS_CANCEL_YN = 'N'
            AND 		COMPLETE_DATE BETWEEN #startDate# AND #endDate#
            <isEqual property="recvShop" compareValue="ALL">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
		    </isEqual>
            <isEqual property="recvShop" compareValue="01">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
		    </isEqual>
            <isEqual property="recvShop" compareValue="04">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
		    </isEqual>
		    <isEqual property="recvShop" compareValue="02">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="03">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','09') ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="05">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="08">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="EP">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="EN">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
		  	</isEqual>
		   <isEqual property="recvShop" compareValue="EA">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
		  	</isEqual>
            <isNotEmpty property="suppCompId">
				<![CDATA[	AND 	A.SUPP_COMP_ID = #suppCompId#]]>
			</isNotEmpty>
			<isNotEmpty property="searchRcode">
				<![CDATA[	AND A.SUPP_PO_REGI_PO_CD = #searchRcode#]]>
			</isNotEmpty>
            GROUP BY A.SUPP_COMP_ID, B.BCNC_NM, COMPLETE_DATE
            ORDER BY A.SUPP_COMP_ID, COMPLETE_DATE
		) A
	</select>
	
	<!-- 정산관리 정산손실액 조회 (결제일자별 업체정산)-->
	<select id="selectAdjSuppCompList" parameterClass ="java.util.HashMap" resultClass="commMap">
		 <include refid="pagingHeader"/>
		 SELECT 	1
            		, A.SUPP_COMP_ID AS SUPP_COMP_CD
            		, B.BCNC_NM AS SUPP_COMP_NM
            		, COMPLETE_DATE
            		, SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode(A.PAVLN_DIV_CD, '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                         	ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    		END ) AS SUPP_ADJ_AMOUNT 
             		, SUM(GOODS_CNT) AS GOODS_CNT
             		, SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
             		, SUM(RET_CNT) AS RET_CNT
             		, SUM(RET_AMOUNT) AS RET_AMOUNT
             		, SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
             		, SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
             		, SUM(DEFICIT_CNT) AS DEFICIT_CNT
             		, SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
             		, SUM(AMOUNT_CASH) AS AMOUNT_CASH
             		, SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
             		, SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
             		, SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
             		, SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
             		, SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
             		, SUM(AMOUNT_SP) AS AMOUNT_SP
             		, SUM(AMOUNT_RM) AS AMOUNT_RM
             		, SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
             		, SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
             		, SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK
             		, SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
             		, SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
             		, SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
             		, SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
             		, SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
             		, SUM(FEE_AMOUNT) AS FEE_AMOUNT
             		, SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
             		, SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
             		, SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
             		, SUM(PO_FEE) AS PO_FEE
             		, SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
             		, SUM(MART_FEE) AS MART_FEE
             		, SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(A.AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
             		, SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
             		, ( SELECT MIN(TRANSF_REQ_YMD) AS TRANSF_REQ_YMD
                 		FROM ST_SUPP_POREGI_TRF_AMT T
                 		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                   		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                   		AND T.END_ADJ_PERIOD_YMD = #endDate#
                   		AND T.TRANSF_DATA_DIV_CD IN ('01')
                   		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
               			) AS TRANSF_REQ_YMD
             		, ( SELECT SUM(TRANSF_AMT) AS TRANSF_AMT
                 		FROM ST_SUPP_POREGI_TRF_AMT T
                 		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                   		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                   		AND T.END_ADJ_PERIOD_YMD = #endDate#
                   		AND T.TRANSF_DATA_DIV_CD IN ('01')
                   		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
               			) AS TRANSF_AMT
             		, SUM(A.AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
             		, SUM(A.AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
             		, SUM(A.REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
             		, SUM(A.REFUND_CSF_FEE) AS REFUND_CSF_FEE
             		, SUM(A.AMOUNT_KAKAO) AMOUNT_KAKAO
             		, SUM(A.AMOUNT_MOBILE) AMOUNT_MOBILE 
             		, SUM(NVL(A.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
             		, SUM(NVL(A.AMOUNT_OTHER_BANKTOWN,0)) AMOUNT_OTHER_BANKTOWN
					, SUM(NVL(A.AMOUNT_POSTMPAY,0)) AMOUNT_POSTMPAY
					, SUM(NVL(A.AMOUNT_SYRUP_PAY,0)) AMOUNT_SYRUP_PAY
					, SUM(NVL(A.AMOUNT_NAVER_PAY,0)) AMOUNT_NAVER_PAY
					, SUM(NVL(A.AMOUNT_PAYNOW,0)) AMOUNT_PAYNOW
					, SUM(NVL(A.AMOUNT_PAYCO,0)) AMOUNT_PAYCO
					, SUM(NVL(A.AMOUNT_BANK_KAKAO,0)) AMOUNT_BANK_KAKAO
					, SUM(NVL(A.AMOUNT_RPAY,0)) AMOUNT_RPAY
					, SUM(NVL(A.AMOUNT_PAYPAL,0)) AMOUNT_PAYPAL
					, SUM(NVL(A.AMOUNT_ONURI,0)) AMOUNT_ONURI
					, SUM(NVL(A.KAKAO_WICKET_SETL_AMT,0)) AS AMOUNT_KAKAO_POSTNET
					, SUM(NVL(A.AMOUNT_WALLET,0)) AMOUNT_WALLET
					, SUM(NVL(A.AMOUNT_SPCSAL,0)) AMOUNT_SPCSAL
		FROM 		ST_ADJ_GOODS A, CO_SUPP_COMP_MAST B
        WHERE 		1 = 1
        AND 		A.SUPP_COMP_ID = B.SUPP_COMP_ID
        AND 		A.GOODS_CANCEL_YN = 'N'
        AND 		COMPLETE_DATE BETWEEN #startDate# AND #endDate#
        <isEqual property="recvShop" compareValue="ALL">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="01">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="04">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
	    </isEqual>
	    <isEqual property="recvShop" compareValue="02">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="03">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','09') ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="05">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="08">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EP">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EN">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EA">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
	  	</isEqual>
        <isNotEmpty property="suppCompId">
		<![CDATA[	AND 	A.SUPP_COMP_ID = #suppCompId#]]>
		</isNotEmpty>
		<isNotEmpty property="searchRcode">
			<![CDATA[	AND A.SUPP_PO_REGI_PO_CD = #searchRcode#]]>
		</isNotEmpty>
         GROUP BY A.SUPP_COMP_ID, B.BCNC_NM, COMPLETE_DATE
         ORDER BY A.SUPP_COMP_ID, COMPLETE_DATE
		<include refid="pagingFooter"/>
	</select>
	
	<select id="selectAdjSuppCompTotalData" parameterClass ="java.util.HashMap" resultClass="commMap">
        SELECT 	1
             	,'' AS SUPP_COMP_CD
             	,'합계' AS SUPP_COMP_NM
             	,'' AS COMPLETE_DATE
             	, SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode(A.PAVLN_DIV_CD, '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                        ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    	END ) AS SUPP_ADJ_AMOUNT 
             	, SUM(GOODS_CNT) AS GOODS_CNT
             	, SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
             	, SUM(RET_CNT) AS RET_CNT
             	, SUM(RET_AMOUNT) AS RET_AMOUNT
             	, SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
             	, SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
             	, SUM(DEFICIT_CNT) AS DEFICIT_CNT
             	, SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
             	, SUM(AMOUNT_CASH) AS AMOUNT_CASH
             	, SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
             	, SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
             	, SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
             	, SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
             	, SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
             	, SUM(AMOUNT_SP) AS AMOUNT_SP
             	, SUM(AMOUNT_RM) AS AMOUNT_RM
             	, SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
             	, SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
             	, SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK
             	, SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
             	, SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
             	, SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
             	, SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
             	, SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
             	, SUM(FEE_AMOUNT) AS FEE_AMOUNT
             	, SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
             	, SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
             	, SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
             	, SUM(PO_FEE) AS PO_FEE
             	, SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
             	, SUM(MART_FEE) AS MART_FEE
             	, SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(A.AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
             	, SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
             	, '' AS TRANSF_REQ_YMD
             	, 0 AS TRANSF_AMT
             	, SUM(A.AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
             	, SUM(A.AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
             	, SUM(A.REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
             	, SUM(A.REFUND_CSF_FEE) AS REFUND_CSF_FEE
             	, SUM(A.AMOUNT_KAKAO) AMOUNT_KAKAO
             	, SUM(A.AMOUNT_MOBILE) AMOUNT_MOBILE 
             	, SUM(NVL(A.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
             	, SUM(NVL(A.AMOUNT_OTHER_BANKTOWN,0)) AMOUNT_OTHER_BANKTOWN
				, SUM(NVL(A.AMOUNT_POSTMPAY,0)) AMOUNT_POSTMPAY
				, SUM(NVL(A.AMOUNT_SYRUP_PAY,0)) AMOUNT_SYRUP_PAY
				, SUM(NVL(A.AMOUNT_NAVER_PAY,0)) AMOUNT_NAVER_PAY
				, SUM(NVL(A.AMOUNT_PAYNOW,0)) AMOUNT_PAYNOW
				, SUM(NVL(A.AMOUNT_PAYCO,0)) AMOUNT_PAYCO
				, SUM(NVL(A.AMOUNT_BANK_KAKAO,0)) AMOUNT_BANK_KAKAO
				, SUM(NVL(A.AMOUNT_RPAY,0)) AMOUNT_RPAY
				, SUM(NVL(A.AMOUNT_PAYPAL,0)) AMOUNT_PAYPAL
				, SUM(NVL(A.AMOUNT_ONURI,0)) AMOUNT_ONURI
				, SUM(NVL(A.KAKAO_WICKET_SETL_AMT,0)) AS AMOUNT_KAKAO_POSTNET
				, SUM(NVL(A.AMOUNT_WALLET,0)) AMOUNT_WALLET
				, SUM(NVL(A.AMOUNT_SPCSAL,0)) AMOUNT_SPCSAL
        FROM 	ST_ADJ_GOODS A, CO_SUPP_COMP_MAST B
        WHERE 	1=1
        AND 	A.SUPP_COMP_ID = B.SUPP_COMP_ID
        AND 	A.GOODS_CANCEL_YN = 'N'
        AND 	COMPLETE_DATE BETWEEN #startDate# AND #endDate#
        <isEqual property="recvShop" compareValue="ALL">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="01">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="04">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
	    </isEqual>
	    <isEqual property="recvShop" compareValue="02">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="03">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','09') ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="05">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="08">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EP">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EN">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EA">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
	  	</isEqual>
       	<isNotEmpty property="suppCompId">
			<![CDATA[	AND 	A.SUPP_COMP_ID = #suppCompId#]]>
		</isNotEmpty>
		<isNotEmpty property="searchRcode">
			<![CDATA[	AND A.SUPP_PO_REGI_PO_CD = #searchRcode#]]>
		</isNotEmpty>
	</select>
	
	<select id="selectAdjSuppCompExcelList" parameterClass ="java.util.HashMap" resultClass="commMap">
		 SELECT * 
		 FROM (
                SELECT 	1
                 		, A.SUPP_COMP_ID AS SUPP_COMP_CD
                 		, B.BCNC_NM AS SUPP_COMP_NM
                 		, COMPLETE_DATE
                 		, SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode(A.PAVLN_DIV_CD, '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                             	ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                        		END ) AS SUPP_ADJ_AMOUNT 
                 		, SUM(GOODS_CNT) AS GOODS_CNT
                 		, SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                 		, SUM(RET_CNT) AS RET_CNT
                 		, SUM(RET_AMOUNT) AS RET_AMOUNT
                 		, SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                 		, SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                 		, SUM(DEFICIT_CNT) AS DEFICIT_CNT
                 		, SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                 		, SUM(AMOUNT_CASH) AS AMOUNT_CASH
                 		, SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                 		, SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                 		, SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                 		, SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                 		, SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                 		, SUM(AMOUNT_SP) AS AMOUNT_SP
                 		, SUM(AMOUNT_RM) AS AMOUNT_RM
                 		, SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                 		, SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                 		, SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK
                 		, SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                 		, SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                 		, SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                 		, SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                 		, SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                 		, SUM(FEE_AMOUNT) AS FEE_AMOUNT
                 		, SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                 		, SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                 		, SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                 		, SUM(PO_FEE) AS PO_FEE
                 		, SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                 		, SUM(MART_FEE) AS MART_FEE
                 		, SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(A.AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                 		, SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                 		, ( SELECT MIN(TRANSF_REQ_YMD) AS TRANSF_REQ_YMD
                     		FROM ST_SUPP_POREGI_TRF_AMT T
                     		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                       		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                       		AND T.END_ADJ_PERIOD_YMD = #endDate#
                       		AND T.TRANSF_DATA_DIV_CD IN ('01')
                       		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
                   			) AS TRANSF_REQ_YMD
                 		, ( SELECT SUM(TRANSF_AMT) AS TRANSF_AMT
                     		FROM ST_SUPP_POREGI_TRF_AMT T
                     		WHERE T.TRANSF_RSLT_PFNC_CD = '01'
                       		AND T.STRT_ADJ_PERIOD_YMD = #startDate#
                       		AND T.END_ADJ_PERIOD_YMD = #endDate#
                       		AND T.TRANSF_DATA_DIV_CD IN ('01')
                       		AND T.SUPP_COMP_CD = A.SUPP_COMP_ID
                   			) AS TRANSF_AMT
                 		, SUM(A.AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                 		, SUM(A.AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                 		, SUM(A.REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                 		, SUM(A.REFUND_CSF_FEE) AS REFUND_CSF_FEE
                 		, SUM(A.AMOUNT_KAKAO) AMOUNT_KAKAO
                 		, SUM(A.AMOUNT_MOBILE) AMOUNT_MOBILE 
                 		, SUM(NVL(A.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                 		, SUM(NVL(A.AMOUNT_OTHER_BANKTOWN,0)) AMOUNT_OTHER_BANKTOWN
						, SUM(NVL(A.AMOUNT_POSTMPAY,0)) AMOUNT_POSTMPAY
						, SUM(NVL(A.AMOUNT_SYRUP_PAY,0)) AMOUNT_SYRUP_PAY
						, SUM(NVL(A.AMOUNT_NAVER_PAY,0)) AMOUNT_NAVER_PAY
						, SUM(NVL(A.AMOUNT_PAYNOW,0)) AMOUNT_PAYNOW
						, SUM(NVL(A.AMOUNT_PAYCO,0)) AMOUNT_PAYCO
						, SUM(NVL(A.AMOUNT_BANK_KAKAO,0)) AMOUNT_BANK_KAKAO
						, SUM(NVL(A.AMOUNT_RPAY,0)) AMOUNT_RPAY
						, SUM(NVL(A.AMOUNT_PAYPAL,0)) AMOUNT_PAYPAL
						, SUM(NVL(A.AMOUNT_ONURI,0)) AMOUNT_ONURI
						, SUM(NVL(A.KAKAO_WICKET_SETL_AMT,0)) AS AMOUNT_KAKAO_POSTNET
						, SUM(NVL(A.AMOUNT_WALLET,0)) AMOUNT_WALLET
						, SUM(NVL(A.AMOUNT_SPCSAL,0)) AMOUNT_SPCSAL
 			FROM 		ST_ADJ_GOODS A, CO_SUPP_COMP_MAST B
            WHERE 		1 = 1
            AND 		A.SUPP_COMP_ID = B.SUPP_COMP_ID
            AND 	    A.GOODS_CANCEL_YN = 'N'
            AND 		COMPLETE_DATE BETWEEN #startDate# AND #endDate#
            <isEqual property="recvShop" compareValue="ALL">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
		    </isEqual>
	           <isEqual property="recvShop" compareValue="01">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
		    </isEqual>
	           <isEqual property="recvShop" compareValue="04">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
		    </isEqual>
		    <isEqual property="recvShop" compareValue="02">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="03">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','09') ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="05">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="08">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="EP">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="EN">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
		  	</isEqual>
		  	<isEqual property="recvShop" compareValue="EA">
		  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
		  	</isEqual>
            <isNotEmpty property="suppCompId">
				<![CDATA[	AND 	A.SUPP_COMP_ID = #suppCompId#]]>
			</isNotEmpty>
			<isNotEmpty property="searchRcode">
				<![CDATA[	AND A.SUPP_PO_REGI_PO_CD = #searchRcode#]]>
			</isNotEmpty>
            GROUP BY A.SUPP_COMP_ID, B.BCNC_NM, COMPLETE_DATE
            ORDER BY A.SUPP_COMP_ID, COMPLETE_DATE
        )
        UNION ALL
        SELECT 	1
             	,'' AS SUPP_COMP_CD
             	,'합계' AS SUPP_COMP_NM
             	,'' AS COMPLETE_DATE
             	, SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode(A.PAVLN_DIV_CD, '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                        ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    	END ) AS SUPP_ADJ_AMOUNT 
             	, SUM(GOODS_CNT) AS GOODS_CNT
             	, SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
             	, SUM(RET_CNT) AS RET_CNT
             	, SUM(RET_AMOUNT) AS RET_AMOUNT
             	, SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
             	, SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
             	, SUM(DEFICIT_CNT) AS DEFICIT_CNT
             	, SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
             	, SUM(AMOUNT_CASH) AS AMOUNT_CASH
             	, SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
             	, SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
             	, SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
             	, SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
             	, SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
             	, SUM(AMOUNT_SP) AS AMOUNT_SP
             	, SUM(AMOUNT_RM) AS AMOUNT_RM
             	, SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
             	, SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
             	, SUM(NVL(AMOUNT_COUPON_THANK,0)) AS AMOUNT_COUPON_THANK
             	, SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
             	, SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
             	, SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
             	, SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
             	, SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
             	, SUM(FEE_AMOUNT) AS FEE_AMOUNT
             	, SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
             	, SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
             	, SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
             	, SUM(PO_FEE) AS PO_FEE
             	, SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
             	, SUM(MART_FEE) AS MART_FEE
             	, SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(A.AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
             	, SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
             	, '' AS TRANSF_REQ_YMD
             	, 0 AS TRANSF_AMT
             	, SUM(A.AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
             	, SUM(A.AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
             	, SUM(A.REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
             	, SUM(A.REFUND_CSF_FEE) AS REFUND_CSF_FEE
             	, SUM(A.AMOUNT_KAKAO) AMOUNT_KAKAO
             	, SUM(A.AMOUNT_MOBILE) AMOUNT_MOBILE 
             	, SUM(NVL(A.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
             	, SUM(NVL(A.AMOUNT_OTHER_BANKTOWN,0)) AMOUNT_OTHER_BANKTOWN
				, SUM(NVL(A.AMOUNT_POSTMPAY,0)) AMOUNT_POSTMPAY
				, SUM(NVL(A.AMOUNT_SYRUP_PAY,0)) AMOUNT_SYRUP_PAY
				, SUM(NVL(A.AMOUNT_NAVER_PAY,0)) AMOUNT_NAVER_PAY
				, SUM(NVL(A.AMOUNT_PAYNOW,0)) AMOUNT_PAYNOW
				, SUM(NVL(A.AMOUNT_PAYCO,0)) AMOUNT_PAYCO
				, SUM(NVL(A.AMOUNT_BANK_KAKAO,0)) AMOUNT_BANK_KAKAO
				, SUM(NVL(A.AMOUNT_RPAY,0)) AMOUNT_RPAY
				, SUM(NVL(A.AMOUNT_PAYPAL,0)) AMOUNT_PAYPAL
				, SUM(NVL(A.AMOUNT_ONURI,0)) AMOUNT_ONURI
				, SUM(NVL(A.KAKAO_WICKET_SETL_AMT,0)) AS AMOUNT_KAKAO_POSTNET
				, SUM(NVL(A.AMOUNT_WALLET,0)) AMOUNT_WALLET
				, SUM(NVL(A.AMOUNT_SPCSAL,0)) AMOUNT_SPCSAL
        FROM 	ST_ADJ_GOODS A, CO_SUPP_COMP_MAST B
        WHERE 	1=1
        AND 	A.SUPP_COMP_ID = B.SUPP_COMP_ID
        AND 	A.GOODS_CANCEL_YN = 'N'
        AND 	COMPLETE_DATE BETWEEN #startDate# AND #endDate#
        <isEqual property="recvShop" compareValue="ALL">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="01">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','07') ]]>
	    </isEqual>
           <isEqual property="recvShop" compareValue="04">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '04' ]]>
	    </isEqual>
	    <isEqual property="recvShop" compareValue="02">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '02' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="03">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','09') ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="05">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '05' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="08">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD = '08' ]]>
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EP">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EN">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
	  	</isEqual>
	  	<isEqual property="recvShop" compareValue="EA">
	  		<![CDATA[ AND   A.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
	  	</isEqual>
       	<isNotEmpty property="suppCompId">
			<![CDATA[	AND 	A.SUPP_COMP_ID = #suppCompId#]]>
		</isNotEmpty>
		<isNotEmpty property="searchRcode">
			<![CDATA[	AND A.SUPP_PO_REGI_PO_CD = #searchRcode#]]>
		</isNotEmpty>
	</select>
	
	<select id="selectAdjSuppCompDetailTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(SUPP_COMP_CD)
		FROM (
		SELECT * 
        FROM (
         	SELECT  1
                  , SUPP_COMP_CD
                  , BIZ_NAME AS SUPP_COMP_NM
                  , COMPLETE_DATE
                  , PURCHASE_ID
                  , RECEV_PO_REGIPONM
                  , STATUS_NM
                  , GOODS_NAME
                  , GOODS_CODE                  
         FROM
         (    
                 SELECT    /*+ LEADING(P A) USE_HASH(P A) USE_NL(A I) */   1                     
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                          , A.ORDER_ID AS PURCHASE_ID
                          , P.PONM AS RECEV_PO_REGIPONM
                          
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME                         
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                   AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND   I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT  /*+ LEADING(A) USE_NL(A I B P SC) */   1                     
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                       , B.BCNC_NM AS BIZ_NAME
                      , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM                      
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                       , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME                      
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_CHAR(APPR_DATE, 'YYYYMMDD')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT     1                     
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , C.CLAIM_CONF_YMD AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     ((C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09')))
                   AND     C.TREAT_STUS_CD <![CDATA[<>]]> '004'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                   <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				   </isNotEmpty>
				   <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				   </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , CLAIM_CONF_YMD
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
        )A
        GROUP BY SUPP_COMP_CD
               , BIZ_NAME
               , COMPLETE_DATE
               , PURCHASE_ID
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME
               , GOODS_CODE 
               )
        ) T
	</select>
	
	
	<!-- 정산관리 정산손실액 조회 (결제일자별 업체정산상세)-->
	<select id="selectAdjSuppCompDetailList" parameterClass ="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT * 
        FROM (
         	SELECT  1
                  , SUPP_COMP_CD
                  , BIZ_NAME AS SUPP_COMP_NM
                  , COMPLETE_DATE
                  , PURCHASE_ID
                  , RECEV_PO_REGIPONM
                  , STATUS_NM
                  , GOODS_NAME
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                       ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    END ) AS SUPP_ADJ_AMOUNT 
                  , SUM(GOODS_CNT) AS GOODS_CNT
                  , SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                  , SUM(RET_CNT) AS RET_CNT
                  , SUM(RET_AMOUNT) AS RET_AMOUNT
                  , SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                  , SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                  , SUM(DEFICIT_CNT) AS DEFICIT_CNT
                  , SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                  , SUM(AMOUNT_CASH) AS AMOUNT_CASH
                  , SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                  , SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                  , SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                  , SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                  , SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                  , SUM(AMOUNT_OTHER_BANKTOWN) AS AMOUNT_OTHER_BANKTOWN
                  , SUM(AMOUNT_SP) AS AMOUNT_SP
                  , SUM(AMOUNT_RM) AS AMOUNT_RM
                  , SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                  , SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                  , SUM(AMOUNT_COUPON_THANK) AS AMOUNT_COUPON_THANK
                  , SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                  , SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                  , SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                  , SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                  , SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN DECODE((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT )
                              ELSE FEE_AMOUNT
                         END ) AS FEE_AMOUNT 
                  , SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                  , SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                  , SUM(NVL(LATER_PRCL_SALE_PRC,0)) AS LATER_PRCL_SALE_PRC
                  , SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                  , SUM(PO_FEE) AS PO_FEE
                  , SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                  , SUM(MART_FEE) AS MART_FEE
                  , SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                  , SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                  , SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                  , SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                  , SUM(REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                  , SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE
                  , SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO
                  , SUM(AMOUNT_MOBILE) AS AMOUNT_MOBILE
				  , SUM(AMOUNT_POSTMPAY) AMOUNT_POSTMPAY
				  , SUM(AMOUNT_SYRUP_PAY) AMOUNT_SYRUP_PAY
				  , SUM(AMOUNT_NAVER_PAY) AMOUNT_NAVER_PAY
				  , SUM(AMOUNT_PAYNOW) AMOUNT_PAYNOW
				  , SUM(AMOUNT_PAYCO) AMOUNT_PAYCO
				  , SUM(AMOUNT_BANK_KAKAO) AMOUNT_BANK_KAKAO
				  , SUM(AMOUNT_RPAY) AMOUNT_RPAY
				  , SUM(AMOUNT_PAYPAL) AMOUNT_PAYPAL
				  , SUM(AMOUNT_ONURI) AMOUNT_ONURI
				  , SUM(AMOUNT_KAKAO_POSTNET) AS AMOUNT_KAKAO_POSTNET
				  , SUM(AMOUNT_WALLET) AMOUNT_WALLET
				  , SUM(AMOUNT_SPCSAL) AMOUNT_SPCSAL
         FROM
         (    
                 SELECT    /*+ LEADING(P A) USE_HASH(P A) USE_NL(A I) */   1
                          , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                          , A.ORDER_ID AS PURCHASE_ID
                          , P.PONM AS RECEV_PO_REGIPONM
                          , I.ORDER_STUS_CD AS CANCEL_YN
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                          , SUM(NVL(I.DC_APPLY_PRC,0) + NVL(I.OPTN_GOODS_APPLY_PRC,0)+ NVL(I.SEND_PRC,0)+NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)+NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS SETTLE_AMOUNT
                          , SUM(NVL((SELECT FEE_AMT FROM OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS FEE_AMOUNT 
                          , SUM(DECODE( A.SETL_MEAN_CD,'15', I.CASH_BILL_AMT, '17', I.CASH_BILL_AMT, 0)) AMOUNT_CASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'01',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_ACCOUNT
                          , SUM(DECODE( A.SETL_MEAN_CD,'05',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                          '16',DECODE(A.PO_FNC_YN,'P',NVL(C.TRANS_AMT,0),0),0)) AS AMOUNT_BANKTOWN
						  ,	SUM(DECODE( A.SETL_MEAN_CD,'06',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
		                                                   '16',DECODE(A.PO_FNC_YN,'P',0,NVL(C.TRANS_AMT,0)) ,0)) AS AMOUNT_OTHER_BANKTOWN
                          , SUM(DECODE( A.SETL_MEAN_CD,'04',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), '17', (I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0) - NVL(I.CASH_BILL_AMT,0), 0)) AS AMOUNT_CARD_POSTNET
                          , SUM(DECODE( A.SETL_MEAN_CD,'02',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
                                                          '16',NVL(C.CARD_AMT1,0)+NVL(C.CARD_AMT2,0),0)) AMOUNT_CARD_EPOST
                          , SUM(DECODE( A.SETL_MEAN_CD,'03',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_CARD_OVERSEA
                          , SUM(NVL(I.PREMI_CUST_PNT_SETL_AMT,0)) AMOUNT_SP
                          , SUM(NVL(I.PNT_USE_AMT,0)) AMOUNT_RM
                          , SUM(DECODE(I.CP_CMP_CD1,'1',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'1',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_CSF
                          , SUM(DECODE(I.CP_CMP_CD1,'2',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'2',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_BIZ
                          , SUM(DECODE(I.CP_CMP_CD1,'3',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'3',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_THANK
                          , SUM(NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT_OKCASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'28',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_MULTIGIFT
                          , SUM(DECODE( A.SETL_MEAN_CD,'12',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_CYBERPASS
                          , SUM(1) GOODS_CNT
                          , SUM(NVL(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0),0)) GOODS_AMOUNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 1 ELSE 0 END) RET_CNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) RET_AMOUNT
                          , 0 AS DELIV_DONE_CANCEL_CNT
                          , 0 AS DELIV_DONE_CANCEL_AMOUNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN 1 ELSE 0 END) DEFICIT_CNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) DEFICIT_AMOUNT
                          , SUM(NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) DELIV_CERT_AMOUNT
                          , SUM(NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) CONG_CARD_AMOUNT
                          , SUM(NVL(I.IMMPMN_PRCL_AMT,0)) IMMEDIATE_PRCL_PRC
                          , SUM(NVL(I.AFTPMN_PRCL_AMT,0)) LATER_PRCL_PRC
                          , SUM(NVL(I.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y' THEN 0 ELSE NVL((SELECT POSA_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) END) CSF_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD != '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) PO_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD = '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) MART_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN (SELECT RETRNGD_CARD_REFUND_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID) ELSE 0 END) REFUND_CARD_SETL_FEE
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN NVL((SELECT DEFICIT_CARD_SETL_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) DEFICIT_CARD_SETL_FEE
                          , SUM(NVL((SELECT OUTSID_COPRTN_SHOPMALL_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID), 0)) AS AMOUNT_EXT_MALL_FEE
                          , 0 REFUND_GOODS_AMT
                          , 0 REFUND_CSF_FEE
                          , SUM(DECODE( A.SETL_MEAN_CD,'20',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO
                          , SUM(DECODE( A.SETL_MEAN_CD,'13',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_MOBILE
						  , SUM(DECODE( A.SETL_MEAN_CD,'21',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'22',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'23',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'24',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW
	                      , SUM(DECODE( A.SETL_MEAN_CD,'25',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'26',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'27',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'07',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL
	                      , SUM(DECODE( A.SETL_MEAN_CD,'08',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                               '16',NVL(C.ONNURI_AMT,0),0)) AMOUNT_ONURI
                          , SUM(DECODE( A.SETL_MEAN_CD,'29',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO_POSTNET
                          , SUM(NVL(I.WALLET_SETL_AMT, 0)) AMOUNT_WALLET
                          , SUM(DECODE( A.SETL_MEAN_CD,'11',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SPCSAL
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                   AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND   I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT  /*+ LEADING(A) USE_NL(A I B P SC) */   1
                      , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                       , B.BCNC_NM AS BIZ_NAME
                      , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                       , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , NVL(SUM(1), 0) AS DELIV_DONE_CANCEL_CNT
                      , SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)) AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , SUM(NVL(I.AFTPMN_PRCL_AMT, 0)) AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , 0 REFUND_GOODS_AMT
                      , 0 REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_CHAR(APPR_DATE, 'YYYYMMDD')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT      1
                      , I.SUPPO_RGIST_POCD AS SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , C.CLAIM_CONF_YMD AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , 0 AS DELIV_DONE_CANCEL_CNT
                      , 0 AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , 0 AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , SUM(NVL(CLAIM_TREAT_AMT, 0)) AS REFUND_GOODS_AMT
                      , SUM(NVL(REFUND_RETRNGD_CSF_FEE, 0)) AS REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     ((C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09')))
                   AND     C.TREAT_STUS_CD <![CDATA[<>]]> '004'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                   <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				   </isNotEmpty>
				   <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				   </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , CLAIM_CONF_YMD
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
        )A
        GROUP BY SUPP_COMP_CD
               , BIZ_NAME
               , COMPLETE_DATE
               , PURCHASE_ID
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME
               , GOODS_CODE 
        ORDER BY SUPP_COMP_CD
               , BIZ_NAME
               , COMPLETE_DATE
               , PURCHASE_ID
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME 
               , GOODS_CODE 
               )
        <include refid="pagingFooter"/>
	</select>
	
	<select id="selectAdjSuppCompDetailExcelList" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT * 
        FROM (
         	SELECT  1
                  , SUPP_COMP_CD
                  , BIZ_NAME AS SUPP_COMP_NM
                  , COMPLETE_DATE
                  , PURCHASE_ID
                  , RECEV_PO_REGIPONM
                  , STATUS_NM
                  , GOODS_NAME
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                       ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    END ) AS SUPP_ADJ_AMOUNT 
                  , SUM(GOODS_CNT) AS GOODS_CNT
                  , SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                  , SUM(RET_CNT) AS RET_CNT
                  , SUM(RET_AMOUNT) AS RET_AMOUNT
                  , SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                  , SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                  , SUM(DEFICIT_CNT) AS DEFICIT_CNT
                  , SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                  , SUM(AMOUNT_CASH) AS AMOUNT_CASH
                  , SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                  , SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                  , SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                  , SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                  , SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                  , SUM(AMOUNT_OTHER_BANKTOWN) AS AMOUNT_OTHER_BANKTOWN
                  , SUM(AMOUNT_SP) AS AMOUNT_SP
                  , SUM(AMOUNT_RM) AS AMOUNT_RM
                  , SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                  , SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                  , SUM(AMOUNT_COUPON_THANK) AS AMOUNT_COUPON_THANK
                  , SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                  , SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                  , SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                  , SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                  , SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN DECODE((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT )
                              ELSE FEE_AMOUNT
                         END ) AS FEE_AMOUNT 
                  , SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                  , SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                  , SUM(NVL(LATER_PRCL_SALE_PRC,0)) AS LATER_PRCL_SALE_PRC
                  , SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                  , SUM(PO_FEE) AS PO_FEE
                  , SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                  , SUM(MART_FEE) AS MART_FEE
                  , SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                  , SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                  , SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                  , SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                  , SUM(REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                  , SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE
                  , SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO
                  , SUM(AMOUNT_MOBILE) AS AMOUNT_MOBILE
				  , SUM(AMOUNT_POSTMPAY) AMOUNT_POSTMPAY
				  , SUM(AMOUNT_SYRUP_PAY) AMOUNT_SYRUP_PAY
				  , SUM(AMOUNT_NAVER_PAY) AMOUNT_NAVER_PAY
				  , SUM(AMOUNT_PAYNOW) AMOUNT_PAYNOW
				  , SUM(AMOUNT_PAYCO) AMOUNT_PAYCO
				  , SUM(AMOUNT_BANK_KAKAO) AMOUNT_BANK_KAKAO
				  , SUM(AMOUNT_RPAY) AMOUNT_RPAY
				  , SUM(AMOUNT_PAYPAL) AMOUNT_PAYPAL
				  , SUM(AMOUNT_ONURI) AMOUNT_ONURI
				  , SUM(AMOUNT_KAKAO_POSTNET) AS AMOUNT_KAKAO_POSTNET
				  , SUM(AMOUNT_WALLET) AMOUNT_WALLET
				  , SUM(AMOUNT_SPCSAL) AMOUNT_SPCSAL
         FROM
         (    
                 SELECT     /*+ LEADING(P A) USE_HASH(P A) USE_NL(A I) */  1
                          , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                          , A.ORDER_ID AS PURCHASE_ID
                          , P.PONM AS RECEV_PO_REGIPONM
                          , I.ORDER_STUS_CD AS CANCEL_YN
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                          , SUM(NVL(I.DC_APPLY_PRC,0) + NVL(I.OPTN_GOODS_APPLY_PRC,0)+ NVL(I.SEND_PRC,0)+NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)+NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS SETTLE_AMOUNT
                          , SUM(NVL((SELECT FEE_AMT FROM OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS FEE_AMOUNT 
                          , SUM(DECODE( A.SETL_MEAN_CD,'15', I.CASH_BILL_AMT, '17', I.CASH_BILL_AMT, 0)) AMOUNT_CASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'01',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_ACCOUNT
                          , SUM(DECODE( A.SETL_MEAN_CD,'05',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                          '16',DECODE(A.PO_FNC_YN,'P',NVL(C.TRANS_AMT,0),0),0)) AS AMOUNT_BANKTOWN
						  ,	SUM(DECODE( A.SETL_MEAN_CD,'06',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
		                                                   '16',DECODE(A.PO_FNC_YN,'P',0,NVL(C.TRANS_AMT,0)) ,0)) AS AMOUNT_OTHER_BANKTOWN
                          , SUM(DECODE( A.SETL_MEAN_CD,'04',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), '17', (I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0) - NVL(I.CASH_BILL_AMT,0), 0)) AS AMOUNT_CARD_POSTNET
                          , SUM(DECODE( A.SETL_MEAN_CD,'02',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
                                                          '16',NVL(C.CARD_AMT1,0)+NVL(C.CARD_AMT2,0),0)) AMOUNT_CARD_EPOST
                          , SUM(DECODE( A.SETL_MEAN_CD,'03',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_CARD_OVERSEA
                          , SUM(NVL(I.PREMI_CUST_PNT_SETL_AMT,0)) AMOUNT_SP
                          , SUM(NVL(I.PNT_USE_AMT,0)) AMOUNT_RM
                          , SUM(DECODE(I.CP_CMP_CD1,'1',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'1',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_CSF
                          , SUM(DECODE(I.CP_CMP_CD1,'2',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'2',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_BIZ
                          , SUM(DECODE(I.CP_CMP_CD1,'3',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'3',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_THANK
                          , SUM(NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT_OKCASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'28',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_MULTIGIFT
                          , SUM(DECODE( A.SETL_MEAN_CD,'12',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_CYBERPASS
                          , SUM(1) GOODS_CNT
                          , SUM(NVL(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0),0)) GOODS_AMOUNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 1 ELSE 0 END) RET_CNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) RET_AMOUNT
                          , 0 AS DELIV_DONE_CANCEL_CNT
                          , 0 AS DELIV_DONE_CANCEL_AMOUNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN 1 ELSE 0 END) DEFICIT_CNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) DEFICIT_AMOUNT
                          , SUM(NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) DELIV_CERT_AMOUNT
                          , SUM(NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) CONG_CARD_AMOUNT
                          , SUM(NVL(I.IMMPMN_PRCL_AMT,0)) IMMEDIATE_PRCL_PRC
                          , SUM(NVL(I.AFTPMN_PRCL_AMT,0)) LATER_PRCL_PRC
                          , SUM(NVL(I.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y' THEN 0 ELSE NVL((SELECT POSA_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) END) CSF_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD != '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) PO_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD = '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) MART_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN (SELECT RETRNGD_CARD_REFUND_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID) ELSE 0 END) REFUND_CARD_SETL_FEE
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN NVL((SELECT DEFICIT_CARD_SETL_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) DEFICIT_CARD_SETL_FEE
                          , SUM(NVL((SELECT OUTSID_COPRTN_SHOPMALL_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID), 0)) AS AMOUNT_EXT_MALL_FEE
                          , 0 REFUND_GOODS_AMT
                          , 0 REFUND_CSF_FEE
                          , SUM(DECODE( A.SETL_MEAN_CD,'20',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO
                          , SUM(DECODE( A.SETL_MEAN_CD,'13',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_MOBILE
						  , SUM(DECODE( A.SETL_MEAN_CD,'21',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'22',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'23',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'24',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW
	                      , SUM(DECODE( A.SETL_MEAN_CD,'25',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'26',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'27',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'07',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL
	                      , SUM(DECODE( A.SETL_MEAN_CD,'08',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                               '16',NVL(C.ONNURI_AMT,0),0)) AMOUNT_ONURI
                          , SUM(DECODE( A.SETL_MEAN_CD,'29',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO_POSTNET
                          , SUM(NVL(I.WALLET_SETL_AMT, 0)) AMOUNT_WALLET
                          , SUM(DECODE( A.SETL_MEAN_CD,'11',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SPCSAL
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                   AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND   I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT   /*+ LEADING(A) USE_NL(A I B P SC) */   1
                      , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                       , B.BCNC_NM AS BIZ_NAME
                      , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                       , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , NVL(SUM(1), 0) AS DELIV_DONE_CANCEL_CNT
                      , SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)) AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , SUM(NVL(I.AFTPMN_PRCL_AMT, 0)) AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , 0 REFUND_GOODS_AMT
                      , 0 REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_CHAR(APPR_DATE, 'YYYYMMDD')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT      1
                      , I.SUPPO_RGIST_POCD AS SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , C.CLAIM_CONF_YMD AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , 0 AS DELIV_DONE_CANCEL_CNT
                      , 0 AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , 0 AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , SUM(NVL(CLAIM_TREAT_AMT, 0)) AS REFUND_GOODS_AMT
                      , SUM(NVL(REFUND_RETRNGD_CSF_FEE, 0)) AS REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     ((C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09')))
                   AND     C.TREAT_STUS_CD <![CDATA[<>]]> '004'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                   <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				   </isNotEmpty>
				   <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				   </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , CLAIM_CONF_YMD
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
        )A
        GROUP BY SUPP_COMP_CD
               , BIZ_NAME
               , COMPLETE_DATE
               , PURCHASE_ID
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME
               , GOODS_CODE 
        ORDER BY SUPP_COMP_CD
               , BIZ_NAME
               , COMPLETE_DATE
               , PURCHASE_ID
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME 
               , GOODS_CODE 
               )
        UNION ALL
        SELECT     1
                 ,'' AS  SUPP_COMP_CD
                  , '합계' AS SUPP_COMP_NM
                  , '' AS COMPLETE_DATE
                  , '' AS PURCHASE_ID
                  , '' AS RECEV_PO_REGIPONM
                  , '' AS STATUS_NM
                  , '' AS GOODS_NAME
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                       ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    END ) AS SUPP_ADJ_AMOUNT 
                  , SUM(GOODS_CNT) AS GOODS_CNT
                  , SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                  , SUM(RET_CNT) AS RET_CNT
                  , SUM(RET_AMOUNT) AS RET_AMOUNT
                  , SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                  , SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                  , SUM(DEFICIT_CNT) AS DEFICIT_CNT
                  , SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                  , SUM(AMOUNT_CASH) AS AMOUNT_CASH
                  , SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                  , SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                  , SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                  , SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                  , SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                  , SUM(AMOUNT_OTHER_BANKTOWN) AS AMOUNT_OTHER_BANKTOWN
                  , SUM(AMOUNT_SP) AS AMOUNT_SP
                  , SUM(AMOUNT_RM) AS AMOUNT_RM
                  , SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                  , SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                  , SUM(AMOUNT_COUPON_THANK) AS AMOUNT_COUPON_THANK
                  , SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                  , SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                  , SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                  , SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                  , SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN DECODE((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT )
                              ELSE FEE_AMOUNT
                         END ) AS FEE_AMOUNT 
                  , SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                  , SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                  , SUM(NVL(LATER_PRCL_SALE_PRC,0)) AS LATER_PRCL_SALE_PRC
                  , SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                  , SUM(PO_FEE) AS PO_FEE
                  , SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                  , SUM(MART_FEE) AS MART_FEE
                  , SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                  , SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                  , SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                  , SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                  , SUM(REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                  , SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE
                  , SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO
                  , SUM(AMOUNT_MOBILE) AS AMOUNT_MOBILE
				  , SUM(AMOUNT_POSTMPAY) AMOUNT_POSTMPAY
				  , SUM(AMOUNT_SYRUP_PAY) AMOUNT_SYRUP_PAY
				  , SUM(AMOUNT_NAVER_PAY) AMOUNT_NAVER_PAY
				  , SUM(AMOUNT_PAYNOW) AMOUNT_PAYNOW
				  , SUM(AMOUNT_PAYCO) AMOUNT_PAYCO
				  , SUM(AMOUNT_BANK_KAKAO) AMOUNT_BANK_KAKAO
				  , SUM(AMOUNT_RPAY) AMOUNT_RPAY
				  , SUM(AMOUNT_PAYPAL) AMOUNT_PAYPAL
				  , SUM(AMOUNT_ONURI) AMOUNT_ONURI
				  , SUM(AMOUNT_KAKAO_POSTNET) AS AMOUNT_KAKAO_POSTNET
				  , SUM(AMOUNT_WALLET) AMOUNT_WALLET
				  , SUM(AMOUNT_SPCSAL) AMOUNT_SPCSAL
         FROM
         (    
                 SELECT    /*+ LEADING(P A) USE_HASH(P A) USE_NL(A I) */  1
                          , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                          , A.ORDER_ID AS PURCHASE_ID
                          , P.PONM AS RECEV_PO_REGIPONM
                          , I.ORDER_STUS_CD AS CANCEL_YN
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                          , SUM(NVL(I.DC_APPLY_PRC,0) + NVL(I.OPTN_GOODS_APPLY_PRC,0)+ NVL(I.SEND_PRC,0)+NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)+NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS SETTLE_AMOUNT
                          , SUM(NVL((SELECT FEE_AMT FROM OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS FEE_AMOUNT 
                          , SUM(DECODE( A.SETL_MEAN_CD,'15', I.CASH_BILL_AMT, '17', I.CASH_BILL_AMT, 0)) AMOUNT_CASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'01',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_ACCOUNT
                          , SUM(DECODE( A.SETL_MEAN_CD,'05',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                          '16',DECODE(A.PO_FNC_YN,'P',NVL(C.TRANS_AMT,0),0),0)) AS AMOUNT_BANKTOWN
						  ,	SUM(DECODE( A.SETL_MEAN_CD,'06',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
		                                                   '16',DECODE(A.PO_FNC_YN,'P',0,NVL(C.TRANS_AMT,0)) ,0)) AS AMOUNT_OTHER_BANKTOWN
                          , SUM(DECODE( A.SETL_MEAN_CD,'04',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), '17', (I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0) - NVL(I.CASH_BILL_AMT,0), 0)) AS AMOUNT_CARD_POSTNET
                          , SUM(DECODE( A.SETL_MEAN_CD,'02',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
                                                          '16',NVL(C.CARD_AMT1,0)+NVL(C.CARD_AMT2,0),0)) AMOUNT_CARD_EPOST
                          , SUM(DECODE( A.SETL_MEAN_CD,'03',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_CARD_OVERSEA
                          , SUM(NVL(I.PREMI_CUST_PNT_SETL_AMT,0)) AMOUNT_SP
                          , SUM(NVL(I.PNT_USE_AMT,0)) AMOUNT_RM
                          , SUM(DECODE(I.CP_CMP_CD1,'1',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'1',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_CSF
                          , SUM(DECODE(I.CP_CMP_CD1,'2',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'2',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_BIZ
                          , SUM(DECODE(I.CP_CMP_CD1,'3',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'3',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_THANK
                          , SUM(NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT_OKCASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'28',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_MULTIGIFT
                          , SUM(DECODE( A.SETL_MEAN_CD,'12',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_CYBERPASS
                          , SUM(1) GOODS_CNT
                          , SUM(NVL(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0),0)) GOODS_AMOUNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 1 ELSE 0 END) RET_CNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) RET_AMOUNT
                          , 0 AS DELIV_DONE_CANCEL_CNT
                          , 0 AS DELIV_DONE_CANCEL_AMOUNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN 1 ELSE 0 END) DEFICIT_CNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) DEFICIT_AMOUNT
                          , SUM(NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) DELIV_CERT_AMOUNT
                          , SUM(NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) CONG_CARD_AMOUNT
                          , SUM(NVL(I.IMMPMN_PRCL_AMT,0)) IMMEDIATE_PRCL_PRC
                          , SUM(NVL(I.AFTPMN_PRCL_AMT,0)) LATER_PRCL_PRC
                          , SUM(NVL(I.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y' THEN 0 ELSE NVL((SELECT POSA_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) END) CSF_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD != '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) PO_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD = '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) MART_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN (SELECT RETRNGD_CARD_REFUND_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID) ELSE 0 END) REFUND_CARD_SETL_FEE
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN NVL((SELECT DEFICIT_CARD_SETL_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) DEFICIT_CARD_SETL_FEE
                          , SUM(NVL((SELECT OUTSID_COPRTN_SHOPMALL_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID), 0)) AS AMOUNT_EXT_MALL_FEE
                          , 0 REFUND_GOODS_AMT
                          , 0 REFUND_CSF_FEE
                          , SUM(DECODE( A.SETL_MEAN_CD,'20',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO
                          , SUM(DECODE( A.SETL_MEAN_CD,'13',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_MOBILE
						  , SUM(DECODE( A.SETL_MEAN_CD,'21',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'22',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'23',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'24',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW
	                      , SUM(DECODE( A.SETL_MEAN_CD,'25',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'26',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'27',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'07',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL
	                      , SUM(DECODE( A.SETL_MEAN_CD,'08',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                               '16',NVL(C.ONNURI_AMT,0),0)) AMOUNT_ONURI
                   		  , SUM(DECODE( A.SETL_MEAN_CD,'29',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO_POSTNET
                   		  , SUM(NVL(I.WALLET_SETL_AMT, 0)) AMOUNT_WALLET
                   		  , SUM(DECODE( A.SETL_MEAN_CD,'11',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SPCSAL
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                   AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND   I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT  /*+ LEADING(A) USE_NL(A I B P SC) */    1
                      , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                       , B.BCNC_NM AS BIZ_NAME
                      , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                       , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , NVL(SUM(1), 0) AS DELIV_DONE_CANCEL_CNT
                      , SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)) AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , SUM(NVL(I.AFTPMN_PRCL_AMT, 0)) AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , 0 REFUND_GOODS_AMT
                      , 0 REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_CHAR(APPR_DATE, 'YYYYMMDD')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT      1
                      , I.SUPPO_RGIST_POCD AS SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , C.CLAIM_CONF_YMD AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , 0 AS DELIV_DONE_CANCEL_CNT
                      , 0 AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , 0 AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , SUM(NVL(CLAIM_TREAT_AMT, 0)) AS REFUND_GOODS_AMT
                      , SUM(NVL(REFUND_RETRNGD_CSF_FEE, 0)) AS REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                 FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     ((C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09')))
                   AND     C.TREAT_STUS_CD <![CDATA[<>]]> '004'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                   <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				   </isNotEmpty>
				   <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				   </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , CLAIM_CONF_YMD
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
        )A
	</select>
	
	<select id="selectAdjSuppCompDetailTotalData" parameterClass ="java.util.HashMap" resultClass="commMap">
        SELECT     1
                 ,'' AS  SUPP_COMP_CD
                  , '합계' AS SUPP_COMP_NM
                  , '' AS COMPLETE_DATE
                  , '' AS PURCHASE_ID
                  , '' AS RECEV_PO_REGIPONM
                  , '' AS STATUS_NM
                  , '' AS GOODS_NAME
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - decode((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT ) + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE
                       ELSE GOODS_AMOUNT - RET_AMOUNT - DEFICIT_AMOUNT - AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT + DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)
                    END ) AS SUPP_ADJ_AMOUNT 
                  , SUM(GOODS_CNT) AS GOODS_CNT
                  , SUM(GOODS_AMOUNT) AS GOODS_AMOUNT
                  , SUM(RET_CNT) AS RET_CNT
                  , SUM(RET_AMOUNT) AS RET_AMOUNT
                  , SUM(DELIV_DONE_CANCEL_CNT) AS DELIV_DONE_CANCEL_CNT
                  , SUM(DELIV_DONE_CANCEL_AMOUNT) AS DELIV_DONE_CANCEL_AMOUNT
                  , SUM(DEFICIT_CNT) AS DEFICIT_CNT
                  , SUM(DEFICIT_AMOUNT) AS DEFICIT_AMOUNT
                  , SUM(AMOUNT_CASH) AS AMOUNT_CASH
                  , SUM(AMOUNT_CARD_POSTNET) AS AMOUNT_CARD_POSTNET
                  , SUM(AMOUNT_CARD_EPOST) AS AMOUNT_CARD_EPOST
                  , SUM(AMOUNT_CARD_OVERSEA) AS AMOUNT_CARD_OVERSEA
                  , SUM(AMOUNT_ACCOUNT) AS AMOUNT_ACCOUNT
                  , SUM(AMOUNT_BANKTOWN) AS AMOUNT_BANKTOWN
                  , SUM(AMOUNT_OTHER_BANKTOWN) AS AMOUNT_OTHER_BANKTOWN
                  , SUM(AMOUNT_SP) AS AMOUNT_SP
                  , SUM(AMOUNT_RM) AS AMOUNT_RM
                  , SUM(AMOUNT_COUPON_CSF) AS AMOUNT_COUPON_CSF
                  , SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ
                  , SUM(AMOUNT_COUPON_THANK) AS AMOUNT_COUPON_THANK
                  , SUM(NVL(AMOUNT_OKCASH,0)) AS AMOUNT_OKCASH
                  , SUM(DELIV_CERT_AMOUNT) AS DELIV_CERT_AMOUNT
                  , SUM(CONG_CARD_AMOUNT) AS CONG_CARD_AMOUNT
                  , SUM(DELIV_CERT_AMOUNT + CONG_CARD_AMOUNT) AS ETC_SERVICE_AMOUNT
                  , SUM(SETTLE_AMOUNT) AS SETTLE_AMOUNT
                  , SUM( CASE WHEN COMPLETE_DATE <![CDATA[<]]> '20130121' THEN DECODE((SELECT Q.PAVLN_DIV_CD FROM CO_PAVLN_MGT Q WHERE Q.SUPP_COMP_ID = SUPP_COMP_CD AND ROWNUM = 1), '02', 0, FEE_AMOUNT )
                              ELSE FEE_AMOUNT
                         END ) AS FEE_AMOUNT 
                  , SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                  , SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC
                  , SUM(NVL(LATER_PRCL_SALE_PRC,0)) AS LATER_PRCL_SALE_PRC
                  , SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC
                  , SUM(PO_FEE) AS PO_FEE
                  , SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE
                  , SUM(MART_FEE) AS MART_FEE
                  , SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT
                  , SUM(DEFICIT_CARD_SETL_FEE + REFUND_CARD_SETL_FEE) AS SETTLE_FEE_ADJUST
                  , SUM(AMOUNT_MULTIGIFT) AS AMOUNT_MULTIGIFT
                  , SUM(AMOUNT_EXT_MALL_FEE) AS AMOUNT_EXT_MALL_FEE
                  , SUM(REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                  , SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE
                  , SUM(AMOUNT_KAKAO) AS AMOUNT_KAKAO
                  , SUM(AMOUNT_MOBILE) AS AMOUNT_MOBILE
				  , SUM(AMOUNT_POSTMPAY) AMOUNT_POSTMPAY
				  , SUM(AMOUNT_SYRUP_PAY) AMOUNT_SYRUP_PAY
				  , SUM(AMOUNT_NAVER_PAY) AMOUNT_NAVER_PAY
				  , SUM(AMOUNT_PAYNOW) AMOUNT_PAYNOW
				  , SUM(AMOUNT_PAYCO) AMOUNT_PAYCO
				  , SUM(AMOUNT_BANK_KAKAO) AMOUNT_BANK_KAKAO
				  , SUM(AMOUNT_RPAY) AMOUNT_RPAY
				  , SUM(AMOUNT_PAYPAL) AMOUNT_PAYPAL
				  , SUM(AMOUNT_ONURI) AMOUNT_ONURI
				  , SUM(AMOUNT_KAKAO_POSTNET) AS AMOUNT_KAKAO_POSTNET
				  , SUM(AMOUNT_WALLET) AMOUNT_WALLET
				  , SUM(AMOUNT_SPCSAL) AMOUNT_SPCSAL
         FROM
         (    
                 SELECT     /*+ LEADING(P A) USE_HASH(P A) USE_NL(A I) */  1
                          , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                          , A.ORDER_ID AS PURCHASE_ID
                          , P.PONM AS RECEV_PO_REGIPONM
                          , I.ORDER_STUS_CD AS CANCEL_YN
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                          , SUM(NVL(I.DC_APPLY_PRC,0) + NVL(I.OPTN_GOODS_APPLY_PRC,0)+ NVL(I.SEND_PRC,0)+NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)+NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS SETTLE_AMOUNT
                          , SUM(NVL((SELECT FEE_AMT FROM OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS FEE_AMOUNT 
                          , SUM(DECODE( A.SETL_MEAN_CD,'15', I.CASH_BILL_AMT, '17', I.CASH_BILL_AMT, 0)) AMOUNT_CASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'01',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_ACCOUNT
                          , SUM(DECODE( A.SETL_MEAN_CD,'05',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                          '16',DECODE(A.PO_FNC_YN,'P',NVL(C.TRANS_AMT,0),0),0)) AS AMOUNT_BANKTOWN
						  ,	SUM(DECODE( A.SETL_MEAN_CD,'06',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
		                                                   '16',DECODE(A.PO_FNC_YN,'P',0,NVL(C.TRANS_AMT,0)) ,0)) AS AMOUNT_OTHER_BANKTOWN
                          , SUM(DECODE( A.SETL_MEAN_CD,'04',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), '17', (I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0) - NVL(I.CASH_BILL_AMT,0), 0)) AS AMOUNT_CARD_POSTNET
                          , SUM(DECODE( A.SETL_MEAN_CD,'02',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0),
                                                          '16',NVL(C.CARD_AMT1,0)+NVL(C.CARD_AMT2,0),0)) AMOUNT_CARD_EPOST
                          , SUM(DECODE( A.SETL_MEAN_CD,'03',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_CARD_OVERSEA
                          , SUM(NVL(I.PREMI_CUST_PNT_SETL_AMT,0)) AMOUNT_SP
                          , SUM(NVL(I.PNT_USE_AMT,0)) AMOUNT_RM
                          , SUM(DECODE(I.CP_CMP_CD1,'1',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'1',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_CSF
                          , SUM(DECODE(I.CP_CMP_CD1,'2',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'2',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_BIZ
                          , SUM(DECODE(I.CP_CMP_CD1,'3',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'3',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_THANK
                          , SUM(NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT_OKCASH
                          , SUM(DECODE( A.SETL_MEAN_CD,'28',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_MULTIGIFT
                          , SUM(DECODE( A.SETL_MEAN_CD,'12',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_CYBERPASS
                          , SUM(1) GOODS_CNT
                          , SUM(NVL(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0),0)) GOODS_AMOUNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 1 ELSE 0 END) RET_CNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) RET_AMOUNT
                          , 0 AS DELIV_DONE_CANCEL_CNT
                          , 0 AS DELIV_DONE_CANCEL_AMOUNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN 1 ELSE 0 END) DEFICIT_CNT
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) DEFICIT_AMOUNT
                          , SUM(NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) DELIV_CERT_AMOUNT
                          , SUM(NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) CONG_CARD_AMOUNT
                          , SUM(NVL(I.IMMPMN_PRCL_AMT,0)) IMMEDIATE_PRCL_PRC
                          , SUM(NVL(I.AFTPMN_PRCL_AMT,0)) LATER_PRCL_PRC
                          , SUM(NVL(I.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y' THEN 0 ELSE NVL((SELECT POSA_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) END) CSF_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD != '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) PO_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD = '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) MART_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN (SELECT RETRNGD_CARD_REFUND_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID) ELSE 0 END) REFUND_CARD_SETL_FEE
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN NVL((SELECT DEFICIT_CARD_SETL_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) DEFICIT_CARD_SETL_FEE
                          , SUM(NVL((SELECT OUTSID_COPRTN_SHOPMALL_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID), 0)) AS AMOUNT_EXT_MALL_FEE
                          , 0 REFUND_GOODS_AMT
                          , 0 REFUND_CSF_FEE
                          , SUM(DECODE( A.SETL_MEAN_CD,'20',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO
                          , SUM(DECODE( A.SETL_MEAN_CD,'13',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_MOBILE
						  , SUM(DECODE( A.SETL_MEAN_CD,'21',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_POSTMPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'22',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SYRUP_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'23',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_NAVER_PAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'24',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYNOW
	                      , SUM(DECODE( A.SETL_MEAN_CD,'25',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYCO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'26',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_BANK_KAKAO
	                      , SUM(DECODE( A.SETL_MEAN_CD,'27',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_RPAY
	                      , SUM(DECODE( A.SETL_MEAN_CD,'07',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_PAYPAL
	                      , SUM(DECODE( A.SETL_MEAN_CD,'08',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 
                                                               '16',NVL(C.ONNURI_AMT,0),0)) AMOUNT_ONURI
                          , SUM(DECODE( A.SETL_MEAN_CD,'29',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AS AMOUNT_KAKAO_POSTNET
                          , SUM(NVL(I.WALLET_SETL_AMT, 0)) AMOUNT_WALLET
                          , SUM(DECODE( A.SETL_MEAN_CD,'11',(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0), 0)) AMOUNT_SPCSAL
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                   AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND   I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT   /*+ LEADING(A) USE_NL(A I B P SC) */  1
                      , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                       , B.BCNC_NM AS BIZ_NAME
                      , TO_CHAR(APPR_DATE, 'YYYYMMDD') AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                       , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , NVL(SUM(1), 0) AS DELIV_DONE_CANCEL_CNT
                      , SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)) AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , SUM(NVL(I.AFTPMN_PRCL_AMT, 0)) AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , 0 REFUND_GOODS_AMT
                      , 0 REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate#, 'YYYYMMDD') AND TO_DATE(#endDate#, 'YYYYMMDD') + .99999
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                 <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				 </isNotEmpty>
				 <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				 </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_CHAR(APPR_DATE, 'YYYYMMDD')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                 UNION ALL
                 SELECT     1
                      , I.SUPPO_RGIST_POCD AS SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , C.CLAIM_CONF_YMD AS COMPLETE_DATE
                      , A.ORDER_ID AS PURCHASE_ID
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                      , 0 AS SETTLE_AMOUNT
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_CASH
                      , 0 AS AMOUNT_ACCOUNT
                      , 0 AS AMOUNT_BANKTOWN
                      , 0 AS AMOUNT_OTHER_BANKTOWN
                      , 0 AS AMOUNT_CARD_POSTNET
                      , 0 AS AMOUNT_CARD_EPOST
                      , 0 AS AMOUNT_CARD_OVERSEA
                      , 0 AS AMOUNT_SP
                      , 0 AS AMOUNT_RM
                      , 0 AS AMOUNT_COUPON_CSF
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS AMOUNT_COUPON_THANK
                      , 0 AS AMOUNT_OKCASH
                      , 0 AS AMOUNT_MULTIGIFT
                      , 0 AS AMOUNT_CYBERPASS
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , 0 AS DELIV_DONE_CANCEL_CNT
                      , 0 AS DELIV_DONE_CANCEL_AMOUNT
                      , 0 AS DEFICIT_CNT
                      , 0 AS DEFICIT_AMOUNT
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , 0 AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , SUM(NVL(CLAIM_TREAT_AMT, 0)) AS REFUND_GOODS_AMT
                      , SUM(NVL(REFUND_RETRNGD_CSF_FEE, 0)) AS REFUND_CSF_FEE
                      , 0 AMOUNT_KAKAO
                      , 0 AMOUNT_MOBILE
                      , 0 AMOUNT_POSTMPAY
					  , 0 AMOUNT_SYRUP_PAY
					  , 0 AMOUNT_NAVER_PAY
					  , 0 AMOUNT_PAYNOW
					  , 0 AMOUNT_PAYCO
					  , 0 AMOUNT_BANK_KAKAO
					  , 0 AMOUNT_RPAY
					  , 0 AMOUNT_PAYPAL
					  , 0 AMOUNT_ONURI
					  , 0 AMOUNT_KAKAO_POSTNET
					  , 0 AMOUNT_WALLET
					  , 0 AMOUNT_SPCSAL
                FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     ((C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09'))) 
                   AND     C.TREAT_STUS_CD <![CDATA[<>]]> '004'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   <isEqual property="recvShop" compareValue="ALL">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','03','04','05','07','08','09','99') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="01">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','07') ]]>
				    </isEqual>
			           <isEqual property="recvShop" compareValue="04">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '04' ]]>
				    </isEqual>
				    <isEqual property="recvShop" compareValue="02">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '02' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="03">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','09') ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="05">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '05' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="08">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD = '08' ]]>
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EP">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07') ]]><!-- 특산품+꽃배달+특화(제철) -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EN">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('03','05','08','09') ]]><!-- 생활마트+전통시장+패션B2B -->
				  	</isEqual>
				  	<isEqual property="recvShop" compareValue="EA">
				  		<![CDATA[ AND   I.PAVLN_DIV_CD IN ('01','02','04','07','03','05','09') ]]><!-- 특산품+꽃배달+특화(제철)+생활마트+전통시장 -->
				  	</isEqual>
                   <isNotEmpty property="suppCompId">
						<![CDATA[	AND  I.SUPP_COMP_ID = #suppCompId#]]>
				   </isNotEmpty>
				   <isNotEmpty property="searchRcode">
						<![CDATA[	AND  I.SUPPO_REGIST_POCD = #searchRcode#]]>
				   </isNotEmpty>
                 GROUP BY 1
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , CLAIM_CONF_YMD
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
        )A
	</select>
	
	<!-- 공급업체 목록 건수 -->
	<select id="selectSuppCompTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT   COUNT(A.SUPP_COMP_ID)
        FROM     CO_SUPP_COMP_MAST A
        WHERE    1 = 1
        AND      A.SUPP_COMP_DIV_CD NOT IN ('08')
		]]>
		<!-- 검색구분 -->
		<isNotEmpty property="searchTxt">
			<isEqual property="searchType" compareValue="all">
				AND (A.BCNC_NM LIKE '%'||#searchTxt#||'%' OR A.SUPP_COMP_ID LIKE '%'||#searchTxt#||'%' ) 
			</isEqual>
			<isEqual property="searchType" compareValue="01">
				AND A.BCNC_NM LIKE '%'||#searchTxt#||'%' 
			</isEqual>
			<isEqual property="searchType" compareValue="02">
				AND A.SUPP_COMP_ID LIKE '%'||#searchTxt#||'%' 
			</isEqual>													
		</isNotEmpty>  
	</select>
	
	<!-- 공급업체 목록 조회 -->
	<select id="selectSuppCompList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		<![CDATA[
		SELECT   A.SUPP_COMP_ID,
	             A.BCNC_NM
        FROM     CO_SUPP_COMP_MAST A
        WHERE    1 = 1
        AND      A.SUPP_COMP_DIV_CD NOT IN ('08')
		]]>
		<!-- 검색구분 -->
		<isNotEmpty property="searchTxt">
			<isEqual property="searchType" compareValue="all">
				AND (A.BCNC_NM LIKE '%'||#searchTxt#||'%' OR A.SUPP_COMP_ID LIKE '%'||#searchTxt#||'%' ) 
			</isEqual>
			<isEqual property="searchType" compareValue="01">
				AND A.BCNC_NM LIKE '%'||#searchTxt#||'%' 
			</isEqual>
			<isEqual property="searchType" compareValue="02">
				AND A.SUPP_COMP_ID LIKE '%'||#searchTxt#||'%' 
			</isEqual>														
		</isNotEmpty>  
		<include refid="pagingFooter"/>
	</select>
	
	<!-- 공급국 목록 건수 -->
	<select id="selectPostOfficeTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT COUNT(*) 
		FROM (
			SELECT 	A.PONM NAME, A.EDPSCD ECODE, A.REGIPOCD PCODE, A.REGIPOCD RCODE
	        FROM 	PICMT0060 A
	        WHERE 	A.USEYN = 'Y'
	        ]]>
	        <isNotEmpty property="searchTxt">
	        AND   	A.PONM LIKE '%'||#searchTxt#||'%' 
	        </isNotEmpty>  
	        <![CDATA[
	        GROUP BY A.PONM, A.EDPSCD, A.REGIPOCD
        )
		]]>
	</select>
	
	<!-- 공급국 목록 조회 -->
	<select id="selectPostOfficeList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		<![CDATA[
		SELECT 	A.PONM NAME, A.EDPSCD ECODE, A.REGIPOCD PCODE, A.REGIPOCD RCODE
        FROM 	PICMT0060 A
        WHERE 	A.USEYN = 'Y'
        ]]>
        <isNotEmpty property="searchTxt">
        AND   	A.PONM LIKE '%'||#searchTxt#||'%' 
        </isNotEmpty>  
        <![CDATA[
        GROUP BY A.PONM, A.EDPSCD, A.REGIPOCD
        ORDER BY A.PONM
		]]>
		<include refid="pagingFooter"/>
	</select>
	
	<!-- 복합결제 (매입)내역 건수 -->
	<select id="selectMixSetlContTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT  COUNT(A.ORDER_ID)
 		FROM    (
    			  SELECT  A.ORDER_ID AS ORDER_ID
		                , TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		                , SUM((I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT
		                , I.ORDER_STUS_CD,  SC.COMN_CD_NM
		                , SUM(C.CARD_AMT1) AS CARD_AMT1
		                , SUM(C.CARD_AMT2) AS CARD_AMT2
		                , SUM(C.ONNURI_AMT) AS ONNURI_AMT
		                , SUM(I.PNT_USE_AMT) AS PNT_USE_AMT
		          FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
		          WHERE   1=1
		          AND     I.ORDER_ID = A.ORDER_ID
		          AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
		          AND     A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
		          AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
		          AND     I.GOODS_CANCEL_YN = 'N'
		          AND     A.SETL_MEAN_CD  = '16'
		          AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
		          AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
		          AND     P.USEYN = 'Y'
		          AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
		          AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
		          GROUP BY ORDER_DATE, A.ORDER_ID, I.ORDER_STUS_CD,  SC.COMN_CD_NM
    		    )A
		]]>
	</select>
	
	<!-- 복합결제 (매입)내역 조회 -->
	<select id="selectMixSetlContList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		<![CDATA[
		  SELECT  ORDER_ID, ORDER_DATE, AMOUNT, CARD_AMT1, CARD_AMT2,
                  TO_CHAR(CARD_AMT1,'999,999,999') || DECODE(CARD_AMT2, 0, '',' - '|| REPLACE(TO_CHAR(CARD_AMT2,'999,999,999'),' ','')) AS CARD_AMT,
                  ONNURI_AMT, PNT_USE_AMT, COMN_CD_NM
          FROM  (
		          SELECT   A.ORDER_ID AS ORDER_ID
		                 , TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		                 , SUM((I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT
		                 , I.ORDER_STUS_CD,  SC.COMN_CD_NM
		                 , SUM(C.CARD_AMT1) AS CARD_AMT1
		                 , SUM(C.CARD_AMT2) AS CARD_AMT2
		                 , SUM(C.ONNURI_AMT) AS ONNURI_AMT
		                 , SUM(I.PNT_USE_AMT) AS PNT_USE_AMT
		           FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
		           WHERE   1=1
		           AND     I.ORDER_ID = A.ORDER_ID
		           AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
		           AND     A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
		           AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
		           AND     I.GOODS_CANCEL_YN = 'N'
		           AND     A.SETL_MEAN_CD  = '16'
		           AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
		           AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
		           AND     P.USEYN = 'Y'
		           AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
		           AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
		           GROUP BY ORDER_DATE, A.ORDER_ID, I.ORDER_STUS_CD,  SC.COMN_CD_NM
           )
           ORDER BY ORDER_DATE DESC
		]]>
		<include refid="pagingFooter"/>
	</select>
	
	<!-- 복합결제 (매입)내역 조회 Excel-->
	<select id="selectMixSetlContExcelList" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		 SELECT  ORDER_ID, ORDER_DATE, AMOUNT, CARD_AMT1, CARD_AMT2,
                  TO_CHAR(CARD_AMT1,'999,999,999') || DECODE(CARD_AMT2, 0, '',' - '|| REPLACE(TO_CHAR(CARD_AMT2,'999,999,999'),' ','')) AS CARD_AMT,
                  ONNURI_AMT, PNT_USE_AMT, COMN_CD_NM
          FROM  (
		          SELECT   A.ORDER_ID AS ORDER_ID
		                 , TO_CHAR(A.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		                 , SUM((I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0)) - (I.PREMI_CUST_PNT_SETL_AMT + NVL(I.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (I.PNT_USE_AMT + NVL(I.PNT_REFUND_SETL_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0)) - I.CPN_DC_AMT - NVL(I.OKCASH_USE_AMT,0)) AS AMOUNT
		                 , I.ORDER_STUS_CD,  SC.COMN_CD_NM
		                 , SUM(C.CARD_AMT1) AS CARD_AMT1
		                 , SUM(C.CARD_AMT2) AS CARD_AMT2
		                 , SUM(C.ONNURI_AMT) AS ONNURI_AMT
		                 , SUM(I.PNT_USE_AMT) AS PNT_USE_AMT
		           FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
		           WHERE   1=1
		           AND     I.ORDER_ID = A.ORDER_ID
		           AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
		           AND     A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
		           AND NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
		           AND     I.GOODS_CANCEL_YN = 'N'
		           AND     A.SETL_MEAN_CD  = '16'
		           AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
		           AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
		           AND     P.USEYN = 'Y'
		           AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
		           AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
		           GROUP BY ORDER_DATE, A.ORDER_ID, I.ORDER_STUS_CD,  SC.COMN_CD_NM
           )
           ORDER BY ORDER_DATE DESC
		]]>
	</select>
	
	<select id="selectIntegPuchasTreatStusList" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT * FROM (
	SELECT ORDER_DATE, 
           sum(d1_cnt) d1_cnt,sum(d1_amt) d1_amt,
           sum(d2_cnt) d2_cnt,sum(d2_amt) d2_amt,
           sum(s1_cnt) s1_cnt,sum(s1_amt) s1_amt,
           sum(s2_cnt) s2_cnt,sum(s2_amt) s2_amt,
           sum(s3_cnt) s3_cnt,sum(s3_amt) s3_amt,
           sum(s4_cnt) s4_cnt,sum(s4_amt) s4_amt,
           sum(cnt) cnt, sum(amt) amt
    FROM (           
		    SELECT 
		           '1' gbn,TO_CHAR(B.ORDER_DATE,'YYYYMMDD') order_date,
		           sum(decode(b.status,'D1',1,0)) d1_cnt,
		           sum(decode(b.status,'D1',b.TOTAL_AMOUNT,0)) d1_amt,
		           sum(decode(b.status,'D2',1,0)) d2_cnt,
		           sum(decode(b.status,'D2',b.TOTAL_AMOUNT,0)) d2_amt,
		           sum(decode(b.status,'S1',1,0)) s1_cnt,
		           sum(decode(b.status,'S1',b.TOTAL_AMOUNT,0)) s1_amt,
		           sum(decode(b.status,'S2',1,0)) s2_cnt,
		           sum(decode(b.status,'S2',b.TOTAL_AMOUNT,0)) s2_amt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',1,0),0)) s3_cnt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',b.TOTAL_AMOUNT,0),0)) s3_amt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',1,0),0)) s4_cnt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',b.TOTAL_AMOUNT,0),0)) s4_amt,
		           count(distinct b.ORDER_ID) cnt,
		           sum(b.TOTAL_AMOUNT) amt
		    FROM ( SELECT 
		                 DISTINCT A1.ORDER_ID
		           FROM  OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
		           WHERE  A1.ORDER_ID = A2.ORDER_ID
		           AND    A1.ORDER_ID = A3.ORDER_ID
		           AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
		           AND   NVL(A2.USE_YN,'Y') = 'Y'
		           AND   A1.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
		           ]]>
		           <isNotEmpty property="cardType">
		           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
							 AND  A1.SETL_MEAN_CD IN ('02','03')
						</isEqual>
		         		<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
							 AND  A1.SETL_MEAN_CD IN ('02')
						</isEqual>
						<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
							 AND  A1.SETL_MEAN_CD IN ('03')
						</isEqual>	
						<isEqual property="cardType" compareValue="domestic1"><!-- 아닌것 -->
							 AND  A1.SETL_MEAN_CD IN ('T')
						</isEqual>	
	         		</isNotEmpty>
	         		
		           <![CDATA[
		         ) A,OD_CREDIT_CARD_SETL_INFO B
		    WHERE  A.ORDER_ID = B.ORDER_ID
		    ]]>
		    <isNotEmpty property="cbCreditAccount">
          		<isNotEqual property="cbCreditAccount" compareValue="all"><!-- 전체가아니면 -->
				 AND  B.ACQUIRE_CODE = #cbCreditAccount#
				</isNotEqual>
       		</isNotEmpty>       
		    <![CDATA[
		    GROUP BY TO_CHAR(B.ORDER_DATE,'YYYYMMDD')
  			UNION ALL
      		SELECT   '2',ORDER_DATE order_date,
		            sum(decode(b.MSG_CODE,'D1',1,0)) d1_cnt,
		            sum(decode(b.MSG_CODE,'D1',b.TOTAL_TRADE_PRICE,0)) d1_amt,
		            sum(decode(b.MSG_CODE,'D2',1,0)) d2_cnt,
		            sum(decode(b.MSG_CODE,'D2',b.TOTAL_TRADE_PRICE,0)) d2_amt,
		            sum(decode(b.BATCH_STATUS_CODE,'11',1,0)) s1_cnt,
		            sum(decode(b.BATCH_STATUS_CODE,'11',b.TOTAL_TRADE_PRICE,0)) s1_amt,
		            sum(decode(b.MSG_CODE,'D4',1,0)) s2_cnt,
		            sum(decode(b.MSG_CODE,'D4',b.TOTAL_TRADE_PRICE,0)) s2_amt,
		            sum(decode(b.BATCH_STATUS_CODE,'13',1,0)) s3_cnt,
		            sum(decode(b.BATCH_STATUS_CODE,'13',b.TOTAL_TRADE_PRICE,0)) s3_amt,
		            0 s4_cnt,
		            0 s4_amt,
		            count(A.ORDER_ID) cnt,
		            sum(b.TOTAL_TRADE_PRICE) amt
      		FROM ( SELECT DISTINCT TO_CHAR(A2.SETL_APPR_DATE,'YYYYMMDD')  ORDER_DATE, A2.ORDER_ID , A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ
	               FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3
	               WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999  
	               ]]>
		           
		           <isNotEmpty property="cardType">
		           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
							 AND  A2.SETL_MEAN_CD IN ('04','17') 
						</isEqual>
		         		<isEqual property="cardType" compareValue="domestic1"><!-- 국내카드일경우(창구) -->
							AND  A2.SETL_MEAN_CD IN ('04','17') 
						</isEqual>
						<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
							 AND  A2.SETL_MEAN_CD IN ('T')
						</isEqual>
						<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
							 AND  A2.SETL_MEAN_CD IN ('T')
						</isEqual>	
	         	   </isNotEmpty>
		    	   <![CDATA[
	               AND A2.ORDER_ID = A3.ORDER_ID
	               ]]>
<!--              AND  A2.SETL_SEQ = A3.GOODS_OPTN_SEQ -->
             <![CDATA[ 
                   AND A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
	               AND nvl(A2.USE_YN,'Y') = 'Y'
	               AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y')
                 ) A, PCSS_TRANS B
   			WHERE  A.PURCHASE_ID_SEQ = B.ACCEPT_NUM
	     	AND  B.WORK_FLAG = 'BS' AND b.UNIT_FLAG = 'BA' 
	     	AND  B.REQ_CODE = '0000' 
	     	AND  B.BATCH_STATUS_CODE IN('1', '11') 
     		AND  NOT EXISTS ( 
                      SELECT 'X' 
                      FROM PCSS_TRANS OP
                      WHERE 1=1
                      AND OP.ORG_AGREE_NUM = B.AGREE_NUM
                      AND OP.ACCEPT_NUM = B.ACCEPT_NUM
                      AND B.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS')
                      AND OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'  
                      AND OP.REQ_CODE = '0000' 
                      AND OP.TRADE_FLAG IN('0', '2')
                    )
            ]]>
		    <isNotEmpty property="cbCreditAccount">
          		<isNotEqual property="cbCreditAccount" compareValue="all"><!-- 전체가아니면 -->
				 AND  B.BUY_CODE = #cbCreditAccount#
				</isNotEqual>
       		</isNotEmpty>   
		    <![CDATA[
      		GROUP BY ORDER_DATE
    	)
    GROUP BY ORDER_DATE
    ORDER BY ORDER_DATE
    )
    UNION ALL
    SELECT '합계' AS ORDER_DATE,
           sum(d1_cnt) d1_cnt,sum(d1_amt) d1_amt,
           sum(d2_cnt) d2_cnt,sum(d2_amt) d2_amt,
           sum(s1_cnt) s1_cnt,sum(s1_amt) s1_amt,
           sum(s2_cnt) s2_cnt,sum(s2_amt) s2_amt,
           sum(s3_cnt) s3_cnt,sum(s3_amt) s3_amt,
           sum(s4_cnt) s4_cnt,sum(s4_amt) s4_amt,
           sum(cnt) cnt, sum(amt) amt
    FROM (           
		    SELECT 
		           '1' gbn,TO_CHAR(B.ORDER_DATE,'YYYYMMDD') order_date,
		           sum(decode(b.status,'D1',1,0)) d1_cnt,
		           sum(decode(b.status,'D1',b.TOTAL_AMOUNT,0)) d1_amt,
		           sum(decode(b.status,'D2',1,0)) d2_cnt,
		           sum(decode(b.status,'D2',b.TOTAL_AMOUNT,0)) d2_amt,
		           sum(decode(b.status,'S1',1,0)) s1_cnt,
		           sum(decode(b.status,'S1',b.TOTAL_AMOUNT,0)) s1_amt,
		           sum(decode(b.status,'S2',1,0)) s2_cnt,
		           sum(decode(b.status,'S2',b.TOTAL_AMOUNT,0)) s2_amt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',1,0),0)) s3_cnt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',b.TOTAL_AMOUNT,0),0)) s3_amt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',1,0),0)) s4_cnt,
		           sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',b.TOTAL_AMOUNT,0),0)) s4_amt,
		           count(distinct b.ORDER_ID) cnt,
		           sum(b.TOTAL_AMOUNT) amt
		    FROM ( SELECT 
		                 DISTINCT A1.ORDER_ID
		           FROM  OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
		           WHERE  A1.ORDER_ID = A2.ORDER_ID
		           AND    A1.ORDER_ID = A3.ORDER_ID
		           AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
		           AND   NVL(A2.USE_YN,'Y') = 'Y'
		           AND   A1.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
		           ]]>
		           <isNotEmpty property="cardType">
		           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
							 AND  A1.SETL_MEAN_CD IN ('02','03')
						</isEqual>
		         		<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
							 AND  A1.SETL_MEAN_CD IN ('02')
						</isEqual>
						<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
							 AND  A1.SETL_MEAN_CD IN ('03')
						</isEqual>	
						<isEqual property="cardType" compareValue="domestic1"><!-- 아닌것 -->
							 AND  A1.SETL_MEAN_CD IN ('T')
						</isEqual>	
	         		</isNotEmpty>
	         		
		           <![CDATA[ 
		         ) A,OD_CREDIT_CARD_SETL_INFO B
		    WHERE  A.ORDER_ID = B.ORDER_ID
		    ]]>
		    <isNotEmpty property="cbCreditAccount">
          		<isNotEqual property="cbCreditAccount" compareValue="all"><!-- 전체가아니면 -->
				 AND  B.ACQUIRE_CODE = #cbCreditAccount#
				</isNotEqual>
       		</isNotEmpty>       
		    <![CDATA[
		    GROUP BY TO_CHAR(B.ORDER_DATE,'YYYYMMDD')
  			UNION ALL
      		SELECT   '2',ORDER_DATE order_date,
		            sum(decode(b.MSG_CODE,'D1',1,0)) d1_cnt,
		            sum(decode(b.MSG_CODE,'D1',b.TOTAL_TRADE_PRICE,0)) d1_amt,
		            sum(decode(b.MSG_CODE,'D2',1,0)) d2_cnt,
		            sum(decode(b.MSG_CODE,'D2',b.TOTAL_TRADE_PRICE,0)) d2_amt,
		            sum(decode(b.BATCH_STATUS_CODE,'11',1,0)) s1_cnt,
		            sum(decode(b.BATCH_STATUS_CODE,'11',b.TOTAL_TRADE_PRICE,0)) s1_amt,
		            sum(decode(b.MSG_CODE,'D4',1,0)) s2_cnt,
		            sum(decode(b.MSG_CODE,'D4',b.TOTAL_TRADE_PRICE,0)) s2_amt,
		            sum(decode(b.BATCH_STATUS_CODE,'13',1,0)) s3_cnt,
		            sum(decode(b.BATCH_STATUS_CODE,'13',b.TOTAL_TRADE_PRICE,0)) s3_amt,
		            0 s4_cnt,
		            0 s4_amt,
		            count(A.ORDER_ID) cnt,
		            sum(b.TOTAL_TRADE_PRICE) amt
      		FROM ( SELECT DISTINCT TO_CHAR(A2.SETL_APPR_DATE,'YYYYMMDD')  ORDER_DATE, A2.ORDER_ID , A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ
	               FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3
	               WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
	               ]]>
		           <isNotEmpty property="cardType">
		           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
							 AND  A2.SETL_MEAN_CD IN ('04','17') 
						</isEqual>
		         		<isEqual property="cardType" compareValue="domestic1"><!-- 국내카드일경우(창구) -->
							AND  A2.SETL_MEAN_CD IN ('04','17') 
						</isEqual>
						<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
							 AND  A2.SETL_MEAN_CD IN ('T')
						</isEqual>
						<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
							 AND  A2.SETL_MEAN_CD IN ('T')
						</isEqual>	
	         	   </isNotEmpty>
		    	   <![CDATA[
	               AND A2.ORDER_ID = A3.ORDER_ID
	               ]]>
<!--              AND  A2.SETL_SEQ = A3.GOODS_OPTN_SEQ -->
             <![CDATA[ 
             	   AND A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
	               AND nvl(A2.USE_YN,'Y') = 'Y'
	               AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y')
                 ) A, PCSS_TRANS B
   			WHERE  A.PURCHASE_ID_SEQ = B.ACCEPT_NUM
	     	AND  B.WORK_FLAG = 'BS' AND b.UNIT_FLAG = 'BA' 
	     	AND  B.REQ_CODE = '0000' 
	     	AND  B.BATCH_STATUS_CODE IN('1', '11') 
     		AND  NOT EXISTS ( 
                      SELECT 'X' 
                      FROM PCSS_TRANS OP
                      WHERE 1=1
                      AND OP.ORG_AGREE_NUM = B.AGREE_NUM
                      AND OP.ACCEPT_NUM = B.ACCEPT_NUM
                      AND B.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS')
                      AND OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'  
                      AND OP.REQ_CODE = '0000' 
                      AND OP.TRADE_FLAG IN('0', '2')
                    )
            ]]>
		    <isNotEmpty property="cbCreditAccount">
          		<isNotEqual property="cbCreditAccount" compareValue="all"><!-- 전체가아니면 -->
				 AND  B.BUY_CODE = #cbCreditAccount#
				</isNotEqual>
       		</isNotEmpty>   
		    <![CDATA[
      		GROUP BY ORDER_DATE
    	)
	]]>
	</select>
	
	<select id="selectIntegPuchasTreatStus2931List" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT * FROM (
    SELECT ORDER_DATE, 
           sum(d1_cnt - d2_cnt) d1_cnt,sum(d1_amt - d2_amt) d1_amt,
           sum(d2_cnt) d2_cnt,sum(d2_amt) d2_amt,
           sum(s1_cnt - s2_cnt) s1_cnt,sum(s1_amt - s2_amt) s1_amt,
           sum(s2_cnt) s2_cnt,sum(s2_amt) s2_amt,
           sum(s3_cnt) s3_cnt,sum(s3_amt) s3_amt,
           sum(s4_cnt) s4_cnt,sum(s4_amt) s4_amt,
           sum(cnt) cnt, sum(amt) amt
    FROM (           
            SELECT 
                   '1' gbn,TO_CHAR(B.ORDER_DATE,'YYYYMMDD') order_date,
                   sum(decode(b.status,'D1',1,0)) d1_cnt,
                   sum(decode(b.status,'D1',b.TOTAL_AMOUNT,0)) d1_amt,
                   sum(decode(b.status,'D2',1,0)) d2_cnt,
                   sum(decode(b.status,'D2',b.TOTAL_AMOUNT,0)) d2_amt,
                   sum(decode(b.status,'S1',1,0)) s1_cnt,
                   sum(decode(b.status,'S1',b.TOTAL_AMOUNT,0)) s1_amt,
                   sum(decode(b.status,'S2',1,0)) s2_cnt,
                   sum(decode(b.status,'S2',b.TOTAL_AMOUNT,0)) s2_amt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',1,0),0)) s3_cnt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',b.TOTAL_AMOUNT,0),0)) s3_amt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',1,0),0)) s4_cnt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',b.TOTAL_AMOUNT,0),0)) s4_amt,
                   count(distinct b.ORDER_ID) cnt,
                   sum(b.TOTAL_AMOUNT) amt
            FROM ( SELECT 
                         DISTINCT A1.ORDER_ID
                   FROM  OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
                   WHERE  A1.ORDER_ID = A2.ORDER_ID
                   AND    A1.ORDER_ID = A3.ORDER_ID
                   AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07','03','05','09')
                   AND   NVL(A2.USE_YN,'Y') = 'Y'
                   AND   A1.ORDER_DATE BETWEEN TO_DATE('2016-10-29', 'YYYY-MM-DD') AND TO_DATE('2016-10-31', 'YYYY-MM-DD') + .99999
                   AND  A1.SETL_MEAN_CD IN ('02','16')
                 ) A,OD_CREDIT_CARD_SETL_INFO B
            WHERE  A.ORDER_ID = B.ORDER_ID
             AND    B.PG_DIV_CD = '10'
            AND    B.ONNURI_YN = 'N'
            GROUP BY TO_CHAR(B.ORDER_DATE,'YYYYMMDD')
        )
    GROUP BY ORDER_DATE
    ORDER BY ORDER_DATE
    )
    UNION ALL
    SELECT '합계' AS ORDER_DATE,
           sum(d1_cnt - d2_cnt) d1_cnt,sum(d1_amt - d2_amt) d1_amt,
           sum(d2_cnt) d2_cnt,sum(d2_amt) d2_amt,
           sum(s1_cnt - s2_cnt) s1_cnt,sum(s1_amt - s2_amt) s1_amt,
           sum(s2_cnt) s2_cnt,sum(s2_amt) s2_amt,
           sum(s3_cnt) s3_cnt,sum(s3_amt) s3_amt,
           sum(s4_cnt) s4_cnt,sum(s4_amt) s4_amt,
           sum(cnt) cnt, sum(amt) amt
    FROM (           
            SELECT 
                   '1' gbn,TO_CHAR(B.ORDER_DATE,'YYYYMMDD') order_date,
                   sum(decode(b.status,'D1',1,0)) d1_cnt,
                   sum(decode(b.status,'D1',b.TOTAL_AMOUNT,0)) d1_amt,
                   sum(decode(b.status,'D2',1,0)) d2_cnt,
                   sum(decode(b.status,'D2',b.TOTAL_AMOUNT,0)) d2_amt,
                   sum(decode(b.status,'S1',1,0)) s1_cnt,
                   sum(decode(b.status,'S1',b.TOTAL_AMOUNT,0)) s1_amt,
                   sum(decode(b.status,'S2',1,0)) s2_cnt,
                   sum(decode(b.status,'S2',b.TOTAL_AMOUNT,0)) s2_amt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',1,0),0)) s3_cnt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'01',b.TOTAL_AMOUNT,0),0)) s3_amt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',1,0),0)) s4_cnt,
                   sum(decode(b.BUYCOMPRCVCD,'000',decode(b.PG_DIV_CD,'02',b.TOTAL_AMOUNT,0),0)) s4_amt,
                   count(distinct b.ORDER_ID) cnt,
                   sum(b.TOTAL_AMOUNT) amt
            FROM ( SELECT 
                         DISTINCT A1.ORDER_ID
                   FROM  OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
                   WHERE  A1.ORDER_ID = A2.ORDER_ID
                   AND    A1.ORDER_ID = A3.ORDER_ID
                   AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07','03','05','09')
                   AND   NVL(A2.USE_YN,'Y') = 'Y'
                   AND   A1.ORDER_DATE BETWEEN TO_DATE('2016-10-29', 'YYYY-MM-DD') AND TO_DATE('2016-10-31', 'YYYY-MM-DD') + .99999
                   AND  A1.SETL_MEAN_CD IN ('02','16')
                 ) A,OD_CREDIT_CARD_SETL_INFO B
            WHERE  A.ORDER_ID = B.ORDER_ID
            AND    B.PG_DIV_CD = '10'
            AND    B.ONNURI_YN = 'N'
            GROUP BY TO_CHAR(B.ORDER_DATE,'YYYYMMDD')
        )
	]]>
	</select>
	
	<select id="selectIntegPuchasTreatStusSamList" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT 
           '1' GBN,decode(status,'S1','D1','S2','D2',status) STATUS,
           B.CARD_SEED_NO ,
           '****' as CARD_VALID_YM , 
           RPAD(SUBSTR(B.APPROVAL_TIME,3,6),6,' ')||
           '000000' ||
           RPAD(SUBSTR(APPROVAL_NO,1,10),10,' ')||
           '410' ||
           LPAD(B.TOTAL_AMOUNT,9,'0')||
           LPAD('0',9,'0')||
           LPAD(B.TOTAL_AMOUNT,9,'0')||
           LPAD(SUBSTR(B.CARD_INSTALLMENT,1,2),2,'0')||
           RPAD(NVL(B.RESERVED2,' '),23,' ') ||
           SUBSTR(NVL(B.RESERVED3,'M'),1,1) ||
           '2'||
           DECODE(B.RESERVED1,'002','B','A') ||
           SUBSTR(A.ORDER_ID,1,10)||
           RPAD(NVL(B.MEMBER_NO,' '),14,' ')||
           LPAD(NVL(B.ACQUIRE_CODE,' '),3,' ')||
           LPAD(NVL(B.ACQUIRE_CODE,' '),3,' ')||
           RPAD(NVL(SUBSTR(A.ORDER_ID,11,15),' '),15,' ') || '00A' INFO           
    FROM (  SELECT 
                   DISTINCT A1.ORDER_ID
            FROM   OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
            WHERE  A1.ORDER_ID = A2.ORDER_ID
            AND    A1.ORDER_ID = A3.ORDER_ID
            AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
            AND    NVL(A2.USE_YN,'Y') = 'Y'
            AND    A1.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
            ]]>
            <isNotEmpty property="cardType">
           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
					 AND  A1.SETL_MEAN_CD IN ('02','03')
				</isEqual>
         		<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
					 AND  A1.SETL_MEAN_CD IN ('02')
				</isEqual>
				<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
					 AND  A1.SETL_MEAN_CD IN ('03')
				</isEqual>	
				<isEqual property="cardType" compareValue="domestic1"><!-- 아닌것 -->
					 AND  A1.SETL_MEAN_CD IN ('T')
				</isEqual>	
        	</isNotEmpty>	
            <![CDATA[ 
         ) A,OD_CREDIT_CARD_SETL_INFO B
    WHERE  A.ORDER_ID = B.ORDER_ID
    AND B.STATUS = 'D1'
  	UNION ALL 
    SELECT    '2' GBN, 'D1' STATUS,
             B.CARD_NUM as CARD_SEED_NO ,
             B.VALID_INTERVAL as CARD_VALID_YM ,  
             RPAD(SUBSTR(B.AGREE_DATE,1,6),6,' ')||
             '000000' ||
             RPAD(SUBSTR(AGREE_NUM,1,10),10,' ')||
             '410' ||
             LPAD(B.TOTAL_TRADE_PRICE,9,'0')||
             LPAD('0',9,'0')||
             LPAD(B.TOTAL_TRADE_PRICE,9,'0')||
             LPAD(SUBSTR(TO_CHAR(B.ALLOT_TIME),1,2),2,'0')||
             RPAD(' ',23,' ') ||
             ' ' ||
             '2'||
             DECODE(B.VAN_CODE,'04','N','K') ||
             SUBSTR(B.accept_num,1,10)||
             RPAD(NVL(B.SHOP_NUM,' '),14,' ')||
             LPAD(NVL(B.BUY_CODE,' '),3,' ')||
             LPAD(NVL(B.BUY_CODE,' '),3,' ')||
             RPAD(LPAD(SUBSTR(TO_CHAR(NVL(TRANS_ID,0)),1,10),10,'0') ,15,' ') || '00A' INFO           
    FROM ( 
             SELECT DISTINCT TO_CHAR(A2.SETL_APPR_DATE,'YYYYMMDD')  ORDER_DATE, A2.ORDER_ID , A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ
             FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3
             WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
             ]]>
	         <isNotEmpty property="cardType">
	           		<isEqual property="cardType" compareValue="all"><!-- 전체 -->
						 AND  A2.SETL_MEAN_CD IN ('04','17') 
					</isEqual>
	         		<isEqual property="cardType" compareValue="domestic1"><!-- 국내카드일경우(창구) -->
						AND  A2.SETL_MEAN_CD IN ('04','17') 
					</isEqual>
					<isEqual property="cardType" compareValue="domestic"><!-- 국내카드 -->
						 AND  A2.SETL_MEAN_CD IN ('T')
					</isEqual>
					<isEqual property="cardType" compareValue="oversea"><!-- 해외카드 -->
						 AND  A2.SETL_MEAN_CD IN ('T')
					</isEqual>	
         	 </isNotEmpty>
	    	 <![CDATA[ 
             AND A2.ORDER_ID = A3.ORDER_ID
             ]]>
<!--              AND  A2.SETL_SEQ = A3.GOODS_OPTN_SEQ -->
             <![CDATA[ 
             AND A3.PAVLN_DIV_CD IN ('01', '02', '04', '07')
             AND NVL(A2.USE_YN,'Y') = 'Y'
             AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y')
           ) A, PCSS_TRANS B
   	WHERE  A.PURCHASE_ID_SEQ = B.ACCEPT_NUM
    AND    B.WORK_FLAG = 'BS' AND B.UNIT_FLAG = 'BA' 
    AND    B.REQ_CODE = '0000' AND B.MSG_CODE = 'D1' 
    AND    B.BATCH_STATUS_CODE ='1'
    AND NOT EXISTS ( 
                      SELECT 'X' 
                      FROM  PCSS_TRANS OP
                      WHERE 1=1
                      AND   OP.ORG_AGREE_NUM = B.AGREE_NUM
                      AND   OP.ACCEPT_NUM = B.ACCEPT_NUM
                      AND   B.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS')
                      AND   OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'  
                      AND   OP.REQ_CODE = '0000' 
                      AND   OP.TRADE_FLAG IN('0', '2')
                   )          
	]]>
	</select>
	
	<select id="selectIntegPuchasTreatStusSam2931List" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT 
           '1' GBN,decode(status,'S1','D1','S2','D2',status) STATUS,
           CARD_SEED_NO ,
           '****' as CARD_VALID_YM , 
           RPAD(SUBSTR(APPROVAL_TIME,3,6),6,' ')||
           '000000' ||
           RPAD(SUBSTR(APPROVAL_NO,1,10),10,' ')||
           '410' ||
           LPAD(TOTAL_AMOUNT,9,'0')||
           LPAD('0',9,'0')||
           LPAD(TOTAL_AMOUNT,9,'0')||
           LPAD(SUBSTR(CARD_INSTALLMENT,1,2),2,'0')||
           RPAD(NVL(RESERVED2,' '),23,' ') ||
           SUBSTR(NVL(RESERVED3,'M'),1,1) ||
           '2'||
           DECODE(RESERVED1,'002','B','A') ||
           SUBSTR(ORDER_ID,1,10)||
           RPAD(NVL(MEMBER_NO,' '),14,' ')||
           LPAD(NVL(ACQUIRE_CODE,' '),3,' ')||
           LPAD(NVL(ACQUIRE_CODE,' '),3,' ')||
           RPAD(NVL(SUBSTR(ORDER_ID,11,15),' '),15,' ') || '00A' INFO   
     FROM
     (       
            SELECT Z.d1_amt AS TOTAL_AMOUNT, Z.ORDER_ID, Y.ACQUIRE_CODE, Y.MEMBER_NO, Y.RESERVED1, Y.RESERVED2, Y.RESERVED3, 
                   Y.CARD_INSTALLMENT, Y.APPROVAL_NO, Y.APPROVAL_TIME, Y.CARD_SEED_NO, Y.STATUS
            FROM
            (
            SELECT A.ORDER_ID,
                   sum(decode(b.status,'D1',1,0)) d1_cnt,
                   sum(decode(b.status,'D1',b.TOTAL_AMOUNT,0)) d1_amt,
                   sum(decode(b.status,'D2',1,0)) d2_cnt,
                   sum(decode(b.status,'D2',b.TOTAL_AMOUNT,0)) d2_amt
            FROM   (SELECT 
                           DISTINCT A1.ORDER_ID
                    FROM   OD_ORDER_MAST A1, OD_ORDER_SETL A2, OD_ORDER_ITM A3
                    WHERE  A1.ORDER_ID = A2.ORDER_ID
                    AND    A1.ORDER_ID = A3.ORDER_ID
                    AND    A3.PAVLN_DIV_CD IN ('01', '02', '04', '07','03','05','09')
                    AND    NVL(A2.USE_YN,'Y') = 'Y'
                    AND   A1.ORDER_DATE BETWEEN TO_DATE('2016-10-29', 'YYYY-MM-DD') AND TO_DATE('2016-10-31', 'YYYY-MM-DD') + .99999
                    AND   A1.SETL_MEAN_CD IN ('02','16')
                 ) A,OD_CREDIT_CARD_SETL_INFO B
            WHERE  A.ORDER_ID = B.ORDER_ID
            AND    B.PG_DIV_CD = '10'
            AND    B.ONNURI_YN = 'N'
            GROUP BY A.ORDER_ID) Z, OD_CREDIT_CARD_SETL_INFO Y
            WHERE Z.ORDER_ID = Y.ORDER_ID
            AND   (Z.d1_amt - d2_amt) <> 0
    )               
	]]>
	</select>
	
<!-- 	UNION ALL  -->
<!--     SELECT    '2' GBN, 'D1' STATUS, -->
<!--              B.CARD_NUM as CARD_SEED_NO , -->
<!--              B.VALID_INTERVAL as CARD_VALID_YM ,   -->
<!--              RPAD(SUBSTR(B.AGREE_DATE,1,6),6,' ')|| -->
<!--              '000000' || -->
<!--              RPAD(SUBSTR(AGREE_NUM,1,10),10,' ')|| -->
<!--              '410' || -->
<!--              LPAD(B.TOTAL_TRADE_PRICE,9,'0')|| -->
<!--              LPAD('0',9,'0')|| -->
<!--              LPAD(B.TOTAL_TRADE_PRICE,9,'0')|| -->
<!--              LPAD(SUBSTR(TO_CHAR(B.ALLOT_TIME),1,2),2,'0')|| -->
<!--              RPAD(' ',23,' ') || -->
<!--              ' ' || -->
<!--              '2'|| -->
<!--              DECODE(B.VAN_CODE,'04','N','K') || -->
<!--              SUBSTR(B.accept_num,1,10)|| -->
<!--              RPAD(NVL(B.SHOP_NUM,' '),14,' ')|| -->
<!--              LPAD(NVL(B.BUY_CODE,' '),3,' ')|| -->
<!--              LPAD(NVL(B.BUY_CODE,' '),3,' ')|| -->
<!--              RPAD(LPAD(SUBSTR(TO_CHAR(NVL(TRANS_ID,0)),1,10),10,'0') ,15,' ') || '00A' INFO            -->
<!--     FROM (  -->
<!--              SELECT DISTINCT TO_CHAR(A2.SETL_APPR_DATE,'YYYYMMDD')  ORDER_DATE, A2.ORDER_ID , A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ -->
<!--              FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3 -->
<!--              WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE('2016-10-29', 'YYYY-MM-DD') AND TO_DATE('2016-10-31', 'YYYY-MM-DD') + .99999 -->
<!--              AND  A2.SETL_MEAN_CD IN ('04','17') -->
<!--              AND A2.ORDER_ID = A3.ORDER_ID -->
<!--              AND A3.PAVLN_DIV_CD IN ('01', '02', '04', '07','03','05','09') -->
<!--              AND NVL(A2.USE_YN,'Y') = 'Y' -->
<!--              AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y') -->
<!--            ) A, PCSS_TRANS B -->
<!--     WHERE  A.PURCHASE_ID_SEQ = B.ACCEPT_NUM -->
<!--     AND    B.WORK_FLAG = 'BS' AND B.UNIT_FLAG = 'BA'  -->
<!--     AND    B.REQ_CODE = '0000' AND B.MSG_CODE = 'D1'  -->
<!--     AND    B.BATCH_STATUS_CODE ='1' -->
<!--     AND NOT EXISTS (  -->
<!--                       SELECT 'X'  -->
<!--                       FROM  PCSS_TRANS OP -->
<!--                       WHERE 1=1 -->
<!--                       AND   OP.ORG_AGREE_NUM = B.AGREE_NUM -->
<!--                       AND   OP.ACCEPT_NUM = B.ACCEPT_NUM -->
<!--                       AND   B.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS') -->
<!--                       AND   OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'   -->
<!--                       AND   OP.REQ_CODE = '0000'  -->
<!--                       AND   OP.TRADE_FLAG IN('0', '2') -->
<!--                    ) -->
	
	<update id="modifyCreditEdiKiccPenUpdate" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE  OD_CREDIT_CARD_SETL_INFO
    	SET 	REPLY_CODE = '0000',
	            SCREEN_MSG = '0000',
	        	STATUS     = 'S1',
        		BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
    	WHERE ORDER_ID IN (
	       		 SELECT 
	             		distinct A.ORDER_ID
		         FROM OD_ORDER_MAST A,OD_ORDER_SETL B,OD_CREDIT_CARD_SETL_INFO C
		         WHERE A.ORDER_ID = B.ORDER_ID
	             AND A.ORDER_ID = C.ORDER_ID
	             AND A.SETL_MEAN_CD in ('02','03','08','16')
	             AND A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYY-MM-DD') AND TO_DATE(#searchToDt#, 'YYYY-MM-DD') + .99999
	             AND nvl(B.USE_YN,'Y') = 'Y'
    		)
		]]>
	</update>
	
	<update id="modifyCreditEdiPmtPenUpdate" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	OD_ORDER_SETL
    	SET 	SETL_STUS_CD = '2200',
        		RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
    	WHERE 	ORDER_ID IN (
			       SELECT 
			             distinct A.ORDER_ID
			       FROM OD_ORDER_MAST A,OD_ORDER_SETL B,OD_CREDIT_CARD_SETL_INFO C
			       WHERE A.ORDER_ID = B.ORDER_ID
			       AND A.ORDER_ID = C.ORDER_ID
			       AND A.SETL_MEAN_CD in ('02','03','08','16')
			       AND A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
			       AND nvl(B.USE_YN,'Y') = 'Y'
    	)
    	AND NVL(USE_YN,'Y') = 'Y'
		]]>
	</update>
	
	<update id="modifyCreditPRRWT0700PoolUpdate" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	PRRWT0700 B1
    	SET 	B1.BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD'),
        		B1.CLOSEDIVCD = '11'
    	WHERE 	B1.RECEVNO IN (
        		 SELECT DISTINCT A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ
	             FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3
	             WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
	             AND  A2.SETL_MEAN_CD in ('04','17') 
	             and A2.ORDER_ID = A3.ORDER_ID
	             and nvl(A2.USE_YN,'Y') = 'Y'
	             AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y')
    			)
    	AND 	B1.SETLSYSCD = 'BS' AND B1.BIZDIVCD = 'BA'      
      	AND 	B1.CLOSEDIVCD ='1' and B1.CARDDEALDIVCD <> '0' and B1.DEALSTUSCD = 'S'
      	AND 	NOT EXISTS ( 
                       SELECT 'X' 
                       FROM  PCSS_TRANS OP
                       WHERE 1=1
                       AND   OP.ORG_AGREE_NUM = B1.CREDITCARDAPPRNO
                       AND   OP.accept_num = B1.RECEVNO
                       AND   OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'  
                       AND   OP.REQ_CODE = '0000' 
                       AND   OP.TRADE_FLAG IN('0', '2')
                     )
		]]>
<!-- 		OD_ORDER_SETL, OD_ORDER_ITM seq 조인제거 -->
	</update>
	
	<update id="modifyCreditPCSS_TRANSPoolUpdate" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE 	PCSS_TRANS B1
    	SET 	B1.BATCH_STATUS_CODE = '11',
        		B1.BATCH_START_DATE = SYSDATE
    	WHERE 	B1.ACCEPT_NUM in (
        		 SELECT DISTINCT A2.ORDER_ID || A2.SETL_SEQ PURCHASE_ID_SEQ
	             FROM OD_ORDER_SETL A2, OD_ORDER_ITM A3
	             WHERE  A2.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
	             AND  A2.SETL_MEAN_CD IN ('04','17') 
	             and A2.ORDER_ID = A3.ORDER_ID
	             and nvl(A2.USE_YN,'Y') = 'Y'
	             AND NOT (A3.ORDER_STUS_CD != 'O06' AND A3.GOODS_CANCEL_YN = 'Y' AND A3.RETRNGD_YN = 'Y')
    			)
    	AND  	B1.WORK_FLAG = 'BS'  AND B1.UNIT_FLAG = 'BA'  
    	AND  	B1.REQ_CODE = '0000' AND B1.MSG_CODE = 'D1'
      	AND  	B1.BATCH_STATUS_CODE ='1'
      	AND 	NOT EXISTS ( 
                        SELECT 'X' 
                        FROM PCSS_TRANS OP
                        WHERE 1=1
                        AND OP.ORG_AGREE_NUM = B1.AGREE_NUM
                        AND OP.ACCEPT_NUM = B1.ACCEPT_NUM
                        AND B1.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS')
                        AND OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'  
                        AND OP.REQ_CODE = '0000' 
                        AND OP.TRADE_FLAG IN('0', '2')
                     )
		]]>
		<!-- 		OD_ORDER_SETL, OD_ORDER_ITM seq 조인제거 -->
	</update>
	
	<!-- 복합결제 (매입)내역 건수 -->
	<select id="selectDepotWtdwContSmTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT COUNT(*) FROM (
			SELECT  A.TRN_DATE 
		          , NVL(SUM(A.CCD_AMT), 0) AS CCD_AMT
		          , NVL(SUM(A.ACCT_AMT1), 0) AS ACCT_AMT1
		          , NVL(SUM(A.ACCT_AMT2), 0) AS ACCT_AMT2
		          , NVL(SUM(A.CSH_AMT), 0) AS CSH_AMT
		          , NVL(SUM(A.ONNU_AMT), 0) AS ONNU_AMT          
		          , NVL(SUM(A.PAY_AMT1), 0) AS PAY_AMT1
		          , NVL(SUM(A.PAY_AMT2), 0) AS PAY_AMT2
		          , NVL(SUM(A.PAY_AMT3), 0) AS PAY_AMT3
		          , NVL(SUM(A.PAY_AMT4), 0) AS PAY_AMT4
		          , NVL(SUM(A.PAY_AMT5), 0) AS PAY_AMT5
		          , NVL(SUM(A.PAY_AMT6), 0) AS PAY_AMT6
		          , NVL(SUM(A.PAY_AMT7), 0) AS PAY_AMT7
		          , NVL(SUM(A.PAY_AMT8), 0) AS PAY_AMT8
		          , NVL(SUM(A.PAY_AMT9), 0) AS PAY_AMT9
		          , NVL(SUM(A.SELL_AMT), 0) AS SELL_AMT
		          , NVL(SUM(A.RDF_AMT), 0) AS RDF_AMT
		          , NVL(SUM(A.TS_FEE), 0) AS TS_FEE
		          , NVL(SUM(A.CVS_CNT), 0) AS CVS_CNT
		          , NVL(SUM(A.CVS_FEE), 0) AS CVS_FEE
	    	FROM   (
	             	SELECT TO_CHAR(O.APPR_DATE,'YYYYMMDD') AS TRN_DATE
		                 , SUM(DECODE(C.SETL_MEAN_CD, '02', NVL(SETL_APPR_AMT, 0) , 0)) AS CCD_AMT            /*신용카드*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '05', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT1          /*계좌이체(우체국)*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '06', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT2          /*계좌이체(이니시스)*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '01', NVL(SETL_APPR_AMT, 0) , 0)) AS CSH_AMT            /*무통장입금*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '08', NVL(SETL_APPR_AMT, 0) , 0)) AS ONNU_AMT           /*온누리전자상품권*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '07', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT1           /*PayPal*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '20', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT2           /*카카오페이*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '21', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT3           /*POSTmPAY*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '22', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT4           /*Syrup Pay*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '23', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT5           /*NAVER Pay*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '24', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT6           /*Paynow*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '25', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT7           /*PAYCO*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '26', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT8           /*뱅크월넷카카오*/
		                 , SUM(DECODE(C.SETL_MEAN_CD, '27', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT9           /*알리페이*/
		                 , 0 AS SELL_AMT                
		                 , 0 AS RDF_AMT
		                 , 0 AS TS_FEE
		                 , 0 AS CVS_CNT
		                 , 0 AS CVS_FEE
	            	FROM OD_ORDER_SETL C, 
	            	     (
	            	     SELECT DISTINCT A.ORDER_ID, A.APPR_DATE
	            	     FROM   OD_ORDER_MAST A, OD_ORDER_ITM B
	            	     WHERE  A.ORDER_ID = B.ORDER_ID
	            	     ]]>
	            	     <isEqual property="searchType" compareValue="epost">
	            	     AND    B.PAVLN_ID NOT IN ('03')
	            	     </isEqual>
	            	     <isEqual property="searchType" compareValue="escrow">
	            	     AND    B.PAVLN_ID IN ('03')
	            	     </isEqual>
	            	     <![CDATA[
	            	     ) O
	            	WHERE 1=1
	              	AND C.ORDER_ID = O.ORDER_ID
	              	AND C.SETL_STUS_CD IN('2100')
	              	AND O.APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
	            	GROUP BY TO_CHAR(O.APPR_DATE,'YYYYMMDD')
	            	]]>
	            	<isNotEqual property="searchType" compareValue="epost">
	            	<![CDATA[
	            	UNION ALL
	            	SELECT SUBSTR(ADJ_PAY_DATE, 1, 8) AS TRN_DATE
		                 , 0 AS CCD_AMT
		                 , 0 AS ACCT_AMT1
		                 , 0 AS ACCT_AMT2
		                 , 0 AS CSH_AMT
		                 , 0 AS ONNU_AMT
		                 , 0 AS PAY_AMT1
		                 , 0 AS PAY_AMT2
		                 , 0 AS PAY_AMT3
		                 , 0 AS PAY_AMT4
		                 , 0 AS PAY_AMT5
		                 , 0 AS PAY_AMT6
		                 , 0 AS PAY_AMT7
		                 , 0 AS PAY_AMT8
		                 , 0 AS PAY_AMT9
		                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', NVL(ADJ_AMT, 0) , 0)) AS SELL_AMT 		/*판매대금(출금)*/
		                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', 0 , NVL(ADJ_AMT, 0))) AS RDF_AMT  		/*환불대금(출금)*/
		                 , 0 AS TS_FEE
		                 , 0 AS CVS_CNT
		                 , 0 AS CVS_FEE
	            	FROM ST_ESC_ADJ_LDG C
	            	WHERE 1=1
	              	AND ADJ_PAY_TP IN('SA', 'RR', 'RC')
	              	AND ADJ_PAY_DATE BETWEEN #searchFromDt# ||'000000' AND #searchToDt# ||'999999'
	              	AND ADJ_TGT_TP = 'AA'
	            	GROUP BY SUBSTR(ADJ_PAY_DATE, 1, 8)
	            	]]>
	            	</isNotEqual>
	            	<isNotEqual property="searchType" compareValue="escrow">
	            	<![CDATA[
	            	UNION ALL
	                SELECT COMPLETE_DATE AS TRN_DATE
	                     , 0 AS CCD_AMT
	                     , 0 AS ACCT_AMT1
	                     , 0 AS ACCT_AMT2
	                     , 0 AS CSH_AMT
	                     , 0 AS ONNU_AMT
	                     , 0 AS PAY_AMT1
	                     , 0 AS PAY_AMT2
	                     , 0 AS PAY_AMT3
	                     , 0 AS PAY_AMT4
	                     , 0 AS PAY_AMT5
	                     , 0 AS PAY_AMT6
	                     , 0 AS PAY_AMT7
	                     , 0 AS PAY_AMT8
	                     , 0 AS PAY_AMT9
	                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 
	                                             CASE
	                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
	                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
	                                            END
	                      , 0)),0) AS SELL_AMT         /*판매대금(출금)*/
	                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 0 , 
	                                             CASE
	                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
	                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
	                                            END
	                     )),0) AS RDF_AMT          /*환불대금(출금)*/
	                     , 0 AS TS_FEE
	                     , 0 AS CVS_CNT
	                     , 0 AS CVS_FEE
	                FROM ST_ADJ_GOODS C 
	                WHERE 1=1
	                AND COMPLETE_DATE BETWEEN #searchFromDt# AND #searchToDt#
	                GROUP BY COMPLETE_DATE
	                ]]>
	        		</isNotEqual>
	        <![CDATA[       
		    ) A
		    GROUP BY TRN_DATE
		    ORDER BY A.TRN_DATE DESC    
	    )
		]]>
	</select>
	
	<!-- 복합결제 (매입)내역 조회 -->
	<select id="selectDepotWtdwContSmList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		<![CDATA[
		SELECT  A.TRN_DATE 
	          , NVL(SUM(A.CCD_AMT), 0) AS CCD_AMT
	          , NVL(SUM(A.ACCT_AMT1), 0) AS ACCT_AMT1
	          , NVL(SUM(A.ACCT_AMT2), 0) AS ACCT_AMT2
	          , NVL(SUM(A.CSH_AMT), 0) AS CSH_AMT
	          , NVL(SUM(A.ONNU_AMT), 0) AS ONNU_AMT          
	          , NVL(SUM(A.PAY_AMT1), 0) AS PAY_AMT1
	          , NVL(SUM(A.PAY_AMT2), 0) AS PAY_AMT2
	          , NVL(SUM(A.PAY_AMT3), 0) AS PAY_AMT3
	          , NVL(SUM(A.PAY_AMT4), 0) AS PAY_AMT4
	          , NVL(SUM(A.PAY_AMT5), 0) AS PAY_AMT5
	          , NVL(SUM(A.PAY_AMT6), 0) AS PAY_AMT6
	          , NVL(SUM(A.PAY_AMT7), 0) AS PAY_AMT7
	          , NVL(SUM(A.PAY_AMT8), 0) AS PAY_AMT8
	          , NVL(SUM(A.PAY_AMT9), 0) AS PAY_AMT9
	          , NVL(SUM(A.SELL_AMT), 0) AS SELL_AMT
	          , NVL(SUM(A.RDF_AMT), 0) AS RDF_AMT
	          , NVL(SUM(A.TS_FEE), 0) AS TS_FEE
	          , NVL(SUM(A.CVS_CNT), 0) AS CVS_CNT
	          , NVL(SUM(A.CVS_FEE), 0) AS CVS_FEE
    	FROM   (
             	SELECT TO_CHAR(O.APPR_DATE,'YYYYMMDD') AS TRN_DATE
	                 , SUM(DECODE(C.SETL_MEAN_CD, '02', NVL(SETL_APPR_AMT, 0) , 0)) AS CCD_AMT            /*신용카드*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '05', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT1          /*계좌이체(우체국)*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '06', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT2          /*계좌이체(이니시스)*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '01', NVL(SETL_APPR_AMT, 0) , 0)) AS CSH_AMT            /*무통장입금*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '08', NVL(SETL_APPR_AMT, 0) , 0)) AS ONNU_AMT           /*온누리전자상품권*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '07', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT1           /*PayPal*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '20', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT2           /*카카오페이*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '21', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT3           /*POSTmPAY*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '22', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT4           /*Syrup Pay*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '23', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT5           /*NAVER Pay*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '24', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT6           /*Paynow*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '25', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT7           /*PAYCO*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '26', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT8           /*뱅크월넷카카오*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '27', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT9           /*알리페이*/
	                 , 0 AS SELL_AMT                
	                 , 0 AS RDF_AMT
	                 , 0 AS TS_FEE
	                 , 0 AS CVS_CNT
	                 , 0 AS CVS_FEE
            	FROM OD_ORDER_SETL C, 
            		(
            	     SELECT DISTINCT A.ORDER_ID, A.APPR_DATE
            	     FROM   OD_ORDER_MAST A, OD_ORDER_ITM B
            	     WHERE  A.ORDER_ID = B.ORDER_ID
            	     ]]>
            	     <isEqual property="searchType" compareValue="epost">
            	     AND    B.PAVLN_ID NOT IN ('03')
            	     </isEqual>
            	     <isEqual property="searchType" compareValue="escrow">
            	     AND    B.PAVLN_ID IN ('03')
            	     </isEqual>
            	     <![CDATA[
            	     ) O
            	WHERE 1=1
              	AND C.ORDER_ID = O.ORDER_ID
              	AND C.SETL_STUS_CD IN('2100')
              	AND O.APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
            	GROUP BY TO_CHAR(O.APPR_DATE,'YYYYMMDD')
            	]]>
            	<isNotEqual property="searchType" compareValue="epost">
            	<![CDATA[
            	UNION ALL
            	SELECT SUBSTR(ADJ_PAY_DATE, 1, 8) AS TRN_DATE
	                 , 0 AS CCD_AMT
	                 , 0 AS ACCT_AMT1
	                 , 0 AS ACCT_AMT2
	                 , 0 AS CSH_AMT
	                 , 0 AS ONNU_AMT
	                 , 0 AS PAY_AMT1
	                 , 0 AS PAY_AMT2
	                 , 0 AS PAY_AMT3
	                 , 0 AS PAY_AMT4
	                 , 0 AS PAY_AMT5
	                 , 0 AS PAY_AMT6
	                 , 0 AS PAY_AMT7
	                 , 0 AS PAY_AMT8
	                 , 0 AS PAY_AMT9
	                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', NVL(ADJ_AMT, 0) , 0)) AS SELL_AMT 		/*판매대금(출금)*/
	                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', 0 , NVL(ADJ_AMT, 0))) AS RDF_AMT  		/*환불대금(출금)*/
	                 , 0 AS TS_FEE
	                 , 0 AS CVS_CNT
	                 , 0 AS CVS_FEE
            	FROM ST_ESC_ADJ_LDG C
            	WHERE 1=1
              	AND ADJ_PAY_TP IN('SA', 'RR', 'RC')
              	AND ADJ_PAY_DATE BETWEEN #searchFromDt# ||'000000' AND #searchToDt# ||'999999'
              	AND ADJ_TGT_TP = 'AA'
            	GROUP BY SUBSTR(ADJ_PAY_DATE, 1, 8)
            	]]>
            	</isNotEqual>
            	<isNotEqual property="searchType" compareValue="escrow">
            	<![CDATA[
            	UNION ALL
                SELECT COMPLETE_DATE AS TRN_DATE
                     , 0 AS CCD_AMT
                     , 0 AS ACCT_AMT1
                     , 0 AS ACCT_AMT2
                     , 0 AS CSH_AMT
                     , 0 AS ONNU_AMT
                     , 0 AS PAY_AMT1
                     , 0 AS PAY_AMT2
                     , 0 AS PAY_AMT3
                     , 0 AS PAY_AMT4
                     , 0 AS PAY_AMT5
                     , 0 AS PAY_AMT6
                     , 0 AS PAY_AMT7
                     , 0 AS PAY_AMT8
                     , 0 AS PAY_AMT9
                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 
                                             CASE
                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                            END
                      , 0)),0) AS SELL_AMT         /*판매대금(출금)*/
                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 0 , 
                                             CASE
                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                            END
                     )),0) AS RDF_AMT          /*환불대금(출금)*/
                     , 0 AS TS_FEE
                     , 0 AS CVS_CNT
                     , 0 AS CVS_FEE
                FROM ST_ADJ_GOODS C 
                WHERE 1=1
                AND COMPLETE_DATE BETWEEN #searchFromDt# AND #searchToDt#
                GROUP BY COMPLETE_DATE
                ]]>
        		</isNotEqual>
        <![CDATA[       
	    ) A
	    GROUP BY TRN_DATE
	    ORDER BY A.TRN_DATE DESC    
		]]>
		<include refid="pagingFooter"/>
	</select>
	
	<select id="selectDepotWtdwContSmExcelList" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT  A.TRN_DATE 
	          , NVL(SUM(A.CCD_AMT), 0) AS CCD_AMT
	          , NVL(SUM(A.ACCT_AMT1), 0) AS ACCT_AMT1
	          , NVL(SUM(A.ACCT_AMT2), 0) AS ACCT_AMT2
	          , NVL(SUM(A.CSH_AMT), 0) AS CSH_AMT
	          , NVL(SUM(A.ONNU_AMT), 0) AS ONNU_AMT          
	          , NVL(SUM(A.PAY_AMT1), 0) AS PAY_AMT1
	          , NVL(SUM(A.PAY_AMT2), 0) AS PAY_AMT2
	          , NVL(SUM(A.PAY_AMT3), 0) AS PAY_AMT3
	          , NVL(SUM(A.PAY_AMT4), 0) AS PAY_AMT4
	          , NVL(SUM(A.PAY_AMT5), 0) AS PAY_AMT5
	          , NVL(SUM(A.PAY_AMT6), 0) AS PAY_AMT6
	          , NVL(SUM(A.PAY_AMT7), 0) AS PAY_AMT7
	          , NVL(SUM(A.PAY_AMT8), 0) AS PAY_AMT8
	          , NVL(SUM(A.PAY_AMT9), 0) AS PAY_AMT9
	          , NVL(SUM(A.SELL_AMT), 0) AS SELL_AMT
	          , NVL(SUM(A.RDF_AMT), 0) AS RDF_AMT
	          , NVL(SUM(A.TS_FEE), 0) AS TS_FEE
	          , NVL(SUM(A.CVS_CNT), 0) AS CVS_CNT
	          , NVL(SUM(A.CVS_FEE), 0) AS CVS_FEE
    	FROM   (
             	SELECT TO_CHAR(O.APPR_DATE,'YYYYMMDD') AS TRN_DATE
	                 , SUM(DECODE(C.SETL_MEAN_CD, '02', NVL(SETL_APPR_AMT, 0) , 0)) AS CCD_AMT            /*신용카드*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '05', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT1          /*계좌이체(우체국)*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '06', NVL(SETL_APPR_AMT, 0) , 0)) AS ACCT_AMT2          /*계좌이체(이니시스)*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '01', NVL(SETL_APPR_AMT, 0) , 0)) AS CSH_AMT            /*무통장입금*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '08', NVL(SETL_APPR_AMT, 0) , 0)) AS ONNU_AMT           /*온누리전자상품권*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '07', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT1           /*PayPal*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '20', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT2           /*카카오페이*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '21', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT3           /*POSTmPAY*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '22', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT4           /*Syrup Pay*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '23', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT5           /*NAVER Pay*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '24', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT6           /*Paynow*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '25', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT7           /*PAYCO*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '26', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT8           /*뱅크월넷카카오*/
	                 , SUM(DECODE(C.SETL_MEAN_CD, '27', NVL(SETL_APPR_AMT, 0) , 0)) AS PAY_AMT9           /*알리페이*/
	                 , 0 AS SELL_AMT                
	                 , 0 AS RDF_AMT
	                 , 0 AS TS_FEE
	                 , 0 AS CVS_CNT
	                 , 0 AS CVS_FEE
            	FROM OD_ORDER_SETL C, 
            		 (
            	     SELECT DISTINCT A.ORDER_ID, A.APPR_DATE
            	     FROM   OD_ORDER_MAST A, OD_ORDER_ITM B
            	     WHERE  A.ORDER_ID = B.ORDER_ID
            	     ]]>
            	     <isEqual property="searchType" compareValue="epost">
            	     AND    B.PAVLN_ID NOT IN ('03')
            	     </isEqual>
            	     <isEqual property="searchType" compareValue="escrow">
            	     AND    B.PAVLN_ID IN ('03')
            	     </isEqual>
            	     <![CDATA[
            	     ) O
            	WHERE 1=1
              	AND C.ORDER_ID = O.ORDER_ID
              	AND C.SETL_STUS_CD IN('2100')
              	AND O.APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
            	GROUP BY TO_CHAR(O.APPR_DATE,'YYYYMMDD')
            	]]>
            	<isNotEqual property="searchType" compareValue="epost">
            	<![CDATA[
            	UNION ALL
            	SELECT SUBSTR(ADJ_PAY_DATE, 1, 8) AS TRN_DATE
	                 , 0 AS CCD_AMT
	                 , 0 AS ACCT_AMT1
	                 , 0 AS ACCT_AMT2
	                 , 0 AS CSH_AMT
	                 , 0 AS ONNU_AMT
	                 , 0 AS PAY_AMT1
	                 , 0 AS PAY_AMT2
	                 , 0 AS PAY_AMT3
	                 , 0 AS PAY_AMT4
	                 , 0 AS PAY_AMT5
	                 , 0 AS PAY_AMT6
	                 , 0 AS PAY_AMT7
	                 , 0 AS PAY_AMT8
	                 , 0 AS PAY_AMT9
	                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', NVL(ADJ_AMT, 0) , 0)) AS SELL_AMT 		/*판매대금(출금)*/
	                 , SUM(DECODE(C.ADJ_PAY_TP, 'SA', 0 , NVL(ADJ_AMT, 0))) AS RDF_AMT  		/*환불대금(출금)*/
	                 , 0 AS TS_FEE
	                 , 0 AS CVS_CNT
	                 , 0 AS CVS_FEE
            	FROM ST_ESC_ADJ_LDG C
            	WHERE 1=1
              	AND ADJ_PAY_TP IN('SA', 'RR', 'RC')
              	AND ADJ_PAY_DATE BETWEEN #searchFromDt# ||'000000' AND #searchToDt# ||'999999'
              	AND ADJ_TGT_TP = 'AA'
            	GROUP BY SUBSTR(ADJ_PAY_DATE, 1, 8)
            	]]>
            	</isNotEqual>
            	<isNotEqual property="searchType" compareValue="escrow">
            	<![CDATA[
            	UNION ALL
                SELECT COMPLETE_DATE AS TRN_DATE
                     , 0 AS CCD_AMT
                     , 0 AS ACCT_AMT1
                     , 0 AS ACCT_AMT2
                     , 0 AS CSH_AMT
                     , 0 AS ONNU_AMT
                     , 0 AS PAY_AMT1
                     , 0 AS PAY_AMT2
                     , 0 AS PAY_AMT3
                     , 0 AS PAY_AMT4
                     , 0 AS PAY_AMT5
                     , 0 AS PAY_AMT6
                     , 0 AS PAY_AMT7
                     , 0 AS PAY_AMT8
                     , 0 AS PAY_AMT9
                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 
                                             CASE
                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                            END
                      , 0)),0) AS SELL_AMT         /*판매대금(출금)*/
                     , NVL(SUM(DECODE(C.GOODS_CANCEL_YN, 'N', 0 , 
                                             CASE
                                              WHEN COMPLETE_DATE < '20130121' THEN (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - DECODE(PAVLN_DIV_CD, '02', 0, NVL(FEE_AMOUNT,0)) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                              ELSE (NVL(GOODS_AMOUNT,0) - NVL(CSF_FEE,0) - NVL(PO_FEE,0) - NVL(MART_FEE,0) - NVL(FEE_AMOUNT,0) - NVL(AMOUNT_COUPON_BIZ,0) - NVL(RET_AMOUNT,0) - NVL(DEFICIT_AMOUNT,0) - NVL(LATER_PRCL_PRC,0)) + (NVL(REFUND_CARD_SETL_FEE,0) + NVL(DEFICIT_CARD_SETL_FEE,0)) - (NVL(REFUND_GOODS_AMT,0) - NVL(REFUND_CSF_FEE,0))
                                            END
                     )),0) AS RDF_AMT          /*환불대금(출금)*/
                     , 0 AS TS_FEE
                     , 0 AS CVS_CNT
                     , 0 AS CVS_FEE
                FROM ST_ADJ_GOODS C 
                WHERE 1=1
                AND COMPLETE_DATE BETWEEN #searchFromDt# AND #searchToDt#
                GROUP BY COMPLETE_DATE
                ]]>
        		</isNotEqual>
        <![CDATA[       
	    ) A
	    GROUP BY TRN_DATE
	    ORDER BY A.TRN_DATE DESC    
		]]>
	</select>
	<sql id="AdjRemitSuppCompMgrCondition">
				<isEqual property="searchDayDiv" compareValue="adjEndDay">
					<isNotEmpty property="startDate" >
			   			<isNotEmpty property="endDate" prepend="AND">
			        A.ADJ_END_DAY BETWEEN TO_DATE(#startDate# ||'000000','YYYY-MM-DDHH24MISS')
			                              AND TO_DATE(#endDate# ||'235959','YYYY-MM-DDHH24MISS') 
			            </isNotEmpty>
					</isNotEmpty>
				</isEqual>
				<isEqual property="searchDayDiv" compareValue="sdtime">
					<isNotEmpty property="startDate" >
			   			<isNotEmpty property="endDate" prepend="AND">
			        A.REMIT_SDTIME BETWEEN TO_DATE(#startDate# ||'000000','YYYY-MM-DDHH24MISS')
			                              AND TO_DATE(#endDate# ||'235959','YYYY-MM-DDHH24MISS') 
			            </isNotEmpty>
					</isNotEmpty>
				</isEqual>
				<isEqual property="searchDayDiv" compareValue="plantime">
					<isNotEmpty property="startDate" >
			   			<isNotEmpty property="endDate" prepend="AND">
			        A.REMIT_PLAN_DTIME BETWEEN TO_DATE(#startDate# ||'000000','YYYY-MM-DDHH24MISS')
			                              AND TO_DATE(#endDate# ||'235959','YYYY-MM-DDHH24MISS') 
			            </isNotEmpty>
					</isNotEmpty>
				</isEqual>
				<!-- 송금상태 종류 -->
				<isNotEmpty property="remitStatKey" prepend="AND" >
				    A.REMIT_STUS_CD  = #remitStatKey#
				</isNotEmpty>
				<!-- 공급업체번호 -->
				<isNotEmpty property="suppCompId" prepend="AND" >
						A.SUPP_COMP_ID  = #suppCompId#
				</isNotEmpty>
				<isNotEmpty property="shopType" prepend="AND" >
					    A.PAVLN_DIV_CD =#shopType#
				</isNotEmpty>
				<!-- 검색구분 -->
				<isNotEmpty property="searchKey" >
					<!-- 예금주 -->
					<isEqual property="searchKey" prepend="AND" compareValue="deposit">
						A.DEPOSIT  LIKE '%'|| #searchText# || '%'
					</isEqual>
					<isEqual property="searchKey" prepend="AND" compareValue="bankNm">
						BANK.COMN_CD_NM  LIKE '%'|| #searchText# || '%'
					</isEqual>
				</isNotEmpty>
	</sql> 
	
	<!-- 공급업체 송금관리목록 조회 -->
	<select id="selectAdjRemitSuppCompMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT /* QUERYID(selectAdjRemitSuppCompMgrListTotCnt) */ 		 	 
		 	  COUNT(*) CNT
		  FROM ST_ADJ_REMIT_INFO	A, CO_SUPP_COMP_MAST B	
		  ,(SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'BANK_CD') BANK
		 WHERE 1=1
		 		AND A.BANK_CD = BANK.COMN_CD_ID(+)
		 		AND A.SUPP_COMP_ID = B.SUPP_COMP_ID(+) 
		   		<include refid="AdjRemitSuppCompMgrCondition"/>
	</select>
	<select id="selectAdjRemitSuppCompMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		 SELECT /* QUERYID(selectAdjRemitSuppCompMgrList) */ 
		       ADJ_START_DAY						/* 정산시작일 */
		     , ADJ_END_DAY						    /* 정산마감일 */
		     , ADJ_CHASU							/* 정산차수*/
		     , A.REMIT_STUS_CD								AS REMIT_CD /* 송금상태코드 */
		     , REMIT_STUS.COMN_CD_NM                          AS REMIT_NM /* 송금상태명 */		       
		     , TO_CHAR(A.REMIT_EDTIME, 'YYYY-MM-DD HH24:MI:SS') REMIT_EDTIME		/* 송금일자 */
		     , A.SUPP_COMP_ID							AS SUPP_COMP_ID			/* 거래처번호 */
		     , B.BCNC_NM		                    AS SUPP_COMP_NM		/* 거래처명*/
		     , SUBSTR(A.BANK_CD,2,3) BANK_CD							/* 은행코드 */
		     , BANK.COMN_CD_NM BANK_NM			/* 은행명 */
		     , A.DEPOSIT							/* 예금주 */
		     , A.ACCOUNT_NO						/* 계좌번호 */
		     , A.REMIT_AMT						/* 송금금액 */
		     , A.REMIT_CMSN_AMT					/* 송금수수료 */
		     , TO_CHAR(A.REMIT_PLAN_DTIME, 'YYYY-MM-DD HH24:MI:SS')	 REMIT_PLAN_DTIME	/* 송금예정일자 */	
		     , A.PAVLN_DIV_CD
		     , PAVLN_DIV.COMN_CD_NM PAVLN_DIV_NM /*매장명*/	  
		FROM ST_ADJ_REMIT_INFO	A, CO_SUPP_COMP_MAST B		 
		  , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'BANK_CD') BANK
		  , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'REMIT_STUS_CD') REMIT_STUS
		  , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'PAVLN_DIV_CD') PAVLN_DIV
		 WHERE 1=1
		 		AND A.BANK_CD = BANK.COMN_CD_ID(+)
		 		AND A.SUPP_COMP_ID = B.SUPP_COMP_ID(+) 
		 		AND A.REMIT_STUS_CD = REMIT_STUS.COMN_CD_ID(+)
		 		AND A.PAVLN_DIV_CD = PAVLN_DIV.COMN_CD_ID(+)
		 		<include refid="AdjRemitSuppCompMgrCondition"/>
		<include refid="pagingFooter"/>
	</select>
	<select id="selectGoodsCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(SUM(GOODS_CNT),0) CNT FROM ST_ADJ_GOODS WHERE COMPLETE_DATE BETWEEN #startDate# AND #endDate#  
		<isNotEmpty property="shopType" prepend="AND" >
			PAVLN_DIV_CD =#shopType#
		</isNotEmpty>
		<isEmpty property="shopType" prepend="AND" >
			PAVLN_DIV_CD IN ('03','05','08')
		</isEmpty>
	</select>
	<select id="selectAdjRemitSuppCompSummeryList"  parameterClass="java.util.HashMap" resultClass="commMap">
			SELECT /* QUERYID(selectAdjRemitSuppCompSummeryList) */ 			   
			   TO_CHAR(TO_DATE(#startDate#,'YYYY-MM-DD'),'YYYY-MM-DD') || '~' || TO_CHAR(TO_DATE(#endDate#,'YYYY-MM-DD'),'YYYY-MM-DD')	AS SEARCH_DATE
		     , NVL(SUM(remitAmt10)	,0)											AS REMIT_AMT10
		     , NVL(SUM(remitAmt20)	,0)											AS REMIT_AMT20
		     , NVL(SUM(remitAmt30)	,0)											AS REMIT_AMT30
		     , NVL(SUM(remitAmt40)	,0)											AS REMIT_AMT40
		     , NVL(SUM(remitAmt10) + SUM(remitAmt20) + SUM(remitAmt30) + SUM(remitAmt40),0)			AS REMIT_AMT_TOT
		  FROM (
		
				SELECT ADJ_START_DAY							AS startDay			/* 정산시작일 */
				     , ADJ_END_DAY							    AS endDay			/* 정산마감일 */
				     , REMIT_STUS_CD								AS remitCd			/* 송금상태코드 */
				     , REMIT_AMT							AS remitAmt			/* 송금금액 */
		             , DECODE(REMIT_STUS_CD,'01',REMIT_AMT,0)	AS remitAmt10		/* 지급대기 */
		             , DECODE(REMIT_STUS_CD,'03',REMIT_AMT,0)	AS remitAmt20		/* 송금보류 */
		             , DECODE(REMIT_STUS_CD,'04',REMIT_AMT,0)	AS remitAmt30		/* 송금완료 */
		             , DECODE(REMIT_STUS_CD,'02',REMIT_AMT,'05',REMIT_AMT,0)	AS remitAmt40		/* 송금실패,재시도 */
				 FROM ST_ADJ_REMIT_INFO	A, CO_SUPP_COMP_MAST B		 
				  ,(SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'BANK_CD') BANK
				  ,(SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'REMIT_STUS_CD') REMIT_STUS
				 WHERE 1=1
				 		AND A.BANK_CD = BANK.COMN_CD_ID(+)
		 				AND A.SUPP_COMP_ID = B.SUPP_COMP_ID(+)
		 				AND A.REMIT_STUS_CD = REMIT_STUS.COMN_CD_ID(+)
				 <include refid="AdjRemitSuppCompMgrCondition"/>
				  )  		
	</select>
	<insert id="insertRtmHist" parameterClass="java.util.HashMap">
		INSERT INTO ST_RTM_HIST (
			/* [송금이력 저장] SQL ID : insertRtmHist */ 
			  RMT_SEQ
			, RMT_REQ_NO
			, RMT_DIV_CD
			, RMT_ORG_NO
			, OUT_BANK_CD
			, OUT_ACCOUNT_NO
			, OUT_ACCOUNT_HD
			, OUT_AMOUNT
			, OUT_DATE
			, IN_BANK_CD
			, IN_ACCOUNT_NO
			, IN_ACCOUNT_HD
			, IN_AMOUNT
			, IN_DATE
			, STATUS_CD
			, RESP_CODE
			, ERR_MSG
			, SYS_REGR_ID
			, SYS_REG_DTIME
			, SYS_MODR_ID
			, SYS_MOD_DTIME
		) VALUES (
			   (SELECT MAX(NVL(RMT_SEQ,0))+1 FROM ST_RTM_HIST)
			, #rmtReqNo#
			, #rmtDivCd#
			, #rmtOrgNo#
			, #outBankCd#
			, #outAccountNo#
			, #outAccountHd#
			, #outAmount#
			, SYSDATE
			, #inBankCd#
			, #inAccountNo#
			, #inAccountHd#
			, #inAmount#
			, SYSDATE
			, #statusCd#
			, #respCode#
			, #errMsg#
			, #sysRegrId#
			, SYSDATE
			, #sysModrId#
			, SYSDATE
		)
	</insert>
	<!-- 송금상태 저장 ( update ): Query -->
	<update id="updateAdjSuppRemit">	
		UPDATE ST_ADJ_REMIT_INFO /* QUERYID(updateAdjSuppRemit) */
		   SET REMIT_STUS_CD      = #remitCd#
		   <isNotEmpty property="remitCd">
			<isEqual property="remitCd" compareValue="30">	<!-- 송금완료 -->
		     , REMIT_SDTIME  = SYSDATE
		     , REMIT_EDTIME  = SYSDATE
			</isEqual>
		   </isNotEmpty>
		     , SYS_MODR_ID   = #sysModrId#
		     , SYS_MOD_DTIME = SYSDATE
		 WHERE ADJ_START_DAY = #adjStartDay#
		   AND ADJ_END_DAY  = #adjEndDay#
		   AND ADJ_CHASU = #adjChasu#
		   AND SUPP_COMP_ID    = #suppCompId#
		   AND PAVLN_DIV_CD = #pavlnDivCd#
	</update>
	
		<!-- 공급정산 완료후 주문정산 원부 업데이트  -->
	<update id="updateDoneAdjGoodsESC" parameterClass="java.util.HashMap">	
    <![CDATA[
		UPDATE ST_ADJ_GOODS SET 
			ADJ_STUS_CD = '002'
			, ADJ_TREAT_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE 1=1
				AND SUPP_COMP_ID = #suppCompId#
				AND PAVLN_DIV_CD IN('03', '09', '05') /*생활마트,패션B2C,전통시장*/ 
				AND COMPLETE_DATE BETWEEN #adjStartDay#||'000000' AND #adjEndDay#||'999999'      
    ]]>			
	</update> 
	
	<!-- 공급정산 완료후 주문 원부 업데이트  -->
	<update id="updateDoneOdOrderItmESC" parameterClass="java.util.HashMap">	
    <![CDATA[
		UPDATE OD_ORDER_ITM A SET 
			ADJ_YN = 'Y' /*정산여부*/
			, ADJ_DATE  = TO_CHAR(SYSDATE, 'YYYYMMDD')  /*컬럼없음 확인*/
		WHERE 1=1
				AND A.PAVLN_DIV_CD IN('03', '09', '05') /*생활마트,패션B2C,전통시장*/
				AND A.SUPP_COMP_ID = #suppCompId#
				AND EXISTS ( SELECT 1 FROM OD_ORDER_MAST B
								 WHERE A.SETTLE_DATE <= TO_DATE(#adjEndDay#, 'YYYYMMDD')+.99999 
								 AND NVL(ADJ_YN,'N') ='N'
								 AND A.ORDER_ID=B.ORDER_ID )    
    ]]>			
	</update> 
	
	<!-- 공급정산 완료후 결제정보 업데이트 -->
	<update id="updateDoneOdOrderSetlESC" parameterClass="java.util.HashMap">	
    <![CDATA[
		UPDATE OD_ORDER_SETL A SET
			 JUNG_COMPLETE_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
			, JUNG_YN = 'Y'
		WHERE USE_YN = 'Y'
		AND EXISTS ( SELECT 1 FROM OD_ORDER_MAST B , OD_ORDER_ITM C
						WHERE B.ORDER_ID=C.ORDER_ID
					 AND C.SETTLE_DATE <= TO_DATE(#adj_end_day#, 'YYYYMMDD')+.99999 
					 AND NVL(C.ADJ_YN,'N') ='N'
					 AND A.ORDER_ID=B.ORDER_ID
					 AND C.PAVLN_DIV_CD IN('03', '09', '05') /*생활마트,패션B2C,전통시장*/ 
					 AND C.SUPP_COMP_ID = #suppCompId#
					)
    ]]>			
	</update> 
	<select id="selectAdjChaSu" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
		SELECT
               YYYY,
               START_DAY || '~' || END_DAY AS ADJCHASU,
               SEARCH_START || ',' || SEARCH_END AS SEARCH_DATE
           FROM
          (SELECT    B.YYYY||A.MON AS YYYYMM
           , B.YYYY
           , A.MON
           , RNUM
           , LPAD(CHK,2,'0') CHK
            , CASE WHEN CHK = 1 THEN B.YYYY||'/'||A.MON||'/'||'01' WHEN CHK = 2 THEN B.YYYY||'/'||A.MON||'/'||'11'WHEN CHK = 3 THEN B.YYYY||'/'||A.MON||'/'||'21'
             END START_DAY
           , CASE WHEN CHK = 1 THEN B.YYYY||'/'||A.MON||'/'||'10' WHEN CHK = 2 THEN B.YYYY||'/'||A.MON||'/'||'20' WHEN CHK = 3 THEN TO_CHAR(LAST_DAY(TO_DATE(B.YYYY||A.MON||'01','YYYYMMDD')),'YYYY/MM/DD')
             END END_DAY
           , CASE WHEN CHK = 1 THEN B.YYYY || '-' || A.MON|| '-' || '01' WHEN CHK = 2 THEN B.YYYY|| '-'  || A.MON|| '-'  || '11' WHEN CHK = 3 THEN B.YYYY|| '-' ||A.MON|| '-' ||'21'
                  END SEARCH_START
           , CASE WHEN CHK = 1 THEN B.YYYY|| '-' ||A.MON || '-'||'10' WHEN CHK = 2 THEN B.YYYY|| '-' ||A.MON|| '-' ||'20' WHEN CHK = 3 THEN TO_CHAR(LAST_DAY(TO_DATE(B.YYYY||A.MON||'01','YYYYMMDD')),'YYYY-MM-DD')
             END SEARCH_END 
      	 FROM (
               SELECT  LEVEL RNUM
                  , LPAD(CEIL(LEVEL / 3),2,'0') MON 
                  , DECODE(MOD(LEVEL, 3),0,3,MOD(LEVEL,3)) CHK 
               FROM DUAL A
               CONNECT BY LEVEL <= 36
              ) A, ( SELECT 1999+ROWNUM YYYY FROM DUAL CONNECT BY LEVEL <= (SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - 1999 FROM DUAL) ) B /*30년까지 조회*/
     	 WHERE 1=1
            ORDER BY TO_NUMBER(B.YYYY||A.MON), RNUM ASC
            ) WHERE YYYY = #adjYear# AND MON = #adjMonth#
            ]]>
	</select>
	
	<select id="selectAdjChaSuNew" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
		SELECT
               TO_CHAR(YYYY) YYYY,
               START_DAY || '~' || END_DAY AS ADJCHASU,
               SEARCH_START || ',' || SEARCH_END AS SEARCH_DATE
           FROM
          (SELECT    B.YYYY||A.MON AS YYYYMM
           , B.YYYY
           , A.MON
           , RNUM
           , LPAD(CHK,2,'0') CHK
            , CASE WHEN CHK = 1 THEN B.YYYY||'/'||A.MON||'/'||'01' WHEN CHK = 2 THEN B.YYYY||'/'||A.MON||'/'||'11'WHEN CHK = 3 THEN B.YYYY||'/'||A.MON||'/'||'21'
             END START_DAY
           , CASE WHEN CHK = 1 THEN B.YYYY||'/'||A.MON||'/'||'10' WHEN CHK = 2 THEN B.YYYY||'/'||A.MON||'/'||'20' WHEN CHK = 3 THEN TO_CHAR(LAST_DAY(TO_DATE(B.YYYY||A.MON||'01','YYYYMMDD')),'YYYY/MM/DD')
             END END_DAY
           , CASE WHEN CHK = 1 THEN B.YYYY || '-' || A.MON|| '-' || '01' WHEN CHK = 2 THEN B.YYYY|| '-'  || A.MON|| '-'  || '11' WHEN CHK = 3 THEN B.YYYY|| '-' ||A.MON|| '-' ||'21'
                  END SEARCH_START
           , CASE WHEN CHK = 1 THEN B.YYYY|| '-' ||A.MON || '-'||'10' WHEN CHK = 2 THEN B.YYYY|| '-' ||A.MON|| '-' ||'20' WHEN CHK = 3 THEN TO_CHAR(LAST_DAY(TO_DATE(B.YYYY||A.MON||'01','YYYYMMDD')),'YYYY-MM-DD')
             END SEARCH_END 
      	FROM (
               SELECT  LEVEL RNUM
                  , LPAD(CEIL(LEVEL / 3),2,'0') MON 
                  , DECODE(MOD(LEVEL, 3),0,3,MOD(LEVEL,3)) CHK 
               FROM DUAL A
               CONNECT BY LEVEL <= 36
              ) A, ( SELECT 1999+ROWNUM YYYY FROM DUAL CONNECT BY LEVEL <= (SELECT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - 1999 FROM DUAL) ) B /*30년까지 조회*/
     	WHERE 1=1
            ORDER BY TO_NUMBER(B.YYYY||A.MON), RNUM ASC
            ) WHERE YYYY = #adjYear# AND MON = #adjMonth#
        UNION ALL   
        SELECT 
              #adjYear# YYYY,
              #adjYear# || '/' || decode(length(#adjMonth#), 1, '0' || #adjMonth#,#adjMonth#) || '/' || '01'  || '~' || TO_CHAR(LAST_DAY(TO_DATE(#adjYear#||decode(length(#adjMonth#), 1, '0' || #adjMonth#,#adjMonth#)||'01','YYYYMMDD')),'YYYY/MM/DD')  AS ADJCHASU,
              #adjYear# || '-' || decode(length(#adjMonth#), 1, '0' || #adjMonth#,#adjMonth#) || '-' || '01'  || ',' || TO_CHAR(LAST_DAY(TO_DATE(#adjYear#||decode(length(#adjMonth#), 1, '0' || #adjMonth#,#adjMonth#)||'01','YYYYMMDD')),'YYYY-MM-DD') AS SEARCH_DATE
        FROM DUAL
        
            ]]>
	</select>
	<sql id="selectAdjOrder">
		SELECT     A.ORDER_ID
                          , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                          , I.SUPP_COMP_ID AS SUPP_COMP_CD
                          , B.BCNC_NM AS BIZ_NAME
                          , TO_CHAR(APPR_DATE,'YYYY-MM-DD HH24:MI:SS') APPR_DATE
                          , TO_CHAR(ORDER_DATE,'YYYY-MM-DD HH24:MI:SS') ORDER_DATE
                          , A.ORDRR_NM 
                          , I.PAVLN_DIV_CD
                          , P.PONM AS RECEV_PO_REGIPONM
                          , I.ORDER_STUS_CD AS CANCEL_YN
                          , SC.COMN_CD_NM AS STATUS_NM
                          , I.GOODS_CD AS GOODS_CODE
                          , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME
                          , SUM(NVL((SELECT FEE_AMT FROM OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0)) AS FEE_AMOUNT                           
                          , SUM(DECODE(I.CP_CMP_CD1,'2',I.CPN_DC_AMT1, 0) + DECODE(I.CP_CMP_CD2,'2',I.CPN_DC_AMT2, 0)) AMOUNT_COUPON_BIZ
                          , SUM(1) GOODS_CNT
                          , SUM(NVL(I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0),0)) GOODS_AMOUNT
                          , (SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)))
                            - (SUM(NVL(I.CPN_DC_AMT, 0) + NVL(I.PNT_USE_AMT, 0) +NVL(I.PO_PNT_USE_AMT, 0)+ NVL(I.PREMI_CUST_PNT_SETL_AMT, 0) + NVL(I.OKCASH_USE_AMT, 0) + NVL(I.WALLET_SETL_AMT, 0))) SETL_APPR_AMT /* 결제금액 */
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 1 ELSE 0 END) RET_CNT
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN I.DC_APPLY_PRC + NVL(I.OPTN_GOODS_APPLY_PRC,0) + NVL(I.SEND_PRC,0) ELSE 0 END) RET_AMOUNT
                          , 0 AS DELIV_DONE_CANCEL_CNT
                          , 0 AS DELIV_DONE_CANCEL_AMOUNT
                          , SUM(NVL((SELECT DELIV_CERT_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) DELIV_CERT_AMOUNT
                          , SUM(NVL((SELECT CONG_CARD_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0)) CONG_CARD_AMOUNT
                          , SUM(NVL(I.IMMPMN_PRCL_AMT,0)) IMMEDIATE_PRCL_PRC
                          , SUM(NVL(I.AFTPMN_PRCL_AMT,0)) LATER_PRCL_PRC
                          , SUM(NVL(I.LATER_PRCL_SALE_PRC,0)) LATER_PRCL_SALE_PRC 
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 ELSE NVL((SELECT POSA_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) END) CSF_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD != '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) PO_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN 0 WHEN I.DEFICIT_YN = 'Y'  THEN 0 WHEN I.PAVLN_DIV_CD = '92' THEN NVL((SELECT FLWR_DELIV_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) MART_FEE
                          , SUM(CASE WHEN I.RETRNGD_YN = 'Y' THEN (SELECT RETRNGD_CARD_REFUND_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID) ELSE 0 END) REFUND_CARD_SETL_FEE
                          , SUM(CASE WHEN I.DEFICIT_YN = 'Y' THEN NVL((SELECT DEFICIT_CARD_SETL_FEE FROM OD_ORDER_FEE WHERE ORDER_ITM_ID = I.ORDER_ITM_ID),0) ELSE 0 END) DEFICIT_CARD_SETL_FEE
                          , SUM(NVL((SELECT OUTSID_COPRTN_SHOPMALL_FEE from OD_ORDER_FEE where ORDER_ITM_ID = I.ORDER_ITM_ID), 0)) AS AMOUNT_EXT_MALL_FEE
                          , 0 REFUND_GOODS_AMT
                          , 0 REFUND_CSF_FEE
                          , A.SETL_MEAN_CD 
                   FROM OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC, OD_ORDER_FEE C
                   WHERE 1=1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     A.APPR_DATE BETWEEN TO_DATE(#startDate# || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#endDate# || '235959', 'YYYYMMDDHH24MISS')
                   AND     NOT (I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                   AND     I.PAVLN_DIV_CD = #searchPavln# 
				   AND     I.SUPP_COMP_ID = #suppCompId#
                GROUP BY  A.ORDER_ID
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , ORDER_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                        , A.SETL_MEAN_CD 
                        , A.ORDRR_NM 
                        , I.PAVLN_DIV_CD
                 UNION ALL
                 SELECT A.ORDER_ID
                      , I.SUPPO_RGIST_POCD SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID AS SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , ORDER_DATE
                      , APPR_DATE AS APPR_DATE
                      , A.ORDRR_NM
                      , I.PAVLN_DIV_CD 
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME                      
                      , 0 AS FEE_AMOUNT
                      , 0 AS AMOUNT_COUPON_BIZ
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS SETL_APPR_AMT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , NVL(SUM(1), 0) AS DELIV_DONE_CANCEL_CNT
                      , SUM(NVL(I.DC_APPLY_PRC, 0) + NVL(I.OPTN_GOODS_APPLY_PRC, 0) + NVL(I.SEND_PRC, 0)) AS DELIV_DONE_CANCEL_AMOUNT                      
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , SUM(NVL(I.AFTPMN_PRCL_AMT, 0)) AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , 0 REFUND_GOODS_AMT
                      , 0 REFUND_CSF_FEE  
                      , A.SETL_MEAN_CD                      
                FROM     OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, PICMT0060 P, CM_COMN_CD SC
                WHERE     1 = 1
                AND     I.ORDER_ID = A.ORDER_ID
                AND     A.APPR_DATE BETWEEN TO_DATE(#startDate# || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#endDate# || '235959', 'YYYYMMDDHH24MISS')
                AND     ( I.GOODS_CANCEL_YN = 'Y' AND NVL(I.AFTPMN_PRCL_AMT, 0) > 0)
                 AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                 AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                 AND     P.USEYN = 'Y'
                 AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                 AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
                 AND     I.PAVLN_DIV_CD = #searchPavln# 
				 AND     I.SUPP_COMP_ID = #suppCompId#
                 GROUP BY A.ORDER_ID
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , APPR_DATE
                        , ORDER_DATE
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                        , A.SETL_MEAN_CD 
                        , A.ORDRR_NM 
                        , I.PAVLN_DIV_CD
                 UNION ALL
                 SELECT  A.ORDER_ID
                      , I.SUPPO_RGIST_POCD AS SUPP_PO_REGI_PO_CD 
                      , I.SUPP_COMP_ID SUPP_COMP_CD
                      , B.BCNC_NM AS BIZ_NAME
                      , ORDER_DATE
                      , TO_DATE(C.CLAIM_CONF_YMD || '000000','YYYYMMDDHH24MISS') AS APPR_DATE
                      , A.ORDRR_NM 
                      , I.PAVLN_DIV_CD
                      , P.PONM AS RECEV_PO_REGIPONM
                      , I.ORDER_STUS_CD AS CANCEL_YN
                      , SC.COMN_CD_NM AS STATUS_NM
                      , I.GOODS_CD AS GOODS_CODE
                      , (SELECT GOODS_NM FROM GD_GOODS_MAST WHERE GOODS_CD=I.GOODS_CD AND ROWNUM=1 ) GOODS_NAME                      
                      , 0 AS FEE_AMOUNT                      
                      , 0 AS AMOUNT_COUPON_BIZ 
                      , 0 AS GOODS_CNT
                      , 0 AS GOODS_AMOUNT
                      , 0 AS SETL_APPR_AMT
                      , 0 AS RET_CNT
                      , 0 AS RET_AMOUNT
                      , 0 AS DELIV_DONE_CANCEL_CNT
                      , 0 AS DELIV_DONE_CANCEL_AMOUNT                      
                      , 0 AS DELIV_CERT_AMOUNT
                      , 0 AS CONG_CARD_AMOUNT
                      , 0 AS IMMEDIATE_PRCL_PRC
                      , 0 AS LATER_PRCL_PRC
                      , 0 AS LATER_PRCL_SALE_PRC
                      , 0 AS CSF_FEE
                      , 0 AS PO_FEE
                      , 0 AS MART_FEE
                      , 0 AS REFUND_CARD_SETL_FEE
                      , 0 AS DEFICIT_CARD_SETL_FEE
                      , 0 AS AMOUNT_EXT_MALL_FEE
                      , SUM(NVL(CLAIM_TREAT_AMT, 0)) AS REFUND_GOODS_AMT
                      , SUM(NVL(REFUND_RETRNGD_CSF_FEE, 0)) AS REFUND_CSF_FEE
                      , A.SETL_MEAN_CD 
                FROM    OD_ORDER_ITM I, OD_ORDER_MAST A, CO_SUPP_COMP_MAST B, OD_RET_INTERFACE C, PICMT0060 P, CM_COMN_CD SC
                 WHERE     1 = 1
                   AND     I.ORDER_ID = A.ORDER_ID
                   AND     I.ORDER_ID = C.ORDER_ID
                   AND     I.ORDER_ITM_ID = C.ORDER_ITM_ID
                   AND     C.CLAIM_CONF_YMD BETWEEN #startDate# AND #endDate#
                   AND     I.GOODS_CANCEL_YN = 'N'
                   AND     (( C.RETRNGD_REFUND_METH_CD IN ('04','06','08') AND C.POSA_ACC_TRANSF_TRGT_YN = 'Y' ) OR ( C.RETRNGD_REFUND_METH_CD IN ('07','09'))) 
  <![CDATA[        AND     C.TREAT_STUS_CD <> '004' ]]>
                   AND     I.SUPP_COMP_ID = B.SUPP_COMP_ID
                   AND     A.RECEVPO_RGISTPOCD = P.REGIPOCD
                   AND     P.USEYN = 'Y'
                   AND     I.ORDER_STUS_CD = SC.COMN_CD_ID
                   AND     SC.CD_GRP_ID = 'ORDER_STUS_CD'
				   AND     I.PAVLN_DIV_CD = #searchPavln# 
				   AND     I.SUPP_COMP_ID = #suppCompId#
                 GROUP BY A.ORDER_ID
                        , I.SUPPO_RGIST_POCD, I.SUPP_COMP_ID, B.BCNC_NM
                        , TO_DATE(C.CLAIM_CONF_YMD || '000000','YYYYMMDDHH24MISS')
                        , A.ORDER_ID, P.PONM
                        , I.ORDER_STUS_CD,  SC.COMN_CD_NM
                        , I.GOODS_CD
                        , A.SETL_MEAN_CD 
                        , ORDER_DATE
                        , A.ORDRR_NM 
                        , I.PAVLN_DIV_CD
	</sql>
	<select id="selectAdjOrderListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
	 SELECT COUNT(*) CNT 
       FROM (
         SELECT  ORDER_ID
               , SUPP_COMP_CD
               , BIZ_NAME
               , APPR_DATE
               , ORDER_DATE
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME
               , GOODS_CODE
               , SETL_MEAN_CD 
               , ORDER_DATE
               , ORDRR_NM 
               , PAVLN_DIV_CD
               , C.COMN_CD_NM
               , B.COMN_CD_NM
         FROM
         (    
                <include refid="selectAdjOrder"/>
        ) A , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='SETL_MEAN_CD'  ) B
        , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='PAVLN_DIV_CD'  ) C
        WHERE A.SETL_MEAN_CD = B.COMN_CD_ID(+)
        AND A.PAVLN_DIV_CD = C.COMN_CD_ID(+) 
        GROUP BY ORDER_ID
               , SUPP_COMP_CD
               , BIZ_NAME
               , APPR_DATE
               , ORDER_DATE
               , SETL_MEAN_CD 
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME
               , GOODS_CODE 
               , ORDRR_NM 
               , PAVLN_DIV_CD
               , C.COMN_CD_NM
               , B.COMN_CD_NM
        ORDER BY ORDER_ID
               , SUPP_COMP_CD
               , BIZ_NAME
               , APPR_DATE
               , RECEV_PO_REGIPONM
               , STATUS_NM
               , GOODS_NAME 
               , GOODS_CODE 
               
               )
	</select>
	<select id="selectAdjOrderList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  SELECT * 
        FROM (
         	SELECT ROW_NUMBER () OVER (ORDER BY ORDER_ID DESC) RNUM
                  , ORDER_ID
                  , SUPP_COMP_CD
                  , BIZ_NAME AS SUPP_COMP_NM
                  , APPR_DATE
                  , ORDER_DATE
                  , ORDRR_NM 
                  , PAVLN_DIV_CD
                  , C.COMN_CD_NM PAVLN_DIV_NM
                  , RECEV_PO_REGIPONM
                  , STATUS_NM
                  , GOODS_NAME
                  , B.COMN_CD_NM SETL_MEAN_NM
                  , SUM(GOODS_AMOUNT - RET_AMOUNT -  AMOUNT_COUPON_BIZ - LATER_PRCL_PRC - PO_FEE - MART_FEE - CSF_FEE - FEE_AMOUNT  + REFUND_CARD_SETL_FEE + NVL(LATER_PRCL_SALE_PRC,0)) AS SUPP_ADJ_AMOUNT /*정산금액*/
                  , SUM(GOODS_CNT) AS GOODS_CNT /*상품개수*/
                  , SUM(GOODS_AMOUNT) AS GOODS_AMOUNT /*주문금액*/
                  , SUM(SETL_APPR_AMT) AS SETL_APPR_AMT /*결제금액*/
                  , SUM(RET_CNT) AS RET_CNT /*창구반품건수*/
                  , SUM(RET_AMOUNT) AS RET_AMOUNT /*창구반품금액*/                
                  , SUM(AMOUNT_COUPON_BIZ) AS AMOUNT_COUPON_BIZ  /* 공급업체 발행 쿠폰*/                  
                  , SUM(IMMEDIATE_PRCL_PRC) AS IMMEDIATE_PRCL_PRC
                  , SUM(LATER_PRCL_PRC) AS LATER_PRCL_PRC /*후납소포료*/
                  , SUM(NVL(LATER_PRCL_SALE_PRC,0)) AS LATER_PRCL_SALE_PRC /*후납소포료감액*/
                  , SUM(IMMEDIATE_PRCL_PRC + LATER_PRCL_PRC) AS TOTAL_PRCL_PRC /*배송료*/
                  , SUM(FEE_AMOUNT) AS FEE_AMOUNT /*결제수수료*/
                  , SUM(PO_FEE) AS PO_FEE /*꽃배달수수료*/
                  , SUM(CSF_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS CSF_FEE /*진흥원수수료*/
                  , SUM(MART_FEE) AS MART_FEE /*대기업수수료*/
                  , SUM(PO_FEE + CSF_FEE + MART_FEE) - SUM(AMOUNT_EXT_MALL_FEE) AS TOTAL_FEE_AMOUNT /*수수료 합계*/
                  , SUM(REFUND_GOODS_AMT) AS REFUND_GOODS_AMT
                  , SUM(REFUND_CSF_FEE) AS REFUND_CSF_FEE
                  , SUM(REFUND_CARD_SETL_FEE) AS REFUND_CARD_SETL_FEE
         FROM
         (    
                <include refid="selectAdjOrder"/> 
        )A , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='SETL_MEAN_CD'  ) B
        , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='PAVLN_DIV_CD'  ) C
        WHERE A.SETL_MEAN_CD = B.COMN_CD_ID(+)
        AND A.PAVLN_DIV_CD = C.COMN_CD_ID(+) 
        GROUP BY    ORDER_ID
                  , SUPP_COMP_CD
                  , BIZ_NAME 
                  , APPR_DATE
                  , ORDER_DATE
                  , ORDRR_NM 
                  , PAVLN_DIV_CD
                  , C.COMN_CD_NM 
                  , RECEV_PO_REGIPONM
                  , STATUS_NM
                  , GOODS_NAME
                  , B.COMN_CD_NM 
               )
               <isNotEmpty property="firstIndex">
               WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
               </isNotEmpty>
	</select>
</sqlMap>