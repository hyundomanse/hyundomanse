<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BO.Order">
	<typeAlias  alias="commMap" type="com.devwork.common.map.CommonMap"/>

	<!-- 페이징 Header -->
	<sql id="pagingHeader">
		<![CDATA[
			SELECT *
			  FROM (
					SELECT A.*
						 , ROWNUM  AS RNUM
					  FROM (
		]]>
	</sql>

	<!-- 페이징 Footer -->
	<sql id="pagingFooter">
		<![CDATA[
					   ) A	WHERE ROWNUM <= #lastIndex#
			   ) WHERE RNUM >= #firstIndex#
		]]>
	</sql>

		<!-- 일반주문관리 리스트 -->
	<sql id="order_navi_query">
			AND NVL(OOI.PRSNT_YN,'N') = 'N'
			AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		<isEqual property="searchTab" compareValue="1">
			AND (OOI.PAVLN_DIV_CD != '07' OR OOM.NATION_CD = 'KO' OR OOM.NATION_CD = '' OR OOM.NATION_CD IS NULL)
			AND OOI.PAVLN_DIV_CD != '08'
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
			AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="searchTab" compareValue="2">
			AND (OOI.PAVLN_DIV_CD = '07' AND OOM.NATION_CD != 'KO' AND OOM.NATION_CD != '' AND OOM.NATION_CD IS NOT NULL)
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
			AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="searchTab" compareValue="4">
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
			AND OOM.COPRTN_ORDER_DIV_CD = '01'
			AND EXISTS (SELECT 1 FROM PT_PARTNER_ORDER WHERE ORDER_ID = OOM.ORDER_ID AND PARTNR_ID = OOM.PARTNR_ID)
			AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="searchTab" compareValue="5">
			AND OOI.SUPP_COMP_ID = DGRP.SUPP_COMP_ID
			AND OOI.PAVLN_DIV_CD = '08'
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
			AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
			<isNotEmpty property="ddmOrgPavlnId">
				AND DGRP.DDM_PAVLN_ID = #ddmOrgPavlnId#
			</isNotEmpty>
			<isNotEmpty property="ddmCenterPavlnId">
				AND DGRP.PAVLN_ID = #ddmCenterPavlnId#
			</isNotEmpty>			
		</isEqual>
		<isEqual property="searchTab" compareValue="6">
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
			AND OOM.ORDER_MDA_DIV_CD = '05'
		</isEqual>
		<isEqual property="searchTab" compareValue="7">
			AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
			AND OOM.COPRTN_ORDER_DIV_CD = '02'
			AND EXISTS (SELECT 1 FROM PT_EXTERNAL_BIZ_ORDER WHERE EXT_BIZ_CODE = OOM.EXT_BIZ_CODE AND COPRTN_ORDER_NO = OOM.COPRTN_ORDER_NO AND COPRTN_ORDER_SEQ = OOM.COPRTN_ORDER_SEQ)
			AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isNotEmpty property="search_pavln_id">
		AND OOI.PAVLN_DIV_CD = #search_pavln_id#
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
		AND OOI.SUPP_COMP_ID = #search_supp_comp_id#
		</isNotEmpty>
		<isNotEmpty property="searchSetlMeanCd">
		AND OOM.SETL_MEAN_CD = #searchSetlMeanCd#
		</isNotEmpty>
		<isNotEmpty property="search_order_mda_div_type">
			<isEqual property="search_order_mda_div_type" compareValue="01">
			AND OOM.ORDER_MDA_DIV_CD = '01'
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="02">
			AND OOM.ORDER_MDA_DIV_CD IN ('02', '04')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="03">
			AND OOM.ORDER_MDA_DIV_CD IN ('03', '06')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="04">
			AND OOM.ORDER_MDA_DIV_CD = '05'
			</isEqual>
		</isNotEmpty>
		<isNotEqual property="search_type" compareValue="order_id">
		<isNotEmpty property="search_strt_ymd">
			<isEqual property="search_ymd_type" compareValue="order_date">
				AND OOM.ORDER_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="search_ymd_type" compareValue="appr_date">
				AND OOM.APPR_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="search_ymd_type" compareValue="setl_appr_date">
				AND OOM.ORDER_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			</isEqual>
		</isNotEmpty>
		</isNotEqual>
		<isNotEmpty property="search_value">
			 <isEqual property="search_type" compareValue="access_name">
			 	AND OOM.ACCESS_NAME = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="order_id">
			 	AND OOM.ORDER_ID = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="ordrr_nm">
			 	AND OOM.ORDRR_NM = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="regi_no">
			 	AND OOI.REGI_NO = #search_value#
			 </isEqual>
			  <!-- <isEmpty property="search_type">
				AND ( OOM.ORDER_ID LIKE '%' || #search_value# || '%'
			  		OR OOS.SETL_APPR_CD LIKE '%' || #search_value# || '%'
			  		OR OOI.GOODS_CD LIKE '%' || #search_value# || '%'
		  			OR OOI.REGI_NO LIKE '%' || #search_value# || '%' )
			  </isEmpty> -->
		</isNotEmpty>
	</sql>

	<!-- 일반주문관리 주문상태 네비게이션 -->
	<select id="selectOrderStatusNavi" parameterClass ="java.util.HashMap" resultClass="commMap">
		/* selectOrderStatusNavi */
		SELECT <isEqual property="search_type" compareValue="regi_no">
					/*+ LEADING(OOI) INDEX(OOI OD_ORDER_ITM_IX06)  */
				</isEqual>
				<isNotEqual property="search_type" compareValue="regi_no">
					/*+ use_NL(OOI OOS OOM) */
				</isNotEqual>
			   NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O01',1,'O02',1,'O04',1,'O05',1,'O06',1,'O08',1,'D02',1,'D03',1,'D04',1,0)),0) TOT
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O01',1,0)),0) NAVI01
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O02',1,0)),0) NAVI02
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O04',1,0)),0) NAVI03
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'D02',1,0)),0) NAVI04
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'D03',1,'D04',1,0)),0) NAVI05
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O05',1,'O08',1,0)),0) NAVI06
			  ,NVL(SUM(DECODE(OOI.ORDER_STUS_CD,'O06',1,0)),0) NAVI07
		  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI
		  
		  	<isEqual property="searchTab" compareValue="5">
			       ,(SELECT  CSCM.SUPP_COMP_ID   /* 공급업체아이디 */
			                  , CPMT.PAVLN_ID     /* 쇼핑센터코드 */
			                 , CPMT.PAVLN_NM    /* 쇼핑센터명 */
			                 , CPMT.DDM_PAVLN_ID    /* 동대문기관코드 */
			                 , (SELECT DDM_PAVLN_INTRCN FROM CO_DDM_OR_MGT WHERE DDM_PAVLN_ID = CPMT.DDM_PAVLN_ID AND ROWNUM=1) AS DDM_PAVLN_INTRCN  /* 동대문기관명*/
			
			       FROM CO_SUPP_COMP_MAST CSCM
			               , CO_PAVLN_MGT CPM
			               , CO_PAVLN_MAST CPMT
			       WHERE 1=1
			       AND CSCM.SUPP_COMP_ID = CPM.SUPP_COMP_ID
			       AND CPM.PAVLN_ID = CPMT.PAVLN_ID
			       AND CPMT.HRNK_PAVLN_ID = 'P08') DGRP		
			</isEqual>		  
		  
		 WHERE OOM.ORDER_ID 	= OOI.ORDER_ID
		   AND OOI.ORDER_STUS_CD IN ('O01','O02','O04','O05','O06','O08','D02','D03','D04')
		<include refid="order_navi_query" />
	</select>

	<sql id="smart_navi_query">
		<isNotEmpty property="search_supp_comp_nm">
			AND OMSD.PAVLN_NM LIKE '%' || #search_supp_comp_nm# || '%'
		</isNotEmpty>
		<isNotEmpty property="search_strt_ymd">
			 <isEqual property="search_ymd_type" compareValue="order_date">
				AND OMSO.ORD_ACCP_DTIME BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
			 <isEqual property="search_ymd_type" compareValue="appr_date">
				AND OMSO.ORD_ACCP_DTIME BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="search_ymd_type" compareValue="setl_appr_date">
				AND OMSO.ORD_ACCP_DTIME BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="search_access_value">
			 <isEqual property="search_access_type" compareValue="ordrr_htelno">
			 	AND OMSO.CELL_SCT_NO || OMSO.CELL_TXNO || OMSO.CELL_END_NO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_telno">
			 	AND OMSO.CBL_TEL_RGN_NO || OMSO.CBL_TEL_TXNO || OMSO.CBL_TEL_END_NO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="access_name">
			 	AND OMSO.ACCESS_NAME LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_nm">
			 	AND OMSO.ORD_MAN_NM LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEmpty property="search_access_type">
			 	AND (OMSO.CELL_SCT_NO || OMSO.CELL_TXNO || OMSO.CELL_END_NO LIKE '%' || #search_access_value# || '%'
			 		OR OMSO.CBL_TEL_RGN_NO || OMSO.CBL_TEL_TXNO || OMSO.CBL_TEL_END_NO LIKE '%' || #search_access_value# || '%'
			 		OR OMSO.ACCESS_NAME LIKE '%' || #search_access_value# || '%'
			 		OR OMSO.ORD_MAN_NM LIKE '%' || #search_access_value# || '%')
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_recpter_value">
			 <isEqual property="search_recpter_type" compareValue="recpter_htelno">
			 	AND OMSO.CELL_SCT_NO || OMSO.CELL_TXNO || OMSO.CELL_END_NO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_telno">
			 	AND OMSO.CBL_TEL_RGN_NO || OMSO.CBL_TEL_TXNO || OMSO.CBL_TEL_END_NO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_nm">
			 	AND OMSO.ORD_MAN_NM LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEmpty property="search_recpter_type">
			 	AND (OMSO.CELL_SCT_NO || OMSO.CELL_TXNO || OMSO.CELL_END_NO LIKE '%' || #search_recpter_value# || '%'
			 		OR OMSO.CBL_TEL_RGN_NO || OMSO.CBL_TEL_TXNO || OMSO.CBL_TEL_END_NO LIKE '%' || #search_recpter_value# || '%'
			 		OR OMSO.ORD_MAN_NM LIKE '%' || #search_recpter_value# || '%')
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_value">
			 <isEqual property="search_type" compareValue="order_id">
			 	AND OMSO.ORDER_ID LIKE '%' || #search_value# || '%'
			 </isEqual>
			 <isEqual property="search_type" compareValue="goods_cd">
			 	AND OMSO.ORDER_ID IN ( SELECT ORDER_ID FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD WHERE OMSOD.SMART_ITEM_ID = #search_value# )
			 </isEqual>
			 <isEqual property="search_type" compareValue="regi_no">
			 	AND OMSO.REGI_NO LIKE '%' || #search_value# || '%'
			 </isEqual>
			 <isEmpty property="search_type">
			 	AND (OMSO.ORDER_ID LIKE '%' || #search_value# || '%'
			 		OR OMSO.ORDER_ID IN ( SELECT ORDER_ID FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD WHERE OMSOD.SMART_ITEM_ID = #search_value# )
			 		OR OMSO.REGI_NO LIKE '%' || #search_value# || '%')
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_order_detail_stus_type">
			AND OMSO.DVL_STAT_CD = #search_order_detail_stus_type#
		</isNotEmpty>
		<isNotEmpty property="search_setl_mean_type">
			AND OMSO.PAY_TP_CD = #search_setl_mean_type#
		</isNotEmpty>
	</sql>

	<!-- 스마트장바구니관리 주문상태 네비게이션 -->
	<select id="selectSmartOrderStatusNavi" parameterClass ="java.util.HashMap" resultClass="commMap">
		/* selectSmartOrderStatusNavi */
		SELECT (
				SELECT COUNT(0)
		  		  FROM OD_MMARKET_SMART_ORDER OMSO
					  ,(SELECT OMSOD.ORDER_ID
							  ,MAX(OMSG.GOODS_NM) GOODS_NM
							  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
							  ,CPM.PAVLN_ID
							  ,CPM.PAVLN_INTRCN
							  ,COUNT(1) TOTAL_ORD_CNT
						  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
							  ,OD_MMARKET_SMART_GOODS OMSG
							  ,CO_PAVLN_MAST CPM
						 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
						   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
						 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
						) OMSD
				 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
				<include refid="smart_navi_query" />
			   ) S_TOT	/* 스마트장바구니 전체 */
			  ,(
				SELECT COUNT(0)
				  FROM OD_MMARKET_SMART_ORDER OMSO
					  ,(SELECT OMSOD.ORDER_ID
							  ,MAX(OMSG.GOODS_NM) GOODS_NM
							  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
							  ,CPM.PAVLN_ID
							  ,CPM.PAVLN_INTRCN
							  ,COUNT(1) TOTAL_ORD_CNT
						  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
							  ,OD_MMARKET_SMART_GOODS OMSG
							  ,CO_PAVLN_MAST CPM
						 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
						   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
						 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
						) OMSD
				 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
				   AND OMSO.DVL_STAT_CD = '01'
				<include refid="smart_navi_query" />
			   ) S_NAVI01				   /* 주문접수 */
			  ,(
				SELECT COUNT(0)
				  FROM OD_MMARKET_SMART_ORDER OMSO
					  ,(SELECT OMSOD.ORDER_ID
							  ,MAX(OMSG.GOODS_NM) GOODS_NM
							  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
							  ,CPM.PAVLN_ID
							  ,CPM.PAVLN_INTRCN
							  ,COUNT(1) TOTAL_ORD_CNT
						  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
							  ,OD_MMARKET_SMART_GOODS OMSG
							  ,CO_PAVLN_MAST CPM
						 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
						   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
						 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
						) OMSD
				 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
				   AND OMSO.DVL_STAT_CD = '02'
				<include refid="smart_navi_query" />
			   ) S_NAVI02				   /* 배달준비 */
			  ,(
				SELECT COUNT(0)
		  		  FROM OD_MMARKET_SMART_ORDER OMSO
					  ,(SELECT OMSOD.ORDER_ID
							  ,MAX(OMSG.GOODS_NM) GOODS_NM
							  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
							  ,CPM.PAVLN_ID
							  ,CPM.PAVLN_INTRCN
							  ,COUNT(1) TOTAL_ORD_CNT
						  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
							  ,OD_MMARKET_SMART_GOODS OMSG
							  ,CO_PAVLN_MAST CPM
						 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
						   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
						 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
						) OMSD
				 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
				   AND OMSO.DVL_STAT_CD = '03'
				<include refid="smart_navi_query" />
			   ) S_NAVI03				   /* 배달완료 */
			  ,(
				SELECT COUNT(0)
		  		  FROM OD_MMARKET_SMART_ORDER OMSO
					  ,(SELECT OMSOD.ORDER_ID
							  ,MAX(OMSG.GOODS_NM) GOODS_NM
							  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
							  ,CPM.PAVLN_ID
							  ,CPM.PAVLN_INTRCN
							  ,COUNT(1) TOTAL_ORD_CNT
						  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
							  ,OD_MMARKET_SMART_GOODS OMSG
							  ,CO_PAVLN_MAST CPM
						 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
						   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
						 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
						) OMSD
				 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
				   AND OMSO.DVL_STAT_CD = '04'
				<include refid="smart_navi_query" />
			   ) S_NAVI04				   /* 주문취소 */
		FROM DUAL
	</select>

	<!-- 일반주문관리 리스트 -->
	<sql id="order_list_query">
		SELECT /*+ use_NL(OOI OOS OOM) */
				  TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE   /* 주문일시 */
				, OOM.ORDER_ID 																									/* 주문번호 */
				, OOI.ORDER_ITM_ID 																								/* 주문아이템번호 */
				, (SELECT F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD) FROM DUAL) AS ORDER_STUS_NM						/* 주문상태 */
				, OOM.ACCESS_NAME																								/* 주문자 아이디 */
				, OOM.ORDRR_NM																									/* 주문자 성명 */
				, OOI.PAVLN_DIV_CD																								/* 전시관 분류코드 */
				, (SELECT F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) FROM DUAL) PAVLN_NM								/* 전시관 명 */
				, OOI.SUPP_COMP_NM BCNC_NM  																					/* 공급업체명 */
				, (SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) FROM DUAL) AS SETL_MEAN_NM							/* 결제구분 */
				, OOS.SETL_MEAN_CD																								/* 결제구분 */
				, OOS.SETL_STUS_CD																								/* 결제상태 */
				, OOI.GOODS_CD  																								/* 상품번호 */
				, OOI.GOODS_NM  																								/* 상품명 */
				, (SELECT F_GET_ORDER_ITM_GOODS_OPTN_NM(OOM.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD) FROM DUAL) OPT_NM   		/* 옵션명 */
				, OOI.REQ_CNT   																								/* 수량 */
				, OOI.RECPTER_NM																								/* 수취인명 */
				, OOI.RECPTER_HTELNO																							/* 수취인 핸드폰번호 */
				, TO_CHAR(NVL(OOI.STD_SELL_PRC, 0),'FM999,999,999,999') STD_SELL_PRC													/* 판매금액 */
				, DECODE(NVL(OOI.SEND_PRC, 0), 0, '무료', TO_CHAR(OOI.SEND_PRC, 'FM999,999,999,999')) SEND_PRC						/* 배송비 */
				, DECODE(NVL(OOI.EMS_AMT, 0), 0, '무료', TO_CHAR(OOI.EMS_AMT, 'FM999,999,999,999')) EMS_AMT							/* 해외 배송비 */
				, TO_CHAR(NVL(OOI.EMS_DC_AMT, 0),'FM999,999,999,999') EMS_DC_AMT 														/* EMS 할인액 */
				, TO_CHAR(NVL(OOI.DC_APPLY_PRC, 0) + NVL(OOI.OPTN_GOODS_APPLY_PRC, 0)
						 + NVL(OOI.SEND_PRC, 0) + NVL(OOI.B2B_COMMISSION_PRC, 0), 'FM999,999,999,999') DC_APPLY_PRC	/* 주문금액 */
				, TO_CHAR(NVL(OOM.TOT_CPN_DC_AMT, 0) + NVL(OOM.PNT_USE_AMT, 0)
						 + NVL(OOM.PREMI_CUST_PNT_SETL_AMT, 0) + NVL(OOM.OKCASH_USE_AMT, 0), 'FM999,999,999,999') AS TOT_DC_PRC	/* 할인금액 */
				, TO_CHAR(NVL(OOI.CPN_DC_AMT, 0) + NVL(OOI.PNT_USE_AMT, 0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)
						 + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0) + NVL(OOI.OKCASH_USE_AMT, 0), 'FM999,999,999,999') AS DC_PRC	/* 할인금액 */
				, OOS.SETL_APPR_DATE 																							/* 결제승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT, 0),'FM999,999,999,999') SETL_APPR_AMT	  											/* 결제금액 */
				, TO_CHAR(NVL(OOI.DC_APPLY_PRC, 0) + NVL(OOI.OPTN_GOODS_APPLY_PRC, 0) + NVL(OOI.SEND_PRC, 0) + NVL(OOI.B2B_COMMISSION_PRC, 0)
						 - (NVL(OOI.CPN_DC_AMT, 0) + NVL(OOI.PNT_USE_AMT, 0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)
						 + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0) + NVL(OOI.OKCASH_USE_AMT, 0)), 'FM999,999,999,999') AS SETL_APPR_AMT_ITM	/* 할인금액 */
				, OOM.ORDER_MDA_DIV_CD																							/* 주문채널 */
				, OOI.SEND_NATION_CD																							/* 배송국가명 */
				, OOI.SEND_AREA_CD 																								/* 배송지역코드 */
		FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_ORDER_ITM OOI
		
		<isEqual property="tabIdx" compareValue="5">
	        ,(SELECT  CSCM.SUPP_COMP_ID		/* 공급업체아이디 */
	                , CPMT.PAVLN_ID     	/* 쇼핑센터코드 */
	                , CPMT.PAVLN_NM    		/* 쇼핑센터명 */
	                , CPMT.DDM_PAVLN_ID		/* 동대문기관코드 */
	                , (SELECT DDM_PAVLN_INTRCN FROM CO_DDM_OR_MGT WHERE DDM_PAVLN_ID = CPMT.DDM_PAVLN_ID AND ROWNUM=1) AS DDM_PAVLN_INTRCN  /* 동대문기관명*/
	
	        	FROM CO_SUPP_COMP_MAST CSCM
	           	   , CO_PAVLN_MGT CPM
	           	   , CO_PAVLN_MAST CPMT
	           WHERE 1=1
	        	 AND CSCM.SUPP_COMP_ID = CPM.SUPP_COMP_ID
	        	 AND CPM.PAVLN_ID = CPMT.PAVLN_ID
	        	 AND CPMT.HRNK_PAVLN_ID = 'P08') DGRP		
		</isEqual>
		
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		AND OOS.SETL_SEQ = '1'
		AND OOM.ORDER_ID = OOI.ORDER_ID
		AND NVL(OOI.PRSNT_YN,'N') = 'N'
		AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		<isEqual property="tabIdx" compareValue="1">
		AND (OOI.PAVLN_DIV_CD != '07' OR OOM.NATION_CD = 'KO' OR OOM.NATION_CD = '' OR OOM.NATION_CD IS NULL)
		AND OOI.PAVLN_DIV_CD != '08'
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="2">
		AND (OOI.PAVLN_DIV_CD = '07' AND OOM.NATION_CD != 'KO' AND OOM.NATION_CD != '' AND OOM.NATION_CD IS NOT NULL)
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="4">
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
		AND OOM.COPRTN_ORDER_DIV_CD = '01'
		AND EXISTS (SELECT 1 FROM PT_PARTNER_ORDER WHERE ORDER_ID = OOM.ORDER_ID AND PARTNR_ID = OOM.PARTNR_ID)
		AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="5">
		AND OOI.SUPP_COMP_ID = DGRP.SUPP_COMP_ID
		AND OOI.PAVLN_DIV_CD = '08'
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
			<isNotEmpty property="ddmOrgPavlnId">
				AND DGRP.DDM_PAVLN_ID = #ddmOrgPavlnId#
			</isNotEmpty>
			<isNotEmpty property="ddmCenterPavlnId">
				AND DGRP.PAVLN_ID = #ddmCenterPavlnId#
			</isNotEmpty>
		</isEqual>
		
		<isEqual property="tabIdx" compareValue="6">
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		AND OOM.ORDER_MDA_DIV_CD = '05'
		</isEqual>
		<isEqual property="searchTab" compareValue="7">
		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
		AND OOM.COPRTN_ORDER_DIV_CD = '02'
		AND EXISTS (SELECT 1 FROM PT_EXTERNAL_BIZ_ORDER WHERE EXT_BIZ_CODE = OOM.EXT_BIZ_CODE AND COPRTN_ORDER_NO = OOM.COPRTN_ORDER_NO AND COPRTN_ORDER_SEQ = OOM.COPRTN_ORDER_SEQ)
		AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isNotEmpty property="search_pavln_id">
		AND OOI.PAVLN_DIV_CD = #search_pavln_id#
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
		AND OOI.SUPP_COMP_ID = #search_supp_comp_id#
		</isNotEmpty>
		<isNotEqual property="search_type" compareValue="order_id">
		<isNotEmpty property="search_strt_ymd">
			 <isEqual property="search_ymd_type" compareValue="order_date">
				AND OOM.ORDER_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
			 <isEqual property="search_ymd_type" compareValue="appr_date">
				AND OOM.APPR_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
			 <isEqual property="search_ymd_type" compareValue="setl_appr_date">
				AND OOS.SETL_APPR_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
		</isNotEmpty>
		</isNotEqual>
		<isNotEmpty property="search_access_value">
			 <isEqual property="search_access_type" compareValue="ordrr_htelno">
			 	AND OOI.SENDER_HTELNO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_telno">
			 	AND OOI.SENDER_TELNO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="access_name">
			 	AND OOM.ACCESS_NAME LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_nm">
			 	AND OOI.SENDER_NM LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEmpty property="search_access_type">
			 	AND ( OOI.SENDER_NM LIKE '%' || #search_access_value# || '%'
			 		OR OOI.SENDER_HTELNO LIKE '%' || #search_access_value# || '%'
			 		OR OOI.SENDER_TELNO LIKE '%' || #search_access_value# || '%'
			 		OR OOM.ACCESS_NAME LIKE '%' || #search_access_value# || '%' )
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_recpter_value">
			 <isEqual property="search_recpter_type" compareValue="recpter_htelno">
			 	AND OOI.RECPTER_HTELNO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_telno">
			 	AND OOI.RECPTER_TELNO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_nm">
			 	AND OOI.RECPTER_NM LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEmpty property="search_recpter_type">
			 	AND ( OOI.RECPTER_HTELNO LIKE '%' || #search_recpter_value# || '%'
			 		OR OOI.RECPTER_TELNO LIKE '%' || #search_recpter_value# || '%'
			 		OR OOI.RECPTER_NM LIKE '%' || #search_recpter_value# || '%' )
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_value">
			 <isEqual property="search_type" compareValue="access_name">
			 	AND OOM.ACCESS_NAME = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="order_id">
			 	AND OOM.ORDER_ID = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="ordrr_nm">
			 	AND OOM.ORDRR_NM = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="regi_no">
			 	AND OOI.REGI_NO = #search_value#
			 </isEqual>
			  <!-- <isEmpty property="search_type">
				AND ( OOM.ORDER_ID LIKE '%' || #search_value# || '%'
			  		OR OOS.SETL_APPR_CD LIKE '%' || #search_value# || '%'
			  		OR OOI.GOODS_CD LIKE '%' || #search_value# || '%'
		  			OR OOI.REGI_NO LIKE '%' || #search_value# || '%' )
			  </isEmpty> -->
		</isNotEmpty>
		<isNotEmpty property="search_order_detail_stus_type">
			 <isEqual property="search_order_detail_stus_type" compareValue="O01">
			AND OOI.ORDER_STUS_CD = 'O01'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O02">
			AND OOI.ORDER_STUS_CD = 'O02'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O04">
			AND OOI.ORDER_STUS_CD = 'O04'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="D02">
			AND OOI.ORDER_STUS_CD = 'D02'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="D03">
			AND OOI.ORDER_STUS_CD IN ('D03', 'D04')
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O05">
			AND OOI.ORDER_STUS_CD IN ('O05', 'O08')
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O06">
			AND OOI.ORDER_STUS_CD = 'O06'
			 </isEqual>
		</isNotEmpty>
		<isEmpty property="search_order_detail_stus_type">
		AND OOI.ORDER_STUS_CD IN ('O01','O02','O04','O05','O06','O08','D02','D03','D04')
		</isEmpty>
		<isNotEmpty property="searchSetlMeanCd">
		AND OOM.SETL_MEAN_CD = #searchSetlMeanCd#
		</isNotEmpty>
		<isNotEmpty property="search_order_mda_div_type">
			<isEqual property="search_order_mda_div_type" compareValue="01">
			AND OOM.ORDER_MDA_DIV_CD = '01'
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="02">
			AND OOM.ORDER_MDA_DIV_CD IN ('02', '04')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="03">
			AND OOM.ORDER_MDA_DIV_CD IN ('03', '06')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="04">
			AND OOM.ORDER_MDA_DIV_CD = '05'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="search_partner_nm">
		AND PP.NAME LIKE '%' || #search_partner_nm# || '%'
		</isNotEmpty>
		<isNotEmpty property="search_gifticon_at">
		AND OOI.GIFT_ORDER_YN = #search_gifticon_at#
		</isNotEmpty>
		<isNotEmpty property="giftSendAddrYn">
		<isEqual property="giftSendAddrYn" compareValue="Y">
		  AND EXISTS (SELECT ORDER_ID FROM OD_GIFT_ORDER WHERE ORDER_ID = OOM.ORDER_ID)
		</isEqual>
		<isEqual property="giftSendAddrYn" compareValue="N">
		  AND NOT EXISTS (SELECT ORDER_ID FROM OD_GIFT_ORDER WHERE ORDER_ID = OOM.ORDER_ID)
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="giftSendAddrPriod">
		<isEqual property="giftSendAddrPriod" compareValue="3">
		  AND OOM.ORDER_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE - 12,'YYYYMMDD')||'000000','YYYYMMDDHH24MISS') AND TO_DATE(TO_CHAR(SYSDATE - 12,'YYYYMMDD')||'235959','YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="giftSendAddrPriod" compareValue="8">
		  AND OOM.ORDER_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE - 7,'YYYYMMDD')||'000000','YYYYMMDDHH24MISS') AND TO_DATE(TO_CHAR(SYSDATE - 7,'YYYYMMDD')||'235959','YYYYMMDDHH24MISS')
		</isEqual>
		</isNotEmpty>
		ORDER BY OOM.ORDER_DATE DESC,OOM.ORDER_ID DESC
	</sql>

	<!-- 일반주문관리 리스트 카운트 -->
	<select id="selectOrderListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		/* selectOrderListTotCnt */
		SELECT
			   COUNT(1) AS CNT
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_ORDER_ITM OOI
		  
		<isEqual property="tabIdx" compareValue="5">
	        ,(SELECT  CSCM.SUPP_COMP_ID   /* 공급업체아이디 */
	                   , CPMT.PAVLN_ID     /* 쇼핑센터코드 */
	                  , CPMT.PAVLN_NM    /* 쇼핑센터명 */
	                  , CPMT.DDM_PAVLN_ID    /* 동대문기관코드 */
	                  , (SELECT DDM_PAVLN_INTRCN FROM CO_DDM_OR_MGT WHERE DDM_PAVLN_ID = CPMT.DDM_PAVLN_ID AND ROWNUM=1) AS DDM_PAVLN_INTRCN  /* 동대문기관명*/
	
	        FROM CO_SUPP_COMP_MAST CSCM
	                , CO_PAVLN_MGT CPM
	                , CO_PAVLN_MAST CPMT
	        WHERE 1=1
	        AND CSCM.SUPP_COMP_ID = CPM.SUPP_COMP_ID
	        AND CPM.PAVLN_ID = CPMT.PAVLN_ID
	        AND CPMT.HRNK_PAVLN_ID = 'P08') DGRP		
		</isEqual>
		  
		 WHERE OOM.ORDER_ID = OOS.ORDER_ID
		   AND OOS.SETL_SEQ = '1'
		   AND OOM.ORDER_ID = OOI.ORDER_ID
		   AND (OOI.PRSNT_YN = 'N' OR OOI.PRSNT_YN IS NULL)
		   AND OOI.EXTRA_GOODS_YN = 'N'
		<isEqual property="tabIdx" compareValue="1">
		   AND (OOI.PAVLN_DIV_CD != '07' OR OOM.NATION_CD = 'KO' OR OOM.NATION_CD = '' OR OOM.NATION_CD IS NULL)
		   AND OOI.PAVLN_DIV_CD != '08'
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		   AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="2">
		   AND (OOI.PAVLN_DIV_CD = '07' AND OOM.NATION_CD != 'KO' AND OOM.NATION_CD != '' AND OOM.NATION_CD IS NOT NULL)
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		   AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="4">
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
		   AND OOM.COPRTN_ORDER_DIV_CD = '01'
		   AND EXISTS (SELECT 1 FROM PT_PARTNER_ORDER WHERE ORDER_ID = OOM.ORDER_ID AND PARTNR_ID = OOM.PARTNR_ID)
		   AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isEqual property="tabIdx" compareValue="5">
		   AND OOI.SUPP_COMP_ID = DGRP.SUPP_COMP_ID
		   AND OOI.PAVLN_DIV_CD = '08'
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		   AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
			<isNotEmpty property="ddmOrgPavlnId">
				AND DGRP.DDM_PAVLN_ID = #ddmOrgPavlnId#
			</isNotEmpty>
			<isNotEmpty property="ddmCenterPavlnId">
				AND DGRP.PAVLN_ID = #ddmCenterPavlnId#
			</isNotEmpty>		   
		</isEqual>
		<isEqual property="tabIdx" compareValue="6">
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'
		   AND OOM.ORDER_MDA_DIV_CD = '05'
		</isEqual>
		<isEqual property="searchTab" compareValue="7">
		   AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'
		   AND OOM.COPRTN_ORDER_DIV_CD = '02'
		   AND EXISTS (SELECT 1 FROM PT_EXTERNAL_BIZ_ORDER WHERE EXT_BIZ_CODE = OOM.EXT_BIZ_CODE AND COPRTN_ORDER_NO = OOM.COPRTN_ORDER_NO AND COPRTN_ORDER_SEQ = OOM.COPRTN_ORDER_SEQ)
		   AND OOM.ORDER_MDA_DIV_CD IN ('01','02','03','04','06')
		</isEqual>
		<isNotEmpty property="search_pavln_id">
		   AND OOI.PAVLN_DIV_CD = #search_pavln_id#
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
		   AND OOI.SUPP_COMP_ID = #search_supp_comp_id#
		</isNotEmpty>
		<isNotEqual property="search_type" compareValue="order_id">
		<isNotEmpty property="search_strt_ymd">
			 <isEqual property="search_ymd_type" compareValue="order_date">
				AND OOM.ORDER_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
			 <isEqual property="search_ymd_type" compareValue="appr_date">
				AND OOM.APPR_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
			 <isEqual property="search_ymd_type" compareValue="setl_appr_date">
				AND OOM.APPR_DATE BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
			 </isEqual>
		</isNotEmpty>
		</isNotEqual>
		<isNotEmpty property="search_access_value">
			 <isEqual property="search_access_type" compareValue="ordrr_htelno">
			 	AND OOI.SENDER_HTELNO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_telno">
			 	AND OOI.SENDER_TELNO LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="access_name">
			 	AND OOM.ACCESS_NAME LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEqual property="search_access_type" compareValue="ordrr_nm">
			 	AND OOI.SENDER_NM LIKE '%' || #search_access_value# || '%'
			 </isEqual>
			 <isEmpty property="search_access_type">
			 	AND ( OOI.SENDER_NM LIKE '%' || #search_access_value# || '%'
			 		OR OOI.SENDER_HTELNO LIKE '%' || #search_access_value# || '%'
			 		OR OOI.SENDER_TELNO LIKE '%' || #search_access_value# || '%'
			 		OR OOM.ACCESS_NAME LIKE '%' || #search_access_value# || '%' )
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_recpter_value">
			 <isEqual property="search_recpter_type" compareValue="recpter_htelno">
			 	AND OOI.RECPTER_HTELNO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_telno">
			 	AND OOI.RECPTER_TELNO LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEqual property="search_recpter_type" compareValue="recpter_nm">
			 	AND OOI.RECPTER_NM LIKE '%' || #search_recpter_value# || '%'
			 </isEqual>
			 <isEmpty property="search_recpter_type">
			 	AND ( OOI.RECPTER_HTELNO LIKE '%' || #search_recpter_value# || '%'
			 		OR OOI.RECPTER_TELNO LIKE '%' || #search_recpter_value# || '%'
			 		OR OOI.RECPTER_NM LIKE '%' || #search_recpter_value# || '%' )
			 </isEmpty>
		</isNotEmpty>
		<isNotEmpty property="search_value">
			 <isEqual property="search_type" compareValue="access_name">
			 	AND OOM.ACCESS_NAME = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="order_id">
			 	AND OOM.ORDER_ID = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="ordrr_nm">
			 	AND OOM.ORDRR_NM = #search_value#
			 </isEqual>
			 <isEqual property="search_type" compareValue="regi_no">
			 	AND OOI.REGI_NO = #search_value#
			 </isEqual>
			  <!-- <isEmpty property="search_type">
				AND ( OOM.ORDER_ID LIKE '%' || #search_value# || '%'
			  		OR OOS.SETL_APPR_CD LIKE '%' || #search_value# || '%'
			  		OR OOI.GOODS_CD LIKE '%' || #search_value# || '%'
		  			OR OOI.REGI_NO LIKE '%' || #search_value# || '%' )
			  </isEmpty> -->
		</isNotEmpty>
		<isNotEmpty property="search_order_detail_stus_type">
			 <isEqual property="search_order_detail_stus_type" compareValue="O01">
			AND OOI.ORDER_STUS_CD = 'O01'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O02">
			AND OOI.ORDER_STUS_CD = 'O02'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O04">
			AND OOI.ORDER_STUS_CD = 'O04'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="D02">
			AND OOI.ORDER_STUS_CD = 'D02'
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="D03">
			AND OOI.ORDER_STUS_CD IN ('D03', 'D04')
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O05">
			AND OOI.ORDER_STUS_CD IN ('O05', 'O08')
			 </isEqual>
			 <isEqual property="search_order_detail_stus_type" compareValue="O06">
			AND OOI.ORDER_STUS_CD = 'O06'
			 </isEqual>
		</isNotEmpty>
		<isEmpty property="search_order_detail_stus_type">
		   AND OOI.ORDER_STUS_CD IN ('O01','O02','O04','O05','O06','O08','D02','D03','D04')
		</isEmpty>
		<isNotEmpty property="searchSetlMeanCd">
		   AND OOM.SETL_MEAN_CD = #searchSetlMeanCd#
		</isNotEmpty>
		<isNotEmpty property="search_order_mda_div_type">
			<isEqual property="search_order_mda_div_type" compareValue="01">
			AND OOM.ORDER_MDA_DIV_CD = '01'
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="02">
			AND OOM.ORDER_MDA_DIV_CD IN ('02', '04')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="03">
			AND OOM.ORDER_MDA_DIV_CD IN ('03', '06')
			</isEqual>
			<isEqual property="search_order_mda_div_type" compareValue="04">
			AND OOM.ORDER_MDA_DIV_CD = '05'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="search_gifticon_at">
		AND OOI.GIFT_ORDER_YN = #search_gifticon_at#
		</isNotEmpty>
		<isNotEmpty property="giftSendAddrYn">
		<isEqual property="giftSendAddrYn" compareValue="Y">
		  AND EXISTS (SELECT ORDER_ID FROM OD_GIFT_ORDER WHERE ORDER_ID = OOM.ORDER_ID)
		</isEqual>
		<isEqual property="giftSendAddrYn" compareValue="N">
		  AND NOT EXISTS (SELECT ORDER_ID FROM OD_GIFT_ORDER WHERE ORDER_ID = OOM.ORDER_ID)
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="giftSendAddrPriod">
		<isEqual property="giftSendAddrPriod" compareValue="3">
		  AND OOM.ORDER_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE - 12,'YYYYMMDD')||'000000','YYYYMMDDHH24MISS') AND TO_DATE(TO_CHAR(SYSDATE - 12,'YYYYMMDD')||'235959','YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="giftSendAddrPriod" compareValue="8">
		  AND OOM.ORDER_DATE BETWEEN TO_DATE(TO_CHAR(SYSDATE - 7,'YYYYMMDD')||'000000','YYYYMMDDHH24MISS') AND TO_DATE(TO_CHAR(SYSDATE - 7,'YYYYMMDD')||'235959','YYYYMMDDHH24MISS')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="search_partner_nm">
		AND PP.NAME LIKE '%' || #search_partner_nm# || '%'
		</isNotEmpty>
	</select>

	<!-- 일반주문관리 리스트 조회 -->
	<select id="selectOrderList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/* selectOrderList */
		SELECT AT.*
			  ,(SELECT F_GET_COMN_CD_NM('ORDER_MDA_DIV_CD', AT.ORDER_MDA_DIV_CD) FROM DUAL) ORDER_MDA_DIV_NM				/* 주문채널 */
			  ,(SELECT F_GET_COMN_CD_NM('NATION_CD', AT.SEND_NATION_CD) FROM DUAL) SEND_NATION_NM 							/* 배송국가명 */
		  FROM (
				SELECT *
				  FROM (
						SELECT *
						  FROM (SELECT ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC, SETL_APPR_AMT ASC) RNUM
									  ,A2.*
								  FROM (SELECT *
										  FROM (
										<include refid="order_list_query" />
												)
										) A2
								 WHERE 1=1
								) A1
						 WHERE RNUM <![CDATA[<=]]> NVL(#lastIndex#, UID)
						) A0
				 WHERE RNUM <![CDATA[>=]]>  #firstIndex#
				   AND RNUM <![CDATA[<=]]> NVL(#lastIndex#, UID)
				) AT
	</select>

	<!-- 스마트장바구니 주문관리 리스트 -->
	<sql id="smart_order_list_query">
		SELECT OMSO.ORDER_ID																				/* 주문번호 */
			  ,OMSO.ACCESS_NAME																				/* 회원ID */
			  ,OMSO.ORD_MAN_ID																				/* 주문자ID */
			  ,OMSO.ORD_MAN_NM																				/* 주문자명 */
			  ,OMSO.CBL_TEL_RGN_NO
			  ,OMSO.CBL_TEL_TXNO
			  ,OMSO.CBL_TEL_END_NO
			  ,OMSO.CBL_TEL_RGN_NO || '-' || OMSO.CBL_TEL_TXNO || '-' || OMSO.CBL_TEL_END_NO TEL_NO
			  ,OMSO.CELL_SCT_NO
			  ,OMSO.CELL_TXNO
			  ,OMSO.CELL_END_NO
			  ,OMSO.CELL_SCT_NO || '-' || OMSO.CELL_TXNO || '-' || OMSO.CELL_END_NO RECPTER_HTELNO			/* 수령인 연락처 */
			  ,OMSO.ORD_MAN_EMAIL_ADDR
			  ,OMSO.POST_NO
			  ,OMSO.POST_ADDR
			  ,OMSO.DTL_ADDR
			  ,OMSO.POST_ADDR || ' ' || OMSO.DTL_ADDR ADDR
			  ,DECODE(OMSO.DVL_STAT_CD, '01','주문접수', '02','배달준비', '03','배달완료') DVL_STAT_NM		/* 주문상태 */
			  ,OMSO.HOPE_DELIVERY_DATE																		/*배달희망일*/
			  ,OMSO.HOPE_DELIVERY_TIME																		/*배달희망일*/
			  ,TO_CHAR(TO_DATE(OMSO.HOPE_DELIVERY_DATE  || OMSO.HOPE_DELIVERY_TIME, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') HOPE_DELIVERY_DATE_TIME
			  ,TO_CHAR(OMSO.ORD_ACCP_DTIME, 'YYYY/MM/DD HH24:MI:SS') ORD_ACCP_DTIME							/* 주문일시 */
			  ,OMSO.ORD_ACCP_DTIME ORD_ACCP_DTIME2															/* 주문일시 */
			  ,OMSO.PAY_TP_CD																				/*계산방법*/
			  ,CASE WHEN OMSO.PAY_TP_CD = 01 THEN '현금(온누리상품권 포함)'
					ELSE '신용카드'
				END PAY_TP_NM
			  ,TRIM(TO_CHAR(OMSD.TOTAL_PRICE, '999,999,999,999')) TOTAL_PRICE
			  ,CASE WHEN OMSD.TOTAL_ORD_CNT > 1 THEN OMSD.GOODS_NM  || ' 외 ' || (OMSD.TOTAL_ORD_CNT - 1) || '건'
					ELSE OMSD.GOODS_NM
				END GOODS_NM
			  ,OMSD.PAVLN_ID
			  ,OMSD.PAVLN_INTRCN
			  ,OMSD.TOTAL_ORD_CNT
		  FROM OD_MMARKET_SMART_ORDER OMSO
			  ,(SELECT OMSOD.ORDER_ID
					  ,MAX(OMSG.GOODS_NM) GOODS_NM
					  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
					  ,CPM.PAVLN_ID
					  ,CPM.PAVLN_INTRCN
					  ,COUNT(1) TOTAL_ORD_CNT
				  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
					  ,OD_MMARKET_SMART_GOODS OMSG
					  ,CO_PAVLN_MAST CPM
				 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
				   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
				 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
				) OMSD
		 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
		<include refid="smart_navi_query" />
		ORDER BY OMSO.ORD_ACCP_DTIME
	</sql>

	<!-- 스마트장바구니 주문관리 리스트 카운트 -->
	<select id="selectSmartOrderListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		/* selectSmartOrderListTotCnt */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="smart_order_list_query" />)
	</select>

	<!-- 스마트장바구니 주문관리 리스트 조회 -->
	<select id="selectSmartOrderList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/* selectSmartOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORD_ACCP_DTIME2 ASC, TOTAL_PRICE ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="smart_order_list_query" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 스마트장바구니 주문 상세조회 -->
	<select id="selectSmartOrderDtailInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT OMSO.ORDER_ID																			/* 주문번호 */
			  ,OMSO.ACCESS_NAME																			/* 회원ID */
			  ,OMSO.ORD_MAN_ID																			/* 주문자ID */
			  ,OMSO.ORD_MAN_NM																			/* 주문자명 */
			  ,OMSO.CBL_TEL_RGN_NO
			  ,OMSO.CBL_TEL_TXNO
			  ,OMSO.CBL_TEL_END_NO
			  ,OMSO.CBL_TEL_RGN_NO || '-' || OMSO.CBL_TEL_TXNO || '-' || OMSO.CBL_TEL_END_NO TEL_NO
			  ,OMSO.CELL_SCT_NO
			  ,OMSO.CELL_TXNO
			  ,OMSO.CELL_END_NO
			  ,OMSO.CELL_SCT_NO || '-' || OMSO.CELL_TXNO || '-' || OMSO.CELL_END_NO RECPTER_HTELNO	/* 수령인 연락처 */
			  ,OMSO.ORD_MAN_EMAIL_ADDR
			  ,OMSO.POST_NO
			  ,OMSO.POST_ADDR
			  ,OMSO.DTL_ADDR
			  ,OMSO.POST_ADDR || ' ' || OMSO.DTL_ADDR ADDR
			  ,OMSO.DVL_STAT_CD																							/* 주문상태 */
			  ,DECODE(OMSO.DVL_STAT_CD, '01','주문접수', '02','배달준비', '03','배달완료') DVL_STAT_NM	/* 주문상태 */
			  ,OMSO.HOPE_DELIVERY_DATE				/*배달희망일*/
			  ,OMSO.HOPE_DELIVERY_TIME				/*배달희망일*/
			  ,TO_CHAR(TO_DATE(OMSO.HOPE_DELIVERY_DATE  || OMSO.HOPE_DELIVERY_TIME, 'YYYY-MM-DD HH24:MI'), 'YYYY-MM-DD HH24:MI') HOPE_DELIVERY_DATE_TIME
			  ,TO_CHAR(OMSO.ORD_ACCP_DTIME, 'YYYY/MM/DD HH24:MI:SS') ORD_ACCP_DTIME							/* 주문일시 */
			  ,OMSO.ORD_ACCP_DTIME ORD_ACCP_DTIME2						/* 주문일시 */
			  ,OMSO.PAY_TP_CD																														/*계산방법*/
			  ,CASE WHEN OMSO.PAY_TP_CD = 01 THEN '현금(온누리상품권 포함)'
					ELSE '신용카드'
				END PAY_TP_NM
			  ,TRIM(TO_CHAR(OMSD.TOTAL_PRICE, '999,999,999,999')) TOTAL_PRICE
			  ,CASE WHEN OMSD.TOTAL_ORD_CNT > 1 THEN OMSD.GOODS_NM  || ' 외 ' || (OMSD.TOTAL_ORD_CNT - 1) || '건'
					ELSE OMSD.GOODS_NM
				END GOODS_NM
			  ,OMSD.PAVLN_ID
			  ,OMSD.PAVLN_INTRCN
			  ,OMSD.TOTAL_ORD_CNT
			  ,OMSO.MEMO
		  FROM OD_MMARKET_SMART_ORDER OMSO
			  ,(SELECT OMSOD.ORDER_ID
					  ,MAX(OMSG.GOODS_NM) GOODS_NM
					  ,SUM(NVL(OMSG.PRICE,0)*NVL(OMSOD.ORD_QTY,0)) TOTAL_PRICE
					  ,CPM.PAVLN_ID
					  ,CPM.PAVLN_INTRCN
					  ,COUNT(1) TOTAL_ORD_CNT
				  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSOD
					  ,OD_MMARKET_SMART_GOODS OMSG
					  ,CO_PAVLN_MAST CPM
				 WHERE OMSOD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
				   AND OMSG.PAVLN_ID = CPM.PAVLN_ID
				 GROUP BY OMSOD.ORDER_ID, CPM.PAVLN_ID, CPM.PAVLN_INTRCN
				) OMSD
		 WHERE OMSO.ORDER_ID = OMSD.ORDER_ID
		   AND OMSO.ORDER_ID = #orderId#
	</select>

	<!-- 스마트장바구니 주문 상세 상품조회 -->
	<select id="selectSmartOrderDtailGoodsInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT OMSD.ORDER_ID																			/* 주문번호 */
			  ,OMSD.SMART_ITEM_NAME																		/* 상품명 */
			  ,TRIM(TO_CHAR(OMSG.PRICE, '999,999,999,999')) PRICE										/* 상품금액 */
			  ,OMSD.ORD_QTY																				/* 상품수량 */
			  ,NVL(OMSG.PRICE,0)*NVL(OMSD.ORD_QTY,0) TOTAL_PRICE										/* 총 금액 */
		  FROM OD_MMARKET_SMART_ORDER_DTAIL OMSD
			  ,OD_MMARKET_SMART_GOODS OMSG
		 WHERE OMSD.SMART_ITEM_ID = OMSG.SMART_GOODS_SEQ
		   AND OMSD.ORDER_ID = #orderId#
	</select>

	<!-- 스마트장바구니 주문 상태 변경 -->
	<update id="updateDvlStat" parameterClass ="java.util.HashMap">
		UPDATE OD_MMARKET_SMART_ORDER
		   SET DVL_STAT_CD	= #dvlStatCd#
		 WHERE 1 = 1
		   AND ORDER_ID = #orderId#
	</update>

	<!-- 스마트장바구니 주문 메모 변경 -->
	<update id="updateSmartOrderDetail" parameterClass ="java.util.HashMap">
		UPDATE OD_MMARKET_SMART_ORDER
		   SET MEMO			= #memo#
		 WHERE 1 = 1
		   AND ORDER_ID = #orderId#
	</update>

	<!-- 주문 상세 팝업 - 주문 기본 정보 -->
	<select id="selectOrderDefaultInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderDefaultInfo */
		SELECT OOM.ORDER_ID																		/* 주문번호 */
				, DECODE(OOM.OKCASH_APPLY_DIV_CD, '02', '[OK캐시백]', '') OKCASH_APPLY_DIV_NM	/* 할인수단 */
				, TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE				/* 주문일시 */
				, TO_CHAR(DECODE(OOM.ORDER_STUS_CD,'O06',OOM.ORDER_CANCEL_DATE
							,'O02',OOM.APPR_DATE,'O03',OOM.APPR_DATE,'O04',OOM.APPR_DATE
							,'D01',OOM.APPR_DATE,'D02',OOM.APPR_DATE,'D03',OOM.APPR_DATE
							,'D04',OOM.APPR_DATE,OOM.APPR_DATE), 'YYYY/MM/DD HH24:MI:SS') AS PO_NOTI_DATE	/* 우체국 통보일시 ***/
				, TO_CHAR(OOM.ORDER_CONF_DATE, 'YYYY/MM/DD HH24:MI:SS') AS PO_RCEPT_TREAT_DATE	/* 우체국 접수처리일시 ***/
				, F_GET_ORDER_STUS_MAST_NM(OOM.ORDER_ID) ORDER_STUS_NM							/* 주문처리단계 */
				, DECODE(OOM.RECEVPO_RGISTPOCD,'85414',OOM.REGER_ID,'') CALLCENTER_ID			/* 콜센터 ID */
				, NVL((SELECT NAME FROM CALLCENTER_ADMIN WHERE ID = OOM.REGER_ID AND ROWNUM = 1),'') CALLCENTER_NAME /* 콜센터 담당자 */
				, OOM.ACCESS_NAME																/* 구매자 ID */
				, CASE WHEN OOM.ACCESS_NAME = 'NONMEMBER' THEN OOM.ORDRR_NM
					   ELSE (SELECT NAME FROM MEMINFO WHERE ACCESS_NAME = OOM.ACCESS_NAME)
				   END AS ORDRR_NM																/* 구매자 성명 */
				, NVL2(OOM.ORDRR_TELNO,F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'L'),'') ORDRR_TELNO /* 구매자 연락처 */
				, NVL2(OOM.ORDRR_HTELNO,F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'M')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'L'),'') ORDRR_HTELNO /* 구매자 휴대폰 */
				, OOM.ORDRR_EMAIL																/* 구매자 이메일 */
				, OOM.ORDER_MDA_DIV_CD															/* 주문 매체 구분 코드 */
				, F_GET_COMN_CD_NM('ORDER_MDA_DIV_CD', OOM.ORDER_MDA_DIV_CD) ORDER_MDA_DIV_NM	/* 접수구분 */
				, F_GET_COMN_CD_NM('NATION_CD', NVL(OOM.NATION_CD,'KR')) NATION_NM						/* 접속구분 */
				, (SELECT /*+ INDEX_DESC(A, XPK_MB_MEM_GRADE) */ CCC.COMN_CD_NM
					FROM MB_MEM_GRADE A, CM_COMN_CD CCC
					WHERE A.MEM_GRADE = CCC.COMN_CD_ID
					AND cd_grp_id = 'MEM_GRADE_CD'
					AND A.ACCESS_NAME = OOM.ACCESS_NAME
					AND A.MEM_GRADE_APPLY_YMD = TO_CHAR(SYSDATE,'YYYYMM')
					AND ROWNUM = 1) AS MEM_GRADE_NM												/* 고객등급 */
				, OOM.ORDRR_ZIPCD																/* 구매자 우편번호 */
				, OOM.ORDRR_ADDR1																/* 구매자 주소 */
				, OOM.ORDRR_ADDR2																/* 구매자 상세주소 */
				, (SELECT COUNT(0) FROM OD_CASHREQ OC WHERE OC.ORDER_ID = OOM.ORDER_ID) CASHREQ	/* 현금영수증 신청 개수 */
				, OOM.FIX_RESRV_ORDER_YN														/* 정기배송유무 */
				, CASE WHEN OOM.COPRTN_ORDER_DIV_CD = '01' THEN (SELECT NAME FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID)
					   WHEN OOM.COPRTN_ORDER_DIV_CD = '02' THEN (SELECT MALL_NAME
																   FROM PT_EXTERNAL_BIZ_ORDER A
																	   ,PT_EXTERNAL_BIZ_MALL B
																  WHERE A.EXT_BIZ_CODE	= B.EXT_BIZ_CODE
																	AND A.MALL_CODE		= B.MALL_CODE
																	AND A.EXT_BIZ_CODE		= OOM.EXT_BIZ_CODE
																	AND A.COPRTN_ORDER_NO	= OOM.COPRTN_ORDER_NO
																	AND A.COPRTN_ORDER_SEQ	= OOM.COPRTN_ORDER_SEQ)
					   ELSE ''
				   END COPRTN_NM
				, CASE WHEN OOM.COPRTN_ORDER_DIV_CD = '01' THEN (SELECT HEADER_URL FROM PT_PARTNER_MALL WHERE PARTNR_ID = OOM.PARTNR_ID)
					   ELSE ''
				   END COPRTN_URL
				,(select max(sender_nm) from od_order_itm where order_id = oom.order_id) SENDER_NM /*발송인명(콜센터용)*/
				,(select max(SENDER_ZIPCD) from od_order_itm where order_id = oom.order_id) SENDER_ZIPCD /*우편번호(콜센터용)*/
                ,(select max(SENDER_ADDR1) from od_order_itm where order_id = oom.order_id) SENDER_ADDR1 /*주소1(콜센터용)*/
                ,(select max(SENDER_ADDR2) from od_order_itm where order_id = oom.order_id) SENDER_ADDR2 /*주소2(콜센터용)*/
                ,(select max(SENDER_EMAIL) from od_order_itm where order_id = oom.order_id) SENDER_EMAIL /*이메일(콜센터용)*/
                ,(select max(SENDER_TELNO) from od_order_itm where order_id = oom.order_id) SENDER_TELNO /*전화번호(콜센터용)*/
                ,(select max(SENDER_HTELNO) from od_order_itm where order_id = oom.order_id) SENDER_HTELNO /*핸드폰번호(콜센터용)*/
		  FROM OD_ORDER_MAST OOM, MEMINFO EM
		 WHERE OOM.ACCESS_NAME = EM.ACCESS_NAME(+)
		   AND OOM.ORDER_ID = #orderId#
	</select>

	<select id="selectCashInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		SELECT DECODE(AA.STATUS_CD, 0, '접수', 1, '완료', 2, '국세청발행', 3, '취소', 4, '미신청', '-') STATUS
			  ,AA.STATUS_CD
		  FROM (
				SELECT DECODE(MAX(A.ORDER_ID), NULL, 4, DECODE(MIN(B.STATUS), 'D1', DECODE(MAX(B.AUTH_SEED_DATA), 'yDYp4pyi2WSi31H4UxvFMQ==', 2, 1), 'D2', 3, 0)) STATUS_CD
				  FROM OD_CASHREQ A, OD_CASHINFO B
				 WHERE A.ORDER_ID = B.ORDER_ID(+)
				   AND A.ORDER_ID = #orderId#
				) AA
	</select>

	<!-- 주문 상세 팝업 - 주문 결제 정보 -->
	<select id="selectOrderSetlSumInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		<![CDATA[
		/* selectOrderSetlSumInfo */
		SELECT TO_CHAR(TOT_ORDER_PRC, 'FM999,999,999,999') TOT_ORDER_PRC
			  ,TO_CHAR(TOT_DC_APPLY_PRC, 'FM999,999,999,999') TOT_DC_APPLY_PRC
			  ,TO_CHAR(TOT_SEND_PRC, 'FM999,999,999,999') TOT_SEND_PRC
			  ,TO_CHAR(TOT_B2B_COMMISSION_PRC, 'FM999,999,999,999') TOT_B2B_COMMISSION_PRC
			  ,TO_CHAR(AMOUNT_RM, 'FM999,999,999,999') AMOUNT_RM
			  ,TO_CHAR(AMOUNT_SP, 'FM999,999,999,999') AMOUNT_SP
			  ,TO_CHAR(AMOUNT_COUPON, 'FM999,999,999,999') AMOUNT_COUPON
			  ,TO_CHAR(WALLET_SETL_AMT, 'FM999,999,999,999') WALLET_SETL_AMT
			  ,TO_CHAR(AMOUNT_OKCASH, 'FM999,999,999,999') AMOUNT_OKCASH
			  ,ORDER_DATE
			  ,NVL((SELECT TO_CHAR(SUM(DECODE(MODIFY_STATE,'C08',NVL(PRE_REF_PRICE,0),0)), 'FM999,999,999,999')
				  FROM OD_ONLINE_EX_PRICE
				 WHERE ORDER_ID = AA.ORDER_ID),0) PRE_REF_PRICE	/* 환불예정금액 */
			  ,NVL((SELECT TO_CHAR(SUM(DECODE(MODIFY_STATE,'C10',NVL(REF_PRICE,0),0)), 'FM999,999,999,999')
				  FROM OD_ONLINE_EX_PRICE
				 WHERE ORDER_ID = AA.ORDER_ID),0) REF_PRICE			/* 환불금액 */
			  ,(SELECT TO_DATE(MAX(SETTLE_DATE),'YYYY/MM/DD HH24:MI:SS')
				  FROM OD_ONLINE_EX_PRICE
				 WHERE ORDER_ID = AA.ORDER_ID) SETTLE_DATE			/* 환불일자 */
			  ,TO_CHAR(REF_AMOUNT_RM, 'FM999,999,999,999') REF_AMOUNT_RM
			  ,TO_CHAR(REF_AMOUNT_SP, 'FM999,999,999,999') REF_AMOUNT_SP
			  ,TO_CHAR(REF_AMOUNT_COUPON, 'FM999,999,999,999') REF_AMOUNT_COUPON
			  ,NVL((SELECT TO_CHAR(SUM(DECODE(NVL(REF_PRICE,0),0,NVL(PRE_REF_PRICE,0),NVL(REF_PRICE,0)))
						+ NVL(AA.REF_AMOUNT_RM,0) + NVL(AA.REF_AMOUNT_SP,0) + NVL(AA.REF_AMOUNT_COUPON,0), 'FM999,999,999,999')
				  FROM OD_ONLINE_EX_PRICE
				 WHERE ORDER_ID = AA.ORDER_ID),0) TOT_REF_PRICE
		  FROM (
				SELECT  MAX(OOM.ORDER_ID) ORDER_ID
					  , SUM(NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0) + NVL(OOI.B2B_COMMISSION_PRC,0)) TOT_ORDER_PRC	/* 주문금액 */
					  , SUM(NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) TOT_DC_APPLY_PRC					/* 상품금액 */
					  , SUM(NVL(OOI.SEND_PRC,0)) TOT_SEND_PRC															/* 배송비 */
					  , SUM(NVL(OOI.B2B_COMMISSION_PRC,0)) TOT_B2B_COMMISSION_PRC										/* B2B 수수료 */
					  , NVL(MAX(OOM.PNT_USE_AMT),0) AMOUNT_RM															/* 포인트 사용액 */
					  , NVL(MAX(OOM.PREMI_CUST_PNT_SETL_AMT),0) AMOUNT_SP												/* 우수고객포인트 사용액 */
					  , NVL(MAX(OOM.TOT_CPN_DC_AMT),0) AMOUNT_COUPON													/* 할인쿠폰 사용액 */
					  , NVL(MAX(OOM.WALLET_SETL_AMT),0) WALLET_SETL_AMT													/* 전자지갑 사용액 */
					  , NVL(MAX(OOM.OKCASH_USE_AMT),0) AMOUNT_OKCASH													/* OK캐시백 사용액 */
					  , TO_CHAR(MAX(OOM.ORDER_DATE), 'YYYYMMDD') ORDER_DATE												/* 주문일시 */
					  , NVL(MAX(OOM.PNT_REFUND_SETL_AMT),0) REF_AMOUNT_RM												/* 포인트 환불액 */
					  , NVL(MAX(OOM.PREMI_CUST_PNT_REFUND_APRV_AMT),0) REF_AMOUNT_SP									/* 우수고객포인트 환불액 */
					  , SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',NVL(OOI.CPN_DC_AMT,0),0)) REF_AMOUNT_COUPON					/* 할인쿠폰 환불액 */
				  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI
				WHERE OOM.ORDER_ID = OOI.ORDER_ID
				  AND OOM.ORDER_ID = #orderId#
				  AND NVL(OOI.PRSNT_YN,'N') = 'N'
				  AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
				) AA
		]]>
	</select>

	<!-- 주문 상세 팝업 - 주문 결제 정보 -->
	<select id="selectOrderSetlInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		<![CDATA[
		/* selectOrderSetlInfo */
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, '' PAY_NAME															/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, '' SETL_APPR_CD														/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD IN ('09', '10', '11', '14', '15')) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD IN ('09', '10', '11', '14', '15')
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, '' PAY_NAME															/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, '' SETL_APPR_CD														/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '01') SETL_CANCEL_TOT_AMT
				, OOP.ONLINENAME		/*송금인*/
				, OOP.ACCOUNT_NO		/*계좌번호*/
				, OOP.ONLINEDATE		/*송금일자*/
				, OOP.FINANCE_NAME
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, (SELECT FINANCE_NAME, ORDER_ID, ONLINENAME, ACCOUNT_NO, ONLINEDATE FROM OD_ONLINE_PAYMENT WHERE SETL_SEQ = '1') OOP
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '01'
		  AND OOM.ORDER_ID = OOP.ORDER_ID(+)
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, OCSI.ACQUIRE_NAME PAY_NAME											/* 결제카드회사명 */
				, OCSI.CARD_ISSUER CARD_NAME											/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.APPROVAL_NO SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD IN ('02', '03', '08')) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_CREDIT_CARD_SETL_INFO OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD IN ('02', '03', '08')
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, OCSI.BUYCOMPNM PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.CREDITCARDAPPRNO SETL_APPR_CD									/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),'2100',NVL(SETL_APPR_AMT*-1,0),'2200',NVL(SETL_APPR_AMT*-1,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_SEQ != '1'
					  AND SETL_MEAN_CD = '04') SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, PRRWT0700 OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID||'1' = OCSI.RECEVNO
		  AND OOS.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '04'
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, OCSI.PAY_BANK PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.AUTH_NUM SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD IN ('05', '06')) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_BANKTOWN OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD IN ('05', '06')
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, OCSI.CARDNAME PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.TID SETL_APPR_CD													/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD IN ('07', '20', '21', '22', '23', '24', '25', '26', '27', '29')) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_KAKAO_PAYMENT OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD IN ('07', '20', '21', '22', '23', '24', '25', '26', '27', '29')
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, '' PAY_NAME															/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.TID SETL_APPR_CD													/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD IN ('12', '13')) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_MOBILE_PAYMENT OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD IN ('12', '13')
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				F_GET_COMN_CD_NM('SETL_MEAN_CD', OOS.SETL_MEAN_CD) AS SETL_MEAN_NM		/* 결제방식 */
				, '' PAY_NAME															/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.TXNO SETL_APPR_CD												/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.SETL_APPR_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(SETL_APPR_AMT,0),'2400',NVL(SETL_APPR_AMT,0),'2999',NVL(SETL_APPR_AMT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '19') SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_OKCASH_PAYMENT OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '19'
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '현금' SETL_MEAN_NM													/* 결제방식 */
				, '' PAY_NAME															/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, '' SETL_APPR_CD														/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.AMOUNT_CASH,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT		/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(AMOUNT_CASH,0),'2400',NVL(AMOUNT_CASH,0),'2999',NVL(AMOUNT_CASH,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '17'
					  AND NVL(AMOUNT_CASH,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '17'
		  AND NVL(OOS.AMOUNT_CASH,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '신용카드 (창구)' SETL_MEAN_NM											/* 결제방식 */
				, OCSI.BUYCOMPNM PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.CREDITCARDAPPRNO SETL_APPR_CD									/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.AMOUNT_CARD,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(AMOUNT_CARD,0),'2400',NVL(AMOUNT_CARD,0),'2999',NVL(AMOUNT_CARD,0),'2100',NVL(AMOUNT_CARD*-1,0),'2200',NVL(AMOUNT_CARD*-1,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_SEQ != '1'
					  AND SETL_MEAN_CD = '17') SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, PRRWT0700 OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID||'1' = OCSI.RECEVNO
		  AND OOS.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '17'
		  AND NVL(OOS.AMOUNT_CARD,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '즉시이체 (우체국계좌이체)' SETL_MEAN_NM								/* 결제방식 */
				, OCSI.PAY_BANK PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.AUTH_NUM SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.AMOUNT_BANKTOWN,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(AMOUNT_BANKTOWN,0),'2400',NVL(AMOUNT_BANKTOWN,0),'2999',NVL(AMOUNT_BANKTOWN,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '16'
					  AND NVL(AMOUNT_BANKTOWN,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_BANKTOWN OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '16'
		  AND NVL(OOS.AMOUNT_BANKTOWN,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '즉시이체 (우체국계좌 외)' SETL_MEAN_NM								/* 결제방식 */
				, OCSI.PAY_BANK PAY_NAME												/* 결제카드회사명 */
				, '' CARD_NAME															/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.AUTH_NUM SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.AMOUNT_OTHER_BANKTOWN,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(AMOUNT_OTHER_BANKTOWN,0),'2400',NVL(AMOUNT_OTHER_BANKTOWN,0),'2999',NVL(AMOUNT_OTHER_BANKTOWN,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '16'
					  AND NVL(AMOUNT_OTHER_BANKTOWN,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_BANKTOWN OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.SETL_SEQ = '1'
		  AND OOS.SETL_MEAN_CD = '16'
		  AND NVL(OOS.AMOUNT_OTHER_BANKTOWN,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '신용카드 (국내)' SETL_MEAN_NM											/* 결제방식 */
				, OCSI.ACQUIRE_NAME PAY_NAME											/* 결제카드회사명 */
				, OCSI.CARD_ISSUER CARD_NAME											/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.APPROVAL_NO SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OCSI.TOTAL_AMOUNT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(OCSI.TOTAL_AMOUNT,0),'2400',NVL(OCSI.TOTAL_AMOUNT,0),'2999',NVL(OCSI.TOTAL_AMOUNT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '16'
					  AND NVL(AMOUNT_CARD_EPOST,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_CREDIT_CARD_SETL_INFO OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.STATUS IN ('D1','S1')
		  AND OCSI.ONNURI_YN = 'N'
		  AND OOS.SETL_MEAN_CD = '16'
		  AND NVL(OOS.AMOUNT_CARD_EPOST,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '신용카드 (해외)' SETL_MEAN_NM											/* 결제방식 */
				, OCSI.ACQUIRE_NAME PAY_NAME											/* 결제카드회사명 */
				, OCSI.CARD_ISSUER CARD_NAME											/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.APPROVAL_NO SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OCSI.TOTAL_AMOUNT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(OCSI.TOTAL_AMOUNT,0),'2400',NVL(OCSI.TOTAL_AMOUNT,0),'2999',NVL(OCSI.TOTAL_AMOUNT,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '16'
					  AND NVL(AMOUNT_CARD_OVERSEA,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_CREDIT_CARD_SETL_INFO OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.STATUS IN ('D1','S1')
		  AND OCSI.ONNURI_YN = 'N'
		  AND OOS.SETL_MEAN_CD = '16'
		  AND NVL(OOS.AMOUNT_CARD_OVERSEA,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		UNION
		SELECT /*+ INDEX_DESC (OOS XPK_OD_ORDER_SETL)*/
				 '온누리상품권' SETL_MEAN_NM											/* 결제방식 */
				, OCSI.ACQUIRE_NAME PAY_NAME											/* 결제카드회사명 */
				, OCSI.CARD_ISSUER CARD_NAME											/* 카드사 */
				, OOS.CREDITCARD_INSTLMT_MNTH_CNT										/* 할부 개월수 */
				, F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM	/* 결제상태 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE	/* 결제처리일시 */
				, OCSI.APPROVAL_NO SETL_APPR_CD											/* 승인번호 */
				, TO_CHAR(OOS.SETL_APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE	/* 승인일시 */
				, TO_CHAR(NVL(OOS.AMOUNT_ONURI,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT	/* 결제 승인 금액 */
				, (SELECT SUM(DECODE(SETL_STUS_CD,'2300',NVL(AMOUNT_ONURI,0),'2400',NVL(AMOUNT_ONURI,0),'2999',NVL(AMOUNT_ONURI,0),0))
					 FROM OD_ORDER_SETL
					WHERE ORDER_ID = OOM.ORDER_ID
					  AND SETL_MEAN_CD = '16'
					  AND NVL(AMOUNT_ONURI,0) > 0) SETL_CANCEL_TOT_AMT
				, '' ONLINENAME					/*송금인*/
				, '' ACCOUNT_NO					/*계좌번호*/
				, '' ONLINEDATE					/*송금일자*/
				, '' FINANCE_NAME 				/*계좌은행명*/
				, OOM.SETL_MEAN_CD
		  FROM OD_ORDER_MAST OOM, OD_ORDER_SETL OOS, OD_CREDIT_CARD_SETL_INFO OCSI
		WHERE OOM.ORDER_ID = OOS.ORDER_ID
		  AND OOM.ORDER_ID = OCSI.ORDER_ID
		  AND OOS.SETL_SEQ = '1'
		  AND OCSI.STATUS IN ('D1','S1')
		  AND OCSI.ONNURI_YN = 'Y'
		  AND OOS.SETL_MEAN_CD = '16'
		  AND NVL(OOS.AMOUNT_ONURI,0) > 0
		  AND OOM.ORDER_ID = #orderId#
		]]>
	</select>

	<!-- 주문 상세 팝업 - 송장번호 카운트 -->
	<select id="selectPostNumCnt" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		SELECT 	COUNT(*) AS PARCEL_NM_CNT
		FROM 	OD_TRACKING_MASTER_MGMT A
			   ,OD_ORDER_ITM B
		WHERE 	A.REGI_NO	= B.REGI_NO
		AND 	B.ORDER_ID	= #orderId#
	</select>

	<!-- 주문 상세 팝업 - 배송일자 변경(주문일) -->
	<update id="updateRecvDate" parameterClass ="java.util.HashMap" >
		UPDATE 	EC_ORDER_POSTAGE_INTERFACE
	   	SET 	RECEV_DATE = #recevDate#
	 	WHERE 	TXORDER_ID LIKE #orderId# ||'%'
	</update>

	<!-- 주문 상세 팝업 - 주문 상품 목록 -->
	<select id="selectOrderGoodsCntList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderGoodsCntList */
		SELECT OOI.ORDER_ID
			  ,OOI.GOODS_CD
			  ,(SELECT COUNT(DISTINCT(SEND_SEQ))
				  FROM OD_ORDER_ITM x
				 WHERE x.ORDER_ID = OOI.ORDER_ID
				   AND x.GOODS_CD = OOI.GOODS_CD
				   AND NVL(x.PRSNT_YN,		 'N')	= 'N'
				   AND NVL(x.EXTRA_GOODS_YN, 'N')	= 'N'
				   AND NVL(x.GOODS_CANCEL_YN,'N')	= 'N'
				 GROUP BY x.ORDER_ID, x.GOODS_CD) ORDER_GOODS_DELIVERY_CNT
		  FROM OD_ORDER_ITM OOI
		 WHERE NVL(OOI.PRSNT_YN,'N') = 'N'
		   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		   AND OOI.ORDER_ID = #orderId#
		 GROUP BY OOI.ORDER_ID, OOI.GOODS_CD
	</select>

	<!-- 주문 상세 팝업 - 주문 상품 정보 -->
	<select id="selectOrderGoodsInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderGoodsInfo */
		SELECT ORDER_ID
			  ,ORDER_STUS_NM
			  ,ORDER_STUS_CD
			  ,GOODS_CD
			  ,STD_SELL_PRC
			  ,CANCEL_STD_SELL_PRC
			  ,CNSMR_PRC
			  ,DC_APPLY_PRC
			  ,CANCEL_DC_APPLY_PRC
			  ,DC_PRC
			  ,CANCEL_DC_PRC
			  ,OPTN_GOODS_APPLY_PRC
			  ,CANCEL_OPTN_GOODS_APPLY_PRC
			  ,ORDER_PRC
			  ,CANCEL_ORDER_PRC
			  ,REQ_CNT
			  ,CANCEL_REQ_CNT
			  ,PRSNT_YN
			  ,EXTRA_GOODS_YN
			  ,EXTRA_GOODS_CNT
			  ,FEE
			  ,FEE_RATE
			  ,ORGPLCE_DIV_NM
			  ,GOODS_CRTFCT
			  ,TRDACL_GOODS_YN
			  ,TRDACL_CNT
			  ,BUYER_AGELIMIT_NM
			  ,GOODS_NM
			  ,PAVLN_DIV_NM
			  ,PAVLN_DIV_CD
			  ,WISH_SEND_DATE
			  ,EVENT_DC_GOODS_YN
			  ,EVENT_DIV_NM
			  ,EVENT_NM
			  ,EVENT_PRID_YN
			  ,GIFTICON_YN
			  ,BALTSHT_PRT_YN
			  ,SEND_PRC
			  ,SUPP_COMP_NM
			  ,(SELECT MAX(NVL2(TELNO,F_DIV_TELNO(REPLACE(TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(TELNO,'-'),'L'),''))
						 FROM CO_SUPP_COMP_MAST
						WHERE SUPP_COMP_ID = T.SUPP_COMP_ID) TELNO																														/* 공급업체 전화번호 */
			  ,(SELECT MAX(NVL2(FAXNO,F_DIV_TELNO(REPLACE(FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(FAXNO,'-'),'L'),''))
						 FROM CO_SUPP_COMP_MAST
						WHERE SUPP_COMP_ID = T.SUPP_COMP_ID) FAXNO																														/* 공급업체 팩스번호 */
			  ,SUPP_PO_NM
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ MAX(NVL2(POFNO||POMNO||POLNO, POFNO||'-'||POMNO||'-'||POLNO,''))
				  FROM PICMT0060
				 WHERE REGIPOCD = T.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POTEL																																				/* 공급우체국 전화번호 */
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ MAX(NVL2(BIZFAXFNO||BIZFAXMNO||BIZFAXLNO, BIZFAXFNO||'-'||BIZFAXMNO||'-'||BIZFAXLNO,''))
				  FROM PICMT0060
				 WHERE REGIPOCD = T.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POFAX																																				/* 공급우체국 팩스번호 */
		  FROM (
				SELECT OOM.ORDER_ID																																							/* 주문번호 */
					 , F_GET_COMN_CD_NM('ORDER_STUS_CD', MIN(OOI.ORDER_STUS_CD)) AS ORDER_STUS_NM																			/* 주문상태 */
					 , MIN(OOI.ORDER_STUS_CD) ORDER_STUS_CD																														/* 주문상태 상세 코드 */
					 , OOI.GOODS_CD																																							/* 상품번호 */
					 , TO_CHAR(SUM(NVL(GGM.STD_SELL_PRC, 0)), 'FM999,999,999,999') STD_SELL_PRC																									/* 판매가 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',NVL(GGM.STD_SELL_PRC, 0),0)), 'FM999,999,999,999') CANCEL_STD_SELL_PRC															/* 취소판매가 */
					 , TO_CHAR(MAX(OOI.CNSMR_PRC), 'FM999,999,999,999') CNSMR_PRC																													/* 소비자가 */
					 , TO_CHAR(SUM(NVL(OOI.DC_APPLY_PRC, 0)), 'FM999,999,999,999') DC_APPLY_PRC																									/* 할인적용금액 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',NVL(OOI.DC_APPLY_PRC, 0),0)), 'FM999,999,999,999') CANCEL_DC_APPLY_PRC															/* 취소할인적용금액 */
					 , TO_CHAR(SUM((NVL(OOI.STD_SELL_PRC, 0) - NVL(OOI.DC_APPLY_PRC, 0)
								 + NVL(OOI.CPN_DC_AMT, 0) + NVL(OOI.PNT_USE_AMT, 0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)
								 + NVL(OOI.OKCASH_USE_AMT, 0))), 'FM999,999,999,999') AS DC_PRC																									/* 할인금액 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',(NVL(OOI.STD_SELL_PRC, 0) - NVL(OOI.DC_APPLY_PRC, 0)
								 + NVL(OOI.CPN_DC_AMT, 0) + NVL(OOI.PNT_USE_AMT, 0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)
								 + NVL(OOI.OKCASH_USE_AMT, 0)),0)), 'FM999,999,999,999') AS CANCEL_DC_PRC																							/* 취소할인금액 */
					 , TO_CHAR(SUM(NVL(OOI.OPTN_GOODS_APPLY_PRC,0)), 'FM999,999,999,999') OPTN_GOODS_APPLY_PRC																						/* 옵션가 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',NVL(OOI.OPTN_GOODS_APPLY_PRC,0),0)), 'FM999,999,999,999') CANCEL_OPTN_GOODS_APPLY_PRC											/* 취소옵션가 */
					 , TO_CHAR(SUM((NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)
																	 + NVL(OOI.SEND_PRC,0))), 'FM999,999,999,999') ORDER_PRC																		/* 주문금액 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',(NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)
																	 + NVL(OOI.SEND_PRC,0)),0)), 'FM999,999,999,999') CANCEL_ORDER_PRC															/* 취소주문금액 */
					 , TO_CHAR(SUM(NVL(OOI.REQ_CNT, 0)), 'FM999,999,999,999') REQ_CNT																												/* 주문수량 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',1,0))) CANCEL_REQ_CNT																										/* 주문취소수량 */
					 , NVL((SELECT PRSNT_YN FROM OD_ORDER_ITM WHERE ORDER_ID = OOM.ORDER_ID AND GOODS_CD = OOI.GOODS_CD AND PRSNT_YN = 'Y' AND ROWNUM = 1),'N') PRSNT_YN					/* 사은품 여부 */
					 , NVL((SELECT EXTRA_GOODS_YN FROM OD_ORDER_ITM WHERE ORDER_ID = OOM.ORDER_ID AND GOODS_CD = OOI.GOODS_CD AND EXTRA_GOODS_YN = 'Y' AND ROWNUM = 1),'N') EXTRA_GOODS_YN	/* 덤상품 여부 */
					 , NVL((SELECT COUNT(0) FROM OD_ORDER_ITM WHERE ORDER_ID = OOM.ORDER_ID AND GOODS_CD = OOI.GOODS_CD AND EXTRA_GOODS_YN = 'Y'),'0') EXTRA_GOODS_CNT						/* 덤상품 수량 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',0,NVL(OOS.FEE_AMT, 0))), 'FM999,999,999,999') AS FEE																			/* 서비스이용료 ***/
					 , NVL(MAX(OOS.SETL_FEE_RATE), 0) AS FEE_RATE																															/* 서비스이용료율 ***/
					 , NVL(F_GET_COMN_CD_NM('ORGPLCE_DIV_CD', MAX(GGM.ORGPLCE_DIV_CD)),'-') ORGPLCE_DIV_NM																					/* 원산지 */
					 , NVL(F_GET_GOODS_CRTFC_NM(OOI.GOODS_CD),'-') AS GOODS_CRTFCT																											/* 인증정보 목록 */
					 , MAX(NVL(GGM.TRDACL_GOODS_YN,'N')) TRDACL_GOODS_YN																													/* 전통주 여부 */
					 , TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',0,GGM.TRDACL_CNT)), 'FM999,999,999,999') TRDACL_CNT																				/* 전통주 개수 */
					 , NVL(F_GET_COMN_CD_NM('BUYER_AGELIMIT_CD', NVL(MIN(GGM.BUYER_AGELIMIT_CD),'0')),'제한없음') BUYER_AGELIMIT_NM															/* 구매가능 연령기준 */
					 , MAX(OOI.GOODS_NM) GOODS_NM																																			/* 상품명 */
					 , F_GET_COMN_CD_NM('PAVLN_DIV_CD', MAX(OOI.PAVLN_DIV_CD)) PAVLN_DIV_NM																									/* 전시관 분류 */
					 , MAX(OOI.PAVLN_DIV_CD) PAVLN_DIV_CD																																	/* 전시관 분류 코드 */
					 , TO_CHAR(MAX(OOI.WISH_SEND_DATE), 'YYYY/MM/DD HH24:MI:SS') AS WISH_SEND_DATE																							/* 희망배송일시 */
					 , MAX(OOI.EVENT_DC_GOODS_YN) EVENT_DC_GOODS_YN																															/* 이벤트 할인상품 여부 */
					 , F_GET_COMN_CD_NM('EVENT_DIV_CD',MAX(OOI.EVENT_DIV_CD)) EVENT_DIV_NM																									/* 이벤트 구분 */
					 , MAX(EEM.EVENT_NM) EVENT_NM																																			/* 이벤트명 */
					 , CASE WHEN MAX(OOM.ORDER_DATE) BETWEEN MAX(EEM.EVENT_STRT_DATE) AND MAX(EEM.EVENT_END_DATE) THEN 'Y'
							ELSE 'N'
						END EVENT_PRID_YN																																					/* 이벤트 시작종료여부 */
					 , CASE WHEN MAX(OOI.GIFT_ORDER_YN) = 'Y' AND MAX(OOI.GIFT_CANCEL_YN) = 'Y' THEN 'Y'
							ELSE 'N'
						END GIFTICON_YN																																						/* 기프티콘 여부 */
					 ,NVL(MAX(OOI.BALTSHT_PRT_YN),'N') BALTSHT_PRT_YN																														/* 기표지출력여부 */
					 ,DECODE(SUM(NVL(OOI.SEND_PRC, 0)), 0, '무료', TO_CHAR(SUM(NVL(OOI.SEND_PRC, 0)), 'FM999,999,999,999')||'원') SEND_PRC														/* 배송비 */
					 ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM																																	/* 공급업체명 */
					 ,MAX(OOI.SUPP_COMP_ID) SUPP_COMP_ID																																	/* 공급업체ID */
					 ,MAX(OOI.SUPP_PO_NM) SUPP_PO_NM																																		/* 공급우체국명 */
					 ,MAX(OOI.SUPPO_RGIST_POCD) SUPPO_RGIST_POCD																															/* 공급국코드 */
				  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI, OD_ORDER_FEE OOS, GD_GOODS_MAST GGM, EV_EVENT_MAST EEM
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOI.ORDER_ITM_ID = OOS.ORDER_ITM_ID(+)
				   AND OOI.GOODS_CD = GGM.GOODS_CD(+)
				   AND OOI.EVENT_ID = EEM.EVENT_ID(+)
				   AND OOM.ORDER_ID = #orderId#
				   AND OOI.GOODS_CD = #goodsCd#
				   AND NVL(OOI.PRSNT_YN,'N') = 'N'
				   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
				GROUP BY OOM.ORDER_ID, OOI.GOODS_CD
				) T
	</select>

	<!-- 주문 상세 팝업 - 주문 상품 옵션/사은품, 덤상품 정보 -->
	<select id="selectOrderGoodsOptnInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderGoodsOptnInfo */
		SELECT GOODS_NM
			  ,GOODS_CNT
			  ,T.OPTN_ESSN_CHOICE_YN																	/* 옵션필수선택여부 */
			  ,T.OPTN_NM1																					/* 옵션명1 */
			  ,T.OPTN_NM2																					/* 옵션명2 */
			  ,T.OPTN_CNT1																				/* 옵션수량1 */
			  ,T.OPTN_CNT2																				/* 옵션수량2 */
			  ,(SELECT GOODS_OPTN_NM FROM OD_ORDER_ITM_OPTN_DTAIL WHERE ORDER_ITM_ID = T.ORDER_ITM_ID
																	AND GOODS_OPTN_GRP_SEQ = T.GOODS_OPTN_GRP_SEQ
																	AND GOODS_OPTN_SEQ = T.GOODS_OPTN_SEQ) GOODS_OPTN_NM	/* 옵션1 */
			  ,(SELECT GOODS_OPTN_NM FROM OD_ORDER_ITM_OPTN_DTAIL WHERE ORDER_ITM_ID = T.ORDER_ITM_ID
																	AND GOODS_OPTN_GRP_SEQ = T.GOODS_OPTN_GRP_SEQ2
																	AND GOODS_OPTN_SEQ = T.GOODS_OPTN_SEQ2) GOODS_OPTN_NM2	/* 옵션2 */
			  ,(SELECT TO_CHAR(OPTN_GOODS_APPLY_PRC, 'FM999,999,999,999') FROM OD_ORDER_ITM_OPTN_DTAIL
																   WHERE ORDER_ITM_ID = T.ORDER_ITM_ID
																	 AND GOODS_OPTN_GRP_SEQ = T.GOODS_OPTN_GRP_SEQ
																	 AND GOODS_OPTN_SEQ = T.GOODS_OPTN_SEQ) OPTN_GOODS_APPLY_PRC	/* 옵션가격1 */
			  ,(SELECT TO_CHAR(OPTN_GOODS_APPLY_PRC, 'FM999,999,999,999') FROM OD_ORDER_ITM_OPTN_DTAIL
																   WHERE ORDER_ITM_ID = T.ORDER_ITM_ID
																	 AND GOODS_OPTN_GRP_SEQ = T.GOODS_OPTN_GRP_SEQ2
																	 AND GOODS_OPTN_SEQ = T.GOODS_OPTN_SEQ2) OPTN_GOODS_APPLY_PRC2	/* 옵션가격2 */
			  ,(SELECT GOODS_NM FROM OD_ORDER_ITM WHERE ORDER_ID = T.ORDER_ID AND GOODS_CD = T.GOODS_CD AND NVL(PRSNT_YN,'N') = 'Y' AND ROWNUM = 1) PRSNT_GOODS_NM /* 사은품명 */
			  ,(SELECT COUNT(1) FROM OD_ORDER_ITM WHERE ORDER_ID = T.ORDER_ID AND GOODS_CD = T.GOODS_CD AND NVL(EXTRA_GOODS_YN,'N') = 'Y') EXTRA_GOODS_CNT /* 덤상품수 */
		  FROM (
				SELECT OOI.ORDER_ID
					  ,MAX(OOI.ORDER_ITM_ID) ORDER_ITM_ID
					  ,OOI.GOODS_CD
					  ,MAX(OOI.GOODS_NM) GOODS_NM
					  ,COUNT(0) GOODS_CNT
					  ,OOI.GOODS_OPTN_SEQ
					  ,OOI.GOODS_OPTN_GRP_SEQ
					  ,OOI.GOODS_OPTN_SEQ2
					  ,OOI.GOODS_OPTN_GRP_SEQ2
					  ,OOI.OPTN_ESSN_CHOICE_YN																		/* 옵션필수선택여부 */
					  ,OOI.OPTN_NM1																					/* 옵션명1 */
					  ,OOI.OPTN_NM2																					/* 옵션명2 */
					  ,OOI.OPTN_CNT1																				/* 옵션수량1 */
					  ,OOI.OPTN_CNT2																				/* 옵션수량2 */
				  FROM OD_ORDER_ITM OOI
				 WHERE OOI.ORDER_ID = #orderId#
				   AND OOI.GOODS_CD = #goodsCd#
				   AND NVL(OOI.PRSNT_YN,'N') = 'N'
				   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
				   AND NVL(OOI.GOODS_CANCEL_YN,'N') = 'N'
				 GROUP BY OOI.ORDER_ID
						 ,OOI.GOODS_CD
						 ,OOI.GOODS_OPTN_SEQ
						 ,OOI.GOODS_OPTN_GRP_SEQ
						 ,OOI.GOODS_OPTN_SEQ2
						 ,OOI.GOODS_OPTN_GRP_SEQ2
						 ,OOI.OPTN_ESSN_CHOICE_YN
						 ,OOI.OPTN_NM1
						 ,OOI.OPTN_NM2
						 ,OOI.OPTN_CNT1
						 ,OOI.OPTN_CNT2
				) T
	</select>

	<!-- 주문 상세 팝업 - 주문 상품 및 복수배송 정보 -->
	<select id="selectOrderGoodsInfoList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderGoodsInfoList */
		SELECT ROWNUM RNUM
			  ,GOODS_CD
			  ,GOODS_NM
			  ,ORDER_STUS_NM
			  ,ORDER_STUS_CD
			  ,REQ_CNT
			  ,REGI_NO
			  ,RECPTER_ZIPCD
			  ,RECPTER_ADDR1
			  ,RECPTER_ADDR2
			  ,SENDER_ZIPCD
			  ,SENDER_ADDR1
			  ,SENDER_ADDR2
			  ,SENDER_NM
			  ,SENDER_TELNO
			  ,SENDER_HTELNO
			  ,RECPTER_NM
			  ,RECPTER_TELNO
			  ,RECPTER_HTELNO
			  ,SEND_PRC
			  ,SMS_RECV_YN
			  ,SEND_TYP_NM
			  ,SEND_PERIOD_NM
			  ,SEND_STRT_YMD
			  ,SEND_END_YMD
			  ,WISH_SEND_DATE
			  ,FIX_RESRV_SEND_YMD
			  ,ORDER_CNT
			  ,OVSEA_SEND_GOODS_YN
			  ,AIR_SEND_YN
			  ,SEND_AREA_NM
			  ,SEND_MSG
			  ,SUPP_COMP_NM
			  ,TELNO
			  ,FAXNO
			  ,SUPP_PO_NM
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.POFNO || '-' || A.POMNO || '-' || A.POLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD = T.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POTEL																	/* 공급우체국 전화번호 */
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.BIZFAXFNO || '-' || A.BIZFAXMNO || '-' || A.BIZFAXLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD = T.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POFAX																	/* 공급우체국 팩스번호 */
			  ,REPRSNT_REGI_NO
			  ,REGI_NO_CREATE_DIV_CD
			  ,PAVLN_DIV_CD
			  ,ORDER_ITM_ID
			  ,ORDER_ID
			  ,ORDER_DATE
			  ,ACCESS_NAME
			  ,ORDRR_NM
			  ,ORDRR_HTELNO
			  ,SETL_MEAN_CD
			  ,SEND_COMPLETE_YN
			  ,SEND_SEQ
			  ,BUNDLE_CNT
			  ,SEND_ADDR_SEQ
			  ,REGI_NO_CHANGE_ABLE_YN
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_CONT
			  ,(SELECT SEND_MSG_FONT_TYP FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_FONT_TYP
			  ,(SELECT SEND_MSG_FONT_STYLE FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_FONT_STYLE
			  ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG_SE /* 카드 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG /* 카드 메세지 */
			  ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG_SE /* 리본 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG /* 리본 메세지 */
		  FROM (
			SELECT OOI.GOODS_CD																					/* 상품번호 */
				  ,MAX(OOI.GOODS_NM) GOODS_NM																	/* 상품명 */
				  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', MAX(OOI.ORDER_STUS_CD)) AS ORDER_STUS_NM					/* 주문상태 */
				  ,MAX(OOI.ORDER_STUS_CD) ORDER_STUS_CD															/* 주문상태 상세 코드 */
				  ,TO_CHAR(SUM(NVL(OOI.REQ_CNT,0)), 'FM999,999,999,999') REQ_CNT										/* 주문수량 */
				  ,NVL(MAX(OOI.REPRSNT_REGI_NO),MIN(OOI.REGI_NO)) REGI_NO										/* 등기번호 */
				  ,MAX(OOI.RECPTER_ZIPCD) RECPTER_ZIPCD															/* 배송주소 - 우편번호 */
				  ,MAX(OOI.RECPTER_ADDR1) RECPTER_ADDR1															/* 배송주소 - 상세1 */
				  ,MAX(OOI.RECPTER_ADDR2) RECPTER_ADDR2															/* 배송주소 - 상세2 */
				  ,MAX(OOI.SENDER_ZIPCD) SENDER_ZIPCD															/* 보내는분주소 - 우편번호 */
				  ,MAX(OOI.SENDER_ADDR1) SENDER_ADDR1															/* 보내는분주소 - 상세1 */
				  ,MAX(OOI.SENDER_ADDR2) SENDER_ADDR2															/* 보내는분주소 - 상세2 */
				  ,MAX(OOI.SENDER_NM) SENDER_NM																	/* 보내는분 */
				  ,MAX(NVL2(OOI.SENDER_TELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'L'),'')) SENDER_TELNO /* 보내는분 연락처1 */
				  ,MAX(NVL2(OOI.SENDER_HTELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'L'),'')) SENDER_HTELNO /* 보내는분 연락처2 */
				  ,MAX(OOI.RECPTER_NM) RECPTER_NM																/* 수취인명 */
				  ,MAX(NVL2(OOI.RECPTER_TELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'L'),'')) RECPTER_TELNO /* 받으시는분 연락처1 */
				  ,MAX(NVL2(OOI.RECPTER_HTELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'L'),'')) RECPTER_HTELNO /* 받으시는분 연락처2 */
				  ,DECODE(SUM(NVL(OOI.SEND_PRC, 0)), 0, '무료', TO_CHAR(SUM(NVL(OOI.SEND_PRC, 0)), 'FM999,999,999,999')) SEND_PRC	/* 배송비 */
				  ,MAX(OOI.SMS_RECV_YN) SMS_RECV_YN																/* SMS */
				  ,F_GET_COMN_CD_NM('SEND_TYP_CD', MAX(OOI.SEND_TYP_CD)) AS SEND_TYP_NM							/* 배송타입코드 */
				  ,'' AS SEND_PERIOD_NM				/* 발송주기 */
				  ,TO_CHAR(MAX(OOI.SEND_STRT_DATE), 'YYYY/MM/DD') AS SEND_STRT_YMD								/* 발송 시작일 */
				  ,TO_CHAR(MAX(OOI.SEND_DONE_DATE), 'YYYY/MM/DD') AS SEND_END_YMD								/* 발송 종료일 */
				  ,TO_CHAR(MAX(OOI.WISH_SEND_DATE), 'YYYY/MM/DD HH24:MI:SS') AS WISH_SEND_DATE					/* 희망배송일시 */
				  ,TO_CHAR(MAX(OOI.SEND_CONF_DATE), 'YYYY/MM/DD') AS FIX_RESRV_SEND_YMD							/* 실배송일시 */
				  ,TO_CHAR(SUM(DECODE(OOI.GOODS_CANCEL_YN,'Y',0,1)), 'FM999,999,999,999') ORDER_CNT					/* 배송총건수 */
				  ,MAX(OOI.OVSEA_SEND_GOODS_YN) OVSEA_SEND_GOODS_YN												/* 해외배송여부 */
				  ,MAX(OOI.AIR_SEND_YN) AIR_SEND_YN																/* 항공 배송 여부 */
				  ,F_GET_COMN_CD_NM('SEND_AREA_CD', MAX(OOI.SEND_AREA_CD)) SEND_AREA_NM							/* 배송지역코드 */
				  ,MAX(OOI.SEND_MSG) SEND_MSG																	/* 배송시 요청사항 */
				  ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM															/* 공급업체명 */
				  ,MAX(NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'')) TELNO /* 공급업체 전화번호 */
				  ,MAX(NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'')) FAXNO /* 공급업체 팩스번호 */
				  ,MAX(OOI.SUPP_PO_NM) SUPP_PO_NM																/* 공급우체국명 */
				  ,MAX(OOI.REPRSNT_REGI_NO) REPRSNT_REGI_NO														/* 대표등기번호 */
				  ,MAX(OOI.REGI_NO_CREATE_DIV_CD) REGI_NO_CREATE_DIV_CD											/* 등기 번호 생성 구분 코드 */
				  ,MAX(OOI.PAVLN_DIV_CD) PAVLN_DIV_CD															/* 전시관 분류 코드 */
				  ,MAX(OOI.ORDER_ITM_ID) ORDER_ITM_ID															/* 주문아이템 아이디 */
				  ,OOM.ORDER_ID																					/* 주문 아이디 */
				  ,MAX(OOI.SUPPO_RGIST_POCD) SUPPO_RGIST_POCD
				  ,TO_CHAR(MAX(OOM.ORDER_DATE), 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE							/* 주문일시 */
				  ,MAX(OOM.ACCESS_NAME) ACCESS_NAME																/* 구매자 ID */
				  ,MAX(OOM.ORDRR_NM) ORDRR_NM																	/* 구매자 성명 */
				  ,MAX(OOM.ORDRR_HTELNO) ORDRR_HTELNO															/* 구매자 휴대폰 */
				  ,MAX(OOM.SETL_MEAN_CD) SETL_MEAN_CD															/* 결제수단코드 */
				  ,CASE WHEN MAX(OOI.ORDER_STUS_CD) IN ('O01','O02','O04','D02') THEN 'N'
						WHEN MAX(OOI.ORDER_STUS_CD) IN ('D03','D04') THEN 'Y'
					END AS SEND_COMPLETE_YN																		/* 배송완료여부 */
				  ,OOI.SEND_SEQ
				  ,COUNT(1) BUNDLE_CNT
				  ,MAX(OOI.SEND_ADDR_SEQ) SEND_ADDR_SEQ
				  ,DECODE(MAX(OOI.BALTSHT_PRT_MBY_CD),'03','Y','N') REGI_NO_CHANGE_ABLE_YN						/* 송장수정 가능 여부 */
			  FROM OD_ORDER_MAST OOM
				  ,OD_ORDER_ITM OOI
				  ,OD_ORDER_FEE OOF
				  ,GD_GOODS_MAST GGM
				  ,CO_SUPP_COMP_MAST CSCM
			 WHERE OOM.ORDER_ID		= OOI.ORDER_ID
			   AND OOI.ORDER_ITM_ID	= OOF.ORDER_ITM_ID(+)
			   AND OOI.GOODS_CD		= GGM.GOODS_CD(+)
			   AND OOI.SUPP_COMP_ID	= CSCM.SUPP_COMP_ID(+)
			/* AND NVL(OOI.PRSNT_YN,'N') = 'N'
			   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N' */
			   AND NVL(OOI.GOODS_CANCEL_YN,'N')	= 'N'
			   AND OOM.ORDER_ID = #orderId#
			<isNotEmpty property="goodsCd">
			   AND OOI.GOODS_CD = #goodsCd#
			</isNotEmpty>
			<isNotEmpty property="sendSeq">
			   AND OOI.SEND_SEQ = #sendSeq#
			</isNotEmpty>
			<isNotEmpty property="order_itm_id">
			   AND OOI.ORDER_ITM_ID = #order_itm_id#
			</isNotEmpty>
			 GROUP BY OOM.ORDER_ID, OOI.GOODS_CD, OOI.SEND_SEQ
			) T
	</select>

	<!-- 주문 상세 팝업 - 주문 상품 및 정기배송 정보 -->
	<select id="selectOrderFixGoodsInfoList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderFixGoodsInfoList */
		SELECT ROWNUM RNUM
			  ,GOODS_CD
			  ,GOODS_NM
			  ,ORDER_STUS_NM
			  ,ORDER_STUS_CD
			  ,REQ_CNT
			  ,REGI_NO
			  ,RECPTER_ZIPCD
			  ,RECPTER_ADDR1
			  ,RECPTER_ADDR2
			  ,SENDER_ZIPCD
			  ,SENDER_ADDR1
			  ,SENDER_ADDR2
			  ,SENDER_NM
			  ,SENDER_TELNO
			  ,SENDER_HTELNO
			  ,RECPTER_NM
			  ,RECPTER_TELNO
			  ,RECPTER_HTELNO
			  ,SEND_PRC
			  ,SMS_RECV_YN
			  ,SEND_TYP_NM
			  ,SEND_PERIOD_NM
			  ,SEND_STRT_YMD
			  ,SEND_END_YMD
			  ,WISH_SEND_DATE
			  ,FIX_RESRV_SEND_YMD
			  ,ORDER_CNT
			  ,OVSEA_SEND_GOODS_YN
			  ,AIR_SEND_YN
			  ,SEND_AREA_NM
			  ,SEND_MSG
			  ,(SELECT SEND_MSG_CONT
				  FROM OD_SEND_MSG OSM
				 WHERE OSM.ORDER_ITM_ID	= T.ORDER_ITM_ID) SEND_MSG_CONT									/* 경조메세지 */
			  ,SUPP_COMP_NM
			  ,TELNO
			  ,FAXNO
			  ,SUPP_PO_NM
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.POFNO || '-' ||	A.POMNO	|| '-' || A.POLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD =	T.SUPPO_RGIST_POCD
				   AND ROWNUM =	1) POTEL																	/* 공급우체국 전화번호 */
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.BIZFAXFNO || '-' ||	A.BIZFAXMNO	|| '-' || A.BIZFAXLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD =	T.SUPPO_RGIST_POCD
				   AND ROWNUM =	1) POFAX																	/* 공급우체국 팩스번호 */
			  ,REPRSNT_REGI_NO
			  ,REGI_NO_CREATE_DIV_CD
			  ,PAVLN_DIV_CD
			  ,ORDER_ITM_ID
			  ,ORDER_ID
			  ,ORDER_DATE
			  ,ACCESS_NAME
			  ,ORDRR_NM
			  ,ORDRR_HTELNO
			  ,(SELECT TO_CHAR(NVL(T.REQ_CNT2-NVL(COUNT(DISTINCT(ORI.ORDER_ITM_ID)), 0), 0), 'FM999,999,999,999')
				  FROM OD_RET_INTERFACE ORI
				 WHERE ORI.ORDER_ITM_ID = T.ORDER_ITM_ID
				   AND CLAIM_DIV_CD IN ('001', '002') ) LAST_REQ_CNT											/* 잔여수량	*/
			  ,SETL_MEAN_CD
			  ,SEND_COMPLETE_YN
			  ,SEND_SEQ
			  ,BUNDLE_CNT
			  ,SEND_ADDR_SEQ
			  ,REGI_NO_CHANGE_ABLE_YN
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_CONT
			  ,(SELECT SEND_MSG_FONT_TYP FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_FONT_TYP
			  ,(SELECT SEND_MSG_FONT_STYLE FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM NOT IN ('001','002') AND ROWNUM = 1) SEND_MSG_FONT_STYLE
			  ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG_SE /* 카드 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG /* 카드 메세지 */
			  ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG_SE /* 리본 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = T.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG /* 리본 메세지 */
		  FROM (
			SELECT OOI.GOODS_CD																					/* 상품번호	*/
				  ,MAX(OOI.GOODS_NM) GOODS_NM																	/* 상품명 */
				  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', MAX(OOI.ORDER_STUS_CD)) AS	ORDER_STUS_NM	/* 주문상태	*/
				  ,MAX(OOI.ORDER_STUS_CD)	ORDER_STUS_CD												/* 주문상태	상세 코드 */
				  ,TO_CHAR(SUM(NVL(OOI.REQ_CNT,0)), 'FM999,999,999,999') REQ_CNT										/* 주문수량 */
				  ,SUM(NVL(OOI.REQ_CNT,0)) REQ_CNT2
				  ,NVL(MAX(OOI.REPRSNT_REGI_NO),MIN(OOI.REGI_NO)) REGI_NO										/* 등기번호	*/
				  ,MAX(OOI.RECPTER_ZIPCD) RECPTER_ZIPCD															/* 배송주소	- 우편번호 */
				  ,MAX(OOI.RECPTER_ADDR1) RECPTER_ADDR1															/* 배송주소	- 상세1	*/
				  ,MAX(OOI.RECPTER_ADDR2) RECPTER_ADDR2															/* 배송주소	- 상세2	*/
				  ,MAX(OOI.SENDER_ZIPCD) SENDER_ZIPCD															/* 보내는분주소	- 우편번호 */
				  ,MAX(OOI.SENDER_ADDR1) SENDER_ADDR1															/* 보내는분주소	- 상세1	*/
				  ,MAX(OOI.SENDER_ADDR2) SENDER_ADDR2															/* 보내는분주소	- 상세2	*/
				  ,MAX(OOI.SENDER_NM) SENDER_NM																	/* 보내는분	*/
				  ,MAX(NVL2(OOI.SENDER_TELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'L'),'')) SENDER_TELNO /* 보내는분 연락처1 */
				  ,MAX(NVL2(OOI.SENDER_HTELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'L'),'')) SENDER_HTELNO /* 보내는분 연락처2 */
				  ,MAX(OOI.RECPTER_NM) RECPTER_NM																/* 수취인명 */
				  ,MAX(NVL2(OOI.RECPTER_TELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'L'),'')) RECPTER_TELNO /* 받으시는분 연락처1 */
				  ,MAX(NVL2(OOI.RECPTER_HTELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'L'),'')) RECPTER_HTELNO /* 받으시는분 연락처2 */
				  ,DECODE(SUM(NVL(OOI.SEND_PRC, 0)), 0, '무료', TO_CHAR(SUM(NVL(OOI.SEND_PRC, 0)), 'FM999,999,999,999')) SEND_PRC	/* 배송비 */
				  ,MAX(OOI.SMS_RECV_YN)	SMS_RECV_YN																/* SMS */
				  ,F_GET_COMN_CD_NM('SEND_TYP_CD', MAX(OOI.SEND_TYP_CD)) AS	SEND_TYP_NM							/* 배송타입코드	*/
				  ,F_GET_COMN_CD_NM('SEND_PERIOD_CD', MAX(OFR.SEND_PERIOD_CD)) AS SEND_PERIOD_NM				/* 발송주기	*/
				  ,TO_DATE(MAX(OFR.SEND_STRT_YMD), 'YYYY/MM/DD') AS	SEND_STRT_YMD								/* 발송	시작일 */
				  ,TO_DATE(MAX(OFR.SEND_END_YMD), 'YYYY/MM/DD')	AS SEND_END_YMD									/* 발송	종료일 */
				  ,TO_DATE(MAX(OOI.WISH_SEND_DATE),	'YYYY/MM/DD	HH24:MI:SS') AS	WISH_SEND_DATE					/* 희망배송일시	*/
				  ,TO_DATE(MAX(OFRY.FIX_RESRV_SEND_YMD),	'YYYY/MM/DD') AS FIX_RESRV_SEND_YMD					/* 실배송일시 */
				  ,TO_CHAR((SELECT COUNT(0)
							  FROM OD_ORDER_ITM x
							 WHERE x.ORDER_ID = OOM.ORDER_ID
							   AND x.GOODS_CD = OOI.GOODS_CD
							   AND NVL(x.GOODS_CANCEL_YN,'N') = 'N'), 'FM999,999,999,999') ORDER_CNT					/* 배송총건수 */
				  ,MAX(OOI.OVSEA_SEND_GOODS_YN)	OVSEA_SEND_GOODS_YN												/* 해외배송여부	*/
				  ,MAX(OOI.AIR_SEND_YN)	AIR_SEND_YN																/* 항공	배송 여부 */
				  ,F_GET_COMN_CD_NM('SEND_AREA_CD',	MAX(OOI.SEND_AREA_CD)) SEND_AREA_NM							/* 배송지역코드	*/
				  ,MAX(OOI.SEND_MSG) SEND_MSG																	/* 배송시 요청사항 */
				  ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM															/* 공급업체명 */
				  ,MAX(NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'')) TELNO /* 공급업체 전화번호 */
				  ,MAX(NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'')) FAXNO /* 공급업체 팩스번호 */
				  ,MAX(OOI.SUPP_PO_NM) SUPP_PO_NM																/* 공급우체국명	*/
				  ,MAX(OOI.REPRSNT_REGI_NO)	REPRSNT_REGI_NO														/* 대표등기번호	*/
				  ,MAX(OOI.REGI_NO_CREATE_DIV_CD) REGI_NO_CREATE_DIV_CD											/* 등기번호 생성 구분 코드	*/
				  ,MAX(OOI.PAVLN_DIV_CD) PAVLN_DIV_CD															/* 전시관 분류 코드	*/
				  ,MAX(OOI.ORDER_ITM_ID) ORDER_ITM_ID															/* 주문아이템 아이디 */
				  ,OOM.ORDER_ID																					/* 주문	아이디 */
				  ,MAX(OOI.SUPPO_RGIST_POCD) SUPPO_RGIST_POCD
				  ,TO_CHAR(MAX(OOM.ORDER_DATE),	'YYYY/MM/DD	HH24:MI:SS') AS	ORDER_DATE							/* 주문일시	*/
				  ,MAX(OOM.ACCESS_NAME)	ACCESS_NAME																/* 구매자 ID */
				  ,MAX(OOM.ORDRR_NM) ORDRR_NM																	/* 구매자 성명 */
				  ,MAX(OOM.ORDRR_HTELNO) ORDRR_HTELNO															/* 구매자 휴대폰 */
				  ,MAX(OOM.SETL_MEAN_CD) SETL_MEAN_CD															/* 결제수단코드	*/
				  ,MAX(OFR.SEND_DONE_YN)	AS SEND_COMPLETE_YN
				  ,OOI.SEND_SEQ
				  ,COUNT(1)	BUNDLE_CNT
				  ,MAX(OOI.SEND_ADDR_SEQ) SEND_ADDR_SEQ
				  ,DECODE(MAX(OOI.BALTSHT_PRT_MBY_CD),'03','Y','N') REGI_NO_CHANGE_ABLE_YN						/* 송장수정 가능 여부 */
			  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI,	OD_ORDER_FEE OOF, OD_FIX_RESRV_ORDER OFR, OD_FIX_RESRV_YMD OFRY, GD_GOODS_MAST	GGM, CO_SUPP_COMP_MAST CSCM
			 WHERE OOM.ORDER_ID	= OOI.ORDER_ID
			   AND OOI.ORDER_ITM_ID	= OOF.ORDER_ITM_ID(+)
			   AND OOI.ORDER_ID	= OFR.ORDER_ID(+)
			   AND OOI.GOODS_CD	= OFR.GOODS_CD(+)
			   AND OOI.ORDER_ID	= OFRY.ORDER_ID(+)
			   AND OOI.GOODS_CD	= OFRY.GOODS_CD(+)
			   AND OOI.GOODS_CD	= GGM.GOODS_CD(+)
			   AND OOI.SUPP_COMP_ID = CSCM.SUPP_COMP_ID(+)
			/* AND NVL(OOI.PRSNT_YN,'N') = 'N'
			   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N' */
			   AND OOM.ORDER_ID	= #orderId#
			<isNotEmpty	property="goodsCd">
			   AND OOI.GOODS_CD	= #goodsCd#
			</isNotEmpty>
			<isNotEmpty	property="sendSeq">
			   AND OOI.SEND_SEQ	= #sendSeq#
			</isNotEmpty>
			<isNotEmpty	property="order_itm_id">
			   AND OOI.ORDER_ITM_ID	= #order_itm_id#
			</isNotEmpty>
			 GROUP BY OOM.ORDER_ID,	OOI.GOODS_CD, OOI.SEND_SEQ
			) T
	</select>

	<!-- 주문 상세 팝업 - 현금영수증 정보 -->
	<select id="selectOrderCashRciptList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderCashRciptList */
		SELECT A.TERMINAL_ID
			  ,B.GBN
			  ,'000000' JUMIN1
			  ,'00000000' JUMIN2
			  ,'0000' JUMIN3
			  ,B.JUMIN_SEED_1
			  ,B.JUMIN_SEED_2
			  ,B.JUMIN_SEED_3
			  ,'Y' JUMIN_SEED_YN
			  ,F_GET_COMN_CD_NM('SETL_MEAN_CD',C.SETL_MEAN_CD) PAYMETHOD
			  ,TO_CHAR(A.ORDER_DATE,'YYYY/MM/DD') ORDER_DATE
			  ,A.SEQUENCE_NO
			  ,'58'||NVL(A.APPROVAL_NO,'99999999999999') APPROVAL_NO
			  ,NVL(A.APPROVAL_TIME,'99999999999999') APPROVAL_TIME
			  ,NVL(A.VAT,0) VAT
			  ,NVL(A.TIPS,0) TIPS
			  ,NVL(A.AMOUNT,0) AMOUNT
			  ,'~0000' AUTH_DATA
			  ,'0000000000000' AUTH_DATA1
			  ,A.AUTH_SEED_DATA
			  ,'Y' AUTH_SEED_DATA_YN
			  ,SUBSTR(A.REGISTER_NO,1,3)|| '-'||SUBSTR(A.REGISTER_NO,4,2) || '-' || SUBSTR(A.REGISTER_NO,6) REGISTGER_NO
		  FROM OD_CASHINFO A
			  ,OD_CASHREQ B
			  ,OD_ORDER_MAST C
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = C.ORDER_ID
		   AND A.ORDER_ID = #orderId#
		   <isEmpty	property="status">
		   AND A.STATUS = 'D1'
		   </isEmpty>
		   <isNotEmpty	property="status">
		   AND A.STATUS = #status#
		   </isNotEmpty>
	</select>

	<!-- 주문 상세 팝업 - 클레임 처리 정보 -->
	<select id="selectOrderClaimList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderClaimList */
		SELECT OOM.ORDER_ID																				/* 주문번호 */
			  ,OOI.GOODS_CD																				/* 상품코드 */
			  ,MAX(OOI.GOODS_NM) GOODS_NM																/* 상품명 */
			  ,TO_CHAR(SUM(NVL(OOI.STD_SELL_PRC, 0)), 'FM999,999,999,999') STD_SELL_PRC						/* 판매가 */
			  ,COUNT(0) CLAIMCNT																		/* 수량 */
			  ,F_GET_ORDER_ITM_GOODS_OPTN_NM(OOM.ORDER_ID, MAX(OOI.ORDER_ITM_ID), OOI.GOODS_CD) OPT_NM	/* 상품 전체 옵션명 */
			  ,TO_CHAR(DECODE(MAX(ORI.CLAIM_DIV_CD), '001', SUM(NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0)
				- (NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.CPN_DC_AMT,0) + NVL(OOI.OKCASH_USE_AMT,0) + NVL(OOI.WALLET_SETL_AMT,0))
				+ NVL(OOI.B2B_COMMISSION_PRC,0)), 0), 'FM999,999,999,999') REFUNDPRC							/* 주문상품 */
			  ,DECODE( MAX(GGS.SENDNON_DIV_CD), '01', '무료'
												, '02', '유료'
												, '03', '조건부무료'
												, '04', '조건부무료'
												, '유료' ) DELIVERYFEETYPE 								/* 배송비구분 */
			  ,TO_CHAR(NVL(MAX(OOM.TOT_DC_APPLY_PRC), 0), 'FM999,999,999,999') TOT_DC_APPLY_PRC				/* 주문상품총액 */
			  ,MAX(ORI.TREAT_STUS_CD) TREATSTUSCD														/* 처리상태코드 */
			  ,F_GET_COMN_CD_NM('TREAT_STUS_CD', MAX(ORI.TREAT_STUS_CD)) AS TREATSTUSNM					/* 클레임상태 */
			  ,TO_CHAR(SUM(NVL(OOI.PNT_USE_AMT, 0)+NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)), 'FM999,999,999,999') PNT_ACCML_PNT	/* 포인트 환수(예정) 금액 */
			  ,TO_CHAR(SUM(NVL(OOI.CPN_DC_AMT, 0)), 'FM999,999,999,999') TOT_CPN_DC_AMT						/* 쿠폰 환수(예정)금액 */
			  ,TO_CHAR(TO_DATE(MIN(ORI.CLAIM_REQ_YMD) || MIN(ORI.CLAIM_REQ_HMS), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') CLAIMREQDATE	/* 신청일시 */
			  ,MAX(ORI.CLAIM_REQ_PRSNNM) CLAIMREQPRSNNM													/* 신청자 */
			  ,MAX(ORI.CLAIM_DIV_CD) CLAIMDIVCD															/* 클레임구분코드 */
			  ,F_GET_COMN_CD_NM('CLAIM_DIV_CD', MAX(ORI.CLAIM_DIV_CD)) CLAIMDIVNM						/* 클레임구분코드명 */
			  ,TO_CHAR(TO_DATE(MAX(ORI.CLAIM_CONF_YMD) || MAX(ORI.CLAIM_CONF_HMS), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') CLAIMCONFDATE	/* 처리일시 */
			  ,MAX(ORI.CLAIM_CONF_ERNM) RECR_ID															/* 처리자 */
			  ,DECODE(MAX(ORI.CLAIM_REASN_CD), '09', MAX(ORI.CLAIM_REASN_CONT), '') CLAIMREASNCONT		/* 취소거부 사유 */
			  ,DECODE(MAX(ORI.CLAIM_PRCLPRCPAY_CD),'01','우체국','02','공급업체') AS CLAIMBLAME			/* 민원처리코드유형으로 나중에 변경해야함 ***/
			  ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM														/* 공급업체명 */
			  ,MAX(NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'')) TELNO	/* 공급업체 전화번호 */
			  ,MAX(NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'')) FAXNO	/* 공급업체 팩스번호 */
			  ,ORE.SETTLE_DATE as SETL_DATE  /*환불송금일*/
		  FROM OD_ORDER_MAST OOM
			  ,OD_ORDER_ITM OOI
			  ,OD_RET_INTERFACE ORI
			  ,OD_ONLINE_EX_PRICE ORE
			  ,GD_GOODS_SEND GGS
			  ,CO_SUPP_COMP_MAST CSCM
		 WHERE OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
		   AND OOI.ORDER_ITM_ID = ORE.ORDER_ITM_ID(+)
		   AND OOI.GOODS_CD = GGS.GOODS_CD(+)
		   AND OOI.SUPP_COMP_ID = CSCM.SUPP_COMP_ID(+)
		   AND OOI.ORDER_ID = #orderId#
		 GROUP BY ORI.CLAIM_REQ_NO, OOM.ORDER_ID, OOI.GOODS_CD, ORE.SETTLE_DATE
	</select>

	<!-- 주문 상세 팝업 - 주문변경내역 -->
	<select id="selectOrderHistoryList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderHistoryList */
		SELECT TO_CHAR(ORDER_ITM_CHG_DATE, 'YYYY-MM-DD HH24:MI:SS') CHG_DATE
			 , CHGER_ID
			 , F_GET_COMN_CD_NM('ORDER_HISTOR_CHG_CD',ORDER_HISTOR_CHG_CD) UPDATE_ITEM
			 , UPDATE_CONT
		  FROM OD_ORDER_ITM_HISTOR
		 WHERE ORDER_ID = #orderId#
		 ORDER BY ORDER_ITM_CHG_DATE DESC
	</select>

	<!-- 주문 상세 팝업 - 클레임이력 -->
	<select id="selectClaimHistoryList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectClaimHistoryList */
		SELECT TO_CHAR(TO_DATE(CLAIM_REQ_YMD || CLAIM_REQ_HMS, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS CHG_DATE
			 , REGER_ID
			 , F_GET_COMN_CD_NM('REASON_CODE',ORI.CLAIM_REASN_CD) CLAIM_DIV
			 , ORI.CLAIM_REASN_CONT
		  FROM OD_RET_INTERFACE_HISTOR ORI
		 WHERE ORI.ORDER_ID = #orderId#
		 ORDER BY CLAIM_REQ_YMD||CLAIM_REQ_HMS DESC
	</select>


	<!-- 주문 상세 팝업 - 엑셀다운로드 -->
	<select id="selectOrderGoodsExcelList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderGoodsExcelList */
		SELECT ROWNUM RNUM
			  ,OOM.ORDER_ID																					/* 주문번호 */
			  ,TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE								/* 주문일시 */
			  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD) ORDER_STUS_NM							/* 주문처리단계 */
			  ,TO_CHAR(DECODE(OOM.ORDER_STUS_CD,'O06',OOM.ORDER_CANCEL_DATE
							,'O02',OOM.APPR_DATE,'O03',OOM.APPR_DATE,'O04',OOM.APPR_DATE
							,'D01',OOM.APPR_DATE,'D02',OOM.APPR_DATE,'D03',OOM.APPR_DATE
							,'D04',OOM.APPR_DATE,OOM.APPR_DATE), 'YYYY/MM/DD HH24:MI:SS') AS PO_NOTI_DATE				/* 우체국 통보일시 ***/
			  ,TO_CHAR(OOM.ORDER_CONF_DATE, 'YYYY/MM/DD HH24:MI:SS') AS PO_RCEPT_TREAT_DATE					/* 우체국 접수처리일시 ***/
			  ,OOM.WICKET_SHOP_ORDRR_NM																		/* 창구쇼핑 주문자 명 */
			  ,OOM.ACCESS_NAME																				/* 구매자 ID */
			  ,OOM.ORDRR_NM																					/* 구매자 성명 */
			  ,NVL2(OOM.ORDRR_TELNO,F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOM.ORDRR_TELNO,'-'),'L'),'') ORDRR_TELNO /* 구매자 연락처 */
			  ,NVL2(OOM.ORDRR_HTELNO,F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'M')||'-'||F_DIV_TELNO(REPLACE(OOM.ORDRR_HTELNO,'-'),'L'),'') ORDRR_HTELNO /* 구매자 휴대폰 */
			  ,OOM.ORDRR_ZIPCD																				/* 구매자 우편번호 */
			  ,OOM.ORDRR_ADDR1																				/* 구매자 주소 */
			  ,OOM.ORDRR_ADDR2																				/* 구매자 상세주소 */
			  ,OOM.ORDRR_EMAIL																				/* 구매자 이메일 */
			  ,F_GET_COMN_CD_NM('ORDER_MDA_DIV_CD', OOM.ORDER_MDA_DIV_CD) ORDER_MDA_DIV_NM					/* 접속구분 */
			  ,(SELECT /*+ INDEX_DESC(A, XPK_MB_MEM_GRADE) */
					   F_GET_COMN_CD_NM('MEM_GRADE_CD',MEM_GRADE)
				  FROM MB_MEM_GRADE A
				 WHERE A.ACCESS_NAME = OOM.ACCESS_NAME
				   AND ROWNUM = 1) AS MEM_GRADE_NM															/* 고객등급 */
			  ,(SELECT COUNT(0) FROM OD_CASHREQ OC WHERE OC.ORDER_ID = OOM.ORDER_ID) CASHREQ				/* 현금영수증 신청 개수 */
			  ,OOM.ORDER_MDA_DIV_CD																			/* 주문 매체 구분 코드 */
			  ,F_GET_COMN_CD_NM('SETL_MEAN_CD', OOM.SETL_MEAN_CD) AS SETL_MEAN_NM							/* 결제방식 */
			  ,OOS.PAY_NAME																					/* 결제카드회사명 */
			  ,F_GET_COMN_CD_NM('SETL_STUS_CD', OOM.SETL_STUS_CD) AS SETL_STUS_NM							/* 결제상태 */
			  ,OOS.CREDITCARD_INSTLMT_MNTH_CNT																/* 할부 개월수 */
			  ,TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS SETL_REQ_DATE							/* 결제처리일시 */
			  ,OOS.SETL_APPR_CD																				/* 승인번호 */
			  ,TO_CHAR(OOM.APPR_DATE, 'YYYY/MM/DD HH24:MI:SS') SETL_APPR_DATE								/* 승인일시 */
			  ,TO_CHAR(NVL(OOM.TOT_DC_APPLY_PRC,0), 'FM999,999,999,999') TOT_DC_APPLY_PRC							/* 총할인가 */
			  ,TO_CHAR(NVL(OOM.PNT_USE_AMT,0) + NVL(OOM.PO_PNT_USE_AMT,0), 'FM999,999,999,999') AMOUNT_RM			/* 마일리지 사용액 */
			  ,TO_CHAR(NVL(OOM.PREMI_CUST_PNT_SETL_AMT,0), 'FM999,999,999,999') AMOUNT_SP							/* 우수고객 사용액 */
			  ,TO_CHAR(NVL(OOM.TOT_CPN_DC_AMT,0), 'FM999,999,999,999') AMOUNT_COUPON								/* 할인쿠폰 사용액 */
			  ,TO_CHAR(NVL(OOM.OKCASH_USE_AMT,0), 'FM999,999,999,999') AMOUNT_OKCASH								/* OK캐시백 사용액 */
			  ,TO_CHAR(NVL(OOM.SETL_APPR_TOT_AMT,0), 'FM999,999,999,999') SETL_APPR_TOT_AMT						/* 결제 승인 금액 */
			  ,OOI.GOODS_CD																					/* 상품번호 */
			  ,OOI.GOODS_NM																					/* 상품명 */
			  ,(SELECT F_GET_ORDER_ITM_GOODS_OPTN_NM(OOM.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD) FROM DUAL) OPT_NM			/* 옵션명 */
			  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD) AS ORDER_STUS_NM		/* 주문상태 */
			  ,OOI.ORDER_STUS_CD																		/* 주문상태 상세 코드 */
			  ,TO_CHAR(OOI.REQ_CNT, 'FM999,999,999,999') REQ_CNT													/* 주문수량 */
			  ,OOI.EXTRA_GOODS_YN																			/* 덤상품 여부 */
			  ,OOI.EXTRA_GOODS_CNT																			/* 덤상품 수량 */
			  ,TO_CHAR(OOI.STD_SELL_PRC, 'FM999,999,999,999') STD_SELL_PRC										/* 판매가 */
			  ,TO_CHAR(GGM.CNSMR_PRC, 'FM999,999,999,999') CNSMR_PRC												/* 소비자가 */
			  ,TO_CHAR(OOI.DC_APPLY_PRC, 'FM999,999,999,999') DC_APPLY_PRC										/* 할인적용금액 */
			  ,TO_CHAR(NVL(OOI.STD_SELL_PRC - OOI.DC_APPLY_PRC + OOI.CPN_DC_AMT + OOI.PNT_USE_AMT
			  			+ OOI.PO_PNT_USE_AMT + OOI.PREMI_CUST_PNT_SETL_AMT + OOI.OKCASH_USE_AMT, 0), 'FM999,999,999,999') AS DC_PRC	/* 할인금액 */
			  ,TO_CHAR(OOI.OPTN_GOODS_APPLY_PRC, 'FM999,999,999,999') OPTN_GOODS_APPLY_PRC						/* 옵션가 */
			  ,TO_CHAR(NVL(OOI.DC_APPLY_PRC,0) + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0), 'FM999,999,999,999') ORDER_PRC	/* 주문금액 */
			  ,TO_CHAR(NVL(OOF.FEE_AMT, 0), 'FM999,999,999,999') AS FEE											/* 서비스이용료 */
			  ,NVL(OOF.SETL_FEE_RATE, 0) AS FEE_RATE														/* 서비스이용료율 */
			  ,F_GET_COMN_CD_NM('ORGPLCE_DIV_CD', GGM.ORGPLCE_DIV_CD) ORGPLCE_DIV_NM						/* 원산지 */
			  ,(SELECT F_GET_GOODS_CRTFC_NM(GGM.GOODS_CD) FROM DUAL) AS GOODS_CRTFCT						/* 인증정보 목록 */
			  ,GGM.TRDACL_GOODS_YN																			/* 전통주 여부 */
			  ,TO_CHAR(GGM.TRDACL_CNT, 'FM999,999,999,999') TRDACL_CNT											/* 전통주 개수 */
			  ,F_GET_COMN_CD_NM('BUYER_AGELIMIT_CD', GGM.BUYER_AGELIMIT_CD) BUYER_AGELIMIT_NM				/* 구매가능 연령기준 */
			  ,OOI.REGI_NO																					/* 등기번호 */
			  ,OOI.RECPTER_ZIPCD																			/* 배송주소 - 우편번호 */
			  ,OOI.RECPTER_ADDR1																			/* 배송주소 - 상세1 */
			  ,OOI.RECPTER_ADDR2																			/* 배송주소 - 상세2 */
			  ,OOI.SENDER_NM																				/* 보내는분 */
			  ,NVL2(OOI.SENDER_TELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_TELNO,'-'),'L'),'') SENDER_TELNO /* 보내는분 연락처1 */
			  ,NVL2(OOI.SENDER_HTELNO,F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.SENDER_HTELNO,'-'),'L'),'') SENDER_HTELNO /* 보내는분 연락처2 */
			  ,OOI.RECPTER_NM																				/* 수취인명 */
			  ,NVL2(OOI.RECPTER_TELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_TELNO,'-'),'L'),'') RECPTER_TELNO /* 받으시는분 연락처1 */
			  ,NVL2(OOI.RECPTER_HTELNO,F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(OOI.RECPTER_HTELNO,'-'),'L'),'') RECPTER_HTELNO /* 받으시는분 연락처2 */
			  ,DECODE(NVL(OOI.SEND_PRC, 0), 0, '무료', TO_CHAR(OOI.SEND_PRC, 'FM999,999,999,999')) SEND_PRC		/* 배송비 */
			  ,OOI.SMS_RECV_YN																				/* SMS */
			  ,F_GET_COMN_CD_NM('SEND_TYP_CD', OOI.SEND_TYP_CD) AS SEND_TYP_NM								/* 배송타입코드 */
			  ,F_GET_COMN_CD_NM('SEND_PERIOD_CD', OFR.SEND_PERIOD_CD) AS SEND_PERIOD_NM						/* 정기발송주기 */
			  ,TO_CHAR(OFR.SEND_STRT_YMD, 'YYYY/MM/DD') AS SEND_STRT_YMD									/* 정기발송 시작일 */
			  ,TO_CHAR(OFR.SEND_END_YMD, 'YYYY/MM/DD') AS SEND_END_YMD										/* 정기발송 종료일 */
			  ,TO_CHAR(OOI.WISH_SEND_DATE, 'YYYY/MM/DD HH24:MI:SS') AS WISH_SEND_DATE						/* 희망배송일시 */
			  ,TO_CHAR(OOI.SEND_STRT_DATE, 'YYYY/MM/DD') AS FIX_RESRV_SEND_YMD								/* 실배송일시 */
			  ,TO_CHAR((SELECT COUNT(0)
						  FROM OD_ORDER_ITM x
						 WHERE x.ORDER_ID = OOM.ORDER_ID
						   AND x.GOODS_CD = OOI.GOODS_CD), 'FM999,999,999,999') ORDER_CNT							/* 배송총건수 */
			  ,OOI.OVSEA_SEND_GOODS_YN																		/* 해외배송여부 */
			  ,OOI.AIR_SEND_YN																				/* 항공 배송 여부 */
			  ,F_GET_COMN_CD_NM('SEND_AREA_CD', OOI.SEND_AREA_CD) SEND_AREA_NM								/* 배송지역코드 */
			  ,OOI.SEND_MSG																					/* 배송시 요청사항 */
			  ,(SELECT SEND_MSG_CONT
				  FROM OD_SEND_MSG OSM
				 WHERE OSM.ORDER_ITM_ID = OOI.ORDER_ITM_ID) SEND_MSG_CONT									/* 경조메세지 */
			  , OOI.SUPP_COMP_NM																			/* 공급업체명 */
			  ,CSCM.TELNO																					/* 공급업체 전화번호 */
			  ,CSCM.FAXNO																					/* 공급업체 팩스번호 */
			  ,OOI.SUPP_PO_NM																				/* 공급우체국명 */
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.POFNO || '-' || A.POMNO || '-' || A.POLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD = OOI.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POTEL																	/* 공급우체국 전화번호 */
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */ A.BIZFAXFNO || '-' || A.BIZFAXMNO || '-' || A.BIZFAXLNO
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD = OOI.SUPPO_RGIST_POCD
				   AND ROWNUM = 1) POFAX																	/* 공급우체국 팩스번호 */
			  ,OOI.REPRSNT_REGI_NO																			/* 대표등기번호 */
			  ,OOI.REGI_NO_CREATE_DIV_CD																	/* 등기 번호 생성 구분 코드 */
			  ,OOI.PAVLN_DIV_CD																				/* 전시관 분류 코드 */
			  ,OOI.ORDER_ITM_ID																				/* 주문아이템 아이디 */
			  ,OOM.ORDER_ID																					/* 주문 아이디 */
			  ,TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE								/* 주문일시 */
			  ,OOM.ACCESS_NAME																				/* 구매자 ID */
			  ,OOM.ORDRR_NM																					/* 구매자 성명 */
			  ,OOM.ORDRR_HTELNO																				/* 구매자 휴대폰 */
			  ,(SELECT TO_CHAR(NVL(OOI.REQ_CNT-NVL(COUNT(DISTINCT(ORI.ORDER_ITM_ID)), 0), 0), 'FM999,999,999,999')
				  FROM OD_RET_INTERFACE ORI
				 WHERE ORI.ORDER_ITM_ID = OOI.ORDER_ITM_ID
				   AND CLAIM_DIV_CD IN ('001', '002') ) LAST_REQ_CNT											/* 잔여수량	*/
			  ,OOM.ORDER_STUS_CD   																			/* 주문상태코드*/
			  ,OOM.SETL_MEAN_CD																				/* 결제수단코드 */
			  ,CASE WHEN OOI.ORDER_STUS_CD IN ('O01','O02','O04','D02') THEN 'N'
					WHEN OOI.ORDER_STUS_CD IN ('D03','D04') THEN 'Y'
				END AS SEND_COMPLETE_YN
		  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI, OD_ORDER_FEE OOF, OD_FIX_RESRV_ORDER OFR, GD_GOODS_MAST GGM, CO_SUPP_COMP_MAST CSCM, OD_ORDER_SETL OOS
		 WHERE OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ITM_ID = OOF.ORDER_ITM_ID(+)
		   AND OOM.ORDER_ID = OOS.ORDER_ID
		   AND OOS.SETL_SEQ = 1
		   AND OOM.ORDER_ID = OFR.ORDER_ID(+)
		   AND OOI.GOODS_CD = GGM.GOODS_CD
		   AND CSCM.SUPP_COMP_ID = OOI.SUPP_COMP_ID
		   AND NVL(OOI.PRSNT_YN,'N') = 'N'
		   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		   AND OOM.ORDER_ID = #orderId#
		<isNotEmpty property="goodsCd">
		   AND OOI.GOODS_CD = #goodsCd#
		</isNotEmpty>
		<isNotEmpty property="order_itm_id">
		   AND OOI.ORDER_ITM_ID = #order_itm_id#
		</isNotEmpty>
	</select>

	<!-- 주문상세 배송완료 상태 변경 -->
	<update id="sendCompleteAjax" parameterClass ="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET ORDER_STUS_CD = 'D03'
			  ,SEND_DONE_DATE = SYSDATE
		 WHERE ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</update>

	<!-- 송장수정 송장 정보 리스트 -->
	<select id="selectOrderShippingChgMgrList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/* selectOrderShippingChgMgrList */
		SELECT T.ORDER_ID
			  ,T.ORDER_ITM_ID
			  ,T.REQ_CNT
			  ,T.RECPTER_NM
			  ,T.HDRYCO_CD
			  ,T.SEND_TYP_CD
			  ,T.REGI_NO
			  ,T.REPRSNT_REGI_NO
			  ,T.DC_APPLY_PRC
			  ,T.HDRYCO_NM
			  ,(SELECT X.CD_VAL1 || X.CD_VAL2 FROM CM_COMN_CD X WHERE X.CD_GRP_ID = 'HDRYCO_CD' AND X.COMN_CD_ID = T.HDRYCO_CD) HDRYCO_URL
			  ,T.SEND_TYP_NM
			  ,T.DIRECT_SEND_YN
			  ,ROWNUM RNUM
		  FROM (
			SELECT A.ORDER_ID
				  ,A.ORDER_ITM_ID
				  ,A.REQ_CNT
				  ,A.RECPTER_NM
				  ,DECODE(A.HDRYCO_CD,'0','01','1','01',NVL(A.HDRYCO_CD,'01')) HDRYCO_CD
				  ,A.SEND_TYP_CD
				  ,A.REGI_NO
				  ,A.REPRSNT_REGI_NO
				  ,A.DC_APPLY_PRC
				  ,NVL((SELECT F_GET_COMN_CD_NM('HDRYCO_CD', NVL(NVL(A.HDRYCO_CD,B.HDRYCO_CD),C.HDRYCO_CD)) FROM DUAL),'우체국택배') AS HDRYCO_NM
				  ,(SELECT F_GET_COMN_CD_NM('SEND_TYP_CD', A.SEND_TYP_CD) FROM DUAL) AS SEND_TYP_NM
				  ,A.DIRECT_SEND_YN
			  FROM OD_ORDER_ITM A
				  ,GD_GOODS_MAST B
				  ,CO_SUPP_COMP_MAST C
			 WHERE A.GOODS_CD = B.GOODS_CD(+)
			   AND A.SUPP_COMP_ID = C.SUPP_COMP_ID(+)
			   AND A.ORDER_ID = #searchOrderId#
			<isNotEmpty property="goodsCd">
			   AND A.GOODS_CD = #goodsCd#
			</isNotEmpty>
			<isNotEmpty property="sendSeq">
			   AND A.SEND_SEQ = #sendSeq#
			</isNotEmpty>
			 ORDER BY A.REGI_NO
			) T
	</select>

	<!-- 송장수정 -->
	<update id="updateOrderShippingChgAjax" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
			SET REGI_NO		= #regiNo#,
				SEND_TYP_CD	= #sendTypCd#,
				HDRYCO_CD	= #hdrycoCd#
			WHERE ORDER_ITM_ID = #orderItmId#
	</update>

	<!-- 주문 변경 팝업 - 주문 상품 정보 -->
	<select id="selectOrderModGoodsInfoList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderModGoodsInfoList */
		SELECT T.ORDER_ID
			  ,T.GOODS_CD
			  ,T.GOODS_NM
			  ,T.SEND_SEQ
			  ,T.ORDER_STUS_NM
			  ,T.ORDER_STUS_CD
			  ,T.REQ_CNT
			  ,T.SUPP_COMP_NM
			  ,T.TELNO
			  ,T.FAXNO
			  ,T.SUPP_PO_NM
			  ,T.PAVLN_DIV_CD
			  ,T.ORDER_DATE
			  ,T.ACCESS_NAME
			  ,T.ORDRR_NM
			  ,T.ORDRR_ZIPCD
			  ,T.ORDRR_ADDR1
			  ,T.ORDRR_ADDR2
			  ,NVL2(REPLACE(T.ORDRR_TELNO,'-'),F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'M')||'-'||F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'L'),'') ORDRR_TELNO
			  ,NVL2(REPLACE(T.ORDRR_HTELNO,'-'),F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'M')||'-'||F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'L'),'') ORDRR_HTELNO
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'F') ORDRR_TELNO1
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'M') ORDRR_TELNO2
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_TELNO,'-'),'L') ORDRR_TELNO3
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'F') ORDRR_HTELNO1
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'M') ORDRR_HTELNO2
			  ,F_DIV_TELNO(REPLACE(T.ORDRR_HTELNO,'-'),'L') ORDRR_HTELNO3
			  ,T.SETL_MEAN_CD
			  ,T.SEND_COMPLETE_YN
			  ,T.CANCEL_STATE
			  ,T.APPR_DATE
			  ,(SELECT /*+ INDEX_DESC(A, PK_PICMT0060) */
					   CASE WHEN A.POFNO IS NOT NULL AND A.POMNO IS NOT NULL AND A.POLNO IS NOT NULL THEN A.POFNO || '-' ||	A.POMNO	|| '-' || A.POLNO
							ELSE ''
						END POTEL
				  FROM PICMT0060 A
				 WHERE A.REGIPOCD =	T.SUPPO_RGIST_POCD
				   AND ROWNUM =	1) POTEL																	/* 공급우체국 전화번호 */
		  FROM (
				SELECT OOM.ORDER_ID																					/* 주문 아이디 */
					  ,OOI.GOODS_CD																					/* 상품번호 */
					  ,MAX(OOI.GOODS_NM) GOODS_NM																	/* 상품명 */
					  ,OOI.SEND_SEQ
					  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD) AS ORDER_STUS_NM						/* 주문상태 */
					  ,OOI.ORDER_STUS_CD ORDER_STUS_CD																/* 주문상태 상세 코드 */
					  ,COUNT(0) REQ_CNT																				/* 주문수량 */
					  ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM															/* 공급업체명 */
					  ,MAX(NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'')) TELNO /* 공급업체 전화번호 */
					  ,MAX(NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'')) FAXNO /* 공급업체 팩스번호 */
					  ,MAX(OOI.SUPP_PO_NM) SUPP_PO_NM																/* 공급우체국명 */
					  ,MAX(OOI.PAVLN_DIV_CD) PAVLN_DIV_CD															/* 전시관 분류 코드 */
					  ,TO_CHAR(MAX(OOM.ORDER_DATE), 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE							/* 주문일시 */
					  ,MAX(OOM.ACCESS_NAME) ACCESS_NAME																/* 구매자 ID */
					  ,MAX(OOM.ORDRR_NM) ORDRR_NM																	/* 구매자 성명 */
					  ,MAX(OOM.ORDRR_ZIPCD) ORDRR_ZIPCD																/* 구매자 우편번호 */
					  ,MAX(OOM.ORDRR_ADDR1) ORDRR_ADDR1																/* 구매자 주소1 */
					  ,MAX(OOM.ORDRR_ADDR2) ORDRR_ADDR2																/* 구매자 주소2 */
					  ,MAX(OOM.ORDRR_TELNO) ORDRR_TELNO																/* 구매자 전화번호 */
					  ,MAX(OOM.ORDRR_HTELNO) ORDRR_HTELNO															/* 구매자 휴대폰 */
					  ,MAX(OOM.SETL_MEAN_CD) SETL_MEAN_CD															/* 결제수단코드 */
					  ,CASE WHEN MAX(OOI.ORDER_STUS_CD) IN ('O01','O02','O04','D02') THEN 'N'
							WHEN MAX(OOI.ORDER_STUS_CD) IN ('D03','D04') THEN 'Y'
						END AS SEND_COMPLETE_YN																		/* 배송완료여부 */
					  ,NVL(MAX(OOI.GOODS_CANCEL_YN), 'N') AS CANCEL_STATE						  					/*상품취소여부*/
					  ,TO_CHAR(MAX(OOM.APPR_DATE), 'YYYYMMDD') AS APPR_DATE										/*승인일자*/
					  ,MAX(OOI.SUPPO_RGIST_POCD) SUPPO_RGIST_POCD
				  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI, CO_SUPP_COMP_MAST CSCM
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOI.SUPP_COMP_ID = CSCM.SUPP_COMP_ID(+)
				   AND OOI.ORDER_STUS_CD IN ('O01','O02','O04','O05','O06','O08','D02','D03','D04')
				   AND NVL(OOI.PRSNT_YN,'N') = 'N'
				   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
				   AND OOM.ORDER_ID = #orderId#
				 GROUP BY OOM.ORDER_ID, OOI.GOODS_CD, OOI.SEND_SEQ, OOI.ORDER_STUS_CD
				) T
	</select>

	<!-- 주문 변경 팝업 - 신용카드 결제건 ksnet 여부 확인 -->
	<select id="selectCreditCardPgDivCd" parameterClass ="com.devwork.common.util.CommandMap" resultClass="String">
		/* selectCreditCardPgDivCd */
		SELECT PG_DIV_CD
		  FROM OD_CREDIT_CARD_SETL_INFO
		 WHERE ORDER_ID = #orderId#
		   AND ROWNUM = 1
	</select>

	<!-- 주문 변경(콜센터) - 주문 상품 정보 -->
	<select id="selectCallcenterOrderModGoodsInfoList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectCallcenterOrderModGoodsInfoList */
		SELECT NVL((SELECT COMN_CD_ID FROM CM_COMN_CD WHERE CD_GRP_ID ='CLAIM_DIV_CD' AND COMN_CD_ID =(SELECT MAX(CLAIM_DIV_CD) FROM OD_RET_INTERFACE AA WHERE AA.ORDER_ITM_ID = OOI.ORDER_ITM_ID)),'-') AS CLAIM_DIV_ID
              ,NVL((SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='CLAIM_DIV_CD' AND COMN_CD_ID =(SELECT MAX(CLAIM_DIV_CD) FROM OD_RET_INTERFACE AA WHERE AA.ORDER_ITM_ID = OOI.ORDER_ITM_ID)),'-') AS CLAIM_DIV_NM
              ,OOI.GOODS_CD																					/* 상품번호 */
			  ,OOI.GOODS_CD																					/* 상품번호 */
			  ,OOI.GOODS_NM																	/* 상품명 */
			  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD) AS ORDER_STUS_NM		/* 주문상태 */
			  ,OOI.ORDER_STUS_CD																		/* 주문상태 상세 코드 */
			  ,TO_CHAR(NVL(OOI.REQ_CNT,0), 'FM999,999,999,999') REQ_CNT											/* 주문수량 */
			  ,TO_CHAR(GGM.CNSMR_PRC, 'FM999,999,999,999') CNSMR_PRC												/* 상품가격 */
			  ,TO_CHAR(NVL(OOI.STD_SELL_PRC,0), 'FM999,999,999,999') STD_SELL_PRC							/* 판매가 */
			  ,TO_CHAR(NVL(OOI.OPTN_GOODS_APPLY_PRC,0), 'FM999,999,999,999') OPTN_GOODS_APPLY_PRC			/* 옵션가 */
			  ,TO_CHAR(NVL(OOI.DC_APPLY_PRC,0)+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)+NVL(OOI.SEND_PRC,0), 'FM999,999,999,999') DC_APPLY_PRC	/* 주문금액 */
			  ,TO_CHAR(NVL(OOI.CPN_DC_AMT,0) + NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PO_PNT_USE_AMT,0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.OKCASH_USE_AMT, 0), 'FM999,999,999,999') AS DC_PRC	/* 할인금액 */
			  ,NVL(OOI.CPN_DC_AMT,0)	  AS CPN_DC_AMT														/* 쿠폰할인금액*/
			  ,NVL(OOI.PO_PNT_USE_AMT,0)  AS PO_PNT_USE_AMT												/* 우체국포인트사용금액*/
			  ,NVL(OOI.PNT_USE_AMT,0)	 AS PNT_USE_AMT												/* 마일리지사용금액*/
			  ,NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) AS PREMI_CUST_PNT_SETL_AMT								/* 우수고객포인트사용금액*/
			  ,NVL(OOI.OKCASH_USE_AMT,0)			AS OKCASH_USE_AMT										/* OKCASHBACK 사용금액*/
			  ,TO_CHAR(NVL(OOF.FEE_AMT, 0), 'FM999,999,999,999') AS FEE										/* 서비스이용료 */
			  ,NVL(OOF.SETL_FEE_RATE, 0) AS FEE_RATE													/* 서비스이용료율 */
			  ,F_GET_COMN_CD_NM('ORGPLCE_DIV_CD', GGM.ORGPLCE_DIV_CD) ORGPLCE_DIV_NM					/* 원산지 */
			  ,F_GET_GOODS_CRTFC_NM(GGM.GOODS_CD)  AS GOODS_CRTFCT										/* 인증정보 목록 */
			  ,GGM.TRDACL_GOODS_YN TRDACL_GOODS_YN														/* 전통주 여부 */
			  ,TO_CHAR(NVL(GGM.TRDACL_CNT,0), 'FM999,999,999,999') TRDACL_CNT								/* 전통주 개수 */
			  ,F_GET_COMN_CD_NM('BUYER_AGELIMIT_CD', GGM.BUYER_AGELIMIT_CD) BUYER_AGELIMIT_NM			/* 구매가능 연령기준 */
			  ,NVL(OOI.REPRSNT_REGI_NO,OOI.REGI_NO) REGI_NO										/* 등기번호 */
			  ,OOI.RECPTER_ZIPCD															/* 배송주소 - 우편번호 */
			  ,OOI.RECPTER_ADDR1															/* 배송주소 - 상세1 */
			  ,OOI.RECPTER_ADDR2															/* 배송주소 - 상세2 */
			  ,OOI.RECPTER_ADDR3															/* 배송주소 - 상세3 */
			  ,OOI.SENDER_NM																	/* 보내는분 */
			  ,OOI.SENDER_ZIPCD																/* 발송주소 - 우편번호 */
			  ,OOI.SENDER_ADDR1																/* 발송주소 - 상세1 */
			  ,OOI.SENDER_ADDR2																/* 발송주소 - 상세2 */
			  ,OOI.SENDER_ADDR3																/* 발송주소 - 상세3 */
			  ,NVL2(OOI.SENDER_TELNO,F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'L'),'') SENDER_TELNO /* 보내는분 연락처1 */
			  ,NVL2(OOI.SENDER_HTELNO,F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'L'),'') SENDER_HTELNO /* 보내는분 연락처2 */
			  ,OOI.RECPTER_NM																/* 수취인명 */
			  ,NVL2(OOI.RECPTER_TELNO,F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'L'),'') RECPTER_TELNO /* 받으시는분 연락처1 */
			  ,NVL2(OOI.RECPTER_HTELNO,F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'L'),'') RECPTER_HTELNO /* 받으시는분 연락처2 */
			  ,DECODE(NVL(OOI.SEND_PRC, 0), 0, '무료', TO_CHAR(NVL(OOI.SEND_PRC, 0), 'FM999,999,999,999')) SEND_PRC	/* 배송비 */
			  ,OOI.SMS_RECV_YN																/* SMS */
			  ,F_GET_COMN_CD_NM('SEND_TYP_CD', OOI.SEND_TYP_CD) AS SEND_TYP_NM							/* 배송타입코드 */
			  ,'' AS SEND_PERIOD_NM				/* 발송주기 */
			  ,TO_CHAR(OOI.SEND_STRT_DATE, 'YYYY/MM/DD') AS SEND_STRT_YMD								/* 발송 시작일 */
			  ,TO_CHAR(OOI.SEND_DONE_DATE, 'YYYY/MM/DD') AS SEND_END_YMD								/* 발송 종료일 */
			  ,NVL(TO_CHAR(OOI.WISH_SEND_DATE, 'YYYY/MM/DD HH24:MI:SS'),'-') AS WISH_SEND_DATE					/* 희망배송일시 */
			  ,TO_CHAR(OOI.SEND_CONF_DATE, 'YYYY/MM/DD') AS FIX_RESRV_SEND_YMD							/* 실배송일시 */
			  ,TO_CHAR((SELECT COUNT(0)
						  FROM OD_ORDER_ITM x
						 WHERE x.ORDER_ID = OOM.ORDER_ID
						   AND x.GOODS_CD = OOI.GOODS_CD), 'FM999,999,999,999') ORDER_CNT							/* 배송총건수 */
			  ,OOI.OVSEA_SEND_GOODS_YN												/* 해외배송여부 */
			  ,OOI.AIR_SEND_YN																/* 항공 배송 여부 */
			  ,F_GET_COMN_CD_NM('SEND_AREA_CD', OOI.SEND_AREA_CD) SEND_AREA_NM							/* 배송지역코드 */
			  ,OOI.SEND_MSG																	/* 배송시 요청사항 */
			  ,OOI.SUPP_COMP_NM															/* 공급업체명 */
			  ,NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'') TELNO /* 공급업체 전화번호 */
			  ,NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'') FAXNO /* 공급업체 팩스번호 */
			  ,OOI.SUPP_PO_NM																/* 공급우체국명 */
			  ,OOI.REPRSNT_REGI_NO														/* 대표등기번호 */
			  ,OOI.REGI_NO_CREATE_DIV_CD											/* 등기 번호 생성 구분 코드 */
			  ,OOI.PAVLN_DIV_CD															/* 전시관 분류 코드 */
			  ,OOI.ORDER_ITM_ID															/* 주문아이템 아이디 */
			  ,OOM.ORDER_ID																					/* 주문 아이디 */
			  ,OOI.SUPPO_RGIST_POCD
			  ,TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE							/* 주문일시 */
			  ,OOM.ACCESS_NAME																/* 구매자 ID */
			  ,OOM.ORDRR_NM																	/* 구매자 성명 */
			  ,OOM.ORDRR_HTELNO															/* 구매자 휴대폰 */
			  ,OOM.SETL_MEAN_CD															/* 결제수단코드 */
			  ,(SELECT  MAX(SETL_STUS_CD) FROM OD_ORDER_SETL WHERE ORDER_ID = OOM.ORDER_ID) SETL_STUS_CD /* 결제 상태*/
     		  ,(SELECT  MAX(PG_DIV_CD) FROM OD_CREDIT_CARD_SETL_INFO WHERE ORDER_ID = OOM.ORDER_ID) PG_DIV_CD /* PG 구분 코드*/
			  ,CASE WHEN OOI.ORDER_STUS_CD IN ('O01','O02','O03','O04','D01','D02') THEN 'N'
					WHEN OOI.ORDER_STUS_CD IN ('D03','D04') THEN 'Y'
				END AS SEND_COMPLETE_YN																		/* 배송완료여부 */
			  ,OOI.SEND_SEQ
			  ,(SELECT TO_CHAR(NVL(OOI.REQ_CNT-NVL(COUNT(DISTINCT(ORI.ORDER_ITM_ID)), 0), 0), 'FM999,999,999,999')
				  FROM OD_RET_INTERFACE ORI
				 WHERE ORI.ORDER_ITM_ID = OOI.ORDER_ITM_ID
				   AND CLAIM_DIV_CD IN ('001', '002') ) LAST_REQ_CNT											/* 잔여수량	*/
			  ,NVL(OOI.EXTRA_GOODS_YN,'N')		AS  EXTRA_GOODS_YN						 /*덤상품여부*/
			  ,NVL(OOI.GOODS_CANCEL_YN, 'N')	  AS  CANCEL_STATE						  /*상품취소여부*/
			  , ''								AS  CHECK_YN							  /*체크여부*/
			  , TO_CHAR(OOM.APPR_DATE, 'YYYYMMDD')  AS  APPR_DATE						   /*승인일자*/
			  , OOI.ADJ_YN                                 									/*정산여부*/
		  FROM OD_ORDER_MAST OOM
		  	 , OD_ORDER_ITM OOI
		  	 , OD_ORDER_FEE OOF
		  	 , GD_GOODS_MAST GGM
		  	 , CO_SUPP_COMP_MAST CSCM
		 WHERE OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ITM_ID = OOF.ORDER_ITM_ID(+)
		   AND OOI.GOODS_CD = GGM.GOODS_CD
		   AND CSCM.SUPP_COMP_ID = OOI.SUPP_COMP_ID
		   AND NVL(OOI.PRSNT_YN,'N') = 'N'
		   AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		   AND OOM.ORDER_ID = #orderId#
		<isNotEmpty property="goodsCd">
		   AND OOI.GOODS_CD = #goodsCd#
		</isNotEmpty>
		<isNotEmpty property="sendSeq">
		   AND OOI.SEND_SEQ = #sendSeq#
		</isNotEmpty>
		<isNotEmpty property="order_itm_id">
		   AND OOI.ORDER_ITM_ID = #order_itm_id#
		</isNotEmpty>
	</select>

	<select id="selectOrderCancelItmIdSeqList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT ORDER_ITM_ID
		  FROM OD_ORDER_ITM
		 WHERE 1=1
		   AND ORDER_ID = #orderId#
	   <isNotEmpty property="sendSeq" >
		   AND SEND_SEQ = #sendSeq#
       </isNotEmpty>
	   <isNotEmpty property="orderStusCd" >
	   	   AND ORDER_STUS_CD = #orderStusCd#
       </isNotEmpty>
	</select>

	<select id="selectOrderCancelItmIdSeqListForRefund" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT A.ORDER_ITM_ID
			  ,B.CLAIM_REQ_NO
		  FROM OD_ORDER_ITM A
			  ,OD_RET_INTERFACE B
		 WHERE A.ORDER_ITM_ID = B.ORDER_ITM_ID
		   AND A.ORDER_ID = #orderId#
		   AND B.CLAIM_REQ_NO = #claimReqNo#
	</select>

	<!-- 반품, 교환	가능 여부  -->
	<select	id="selectIsRetngdChg" parameterClass="com.devwork.common.util.CommandMap"	resultClass="java.lang.Integer">
		SELECT COUNT(ORDER_ITM_ID)
		  FROM OD_RET_INTERFACE_HISTOR
		 WHERE 1=1
		   AND ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("	close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
		   AND (CLAIM_DIV_CD = '001'
				OR CLAIM_DIV_CD = '002' AND TREAT_STUS_CD IN ( '000', '001', '002'))
	</select>

	<!-- 교환/환불신청 -->
	<insert id="insertOrderClaimReqst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="claimReqSeq" resultClass="String">
			<![CDATA[
				SELECT NVL(MAX(CLAIM_REQ_SEQ)+1||'','1' || TO_CHAR(SYSDATE, 'YYMMDDHH24MISS')||'1')
				  FROM OD_RET_INTERFACE
				 WHERE CLAIM_REQ_SEQ LIKE '1' || TO_CHAR(SYSDATE, 'YYMMDDHH24MISS')||'%'
			]]>
		</selectKey>
		INSERT ALL
		INTO OD_RET_INTERFACE
			( ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			<isEqual property="searchClaimdivcd" compareValue="001">
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			</isEqual>
			<isEqual property="searchClaimdivcd" compareValue="002">
			, EXCHG_RECPTER_ADDR_SEQ
			</isEqual>
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			<isNotEmpty property="searchRefundMethCd">
			, RETRNGD_REFUND_METH_CD
			</isNotEmpty>
			)
		VALUES (
			  ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			<isEqual property="searchClaimdivcd" compareValue="001">
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			</isEqual>
			<isEqual property="searchClaimdivcd" compareValue="002">
			, EXCHG_RECPTER_ADDR_SEQ
			</isEqual>
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			<isNotEmpty property="searchRefundMethCd">
			, RETRNGD_REFUND_METH_CD
			</isNotEmpty>
			)
		INTO OD_RET_INTERFACE_HISTOR
			( ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			<isEqual property="searchClaimdivcd" compareValue="001">
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			</isEqual>
			<isEqual property="searchClaimdivcd" compareValue="002">
			, EXCHG_RECPTER_ADDR_SEQ
			</isEqual>
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			<isNotEmpty property="searchRefundMethCd">
			, RETRNGD_REFUND_METH_CD
			</isNotEmpty>
			)
		VALUES (
			  ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			<isEqual property="searchClaimdivcd" compareValue="001">
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			</isEqual>
			<isEqual property="searchClaimdivcd" compareValue="002">
			, EXCHG_RECPTER_ADDR_SEQ
			</isEqual>
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			<isNotEmpty property="searchRefundMethCd">
			, RETRNGD_REFUND_METH_CD
			</isNotEmpty>
			)
		SELECT OOI.ORDER_ID
			  ,OOI.ORDER_ITM_ID
			  ,#claimReqSeq# AS CLAIM_REQ_SEQ
			  ,#claimReqNo# AS CLAIM_REQ_NO
			  ,OOI.GOODS_CD
			  ,(SELECT NVL(MAX(ORI.GOODS_SEQ),1) FROM OD_RET_INTERFACE ORI WHERE ORI.ORDER_ID = #orderId# AND ORI.GOODS_CD = OOI.GOODS_CD) AS GOODS_SEQ
			  ,(SELECT NVL(MAX(ORI.GOODS_RECPTER_SEQ) + 1,1) FROM OD_RET_INTERFACE ORI WHERE ORI.ORDER_ID = #orderId# AND ORI.GOODS_CD = OOI.GOODS_CD) AS GOODS_RECPTER_SEQ
			  ,OOI.SUPPO_RGIST_POCD AS SUPPO_RGISTPO_CD
			  ,'89903' AS CLAIM_RECEVPO_RGISTPO_CD
			  ,'000' AS CLAIM_RECEVPO_WICKETNO
			  ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS CLAIM_REQ_YMD
			  ,TO_CHAR(SYSDATE, 'HH24MISS') AS CLAIM_REQ_HMS
			  ,#searchClaimdivcd# AS CLAIM_DIV_CD
			  ,(NVL(DC_APPLY_PRC,0) + NVL(OPTN_GOODS_APPLY_PRC,0) + NVL(SEND_PRC,0)
			   - (NVL(PNT_USE_AMT,0) + NVL(PREMI_CUST_PNT_SETL_AMT,0) + NVL(CPN_DC_AMT,0) + NVL(OKCASH_USE_AMT,0) + NVL(WALLET_SETL_AMT,0))
			    + NVL(B2B_COMMISSION_PRC,0)) AS SETL_AMT
			  ,NVL(CNSMR_PRC,0) AS GOODS_PRC
			  ,OOI.REQ_CNT AS CLAIM_CNT
			  ,NVL(CNSMR_PRC,0) AS CLAIM_TREAT_AMT
			  ,0 AS RETRNGD_PRCL_PRC
			  ,#rfd_reason_cd# AS CLAIM_REASN_CD
			  ,#rfd_reason_cont# AS CLAIM_REASN_CONT
			  ,#rfd_reason_cd# AS CLAIM_PRCLPRCPAY_CD
			  ,OOI.RECPTER_NM AS CLAIM_REQ_PRSNNM
			  ,OOI.RECPTER_TELNO AS CLAIM_REQ_PRSNTELNO
			  ,OOI.RECPTER_HTELNO AS CLAIM_REQ_PRSNHTELNO
			<isEqual property="searchClaimdivcd" compareValue="001">
			  ,#rfd_bnk_code# AS REFUND_BANKCD
			  ,#rfd_acc_no# AS SEED_REFUND_ACC_NO
			  ,#rfd_dep# AS DPSTRNM
			</isEqual>
			<isEqual property="searchClaimdivcd" compareValue="002">
			  ,OOI.SEND_ADDR_SEQ AS EXCHG_RECPTER_ADDR_SEQ
			</isEqual>
			  ,#searchTreatstuscd# AS TREAT_STUS_CD
			  ,0 AS REFUND_RETRNGD_TOTCNT
			  ,0 AS REFUND_RETRNGD_CSF_FEE
			  ,0 AS SEND_REQ_NO
			  ,OOI.RECPTER_ADDR_DIV_CD AS REQ_ADDR_TYPE
			  ,#recpterTelno# AS REQ_TEL_NO
			  ,#recpterHtelno# AS REQ_HTEL_NO
			  ,0 AS REFUND_RESERV_AMT
			  ,0 AS DOWN_RESERV_AMT
			  ,0 AS RECALLRESERV_AMT
			  ,0 AS REST_RESERV_AMT
			  ,0 AS PAY_AMT
			  ,#recpterZipcd# AS CLAIM_RECPTER_ZIPCD
			  ,#recpterAddr1# AS CLAIM_RECPTER_ADDR_1
			  ,#recpterAddr2# AS CLAIM_RECPTER_ADDR_2
			  ,#recpterNm# AS CLAIM_REQ_RECPTER_NM
			  ,#regerId# AS REGER_ID
			  ,SYSDATE AS REG_DATE
			  ,#chgerId# AS CHGER_ID
			  ,SYSDATE AS CHG_DATE
			<isNotEmpty property="searchRefundMethCd">
			  ,#searchRefundMethCd# AS RETRNGD_REFUND_METH_CD
			</isNotEmpty>
		  FROM OD_ORDER_ITM OOI
		 WHERE OOI.ORDER_ITM_ID = #searchOrderItmId#
	</insert>

	<!-- 교환/환불 OD_ORDER_ITM.RET_STATUS_CD 업데이트 -->
	<update id="updateOrderItmRetStatusCd" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET RET_STATUS_CD = #searchTreatstuscd#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- (콜센터용) 일반 환불 시 OD_ORDER_ITM.주문취소  업데이트 -->
	<update id="updateOrderItmCancel" parameterClass="java.util.HashMap">
		/* OrderMgr_SQL.xml - updateOrderItmCancel*/
		UPDATE OD_ORDER_ITM
		   SET ORDER_STUS_CD = 'O06'
		       ,CHG_DATE = SYSDATE
		       ,CHGER_ID = #chgerId#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>


	<!-- 환불/과납금Tabl 환불요청 등록 -->
	<update id="insertExPriceRefundReq" parameterClass="java.util.HashMap">
		INSERT INTO OD_ONLINE_EX_PRICE
			(
			  ORDER_ID			/* 주문아이디 */
			, EXPRICE_ID		/* 환불번호 */
			, PRE_REF_PRICE		/* 환불예정액 */
			, PRE_SETTLE_DATE	/* 환불예정일자 */
			, FINANCE_NAME		/* 계좌은행명 */
			, ACCOUNT_SEED_NO	/* 계좌번호 */
			, DEPOSITOR			/* 예금주 */
			, REASON_CODE		/* 환불사유코드 */
			, REASON_CONT		/* 환불사유 */
			, MODIFY_STATE		/* 주문상태코드 */
			, MODIFY_CNT		/* 변경횟수 */
			, ACCESS_NAME		/* 회원아이디 */
			)
		VALUES
			(
			  #orderId#
			, (SELECT NVL(MAX(NVL(EXPRICE_ID,0)),0) + 1 MAXVAL FROM OD_ONLINE_EX_PRICE WHERE ORDER_ID	= #orderId#)
			, #cancelSetlAmtSum#
			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24')
			, F_GET_COMN_CD_NM('BANK_CD', #rfd_bnk_code#)	/* 계좌은행명 */
			, #rfd_acc_no#									/* 계좌번호(암호화) */
			, #rfd_dep#										/* 예금주 */
			, #rfd_reason_cd#								/* 환불사유코드 */
			, #rfd_reason_cont#								/* 환불사유 */
			, #modifyState#									/* 주문상태코드 */
			, 1
			, (SELECT ACCESS_NAME FROM OD_ORDER_MAST WHERE ORDER_ID = #orderId#)	/* 회원아이디 */
	</update>

	<!-- OD_ORDER_ITM 주문상태 환불신청 UPDATE -->
	<update id="updateOrderItmClaimReqst" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET ORDER_STUS_CD = #searchOrderStusCd#			/* 주문 상세 상태 코드 */
			  ,CHG_DATE = SYSDATE										/* 수정 일시 */
			  ,CHGER_ID = #chger_id#									/* 수정자 아이디 */
		WHERE 1=1
			AND ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("	close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</update>

	<!-- OD_ORDER_ITM_HISTOR 환불신청 이력 INSERT -->
	<update id="insertOrderItmClaimReqstHist" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_ITM_HISTOR
			(
			 ORDER_ITM_ID			,ORDER_ITM_CHG_DATE		,ORDER_HISTOR_CHG_CD	,ORIG_ORDER_ITM_ID			,ORDER_ID
			,PAVLN_ID				,PAVLN_DIV_CD			,SUPP_COMP_ID			,SUPP_COMP_NM				,SUPPO_RGIST_POCD
			,SUPP_PO_NM				,GOODS_CD				,GOODS_NM				,GOODS_OPTN_GRP_SEQ			,GOODS_OPTN_SEQ
			,REQ_CNT				,GOODS_RETRNGD_DATE		,ORDER_DTAIL_STUS_CD	,ORDER_TYP_CD				,GOODS_CANCEL_YN
			,GOODS_CANCEL_DATE		,CNSMR_PRC				,STD_SELL_PRC			,PUCHAS_PRC					,DC_APPLY_PRC
			,OPTN_GOODS_APPLY_PRC	,CPN_DC_AMT				,PNT_USE_AMT			,PNT_ACCML_PNT				,PO_PNT_USE_AMT
			,OKCASH_USE_AMT			,PREMI_CUST_PNT_SETL_AMT,REFUND_AMT				,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_REFUND_APRV_AMT
			,SEND_PRC				,PRCL_AMT				,IMMPMN_PRCL_AMT		,AFTPMN_PRCL_AMT			,EMS_AMT
			,EMS_DC_AMT				,EMS_DCRATE				,EMS_DOLAR_AMT			,WGHT						,VOLM
			,KIND_DIV_CD			,AIR_SEND_YN			,FRN_EXP_DIV_CD			,PRCLTAXIN					,STD_DIV_CD
			,GOODS_DIV_NO			,FLWR_DELIVPO_SIGN		,BALTSHT_PRT_YN			,FIX_RESRV_ORDER_GOODS_YN	,CPN_USE_YN
			,EVENT_DC_GOODS_YN		,EVENT_DIV_CD			,EVENT_ID				,GIFT_ORDER_YN				,GIFT_CANCEL_YN
			,EVENT_GOODS_SEQ		,EXTRA_GOODS_YN			,EXTRA_GOODS_CNT		,EXTRA_GOODS_SEQ			,RGR_GOODS_YN
			,RGR_GOODS_SEQ			,RGR_GOODS_PRC			,CORPSPCSAL_GOODS_YN	,CORPSPCSAL_GOODS_SEQ		,PLNBEF_GOODS_YN
			,PLNBEF_ID				,CRRGR_CARD_USE_YN		,WISH_SEND_DATE			,TDAY_EXP_YN				,DOM_EXP_YN
			,OVSEA_SEND_GOODS_YN	,DELIV_CERT_YN			,FLWRDELIV_SMS_DONE_DATE,FLWRDELIV_DELAY_REASN_CD	,SEND_MSG
			,SENDER_NM				,SENDER_ZIPCD			,SENDER_ADDR1			,SENDER_ADDR2				,SENDER_ADDR3
			,SENDER_TELNO			,SENDER_HTELNO			,SENDER_EMAIL			,SENDER_ADDR_DIV_CD			,RECPTER_NM
			,RECPTER_HONOR_CD		,RECPTER_ZIPCD			,RECPTER_ADDR1			,RECPTER_ADDR2				,RECPTER_ADDR3
			,RECPTER_TELNO			,RECPTER_HTELNO			,RECPTER_EMAIL			,RECPTER_ADDR_DIV_CD		,SENDPO_RGIST_POCD
			,HS_CD					,SEND_TYP_CD			,SEND_NATION_CD			,SEND_AREA_CD				,REGI_NO
			,REPRSNT_REGI_NO		,REGI_NO_CREATE_DIV_CD	,SEND_CONF_DATE			,SEND_STRT_DATE				,SEND_DONE_DATE
			,ORDER_CANCEL_ADJ_YN	,ADJ_DATE				,REALRECPTER			,INSTL_DUEDD				,SMS_RECV_YN
			,MANY_ORDER_NO			,BUND_SEND_YN			,EPOST_MLG_ID			,CANCEL_REQ_YMD				,RETRNGD_YN
			,FLWRDELIV_DELAY_REASN	,SENDER_VIRTL_NO		,RECPTER_VIRTL_NO		,TAXBIL_ADJ_YN				,FLWRDELIV_SMS_RSLT
			,SUPPCOMP_SMS_TX_YN		,SENDER_SMS_TX_YN		,ADJ_YN					,ADJ_CARD_REFUND_FEE		,SUPP_NOTIC_DD_PER_SEQ
			,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD	,SEND_SEQ				,RETRUN_DELIV_DONE_YN		,CP_CMP_CD
			,HDRYCO_CD				,RET_STATUS_CD			,GOODS_OPTN_GRP_SEQ2	,GOODS_OPTN_SEQ2			,CP_TYP_CD
			,ONOFF_FLAG				,DTV_CHK				,OPTN_CNT1				,OPTN_CNT2					,OPTN_NM1
			,OPTN_NM2				,OPTN_ESSN_CHOICE_YN	,CPN_MAST_NO1			,CPN_DC_AMT1				,CPN_MAST_NO2
			,CPN_DC_AMT2			,HS_US_PRICE			,GOODS_BASIC_FEE		,PRSNT_YN					,PRSNT_SEQ
			,CASH_BILL_AMT			,LATER_PRCL_SALE_PRC	,B2B_COMMISSION_PRC		,ORDER_CONF_DATE			,REG_DATE
			,CHG_DATE				,REGER_ID				,CHGER_ID				,OVSEA_GOODS_PRC			,SEND_MEMO
			,SETL_METH_DIV_CD
			)
			SELECT
			 ORDER_ITM_ID			,SYSDATE				,#orderHistorChgCd#		,ORIG_ORDER_ITM_ID			,ORDER_ID
			,PAVLN_ID				,PAVLN_DIV_CD			,SUPP_COMP_ID			,SUPP_COMP_NM				,SUPPO_RGIST_POCD
			,SUPP_PO_NM				,GOODS_CD				,GOODS_NM				,GOODS_OPTN_GRP_SEQ			,GOODS_OPTN_SEQ
			,REQ_CNT				,GOODS_RETRNGD_DATE		,ORDER_DTAIL_STUS_CD	,ORDER_TYP_CD				,GOODS_CANCEL_YN
			,GOODS_CANCEL_DATE		,CNSMR_PRC				,STD_SELL_PRC			,PUCHAS_PRC					,DC_APPLY_PRC
			,OPTN_GOODS_APPLY_PRC	,CPN_DC_AMT				,PNT_USE_AMT			,PNT_ACCML_PNT				,PO_PNT_USE_AMT
			,OKCASH_USE_AMT			,PREMI_CUST_PNT_SETL_AMT,REFUND_AMT				,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_REFUND_APRV_AMT
			,SEND_PRC				,PRCL_AMT				,IMMPMN_PRCL_AMT		,AFTPMN_PRCL_AMT			,EMS_AMT
			,EMS_DC_AMT				,EMS_DCRATE				,EMS_DOLAR_AMT			,WGHT						,VOLM
			,KIND_DIV_CD			,AIR_SEND_YN			,FRN_EXP_DIV_CD			,PRCLTAXIN					,STD_DIV_CD
			,GOODS_DIV_NO			,FLWR_DELIVPO_SIGN		,BALTSHT_PRT_YN			,FIX_RESRV_ORDER_GOODS_YN	,CPN_USE_YN
			,EVENT_DC_GOODS_YN		,EVENT_DIV_CD			,EVENT_ID				,GIFT_ORDER_YN				,GIFT_CANCEL_YN
			,EVENT_GOODS_SEQ		,EXTRA_GOODS_YN			,EXTRA_GOODS_CNT		,EXTRA_GOODS_SEQ			,RGR_GOODS_YN
			,RGR_GOODS_SEQ			,RGR_GOODS_PRC			,CORPSPCSAL_GOODS_YN	,CORPSPCSAL_GOODS_SEQ		,PLNBEF_GOODS_YN
			,PLNBEF_ID				,CRRGR_CARD_USE_YN		,WISH_SEND_DATE			,TDAY_EXP_YN				,DOM_EXP_YN
			,OVSEA_SEND_GOODS_YN	,DELIV_CERT_YN			,FLWRDELIV_SMS_DONE_DATE,FLWRDELIV_DELAY_REASN_CD	,SEND_MSG
			,SENDER_NM				,SENDER_ZIPCD			,SENDER_ADDR1			,SENDER_ADDR2				,SENDER_ADDR3
			,SENDER_TELNO			,SENDER_HTELNO			,SENDER_EMAIL			,SENDER_ADDR_DIV_CD			,RECPTER_NM
			,RECPTER_HONOR_CD		,RECPTER_ZIPCD			,RECPTER_ADDR1			,RECPTER_ADDR2				,RECPTER_ADDR3
			,RECPTER_TELNO			,RECPTER_HTELNO			,RECPTER_EMAIL			,RECPTER_ADDR_DIV_CD		,SENDPO_RGIST_POCD
			,HS_CD					,SEND_TYP_CD			,SEND_NATION_CD			,SEND_AREA_CD				,REGI_NO
			,REPRSNT_REGI_NO		,REGI_NO_CREATE_DIV_CD	,SEND_CONF_DATE			,SEND_STRT_DATE				,SEND_DONE_DATE
			,ORDER_CANCEL_ADJ_YN	,ADJ_DATE				,REALRECPTER			,INSTL_DUEDD				,SMS_RECV_YN
			,MANY_ORDER_NO			,BUND_SEND_YN			,EPOST_MLG_ID			,CANCEL_REQ_YMD				,RETRNGD_YN
			,FLWRDELIV_DELAY_REASN	,SENDER_VIRTL_NO		,RECPTER_VIRTL_NO		,TAXBIL_ADJ_YN				,FLWRDELIV_SMS_RSLT
			,SUPPCOMP_SMS_TX_YN		,SENDER_SMS_TX_YN		,ADJ_YN					,ADJ_CARD_REFUND_FEE		,SUPP_NOTIC_DD_PER_SEQ
			,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD	,SEND_SEQ				,RETRUN_DELIV_DONE_YN		,CP_CMP_CD
			,HDRYCO_CD				,RET_STATUS_CD			,GOODS_OPTN_GRP_SEQ2	,GOODS_OPTN_SEQ2			,CP_TYP_CD
			,ONOFF_FLAG				,DTV_CHK				,OPTN_CNT1				,OPTN_CNT2					,OPTN_NM1
			,OPTN_NM2				,OPTN_ESSN_CHOICE_YN	,CPN_MAST_NO1			,CPN_DC_AMT1				,CPN_MAST_NO2
			,CPN_DC_AMT2			,HS_US_PRICE			,GOODS_BASIC_FEE		,PRSNT_YN					,PRSNT_SEQ
			,CASH_BILL_AMT			,LATER_PRCL_SALE_PRC	,B2B_COMMISSION_PRC		,ORDER_CONF_DATE			,REG_DATE
			,CHG_DATE				,REGER_ID				,CHGER_ID				,OVSEA_GOODS_PRC			,SEND_MEMO
			,SETL_METH_DIV_CD
			FROM OD_ORDER_ITM
			WHERE ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("	close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</update>

	<!-- OD_ORDER_MAST_HISTOR 환불신청 이력 INSERT -->
	<update id="insertOrderMastClaimReqstHist" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_HISTOR
			(
			 ORDER_ID						,ORDER_CHG_DATE			,ACCESS_NAME				,ORDRR_RECOM_PO_CD
			,RECOM_PO_RGISTPOCD				,ORDRR_RECOM_ACCESS_NAME,BUYER_AGREE_YN				,RECRTER_ID				,RECRTER_INFO
			,SUPPO_DLIV_MATTER				,RECEVPO_RGISTPOCD		,RECEV_CANCELPO				,WICKET_NO				,WICKET_SHOP_ORDRR_NM
			,ORDER_MDA_DIV_CD				,ORDER_TYP_CD			,ORDER_DATE					,APPR_DATE				,ORDER_CONF_DATE
			,ORDER_CANCEL_DATE				,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,TOT_CNSMR_PRC			,TOT_STD_SELL_PRC
			,TOT_PUCHAS_PRC					,TOT_DC_APPLY_PRC		,TOT_SEND_PRC				,EXRATE					,SETL_DUE_AMT
			,TOT_CPN_DC_AMT					,PNT_USE_AMT			,PO_PNT_USE_AMT				,OKCASH_APPLY_DIV_CD	,OKCASH_ACCML_AMT
			,OKCASH_USE_AMT					,SETL_AMT				,REFUND_AMT					,REFUND_YMD
			,PNT_USE_YN						,PNT_ACCML_PNT			,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_USEYN	,PREMI_CUST_PNT_SETL_AMT
			,PREMI_CUST_PNT_REFUND_APRV_AMT	,THNKS_CPN_CREATE_YMD	,THNKS_CPN_EMAIL_SEND_YMD	,PO_CHECK_CARD_CPN_YMD	,SETL_MEAN_CD
			,SETL_STUS_CD					,SETL_APPR_TOT_AMT		,MONEY_RCIPT_ISSUE_YN		,PO_FNC_YN				,COPRTN_ORDER_DIV_CD
			,PARTNR_ID						,COPRTN_ORDER_YN		,COPRTN_ORDER_NO			,COPRTN_ORDER_SEQ		,COPRTN_SHOPMALL_FEE
			,REG_DATE						,CHG_DATE				,REGER_ID					,CHGER_ID
			)
			SELECT
			 ORDER_ID						,SYSDATE				,ACCESS_NAME				,ORDRR_RECOM_PO_CD
			,RECOM_PO_RGISTPOCD				,ORDRR_RECOM_ACCESS_NAME,BUYER_AGREE_YN				,RECRTER_ID				,RECRTER_INFO
			,SUPPO_DLIV_MATTER				,RECEVPO_RGISTPOCD		,RECEV_CANCELPO				,WICKET_NO				,WICKET_SHOP_ORDRR_NM
			,ORDER_MDA_DIV_CD				,ORDER_TYP_CD			,ORDER_DATE					,APPR_DATE				,ORDER_CONF_DATE
			,ORDER_CANCEL_DATE				,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,TOT_CNSMR_PRC			,TOT_STD_SELL_PRC
			,TOT_PUCHAS_PRC					,TOT_DC_APPLY_PRC		,TOT_SEND_PRC				,EXRATE					,SETL_DUE_AMT
			,TOT_CPN_DC_AMT					,PNT_USE_AMT			,PO_PNT_USE_AMT				,OKCASH_APPLY_DIV_CD	,OKCASH_ACCML_AMT
			,OKCASH_USE_AMT					,SETL_AMT				,REFUND_AMT					,REFUND_YMD
			,PNT_USE_YN						,PNT_ACCML_PNT			,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_USEYN	,PREMI_CUST_PNT_SETL_AMT
			,PREMI_CUST_PNT_REFUND_APRV_AMT	,THNKS_CPN_CREATE_YMD	,THNKS_CPN_EMAIL_SEND_YMD	,PO_CHECK_CARD_CPN_YMD	,SETL_MEAN_CD
			,SETL_STUS_CD					,SETL_APPR_TOT_AMT		,MONEY_RCIPT_ISSUE_YN		,PO_FNC_YN				,COPRTN_ORDER_DIV_CD
			,PARTNR_ID						,COPRTN_ORDER_YN		,COPRTN_ORDER_NO			,COPRTN_ORDER_SEQ		,COPRTN_SHOPMALL_FEE
			,REG_DATE						,CHG_DATE				,REGER_ID					,CHGER_ID
			FROM OD_ORDER_MAST
			WHERE ORDER_ID IN
				<iterate property="searchOrderIds" open="("	close=")" conjunction=",">
					#searchOrderIds[]#
				</iterate>
	</update>

	<!-- 통관정보 팝업 -->
	<select id="selectOrderCustomsInfo" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderCustomsInfo */
		SELECT OOM.ORDER_ID															/* 주문번호 */
				, F_GET_COMN_CD_NM('GOODS_DIV_NO', OOI.GOODS_DIV_NO) GOODS_DIV_NO	/* 구분 */
				, OOI.HS_CD															/* HS CODE */
				, OOI.GOODS_NM														/* 내용품명 */
				, TO_CHAR(NVL(OOI.REQ_CNT, 0),'FM999,999,999,999') REQ_CNT				/* 개수 */
				, TO_CHAR(NVL(OOI.EMS_DOLAR_AMT, 0),'FM999,999,999,999') EMS_DOLAR_AMT	/* 가격 */
				, TO_CHAR(NVL(OOI.WGHT, 0),'FM999,999,999,999') WGHT						/* 순중량 */
				, GGM.ORGPLCE														/* 생산지 */
		 FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI, GD_GOODS_MAST GGM
		WHERE OOM.ORDER_ID = OOI.ORDER_ID
		  AND OOI.GOODS_CD = GGM.GOODS_CD
		  AND OOI.ORDER_ITM_ID = #orderItmId#
	</select>

	<!-- 할인금액 상세 팝업 -->
	<select id="orderTotDcPrcPopup" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* selectOrderDcPopup */
		SELECT OOM.ORDER_ID														 /* 주문번호 */
				, TO_CHAR(OOM.TOT_CNSMR_PRC, 'FM999,999,999,999') TOT_CNSMR_PRC		   /* 주문금액 */
				, TO_CHAR(OOM.PNT_USE_AMT, 'FM999,999,999,999') PNT_USE_AMT			   /* 포인트 할인금액 */
				, TO_CHAR(OOM.PO_PNT_USE_AMT, 'FM999,999,999,999') PO_PNT_USE_AMT		 /* 우수고객 할인금액 */
				, TO_CHAR(OOM.TOT_CPN_DC_AMT, 'FM999,999,999,999') TOT_CPN_DC_AMT		 /* 할인쿠폰 할인금액 */
				, TO_CHAR(OOM.OKCASH_USE_AMT, 'FM999,999,999,999') OKCASH_USE_AMT		 /* OK캐시백 할인금액 */
				, TO_CHAR(OOM.SETL_AMT, 'FM999,999,999,999') SETL_AMT			 		/* 최종결제금액 */
				, TO_CHAR(OOM.PNT_ACCML_PNT, 'FM999,999,999,999') PNT_ACCML_PNT		   /* 포인트 적립금액*/
				, TO_CHAR(OOM.OKCASH_ACCML_AMT, 'FM999,999,999,999') OKCASH_ACCML_AMT	 /* OK캐시백 적립금액 */
				, (
					SELECT TO_CHAR(AMOUNT, 'FM999,999,999,999')
					  FROM OD_ORDER_MAST OM, OD_ORDER_CPN OOC, EV_CPN_MAST ECM, EV_CPN_ISSUE_PIN_MGT ECIPM
					 WHERE OM.ORDER_ID = OOC.ORDER_ID
					   AND OM.ACCESS_NAME = OM.ACCESS_NAME
					   AND ECM.CPN_MAST_NO = ECIPM.CPN_MAST_NO
					   AND OOC.PIN_NO = ECIPM.PIN_SEQ
					   AND ECM.CP_CMP_CD = 1
					   AND OM.ORDER_ID = OOM.ORDER_ID
				) POSA_COUPON													   /* 진흥원 쿠폰 */
				, (
					SELECT TO_CHAR(AMOUNT, 'FM999,999,999,999')
					  FROM OD_ORDER_MAST OM, OD_ORDER_CPN OOC, EV_CPN_MAST ECM, EV_CPN_ISSUE_PIN_MGT ECIPM
					 WHERE OM.ORDER_ID = OOC.ORDER_ID
					   AND OM.ACCESS_NAME = OM.ACCESS_NAME
					   AND ECM.CPN_MAST_NO = ECIPM.CPN_MAST_NO
					   AND OOC.PIN_NO = ECIPM.PIN_SEQ
					   AND ECM.CP_CMP_CD = 1
					   AND CP_TYPE_CD = 1
					   AND OM.ORDER_ID = OOM.ORDER_ID
				) CP_COUPON1														/* 공급업체 감사쿠폰 */
				, (
					SELECT TO_CHAR(AMOUNT, 'FM999,999,999,999')
					  FROM OD_ORDER_MAST OM, OD_ORDER_CPN OOC, EV_CPN_MAST ECM, EV_CPN_ISSUE_PIN_MGT ECIPM
					 WHERE OM.ORDER_ID = OOC.ORDER_ID
					   AND OM.ACCESS_NAME = OM.ACCESS_NAME
					   AND ECM.CPN_MAST_NO = ECIPM.CPN_MAST_NO
					   AND OOC.PIN_NO = ECIPM.PIN_SEQ
					   AND ECM.CP_CMP_CD = 1
					   AND CP_TYPE_CD = 2
					   AND OM.ORDER_ID = OOM.ORDER_ID
				) CP_COUPON2														/* 공급업체 할인쿠폰 */
		  FROM OD_ORDER_MAST OOM
		 WHERE OOM.ORDER_ID = #orderId#
	</select>

	<!-- 배송지수정 -->
	<update id="updateOrderDeliveryInfo" parameterClass ="com.devwork.common.util.CommandMap">
		UPDATE OD_ORDER_ITM
		   SET SENDER_NM = #senderNm#
		   		, RECPTER_NM = #recpterNm#
		   		, RECPTER_TELNO = #recpterTelno#
		   		, RECPTER_HTELNO = #recpterHtelno#
		   		, RECPTER_ZIPCD = #recpterZipcd#
		   		, RECPTER_ADDR1 = #recpterAddr1#
		   		, RECPTER_ADDR2 = #recpterAddr2#
		   		, CHGER_ID = #chgerId#
		 WHERE ORDER_ID = #orderId#
		   AND GOODS_CD = #goodsCd#
		   AND SEND_SEQ = #sendSeq#
		   AND ORDER_STUS_CD IN ('O01','O02','O04')
		   AND NVL(BALTSHT_PRT_YN,'N') = 'N'
	</update>

	<!-- 주문 마스터 이력 등록 -->
	<insert id="insertOrderHistory" parameterClass ="com.devwork.common.util.CommandMap">
		INSERT INTO OD_ORDER_HISTOR
		(ORDER_ID, ACCESS_NAME, ORDRR_RECOM_PO_CD, RECOM_PO_RGISTPOCD, ORDRR_RECOM_ACCESS_NAME, BUYER_AGREE_YN, RECRTER_ID, RECRTER_INFO, SUPPO_DLIV_MATTER, RECEVPO_RGISTPOCD, RECEV_CANCELPO, WICKET_NO, WICKET_SHOP_ORDRR_NM, ORDER_MDA_DIV_CD, ORDER_TYP_CD, ORDER_DATE, APPR_DATE, ORDER_STUS_CD, ORDER_CONF_DATE, ORDER_CANCEL_DATE, CANCEL_REQ_CONT, CANCEL_REQ_REASN, TOT_CNSMR_PRC, TOT_STD_SELL_PRC, TOT_PUCHAS_PRC, TOT_DC_APPLY_PRC, TOT_SEND_PRC, EXRATE, SETL_DUE_AMT, TOT_CPN_DC_AMT, PNT_USE_AMT, PO_PNT_USE_AMT, OKCASH_APPLY_DIV_CD, OKCASH_ACCML_AMT, OKCASH_USE_AMT, SETL_AMT, REFUND_AMT, REFUND_YMD, PNT_USE_YN, PNT_ACCML_PNT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_USEYN, PREMI_CUST_PNT_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, THNKS_CPN_CREATE_YMD, THNKS_CPN_EMAIL_SEND_YMD, PO_CHECK_CARD_CPN_YMD, SETL_MEAN_CD, SETL_STUS_CD, SETL_APPR_TOT_AMT, MONEY_RCIPT_ISSUE_YN, PO_FNC_YN, COPRTN_ORDER_DIV_CD, PARTNR_ID, COPRTN_ORDER_YN, COPRTN_ORDER_NO, COPRTN_ORDER_SEQ, COPRTN_SHOPMALL_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, FIX_RESRV_ORDER_YN, ORDRR_NM, ORDRR_ZIPCD, ORDRR_ADDR1, ORDRR_ADDR2, ORDRR_TELNO, ORDRR_HTELNO, ORDRR_EMAIL, ORDRR_ADDR_DIV_CD)
		SELECT ORDER_ID, ACCESS_NAME, ORDRR_RECOM_PO_CD, RECOM_PO_RGISTPOCD, ORDRR_RECOM_ACCESS_NAME, BUYER_AGREE_YN, RECRTER_ID, RECRTER_INFO, SUPPO_DLIV_MATTER, RECEVPO_RGISTPOCD, RECEV_CANCELPO, WICKET_NO, WICKET_SHOP_ORDRR_NM, ORDER_MDA_DIV_CD, ORDER_TYP_CD, ORDER_DATE, APPR_DATE, ORDER_STUS_CD, ORDER_CONF_DATE, ORDER_CANCEL_DATE, CANCEL_REQ_CONT, CANCEL_REQ_REASN, TOT_CNSMR_PRC, TOT_STD_SELL_PRC, TOT_PUCHAS_PRC, TOT_DC_APPLY_PRC, TOT_SEND_PRC, EXRATE, SETL_DUE_AMT, TOT_CPN_DC_AMT, PNT_USE_AMT, PO_PNT_USE_AMT, OKCASH_APPLY_DIV_CD, OKCASH_ACCML_AMT, OKCASH_USE_AMT, SETL_AMT, REFUND_AMT, REFUND_YMD, PNT_USE_YN, PNT_ACCML_PNT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_USEYN, PREMI_CUST_PNT_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, THNKS_CPN_CREATE_YMD, THNKS_CPN_EMAIL_SEND_YMD, PO_CHECK_CARD_CPN_YMD, SETL_MEAN_CD, SETL_STUS_CD, SETL_APPR_TOT_AMT, MONEY_RCIPT_ISSUE_YN, PO_FNC_YN, COPRTN_ORDER_DIV_CD, PARTNR_ID, COPRTN_ORDER_YN, COPRTN_ORDER_NO, COPRTN_ORDER_SEQ, COPRTN_SHOPMALL_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, FIX_RESRV_ORDER_YN, ORDRR_NM, ORDRR_ZIPCD, ORDRR_ADDR1, ORDRR_ADDR2, ORDRR_TELNO, ORDRR_HTELNO, ORDRR_EMAIL, ORDRR_ADDR_DIV_CD
		  FROM OD_ORDER_MAST
		 WHERE ORDER_ID = #orderId#
	</insert>

	<!-- 주문 아이템 이력 등록 -->
	<insert id="insertOrderItmHistory" parameterClass ="com.devwork.common.util.CommandMap">
		INSERT INTO OD_ORDER_ITM_HISTOR
		(ORDER_ITM_ID, ORDER_ITM_CHG_DATE, ORIG_ORDER_ITM_ID, ORDER_ID, PAVLN_ID, PAVLN_DIV_CD, SUPP_COMP_ID, SUPP_COMP_NM, SUPPO_RGIST_POCD, SUPP_PO_NM, GOODS_CD, GOODS_NM, GOODS_OPTN_GRP_SEQ, GOODS_OPTN_SEQ, REQ_CNT, GOODS_RETRNGD_DATE, ORDER_DTAIL_STUS_CD, ORDER_TYP_CD, GOODS_CANCEL_YN, GOODS_CANCEL_DATE, CNSMR_PRC, STD_SELL_PRC, PUCHAS_PRC, DC_APPLY_PRC, OPTN_GOODS_APPLY_PRC, CPN_DC_AMT, PNT_USE_AMT, PNT_ACCML_PNT, PO_PNT_USE_AMT, OKCASH_USE_AMT, PREMI_CUST_PNT_SETL_AMT, REFUND_AMT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, SEND_PRC, PRCL_AMT, IMMPMN_PRCL_AMT, AFTPMN_PRCL_AMT, EMS_AMT, EMS_DC_AMT, EMS_DCRATE, EMS_DOLAR_AMT, WGHT, VOLM, KIND_DIV_CD, AIR_SEND_YN, FRN_EXP_DIV_CD, PRCLTAXIN, STD_DIV_CD, GOODS_DIV_NO, FLWR_DELIVPO_SIGN, BALTSHT_PRT_YN, FIX_RESRV_ORDER_GOODS_YN, CPN_USE_YN, EVENT_DC_GOODS_YN, EVENT_DIV_CD, EVENT_ID, GIFT_ORDER_YN, GIFT_CANCEL_YN, EVENT_GOODS_SEQ, EXTRA_GOODS_YN, EXTRA_GOODS_CNT, EXTRA_GOODS_SEQ, RGR_GOODS_YN, RGR_GOODS_SEQ, RGR_GOODS_PRC, CORPSPCSAL_GOODS_YN, CORPSPCSAL_GOODS_SEQ, PLNBEF_GOODS_YN, PLNBEF_ID, CRRGR_CARD_USE_YN, WISH_SEND_DATE, TDAY_EXP_YN, DOM_EXP_YN, OVSEA_SEND_GOODS_YN, DELIV_CERT_YN, FLWRDELIV_SMS_DONE_DATE, FLWRDELIV_DELAY_REASN_CD, SEND_MSG, SENDER_NM, SENDER_ZIPCD, SENDER_ADDR1, SENDER_ADDR2, SENDER_TELNO, SENDER_HTELNO, SENDER_EMAIL, SENDER_ADDR_DIV_CD, RECPTER_NM, RECPTER_HONOR_CD, RECPTER_ZIPCD, RECPTER_ADDR1, RECPTER_ADDR2, RECPTER_TELNO, RECPTER_HTELNO, RECPTER_EMAIL, RECPTER_ADDR_DIV_CD, SENDPO_RGIST_POCD, HS_CD, SEND_TYP_CD, SEND_NATION_CD, SEND_AREA_CD, REGI_NO, REPRSNT_REGI_NO, REGI_NO_CREATE_DIV_CD, SEND_CONF_DATE, SEND_STRT_DATE, SEND_DONE_DATE, ORDER_CANCEL_ADJ_YN, REALRECPTER, INSTL_DUEDD, SMS_RECV_YN, MANY_ORDER_NO, BUND_SEND_YN, EPOST_MLG_ID, CANCEL_REQ_YMD, RETRNGD_YN, FLWRDELIV_DELAY_REASN, SENDER_VIRTL_NO, RECPTER_VIRTL_NO, TAXBIL_ADJ_YN, FLWRDELIV_SMS_RSLT, SUPPCOMP_SMS_TX_YN, SENDER_SMS_TX_YN, ADJ_YN, ADJ_CARD_REFUND_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, SUPP_NOTIC_DD_PER_SEQ, UPDATE_ITEM, UPDATE_CONT)
		SELECT ORDER_ITM_ID, SYSDATE, ORIG_ORDER_ITM_ID, ORDER_ID, PAVLN_ID, PAVLN_DIV_CD, SUPP_COMP_ID, SUPP_COMP_NM, SUPPO_RGIST_POCD, SUPP_PO_NM, GOODS_CD, GOODS_NM, GOODS_OPTN_GRP_SEQ, GOODS_OPTN_SEQ, REQ_CNT, GOODS_RETRNGD_DATE, ORDER_DTAIL_STUS_CD, ORDER_TYP_CD, GOODS_CANCEL_YN, GOODS_CANCEL_DATE, CNSMR_PRC, STD_SELL_PRC, PUCHAS_PRC, DC_APPLY_PRC, OPTN_GOODS_APPLY_PRC, CPN_DC_AMT, PNT_USE_AMT, PNT_ACCML_PNT, PO_PNT_USE_AMT, OKCASH_USE_AMT, PREMI_CUST_PNT_SETL_AMT, REFUND_AMT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, SEND_PRC, PRCL_AMT, IMMPMN_PRCL_AMT, AFTPMN_PRCL_AMT, EMS_AMT, EMS_DC_AMT, EMS_DCRATE, EMS_DOLAR_AMT, WGHT, VOLM, KIND_DIV_CD, AIR_SEND_YN, FRN_EXP_DIV_CD, PRCLTAXIN, STD_DIV_CD, GOODS_DIV_NO, FLWR_DELIVPO_SIGN, BALTSHT_PRT_YN, FIX_RESRV_ORDER_GOODS_YN, CPN_USE_YN, EVENT_DC_GOODS_YN, EVENT_DIV_CD, EVENT_ID, GIFT_ORDER_YN, GIFT_CANCEL_YN, EVENT_GOODS_SEQ, EXTRA_GOODS_YN, EXTRA_GOODS_CNT, EXTRA_GOODS_SEQ, RGR_GOODS_YN, RGR_GOODS_SEQ, RGR_GOODS_PRC, CORPSPCSAL_GOODS_YN, CORPSPCSAL_GOODS_SEQ, PLNBEF_GOODS_YN, PLNBEF_ID, CRRGR_CARD_USE_YN, WISH_SEND_DATE, TDAY_EXP_YN, DOM_EXP_YN, OVSEA_SEND_GOODS_YN, DELIV_CERT_YN, FLWRDELIV_SMS_DONE_DATE, FLWRDELIV_DELAY_REASN_CD, SEND_MSG, SENDER_NM, SENDER_ZIPCD, SENDER_ADDR1, SENDER_ADDR2, SENDER_TELNO, SENDER_HTELNO, SENDER_EMAIL, SENDER_ADDR_DIV_CD, RECPTER_NM, RECPTER_HONOR_CD, RECPTER_ZIPCD, RECPTER_ADDR1, RECPTER_ADDR2, RECPTER_TELNO, RECPTER_HTELNO, RECPTER_EMAIL, RECPTER_ADDR_DIV_CD, SENDPO_RGIST_POCD, HS_CD, SEND_TYP_CD, SEND_NATION_CD, SEND_AREA_CD, REGI_NO, REPRSNT_REGI_NO, REGI_NO_CREATE_DIV_CD, SEND_CONF_DATE, SEND_STRT_DATE, SEND_DONE_DATE, ORDER_CANCEL_ADJ_YN, REALRECPTER, INSTL_DUEDD, SMS_RECV_YN, MANY_ORDER_NO, BUND_SEND_YN, EPOST_MLG_ID, CANCEL_REQ_YMD, RETRNGD_YN, FLWRDELIV_DELAY_REASN, SENDER_VIRTL_NO, RECPTER_VIRTL_NO, TAXBIL_ADJ_YN, FLWRDELIV_SMS_RSLT, SUPPCOMP_SMS_TX_YN, SENDER_SMS_TX_YN, ADJ_YN, ADJ_CARD_REFUND_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, SUPP_NOTIC_DD_PER_SEQ, #updateItem#, #updateCont#
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ITM_ID = #orderItmId#
	</insert>

	<!-- 주문처리상태 수정 -->
	<update id="updateOrderState" parameterClass="java.util.HashMap">
	UPDATE ORDER
	SET ORDER_STATE	= #searchOrderState#
	WHERE ORDER_NO	= #searchOrderNo#
	</update>

	<!-- 환불가능여부 조회 -->
	<select id="selectRefundYN" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 송장접수여부 조회 -->
	<select id="selectParcelNmCnt" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 결제정보 조회(온라인 전통시장 복합결제 적용) -->
	<select id="selectStlInfo" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 주문신청자정보 조회 -->
	<select id="selectDlvyInfo" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 배송비 조회1 -->
	<select id="selectDlvyNoTraceInfo1" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 배송비 조회2 -->
	<select id="selectDlvyNoTraceInfo2" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 주문정보 조회 -->
	<select id="selectTrnInfo" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- 송장번호(등기번호) 카운트 조회 -->
	<select id="selectRegNoHisCnt" parameterClass="java.util.HashMap" resultClass="int">
	SELECT 1
	FROM DUAL;
	</select>

	<!-- transaction 처리 test -->
	<insert id="insertTestTran" parameterClass="java.util.HashMap">
		INSERT INTO TEMP_SAMPLE(
			COL1
		  , COL2
		  , COL3
		  , COL4
		  , COL5
		  , COL6
		  , COL7
		  , COL8
		  , COL9
		  , COL10
		  , COL11
		  , USE_YN
		  , REG_DATE
		  , CHG_DATE
		  , REGER_ID
		  , CHGER_ID
		)VALUES(
			 #COL1#
		   , #COL2#
		   , #COL3#
		   , #COL4#
		   , #COL5#
		   , #COL6#
		   , #COL7#
		   , #COL8#
		   , #COL9#
		   , #COL10#
		   , #COL11#
		   , 'Y'
		   , SYSDATE
		   , SYSDATE
		   , 'SYSTEM'
		   , 'SYSTEM'
		)
	</insert>


	<!-- 대사관리 임시코드 START -->
	<!-- 대사관리 - 결제수단코드 -->
	<select id="selectSetlMeanCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT '01' AS value
			 , '즉시이체' AS name1
			 , '즉시이체' AS name
		  FROM DUAL
		UNION ALL
		SELECT '02' AS value
			 , '가상계좌' AS name1
			 , '가상계좌송금' AS name
		  FROM DUAL
		UNION ALL
		SELECT '03' AS value
			 , '신용카드' AS name1
			 , '신용카드' AS name
		  FROM DUAL
		UNION ALL
		SELECT '04' AS value
			 , '휴대폰결제' AS name1
			 , '휴대폰결제' AS name
		  FROM DUAL
		UNION ALL
		SELECT '05' AS value
			 , '간편결제' AS name1
			 , '간편결제' AS name
		  FROM DUAL
		UNION ALL
		SELECT '06' AS value
			 , 'OK캐시백' AS name1
			 , 'OK캐시백' AS name
		  FROM DUAL
	</select>
	<!-- 대사관리 - 검색항목구분코드 -->
	<select id="searchTermList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="setlMeanCd" compareValue="01">
		SELECT '01' AS value, '이니시스계좌이체' AS name FROM DUAL
		UNION ALL
		SELECT '02' AS value, '우체국계좌이체' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="02">
		SELECT '04' AS value, '송금일자별' AS name FROM DUAL
		UNION ALL
		SELECT '03' AS value, '주문일자별' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="03">
		SELECT '05' AS value, '국내(ePost)' AS name FROM DUAL
		UNION ALL
		SELECT '06' AS value, '국내(창구)' AS name FROM DUAL
		UNION ALL
		SELECT '07' AS value, '해외(ePost)' AS name FROM DUAL
		</isEqual>
	</select>
	<!-- 대사관리 - 리스트구분코드 -->
	<select id="searchListSeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<isEqual property="setlMeanCd" compareValue="01"><!-- 즉시이체 -->
		SELECT 'L1' AS value, '이체결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L2' AS value, '승인취소 결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L3' AS value, '정산요청' AS name FROM DUAL
		UNION ALL
		SELECT 'L4' AS value, '정산요청결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L5' AS value, '정산후매입취소' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '즉시이체 누락요청' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '즉시이체 누락완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '즉시이체 대사리스트' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="02">	<!-- 가상계좌 -->
		SELECT 'L2' AS value, '가상계좌 송금완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'L1' AS value, '가상계좌 송금예정 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '가상계좌 누락 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '가상계좌 누락완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '가상계좌 대사 리스트' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="03">	<!-- 신용카드 -->
		SELECT 'L1' AS value, '승인결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L2' AS value, '승인취소 결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L3' AS value, '정산요청' AS name FROM DUAL
		UNION ALL
		SELECT 'L4' AS value, '정산요청결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L5' AS value, '정산후매입취소 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '신용카드 누락 요청리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '신용카드 누락 요청완료리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '신용카드 대사 리스트' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="04"> <!-- 휴대폰결제 -->
		SELECT 'L1' AS value, '승인결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L2' AS value, '승인취소 요청결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L3' AS value, '정산 요청' AS name FROM DUAL
		UNION ALL
		SELECT 'L4' AS value, '정산 요청 결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L5' AS value, '정산후매입취소 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '승인 누락요청' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '승인누락 완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '대사리스트 결과보기' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="05">
		SELECT 'L1' AS value, '승인결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L2' AS value, '승인취소 요청결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L3' AS value, '정산 요청' AS name FROM DUAL
		UNION ALL
		SELECT 'L4' AS value, '정산 요청 결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L5' AS value, '정산후매입취소 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '승인 누락요청' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '승인누락 완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '대사리스트 결과보기' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="06">
		SELECT 'L1' AS value, '승인결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L2' AS value, '승인취소 요청결과 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L3' AS value, '정산 요청' AS name FROM DUAL
		UNION ALL
		SELECT 'L4' AS value, '정산 요청 결과보기' AS name FROM DUAL
		UNION ALL
		SELECT 'L5' AS value, '정산후매입취소 보기' AS name FROM DUAL
		UNION ALL
		SELECT 'OV' AS value, '승인 누락요청' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '승인누락 완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '대사리스트 결과보기' AS name FROM DUAL
		</isEqual>
		<isEmpty property="setlMeanCd">
		SELECT 'OV' AS value, '승인 누락요청' AS name FROM DUAL
		UNION ALL
		SELECT 'CP' AS value, '승인누락 완료 리스트' AS name FROM DUAL
		UNION ALL
		SELECT 'CI' AS value, '대사리스트 결과보기' AS name FROM DUAL
		</isEmpty>
	</select>
	<!-- 대사관리 - 상세검색구분코드 -->
	<select id="searchTypeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT '01' AS value, '회원ID' AS name FROM DUAL
		UNION ALL
		SELECT '02' AS value, '고객성명' AS name FROM DUAL
		UNION ALL
		SELECT '03' AS value, '주문번호' AS name FROM DUAL
		<isEqual property="setlMeanCd" compareValue="02">
		UNION ALL
		SELECT '04' AS value, '실송금인명' AS name FROM DUAL
		UNION ALL
		SELECT '05' AS value, '실송금금액' AS name FROM DUAL
		</isEqual>
		<isEqual property="setlMeanCd" compareValue="03">
		UNION ALL
		SELECT '06' AS value, '승인번호' AS name FROM DUAL
		</isEqual>
	</select>
	<!-- 대사관리 임시코드 END -->

	<!-- 대사관리 - 결제수단별 분기 include -->
	<sql id="cmpnspSetlMean">
		 	 (
		 		SELECT A.ORDER_ID
						, MAX(A.ORDER_DATE)  ORDER_DATE
						, SETL_MEAN_CD
						, SUM((B.DC_APPLY_PRC + NVL(B.OPTN_GOODS_APPLY_PRC,0) + NVL(B.SEND_PRC,0)) - (NVL(B.PREMI_CUST_PNT_SETL_AMT,0) + NVL(B.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (NVL(B.PNT_USE_AMT,0) + NVL(B.PNT_REFUND_SETL_AMT, 0)) - B.CPN_DC_AMT - NVL(B.OKCASH_USE_AMT,0)) AS ITM_AMOUNT
				   FROM
				   OD_ORDER_MAST A,
				   OD_ORDER_ITM B
				   WHERE A.ORDER_ID = B.ORDER_ID
				   AND B.ORDER_STUS_CD IN ('D02','D03','D04','O02','O04') /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
					<isEqual property="searchSetlMeanCd" compareValue="01">
						   AND EXISTS (SELECT 1 FROM OD_BANKTOWN_ORIGIN C WHERE A.ORDER_ID = C.ORDER_ID
									AND C.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt#
									AND C.AUTH_TIME = 'Y'
							)
						   AND A.SETL_MEAN_CD IN ('05','06','16')

						<isNotEmpty property="searchTerm01"> /* 우체국 금융여부 */
						   AND A.PO_FNC_YN = #searchTerm01#
						</isNotEmpty>
					</isEqual>
					<isEqual property="searchSetlMeanCd" compareValue="02">
							  AND EXISTS (SELECT 1 FROM OD_BANKTOWN_ORIGIN C WHERE A.ORDER_ID = C.ORDER_ID
										   AND C.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt# /* 송금일자별 */
										   AND C.BILLTO_NAME = 'Y'
								)
							   AND A.SETL_MEAN_CD ='01'
					</isEqual>
					<isEqual property="searchSetlMeanCd" compareValue="03">
							AND EXISTS (SELECT 1 FROM OD_KICC_CREDIT_ORIGIN C WHERE A.ORDER_ID = C.ORDER_ID
									AND C.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '999999'
							)
							<isNotEmpty property="searchCardSe"> /* 카드사별 */
						   		AND EXISTS (SELECT 1 FROM OD_CREDIT_CARD_SETL_INFO WHERE ORDER_ID = A.ORDER_ID AND SETL_SEQ = A.SETL_SEQ AND ACQUIRE_CODE = #searchCardSe#)
							</isNotEmpty>
							<isEmpty property="searchTerm"> /* 전체 */
				   				AND A.SETL_MEAN_CD IN ('02', '03', '04','16','08')
				   			</isEmpty>
							<isEqual property="searchTerm" compareValue="05"> /* 국내(ePost) */
								AND A.SETL_MEAN_CD IN ('02','16','08')
							</isEqual>
							<isEqual property="searchTerm" compareValue="06"> /* 국내(창구) */
								AND A.SETL_MEAN_CD IN ('04','16')
							</isEqual>
							<isEqual property="searchTerm" compareValue="07"> /* 해외(ePost) */
								AND A.SETL_MEAN_CD IN ('03','16')
							</isEqual>
					</isEqual>
					<isEqual property="searchSetlMeanCd" compareValue="06">
					</isEqual>
					<isNotEmpty property="searchPavlnDivCd" >
						AND A.SITE_DIV_CD = #searchPavlnDivCd#
					</isNotEmpty>
				   GROUP BY A.ORDER_ID , SETL_MEAN_CD
			   ) B
		 WHERE A.ORDER_ID = B.ORDER_ID(+)
		 <isEqual property="searchListSe" compareValue="CI">
			 <isEqual property="searchSetlMeanCd" compareValue="01">
			 AND A.ORDER_ID = INFO.ORDER_ID(+)
			 </isEqual>
			 <isEqual property="searchSetlMeanCd" compareValue="03">
			 AND A.ORDER_ID = INFO.ORDER_ID(+)
			 AND A.APPROVAL_NO = INFO.APPROVAL_NO(+)
			 AND A.BIGO3 = INFO.RESERVED2(+)
			 </isEqual>
		 </isEqual>
		 	<isEqual property="searchListSe" compareValue="CP"> /* 승인상태 : 처리완료 */
				AND A.RESULT IN ('Z')
			</isEqual>
			<isNotEqual property="searchListSe" compareValue="CP"> /* 승인상태 : 누락, 중복 */
			   AND A.RESULT IN ('E','F')
			</isNotEqual>
			<isEqual property="searchSetlMeanCd" compareValue="01">
				 AND A.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt#
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="02">
				 AND A.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt#
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="03">
				 AND A.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '999999'
			</isEqual>
			<isNotEmpty property="searchText"> /* 상세검색 */
			<isEmpty property="searchType"> /* 전체 */
			   AND (EXISTS (SELECT 1 FROM OD_ORDER_MAST WHERE ORDER_ID = A.ORDER_ID AND ACCESS_NAME LIKE '%'||#searchText#||'%')
					OR EXISTS (SELECT 1 FROM OD_ORDER_MAST C, MEMINFO D WHERE C.ORDER_ID = A.ORDER_ID AND D.ACCESS_NAME = C.ACCESS_NAME AND NAME LIKE '%'||#searchText#||'%')
					OR A.ORDER_ID LIKE '%'||#searchText#||'%'
				<isEqual property="searchSetlMeanCd" compareValue="02">
					OR A.REALBANKNAME LIKE '%'||#searchText#||'%'
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="03">
					OR A.APPROVAL_NO LIKE '%'||#searchText#||'%'
				</isEqual>
				   )
			</isEmpty>
			<isEqual property="searchType" compareValue="01"> /* 회원ID */
			   AND EXISTS (SELECT 1 FROM OD_ORDER_MAST WHERE ORDER_ID = A.ORDER_ID AND ACCESS_NAME LIKE '%'||#searchText#||'%')
			</isEqual>
			<isEqual property="searchType" compareValue="02"> /* 고객성명 */
			   AND EXISTS (SELECT 1 FROM OD_ORDER_MAST C, MEMINFO D WHERE C.ORDER_ID = A.ORDER_ID AND D.ACCESS_NAME = C.ACCESS_NAME AND NAME LIKE '%'||#searchText#||'%')
			</isEqual>
			<isEqual property="searchType" compareValue="03"> /* 주문번호 */
			   AND A.ORDER_ID LIKE '%'||#searchText#||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="04"> /* 실송금인명 */
			   AND A.REALBANKNAME LIKE '%'||#searchText#||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="06"> /* 승인번호 */
			   AND A.APPROVAL_NO LIKE '%'||#searchText#||'%'
			</isEqual>
		</isNotEmpty>

	</sql>

	<!-- 대사관리 - 누락요청 건수 요약 -->
	<select id="selectOvsiteCntList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT '01' VALUE, '즉시이체 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_BANKTOWN_ORIGIN A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+)
		   AND A.RESULT IN ('E','F') AND A.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt# AND A.AUTH_TIME = 'Y'
		UNION ALL
		SELECT '02' VALUE, '가상계좌 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_ONLINE_PAYMENT A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+) /* AND A.RESULT IN ('E','F') */
			   AND EXISTS (SELECT 1 FROM OD_ORDER_MAST WHERE ORDER_ID = A.ORDER_ID AND TO_CHAR(ORDER_DATE,'YYYYMMDD') BETWEEN #searchFromDt# AND #searchToDt#)
		UNION ALL
		SELECT '03' VALUE, '신용카드 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_KICC_CREDIT_ORIGIN A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+)
		   AND A.RESULT IN ('E','F') AND A.APPROVAL_TIME BETWEEN #searchFromDt# AND #searchToDt#
		UNION ALL
		SELECT '04' VALUE, '휴대폰결제 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_MOBILE_PAYMENT_ORIGIN A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+)
		   AND A.RESULT IN ('E','F') AND A.APPTIME BETWEEN #searchFromDt# AND #searchToDt#
		UNION ALL
		SELECT '05' VALUE, '간편결제 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_BANKTOWN_ORIGIN A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+)
		   AND A.RESULT IN ('E','F') AND A.AUTH_DATE BETWEEN #searchFromDt# AND #searchToDt# AND A.AUTH_TIME = 'Y'
		UNION ALL
		SELECT '06' VALUE, 'OK캐시백 누락요청' NAME, COUNT(*) TOTCNT
		  FROM OD_OKCASH_PAYMENT_ORIGIN A,OD_ORDER_MAST B,OD_ORDER_SETL C
		 WHERE A.ORDER_ID = B.ORDER_ID AND A.ORDER_ID = C.ORDER_ID(+) AND A.SETL_SEQ = C.SETL_SEQ(+)
		   AND A.RESULT IN ('E','F') AND A.APPTIME BETWEEN #searchFromDt# AND #searchToDt#
	</select>

	<!-- 대사관리 - 누락요청/완료 리스트 카운트 -->
	<select id="selectOvsiteListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT /* selectOvsiteListCnt */ COUNT(*) TOTCNT
		FROM
		(
		   <isEqual property="searchSetlMeanCd" compareValue="01">
			SELECT A.AUTH_DATE
				  ,B.ORDER_DATE
			  FROM OD_BANKTOWN_ORIGIN A,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="02">
			SELECT A.AUTH_DATE AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_BANKTOWN_ORIGIN A,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="03">
			SELECT A.APPROVAL_TIME AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_KICC_CREDIT_ORIGIN A,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="04">
			SELECT A.APPTIME AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_MOBILE_PAYMENT_ORIGIN A,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="06">
			SELECT A.APPTIME AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_OKCASH_PAYMENT_ORIGIN A,
			</isEqual>
		<include refid="cmpnspSetlMean"/> /* 결제수단 */
		)T1 WHERE 1=1
	</select>
	<!-- 대사관리 - 누락요청/완료 리스트 -->
	<select id="selectOvsiteList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /*selectOvsiteList*/ T2.ONUM
			  ,T2.ORDER_ID
			  ,T2.TERMINAL_ID
			  ,T2.KICCGBN
			  ,T2.SETL_SEQ
			  ,T2.AUTH_DATE
			  ,T2.RESULT_CD
			  ,T2.RESULT
			  ,T2.RESULT_DAY
			  ,T2.PRICE
			  ,T2.SHOP_AMT
			  ,T2.SETL_MEAN_CD
		  FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY T1.AUTH_DATE DESC, T1.ORDER_ID, T1.SETL_SEQ) AS ONUM
				  ,ROW_NUMBER() OVER(ORDER BY TNUM DESC) AS RNUM
				  ,T1.ORDER_ID
				  ,T1.TERMINAL_ID
				  ,T1.KICCGBN
				  ,T1.SETL_SEQ
				  ,T1.AUTH_DATE
				  ,T1.RESULT_CD
				  ,T1.RESULT
				  ,T1.RESULT_DAY
				  ,T1.PRICE
				  ,T1.SHOP_AMT
				  ,T1.SETL_MEAN_CD
			  FROM (
				SELECT
				<isEqual property="searchSetlMeanCd" compareValue="01"> /* 즉시이체 */
					   ROW_NUMBER() OVER(ORDER BY A.AUTH_DATE DESC, A.ORDER_ID, A.SETL_SEQ) AS TNUM
					  ,A.ORDER_ID
					  ,B.ORDER_DATE
					  ,'' TERMINAL_ID
					  ,'' KICCGBN
					  ,A.SETL_SEQ
					  ,A.AUTH_DATE
					  ,A.RESULT RESULT_CD
					  ,DECODE(A.RESULT,'E','주문누락','F','결제중복','Z','처리완료','정상') RESULT
					  ,CASE WHEN A.RESULT_DAY IS NOT NULL THEN
								SUBSTR(A.RESULT_DAY,1,8)
							ELSE '' END	RESULT_DAY
					  ,NVL(A.PRICE,0) PRICE
					  ,NVL(B.ITM_AMOUNT,0) SHOP_AMT
					  ,B.SETL_MEAN_CD
				  FROM OD_BANKTOWN_ORIGIN A,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="02"> /* 가상계좌송금 */
					   ROW_NUMBER() OVER(ORDER BY A.AUTH_DATE DESC, A.ORDER_ID, A.SETL_SEQ) AS TNUM
					  ,A.ORDER_ID
					  ,B.ORDER_DATE
					  ,'' TERMINAL_ID
					  ,'' KICCGBN
					  ,A.SETL_SEQ
					  ,A.AUTH_DATE AUTH_DATE
					  ,TO_CHAR(A.RESULT) RESULT_CD
					  ,DECODE(A.RESULT,'E','주문누락','F','결제중복','Z','처리완료','정상') RESULT
					  ,CASE WHEN A.RESULT_DAY IS NOT NULL THEN
								SUBSTR(A.RESULT_DAY,1,8)
							ELSE '' END	RESULT_DAY
					  ,NVL(A.TOTAL_AMOUNT,0) PRICE
					  ,NVL(B.ITM_AMOUNT,0) SHOP_AMT
					  ,B.SETL_MEAN_CD
				  FROM OD_BANKTOWN_ORIGIN A,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="03"> /* 신용카드 */
					   ROW_NUMBER() OVER(ORDER BY A.APPROVAL_TIME DESC, A.ORDER_ID, A.SETL_SEQ) AS TNUM
					  ,A.ORDER_ID
					  ,B.ORDER_DATE
					  ,A.TERMINAL_ID
					  ,DECODE(A.BIGO4,'001','KICC','002','KSNET','KCP') KICCGBN
					  ,A.SETL_SEQ
					  ,A.APPROVAL_TIME AUTH_DATE
					  ,TO_CHAR(A.RESULT) RESULT_CD
					  ,DECODE(A.RESULT,'E','주문누락','F','결제중복','Z','처리완료','정상') RESULT
					  ,CASE WHEN A.RESULT_DAY IS NOT NULL THEN
								SUBSTR(A.RESULT_DAY,1,8)
							ELSE '' END	RESULT_DAY
					  ,NVL(A.TOTAL_AMOUNT,0) PRICE
					  ,NVL(B.ITM_AMOUNT,0) SHOP_AMT
					  ,B.SETL_MEAN_CD
				  FROM OD_KICC_CREDIT_ORIGIN A,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="04"> /* 휴대폰결제 */
					   ROW_NUMBER() OVER(ORDER BY A.APPTIME DESC, A.ORDER_ID, A.SETL_SEQ) AS TNUM
					  ,A.ORDER_ID
					  ,B.ORDER_DATE
					  ,'' TERMINAL_ID
					  ,'' KICCGBN
					  ,A.SETL_SEQ
					  ,A.APPTIME AUTH_DATE
					  ,TO_CHAR(A.RESULT) RESULT_CD
					  ,DECODE(A.RESULT,'E','주문누락','F','결제중복','Z','처리완료','정상') RESULT
					  ,CASE WHEN A.RESULT_DAY IS NOT NULL THEN
								SUBSTR(A.RESULT_DAY,1,8)
							ELSE '' END	RESULT_DAY
					  ,NVL(A.AMOUNT,0) PRICE
					  ,NVL(B.ITM_AMOUNT,0) SHOP_AMT
					  ,B.SETL_MEAN_CD
				  FROM OD_MOBILE_PAYMENT_ORIGIN A,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="06"> /* OK캐시백 */
					   ROW_NUMBER() OVER(ORDER BY A.APPTIME DESC, A.ORDER_ID, A.SETL_SEQ) AS TNUM
					  ,A.ORDER_ID
					  ,B.ORDER_DATE
					  ,'' TERMINAL_ID
					  ,'' KICCGBN
					  ,A.SETL_SEQ
					  ,A.APPTIME AUTH_DATE
					  ,TO_CHAR(A.RESULT) RESULT_CD
					  ,DECODE(A.RESULT,'E','주문누락','F','결제중복','Z','처리완료','정상') RESULT
					  ,CASE WHEN A.RESULT_DAY IS NOT NULL THEN
								SUBSTR(A.RESULT_DAY,1,8)
							ELSE '' END	RESULT_DAY
					  ,NVL(A.AMOUNT,0) PRICE
					  ,NVL(B.ITM_AMOUNT,0) SHOP_AMT
					  ,B.SETL_MEAN_CD
				  FROM OD_OKCASH_PAYMENT_ORIGIN A,
				</isEqual>
				<include refid="cmpnspSetlMean"/> /* 결제수단 */

				<isEmpty property="searchSetlMeanCd">
				 ORDER BY A.AUTH_DATE DESC
				</isEmpty>
				<isEqual property="searchSetlMeanCd" compareValue="01">
				 ORDER BY A.AUTH_DATE DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="02">
				 ORDER BY A.AUTH_DATE DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="03">
				 ORDER BY A.APPROVAL_TIME DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="04">
				 ORDER BY A.APPTIME DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="06">
				 ORDER BY A.APPTIME DESC
				</isEqual>
				) T1
			WHERE 1=1
		) T2
	   WHERE 1=1
		<isNotNull property="firstIndex">
			<isNotNull property="lastIndex">
				AND T2.ONUM BETWEEN #firstIndex# AND #lastIndex#
			</isNotNull>
		</isNotNull>
		<isEmpty property="sidx">
			ORDER BY T2.RNUM DESC
		</isEmpty>
	</select>
	<!-- 대사관리 - 누락요청/완료 리스트 합계 -->
	<select id="selectOvsiteSummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /* selectOvsiteSummary */ *
		FROM
		(SELECT
		<isEqual property="searchSetlMeanCd" compareValue="01">
				MAX(AUTH_DATE) || '000000' AUTH_DATE
			   ,SUM(NVL(A.PRICE,0)) PRICE_SUM
			   ,SUM(NVL(B.ITM_AMOUNT,0)) SHOP_AMT_SUM
		  FROM OD_BANKTOWN_ORIGIN A,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="02">
				MAX(AUTH_DATE) || '000000' AUTH_DATE
			   ,SUM(NVL(A.PRICE,0)) PRICE_SUM
			   ,SUM(NVL(B.ITM_AMOUNT,0)) SHOP_AMT_SUM
		  FROM OD_BANKTOWN_ORIGIN A,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="03">
				MAX(APPROVAL_TIME) AUTH_DATE
			   ,SUM(NVL(A.TOTAL_AMOUNT,0)) PRICE_SUM
			   ,SUM(NVL(B.ITM_AMOUNT,0)) SHOP_AMT_SUM
		  FROM OD_KICC_CREDIT_ORIGIN A,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="04">
		   		MAX(APPTIME)|| '000000' AUTH_DATE
			   ,SUM(NVL(A.AMOUNT,0)) PRICE_SUM
			   ,SUM(NVL(B.ITM_AMOUNT,0)) SHOP_AMT_SUM
		  FROM OD_MOBILE_PAYMENT_ORIGIN A,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="06">
				MAX(APPTIME) || '000000' AUTH_DATE
			   ,SUM(NVL(A.AMOUNT,0)) PRICE_SUM
			   ,SUM(NVL(B.ITM_AMOUNT,0)) SHOP_AMT_SUM
		  FROM OD_OKCASH_PAYMENT_ORIGIN A,
		</isEqual>
		<include refid="cmpnspSetlMean"/> /* 결제수단 */
		)T1 WHERE 1=1
	</select>

	<!-- 대사관리 - 대사 리스트 카운트 -->
	<select id="selectCmpnspListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT /*selectCmpnspListCnt*/ COUNT(*) TOTCNT
		  FROM (
			<isEqual property="searchSetlMeanCd" compareValue="01">
			SELECT  A.AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="02">
			SELECT A.AUTH_DATE AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="03">
			SELECT A.APPROVAL_TIME AUTH_DATE
				  ,B.ORDER_DATE
			  FROM OD_KICC_CREDIT_ORIGIN A, OD_CREDIT_CARD_SETL_INFO INFO,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="04">
			SELECT A.APPTIME AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_MOBILE_PAYMENT_ORIGIN A,
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="06">
			SELECT A.APPTIME AUTH_DATE
				   ,B.ORDER_DATE
			  FROM OD_OKCASH_PAYMENT_ORIGIN A,
			</isEqual>
			<include refid="cmpnspSetlMean"/> /* 결제수단 */
			<isEmpty property="searchSetlMeanCd">
			 GROUP BY A.AUTH_DATE,B.ORDER_DATE
			</isEmpty>
			<isEqual property="searchSetlMeanCd" compareValue="01">
			 GROUP BY A.AUTH_DATE,B.ORDER_DATE
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="02">
			 GROUP BY A.AUTH_DATE,B.ORDER_DATE
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="03">
			 GROUP BY A.APPROVAL_TIME,B.ORDER_DATE
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="04">
			 GROUP BY A.APPTIME,B.ORDER_DATE
			</isEqual>
			<isEqual property="searchSetlMeanCd" compareValue="06">
			 GROUP BY A.APPTIME,B.ORDER_DATE
			</isEqual>
			) T1
			WHERE 1=1
	</select>
	<!-- 대사관리 - 대사 리스트 -->
	<select id="selectCmpnspList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /* selectCmpnspList */ T2.AUTH_DATE
			  ,T2.CNT
			  ,T2.AMT
			  ,T2.ERR_ECNT
			  ,T2.ERR_EAMT
			  ,T2.ERR_FCNT
			  ,T2.ERR_FAMT
			  ,T2.ERR_ZCNT
			  ,T2.ERR_ZAMT
			  ,T2.SHOP_CNT
			  ,T2.SHOP_AMT
		  FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY T1.AUTH_DATE DESC) AS TNUM
				  ,T1.AUTH_DATE
				  ,T1.CNT
				  ,T1.AMT
				  ,T1.ERR_ECNT
				  ,T1.ERR_EAMT
				  ,T1.ERR_FCNT
				  ,T1.ERR_FAMT
				  ,T1.ERR_ZCNT
				  ,T1.ERR_ZAMT
				  ,T1.SHOP_CNT
				  ,T1.SHOP_AMT
			  FROM (
				SELECT
				<isEqual property="searchSetlMeanCd" compareValue="01">
					   A.AUTH_DATE AUTH_DATE
					  ,COUNT(A.AUTH_DATE) CNT
					  ,SUM(DECODE(INFO.RESULT,0,NVL(A.PRICE,0),1,NVL(A.PRICE,0),A.PRICE)) - SUM(DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE)) AMT
					  ,SUM(DECODE(A.RESULT,'E',1,0))			   ERR_ECNT
					  ,SUM(DECODE(A.RESULT,'E',NVL(A.PRICE,0),0)) ERR_EAMT
					  ,SUM(DECODE(A.RESULT,'F',1,0))			   ERR_FCNT
					  ,SUM(DECODE(A.RESULT,'F',NVL(A.PRICE,0),0))  ERR_FAMT
					  ,SUM(DECODE(A.RESULT,'Z',1,0))			   ERR_ZCNT
					  ,SUM(DECODE(A.RESULT,'Z',DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE),0))  ERR_ZAMT
					  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT
					  ,SUM(ITM_AMOUNT) SHOP_AMT
				  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="02">
					   A.AUTH_DATE AUTH_DATE
					  ,COUNT(A.AUTH_DATE) CNT
					  ,SUM(DECODE(INFO.RESULT,0,NVL(A.PRICE,0),1,NVL(A.PRICE,0),A.PRICE)) - SUM(DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE)) AMT
					  ,SUM(DECODE(A.RESULT,'E',1,0))			   ERR_ECNT
					  ,SUM(DECODE(A.RESULT,'E',NVL(A.PRICE,0),0)) ERR_EAMT
					  ,SUM(DECODE(A.RESULT,'F',1,0))			   ERR_FCNT
					  ,SUM(DECODE(A.RESULT,'F',NVL(A.PRICE,0),0))  ERR_FAMT
					  ,SUM(DECODE(A.RESULT,'Z',1,0))			   ERR_ZCNT
					  ,SUM(DECODE(A.RESULT,'Z',DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE),0))  ERR_ZAMT
					  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT
					  ,SUM(ITM_AMOUNT) SHOP_AMT
				  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="03">
					   A.APPROVAL_TIME AUTH_DATE
					  ,COUNT(A.APPROVAL_TIME) CNT
					  ,SUM(DECODE(INFO.STATUS,'D1',NVL(A.TOTAL_AMOUNT,0),'S1',NVL(A.TOTAL_AMOUNT,0),0)) - SUM(DECODE(INFO.STATUS,'D2',NVL(A.TOTAL_AMOUNT,0),'S2',NVL(A.TOTAL_AMOUNT,0),0)) AMT
					  ,SUM(DECODE(A.RESULT,'E',1,0))			   ERR_ECNT
					  ,SUM(DECODE(A.RESULT,'E',NVL(A.TOTAL_AMOUNT,0),0)) ERR_EAMT
					  ,SUM(DECODE(A.RESULT,'F',1,0))			   ERR_FCNT
					  ,SUM(DECODE(A.RESULT,'F',NVL(A.TOTAL_AMOUNT,0),0))  ERR_FAMT
					  ,SUM(DECODE(A.RESULT,'Z',1,0))			   ERR_ZCNT
					  ,SUM(DECODE(A.RESULT,'Z',NVL(A.TOTAL_AMOUNT,0),0))  ERR_ZAMT
					  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT
					  ,SUM(ITM_AMOUNT) SHOP_AMT
				  FROM OD_KICC_CREDIT_ORIGIN A, OD_CREDIT_CARD_SETL_INFO INFO,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="04">
					   A.APPTIME AUTH_DATE
					  ,COUNT(A.APPTIME) CNT
					  ,SUM(DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0)) AMT
					  ,SUM(DECODE(A.RESULT,'E',1,0))			   ERR_ECNT
					  ,SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)) ERR_EAMT
					  ,SUM(DECODE(A.RESULT,'F',1,0))			   ERR_FCNT
					  ,SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0))  ERR_FAMT
					  ,SUM(DECODE(A.RESULT,'Z',1,0))			   ERR_ZCNT
					  ,SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0))  ERR_ZAMT
					  ,COUNT(DISTINCT C.ORDER_ID) SHOP_CNT
					  ,SUM(DECODE(C.SETL_STUS_CD,'03',NVL(C.SETL_APPR_AMT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'07',NVL(C.SETL_APPR_AMT,0),'08',NVL(C.SETL_APPR_AMT,0),'09',NVL(C.SETL_APPR_AMT,0),0)) SHOP_AMT
				  FROM OD_MOBILE_PAYMENT_ORIGIN A,
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="06">
					   A.APPTIME AUTH_DATE
					  ,COUNT(A.APPTIME) CNT
					  ,SUM(DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0)) AMT
					  ,SUM(DECODE(A.RESULT,'E',1,0))			   ERR_ECNT
					  ,SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)) ERR_EAMT
					  ,SUM(DECODE(A.RESULT,'F',1,0))			   ERR_FCNT
					  ,SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0))  ERR_FAMT
					  ,SUM(DECODE(A.RESULT,'Z',1,0))			   ERR_ZCNT
					  ,SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0))  ERR_ZAMT
					  ,COUNT(DISTINCT C.ORDER_ID) SHOP_CNT
					  ,SUM(DECODE(C.SETL_STUS_CD,'03',NVL(C.SETL_APPR_AMT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'07',NVL(C.SETL_APPR_AMT,0),'08',NVL(C.SETL_APPR_AMT,0),'09',NVL(C.SETL_APPR_AMT,0),0)) SHOP_AMT
				  FROM OD_OKCASH_PAYMENT_ORIGIN A,
				</isEqual>
				<include refid="cmpnspSetlMean"/> /* 결제수단 */
				<isEmpty property="searchSetlMeanCd">
				 GROUP BY A.AUTH_DATE
				 ORDER BY A.AUTH_DATE DESC
				</isEmpty>
				<isEqual property="searchSetlMeanCd" compareValue="01">
				 GROUP BY A.AUTH_DATE
				 ORDER BY A.AUTH_DATE DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="02">
				 GROUP BY A.DEPOT_TREAT_YMD
				 ORDER BY A.DEPOT_TREAT_YMD DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="03">
				 GROUP BY A.APPROVAL_TIME
				 ORDER BY A.APPROVAL_TIME DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="04">
				 GROUP BY A.APPTIME
				 ORDER BY A.APPTIME DESC
				</isEqual>
				<isEqual property="searchSetlMeanCd" compareValue="06">
				 GROUP BY A.APPTIME
				 ORDER BY A.APPTIME DESC
				</isEqual>
				) T1
			WHERE 1=1
		) T2
	   WHERE 1=1
		<isNotNull property="firstIndex">
			<isNotNull property="lastIndex">
				AND T2.TNUM BETWEEN #firstIndex# AND #lastIndex#
			</isNotNull>
		</isNotNull>
		<isEmpty property="sidx">
			ORDER BY T2.TNUM DESC
		</isEmpty>
	</select>
	<!-- 대사관리 - 대사 리스트 합계 -->
	<select id="selectCmpnspSummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /*selectCmpnspSummary*/ *
		FROM
		(SELECT
		<isEqual property="searchSetlMeanCd" compareValue="01">
			   COUNT(A.AUTH_DATE) CNT_SUM
			  ,NVL(SUM(DECODE(INFO.RESULT,0,NVL(A.PRICE,0),1,NVL(A.PRICE,0),A.PRICE)) - SUM(DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE)),0) AMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',1,0)),0)			   ERR_ECNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',NVL(A.PRICE,0),0)) ,0) ERR_EAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',1,0)),0)			   ERR_FCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',NVL(A.PRICE,0),0)) ,0) ERR_FAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',1,0)),0)			   ERR_ZCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',NVL(A.PRICE,0),0)) ,0) ERR_ZAMT_SUM
			  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT_SUM
			  ,NVL(SUM(ITM_AMOUNT),0) SHOP_AMT_SUM
		  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="02">
			   COUNT(A.AUTH_DATE) CNT_SUM
			  ,NVL(SUM(DECODE(INFO.RESULT,0,NVL(A.PRICE,0),1,NVL(A.PRICE,0),A.PRICE)) - SUM(DECODE(INFO.RESULT,9,NVL(A.PRICE,0),8,NVL(A.PRICE,0),A.PRICE)),0) AMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',1,0)),0)			   ERR_ECNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',NVL(A.PRICE,0),0)) ,0) ERR_EAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',1,0)),0)			   ERR_FCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',NVL(A.PRICE,0),0)) ,0) ERR_FAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',1,0)),0)			   ERR_ZCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',NVL(A.PRICE,0),0)) ,0) ERR_ZAMT_SUM
			  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT_SUM
			  ,NVL(SUM(ITM_AMOUNT),0) SHOP_AMT_SUM
		  FROM OD_BANKTOWN_ORIGIN A, OD_BANKTOWN INFO,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="03">
			   COUNT(A.APPROVAL_TIME) CNT_SUM
			  ,NVL(SUM(DECODE(INFO.STATUS,'D1',NVL(A.TOTAL_AMOUNT,0),'S1',NVL(A.TOTAL_AMOUNT,0),0)) - SUM(DECODE(INFO.STATUS,'D2',NVL(A.TOTAL_AMOUNT,0),'S2',NVL(A.TOTAL_AMOUNT,0),0)),0) AMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',1,0)),0)			   ERR_ECNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',NVL(A.TOTAL_AMOUNT,0),0)),0) ERR_EAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',1,0)),0)			   ERR_FCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',NVL(A.TOTAL_AMOUNT,0),0)),0) ERR_FAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',1,0)),0)			   ERR_ZCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',NVL(A.TOTAL_AMOUNT,0),0)),0) ERR_ZAMT_SUM
			  ,COUNT(DISTINCT B.ORDER_ID) SHOP_CNT_SUM
			  ,NVL(SUM(ITM_AMOUNT),0) SHOP_AMT_SUM
		  FROM OD_KICC_CREDIT_ORIGIN A, OD_CREDIT_CARD_SETL_INFO INFO,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="04">
			   COUNT(A.APPTIME) CNT_SUM
			  ,NVL(SUM(DECODE(C.SETL_STUS_CD,'01',NVL(A.AMOUNT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'02',NVL(A.AMOUNT,0),0)),0) AMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',1,0)),0)			   ERR_ECNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_EAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',1,0)),0)			   ERR_FCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_FAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',1,0)),0)			   ERR_ZCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_ZAMT_SUM
			  ,COUNT(DISTINCT C.ORDER_ID) SHOP_CNT_SUM
			  ,NVL(SUM(DECODE(C.SETL_STUS_CD,'01',NVL(C.SETL_APPR_AMT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'02',NVL(C.SETL_APPR_AMT,0),0)),0) SHOP_AMT_SUM
		  FROM OD_MOBILE_PAYMENT_ORIGIN A,
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="06">
			   COUNT(A.APPTIME) CNT_SUM
			  ,NVL(SUM(DECODE(C.SETL_STUS_CD,'01',NVL(A.AMOUNT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'02',NVL(A.AMOUNT,0),0)),0) AMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',1,0)),0)			   ERR_ECNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'E',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_EAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',1,0)),0)			   ERR_FCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'F',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_FAMT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',1,0)),0)			   ERR_ZCNT_SUM
			  ,NVL(SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'03',NVL(A.AMOUNT,0),0),0)) - SUM(DECODE(A.RESULT,'Z',DECODE(C.SETL_STUS_CD,'07',NVL(A.AMOUNT,0),'08',NVL(A.AMOUNT,0),'09',NVL(A.AMOUNT,0),0),0)),0) ERR_ZAMT_SUM
			  ,COUNT(DISTINCT C.ORDER_ID) SHOP_CNT_SUM
			  ,NVL(SUM(DECODE(C.SETL_STUS_CD,'01',NVL(C.SETL_APPR_AMT,0),0)) - SUM(DECODE(C.SETL_STUS_CD,'02',NVL(C.SETL_APPR_AMT,0),0)),0) SHOP_AMT_SUM
		  FROM OD_OKCASH_PAYMENT_ORIGIN A,
		</isEqual>
		<include refid="cmpnspSetlMean"/> /* 결제수단 */
		<isEmpty property="searchSetlMeanCd">
		 ORDER BY A.AUTH_DATE DESC
		</isEmpty>
		<isEqual property="searchSetlMeanCd" compareValue="01">
		 ORDER BY A.AUTH_DATE DESC
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="02">
		 ORDER BY A.AUTH_DATE DESC
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="03">
		 ORDER BY A.APPROVAL_TIME DESC
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="04">
		 ORDER BY A.APPTIME DESC
		</isEqual>
		<isEqual property="searchSetlMeanCd" compareValue="06">
		 ORDER BY A.APPTIME DESC
		</isEqual>
		)T1 WHERE 1=1
	</select>

	<!-- 대사관리 - banktown 승인취소 승인정보 조회 -->
	<select id="selectCancelBankPostAppInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ID
			  ,NVL(AUTH_NUM,'') AUTH_NUM
			  ,NVL(PRICE,0) PRICE
			  ,RESULT ORG_STATUS
		  FROM OD_BANKTOWN
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ = '1'
		]]>
	</select>

	<!-- 대사관리 - banktown 오류처리 승인정보 조회 -->
	<select id="selectCancelBankPostAppErrInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ID
			  ,NVL(AUTH_NUM,'') AUTH_NUM
			  ,NVL(PRICE,0) PRICE
			  ,RESULT ORG_STATUS
		  FROM OD_BANKTOWN_ORIGIN
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ	= #setlSeq#

		]]>
	</select>

	<!-- 대사관리 - banktown 오류처리 상태변경 -->
	<update id="updateCancelBankTownOrigin" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE OD_BANKTOWN_ORIGIN
		   SET STATE  = 'Z',
			  ,RESULT = 'Z',
			  ,ACCESS_NAME = 'ADMIN',
			  ,RESULT_DAY = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ	= #setlSeq#

		]]>
	</update>

	<!-- 대사관리 - 간편결제 오류처리 상태변경 -->
	<update id="updateCancelEasypayOrigin" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE OD_KAKAO_PAYMENT_ORIGIN
		   SET AUTHCODE  = 'Z',
			  ,RESULT = 'Z',
			  ,ACCESS_NAME = 'ADMIN',
			  ,RESULT_DAY = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ	= #setlSeq#

		]]>
	</update>

	<!--신용카드 승인정보-->
	<select id="selectCancelKiccCreditInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT TERMINAL_ID
			  ,PG_DIV_CD
			  ,PG_ORDER_ID
			  ,RESERVED2 ORG_CONTROL_NO
			  ,APPROVAL_NO ORG_APP_NO
			  ,APPROVAL_TIME ORG_APP_DATE
			  ,TOTAL_AMOUNT AMOUNT
			  ,RESERVED1
			  ,RESERVED4
			  ,STATUS ORG_STATUS
		  FROM OD_CREDIT_CARD_SETL_INFO
		 WHERE ORDER_ID	= #orderId#
		   AND STATUS IN ('D1', 'S1')
		]]>
	</select>

	<!--신용카드 Origin정보-->
	<select id="selectCancelKiccCreditErrInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT TERMINAL_ID
			  ,PG_DIV_CD
			  ,PG_ORDER_ID
			  ,BIGO3 ORG_CONTROL_NO
			  ,APPROVAL_NO ORG_APP_NO
			  ,APPROVAL_TIME ORG_APP_DATE
			  ,TOTAL_AMOUNT AMOUNT
		  FROM OD_KICC_CREDIT_ORIGIN
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ	= #setlSeq#
		]]>
	</select>

	<!-- kicc/kcp 결제수단별 결제취소 -->
	<update id="insertCancelKiccCredit" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_CREDIT_CARD_SETL_INFO
			(
			 ORDER_ID
			,SETL_SEQ
			,STORE_ID
			,ORDER_DATE
			,PG_DIV_CD
			,PG_ORDER_ID
			,TERMINAL_ID
			,PMT_INSTRUCTION_ID
			,CARD_EXPIRE_YEAR
			,CARD_EXPIRE_MONTH
			,CARD_INSTALLMENT
			,TOTAL_AMOUNT
			,AUTH_TYPE
			,AUTH_DATA
			,CERTIFICATE_FLAG
			,EASYCASHCARD_NO
			,EASYCASHCARD_SNO
			,ECSUM_FLAG
			,SUBMIT_FLAG
			,APPROVAL_NO
			,APPROVAL_TIME
			,REPLY_CODE
			,SCREEN_MSG
			,ACQUIRE_CODE
			,ACQUIRE_NAME
			,CARD_ISSUER
			,MEMBER_NO
			,EASYCASH_BALANCE
			,STATUS
			,DELIVERED
			,DELIVERED_DATE
			,USER_NAME
			,USER_ID
			,RESERVED1
			,RESERVED2
			,RESERVED3
			,RESERVED4
			,RESERVED5
			,CARD_NO
			,DEPOT_STUS_CD
			,DEPOT_TREAT_YMD
			,BUYCOMPREQYMD
			,BUYCOMPRCVYMD
			,BUYCOMPRCVCD
			,BUYCOMPERRDESC
			,CARD_SEED_NO
			,REG_DATE
			,CHG_DATE
			,REGER_ID
			,CHGER_ID
			,CARD_OVERSEA_YN
			,BC_VOUCHER_YN
			,EP_USER_DEFINE1
			,CHK_CARD_YN
			,ONNURI_YN
			)
			SELECT A.ORDER_ID
				  ,B.SEQ + ROWNUM
				  ,#storeId#
				  ,A.ORDER_DATE
				  ,#pgDivCd#
				  ,#pgOrderId#
				  ,A.TERMINAL_ID
				  ,A.PMT_INSTRUCTION_ID
				  ,#cardExpireYear#
				  ,#cardExpireMonth#
				  ,A.CARD_INSTALLMENT
				  ,#totalAmount#
				  ,A.AUTH_TYPE
				  ,A.AUTH_DATA
				  ,A.CERTIFICATE_FLAG
				  ,A.EASYCASHCARD_NO
				  ,A.EASYCASHCARD_SNO
				  ,A.ECSUM_FLAG
				  ,#submitFlag#
				  ,A.APPROVAL_NO
				  ,#approvalTime#
				  ,#replyCode#
				  ,#screenMsg#
				  ,#acquireCode#
				  ,#acquireName#
				  ,#cardIssuer#
				  ,A.MEMBER_NO
				  ,A.EASYCASH_BALANCE
				  ,#status#
				  ,A.DELIVERED
				  ,A.DELIVERED_DATE
				  ,#userName#
				  ,A.USER_ID
				  ,#reserved1#
				  ,A.RESERVED2
				  ,#reserved3#
				  ,A.RESERVED4
				  ,A.RESERVED5
				  ,A.CARD_NO
				  ,A.DEPOT_STUS_CD
				  ,A.DEPOT_TREAT_YMD
				  ,A.BUYCOMPREQYMD
				  ,A.BUYCOMPRCVYMD
				  ,A.BUYCOMPRCVCD
				  ,A.BUYCOMPERRDESC
				  ,A.CARD_SEED_NO
				  ,SYSDATE
				  ,SYSDATE
				  ,#regerId#
				  ,#chgerId#
				  ,A.CARD_OVERSEA_YN
				  ,A.BC_VOUCHER_YN
				  ,A.EP_USER_DEFINE1
				  ,A.CHK_CARD_YN
				  ,A.ONNURI_YN
			  FROM OD_CREDIT_CARD_SETL_INFO A
				  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_CREDIT_CARD_SETL_INFO WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
			 WHERE A.ORDER_ID = B.ORDER_ID
			   AND A.ORDER_ID = #orderId#
			   AND A.PG_ORDER_ID = #org_cno#
			   AND A.STATUS IN ('D1','S1')
		]]>
	</update>

	<!-- 간편결제 정보 생성 -->
	<insert id="insertCancelEasyPay" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_KAKAO_PAYMENT (
			   ORDER_ID
			 , SETL_SEQ
			 , SETL_DIV_CD
			 , TID
			 , ACCESS_NAME
			 , MID
			 , PAYMETHOD
			 , AMT
			 , DISCOUNTAMT
			 , AUTHDATE
			 , AUTHCODE
			 , CARDCODE
			 , CARDNAME
			 , CARDQUOTA
			 , CARDINTEREST
			 , CARDCI
			 , CARDBIN
			 , CARDPOINT
			 , CANCEL_DATE
			 , STATUS
			 , BUYCOMPREQYMD
			 , BUYCOMPRCVYMD
			 , BUYCOMPRCVCD
			 , BUYCOMPERRDESC
			 , CARD_OVERSEA_YN
			 , RESERVED1
			 , RESERVED2
			 , RESERVED3
			 , RESERVED4
			 , RESERVED5
			)
		SELECT #orderId#
			 , B.SETL_SEQ + 1
			 , #setlDivCd#
			 , #tid#
			 , #searchAccessName#
			 , #mid#
			 , #paymethod#
			 , NVL(#amt#,0)
			 , NVL(#discountamt#,0)
			 , #authdate#
			 , #authcode#
			 , A.CARDCODE
			 , A.CARDNAME
			 , A.CARDQUOTA
			 , A.CARDINTEREST
			 , A.CARDCI
			 , A.CARDBIN
			 , A.CARDPOINT
			 , #cancelDate#
			 , #status#
			 , A.BUYCOMPREQYMD
			 , A.BUYCOMPRCVYMD
			 , A.BUYCOMPRCVCD
			 , A.BUYCOMPERRDESC
			 , A.CARD_OVERSEA_YN
			 , #reserved1#
			 , #reserved2#
			 , #reserved3#
			 , #reserved4#
			 , #reserved5#
		  FROM OD_KAKAO_PAYMENT A
			  ,(SELECT MAX(SETL_SEQ) SETL_SEQ FROM OD_KAKAO_PAYMENT WHERE ORDER_ID = #orderId#) B
		 WHERE A.ORDER_ID = #orderId#
		   AND A.SETL_SEQ = '1'
		]]>
	</insert>

	<!-- 간편결제 VAN승인정보 생성 -->
	<insert id="insertCancelEasyPayOrigin" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_KAKAO_PAYMENT_ORIGIN (
			   TID
			 , SETL_DIV_CD
			 , SETL_SEQ
			 , ORDER_ID
			 , MID
			 , PAYMETHOD
			 , AMT
			 , DISCOUNTAMT
			 , AUTHDATE
			 , AUTHCODE
			 , CARDCODE
			 , CARDNAME
			 , CARDQUOTA
			 , CARDINTEREST
			 , CARDCI
			 , CARDBIN
			 , CARDPOINT
			 , RESULT
			 , ACCESS_NAME
			 , RESULT_DAY
			 , RESULT_TEXT
			 , BUYCOMPREQYMD
			 , BUYCOMPRCVYMD
			 , BUYCOMPERRDESC
			 , CARD_OVERSEA_YN
			 , BIGO1
			 , BIGO2
			 , BIGO3
			 , BIGO4
			)
		SELECT #tid#
			 , #setlDivCd#
			 , B.SETL_SEQ + 1
			 , #orderId#
			 , #mid#
			 , #paymethod#
			 , NVL(#amt#,0)
			 , NVL(#discountamt#,0)
			 , #authdate#
			 , #authcode#
			 , A.CARDCODE
			 , A.CARDNAME
			 , A.CARDQUOTA
			 , A.CARDINTEREST
			 , A.CARDCI
			 , A.CARDBIN
			 , A.CARDPOINT
			 , #result#
			 , #searchAccessName#
			 , #resultDay#
			 , #resultText#
			 , A.BUYCOMPREQYMD
			 , A.BUYCOMPRCVYMD
			 , A.BUYCOMPERRDESC
			 , A.CARD_OVERSEA_YN
			 , #bigo1#
			 , #bigo2#
			 , #bigo3#
			 , #bigo4#
		  FROM OD_KAKAO_PAYMENT_ORIGIN A
			  ,(SELECT MAX(SETL_SEQ) SETL_SEQ FROM OD_KAKAO_PAYMENT_ORIGIN WHERE ORDER_ID = #orderId#) B
		 WHERE A.ORDER_ID = #orderId#
		   AND A.SETL_SEQ = '1'
		]]>
	</insert>

	<!-- 법인다량몰	주문시 포인트 사용취소 처리	-->
	<update id="updateCorpspcsalMemPntUseCancel" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE	EV_CORPSPCSAL_MEM
		SET		REMND_AMT       = NVL(REMND_AMT,0) + TO_NUMBER(#cancelSetlAmtSum#)
		,		CHGER_ID		= #chgerId#
		,		CHG_DATE		= SYSDATE
		WHERE	COORIG_NO		= #coorigNo#
		/* WHERE	SPCSAL_CORP_ID	= #spcsalCorpId#
		AND		EVENT_ID		= #spcsalEventId#
		AND		COORIG_NO		= #coorigNo# */
		]]>
	</update>

	<!-- 대사관리 - Kicc 오류처리 상태변경 -->
	<update id="updateCancelKiccCreditOrigin" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE OD_KICC_CREDIT_ORIGIN
		   SET RESULT = 'Z'
		 WHERE ORDER_ID	= #orderId#
		   AND SETL_SEQ	= #setlSeq#
		]]>
	</update>

	<!--간편결제 승인정보-->
	<select id="selectCancelKakaopayInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT TID
			  ,MID
			  ,RESERVED1
			  ,RESERVED2
			  ,RESERVED3
			  ,AUTHCODE
			  ,AUTHDATE
			  ,STATUS ORG_STATUS
		  FROM OD_KAKAO_PAYMENT
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = '1'
		]]>
	</select>

	<!--간편결제 Origin정보-->
	<select id="selectCancelKakaopayErrInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT CARDNAME
			  ,AUTHDATE
			  ,AUTHCODE
			  ,NVL(AMT, 0) AMT
			  ,CARDBIN
			  ,CARDQUOTA
			  ,MID
			  ,TID
			  ,PAYMETHOD AS SETL_MEAN_CD
		  FROM OD_KAKAO_PAYMENT_ORIGIN
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = #setlSeq#
		]]>
	</select>

	<!-- 대사관리 - 간편결제 오류처리 상태변경 -->
	<update id="updateCancelKakaopayOrigin" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE OD_KAKAO_PAYMENT_ORIGIN
		   SET RESULT = 'Z'
			  ,RESULT_DAY = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		 WHERE AUTHCODE = #authcode#
		]]>
	</update>

	<!--간편결제 승인정보-->
	<select id="selectCancelMobilePaymentInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT TID
			  ,STATUS ORG_STATUS
		  FROM OD_MOBILE_PAYMENT
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = '1'
		]]>
	</select>

	<!--간편결제 Origin정보-->
	<select id="selectCancelMobilePaymentErrInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT TID
		  FROM OD_MOBILE_PAYMENT_ORIGIN
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = #setlSeq#
		]]>
	</select>

	<!-- 휴대폰 결제 취소정보 생성 -->
	<insert id="insertMobilePayment" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_MOBILE_PAYMENT
			(
			  ORDER_ID
			, SETL_SEQ
			, ACCESS_NAME
			, AMOUNT
			, APPTIME
			, TID
			, CANCEL_DATE
			, STATUS
			)
		VALUES
			(
			  #orderId#
			, (SELECT NVL(MAX(SETL_SEQ)+1,1) FROM OD_MOBILE_PAYMENT WHERE ORDER_ID = #orderId#)
			, #searchAccessName#
			, NVL(#amount#,0)
			, #apptime#
			, #tid#
			, #cancelDate#
			, #status#
			)
		]]>
	</insert>

	<!-- 연계접수 미이행현황 조회 - 지방우정청코드 -->
	<select id="selectRegnPstCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT PONM, RCOCD, MPOREGIPOCD, REGIPOCD
		  FROM PICMT0060
		 WHERE USEYN = 'Y'
		   AND DSCDPOYN = 'N'
		<isEmpty property="depth">
		   AND PODIVCD = '02'								/* 체신청 */
		</isEmpty>
		<isEqual property="depth" compareValue="01">
		   AND PODIVCD IN ('05', '06', '10', '18')			/* 집중국, 총괄국, 국제우체국, 물류센터 */
		   AND RCOCD = (SELECT RCOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND REGIPOCD = #searchPstGrcCd#)
		</isEqual>
		<isEqual property="depth" compareValue="02">
		   AND PODIVCD IN ('07', '08', '09', '12', '13', '17', '18')	/* 우체국, 취급국, 군사우체국, 출장소, 별정우체국, 군사우편출장소, 물류센터 */
		   AND MPOREGIPOCD = (SELECT MPOREGIPOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND REGIPOCD = #searchSmrizeBuraCd#)
		</isEqual>
		 ORDER BY RCOCD
	</select>
	<!-- 연계접수 미이행현황 조회 - 접수시스템코드 -->
	<select id="selectRecevSysCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CODE, NAME
		  FROM SYSTEM_CODE
		 WHERE CLASS = 'P24'
	</select>

	<!-- 연계접수 미이행현황 카운트 -->
	<select id="selectCntcRceptNflflSttusListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT /*+ no_merge  push_pred */ COUNT(RCOCD) TOTCNT
		  FROM (
			SELECT /*+ use_hash(C A B)*/
				   C.RCOCD
				  ,(SELECT NAME FROM SYSTEM_CODE WHERE  CLASS = 'P32' AND CODE = C.RCOCD) RCOCDNM /* 체신청분류 */
				  ,C.MPOREGIPOCD
				  ,(SELECT PONM FROM PICMT0060 WHERE REGIPOCD = C.MPOREGIPOCD AND USEYN = 'Y') MPOREGIPOCDNM
				  ,C.REGIPOCD
				  ,(SELECT PONM FROM PICMT0060 WHERE REGIPOCD = C.REGIPOCD AND USEYN = 'Y') REGIPOCDNM
				  ,B.SUPP_COMP_ID
				  ,B.SUPP_COMP_NM
				  ,SUBSTR(A.APPR_DATE,1,8) APPR_DATE
				  ,SUM(DECODE(B.ORDER_STUS_CD,'O02',1,0)) R_CNT
				  ,SUM(DECODE(B.ORDER_STUS_CD,'O04',1,0)) S_CNT
				  ,SUM(DECODE(B.ORDER_STUS_CD,'O04',B.PRCL_AMT)) PRCL_AMT
			  FROM OD_ORDER_MAST A
				  ,OD_ORDER_ITM B
				  ,PICMT0060 C
			 WHERE 1=1
			   AND A.ORDER_ID = B.ORDER_ID
			   AND B.SUPPO_RGIST_POCD = C.REGIPOCD
			   AND EXISTS (SELECT 1 FROM OD_ORDER_SETL WHERE ORDER_ID = A.ORDER_ID AND USE_YN = 'Y' AND ROWNUM <![CDATA[<]]> 2)
			   AND C.USEYN = 'Y'
			   AND B.ORDER_STUS_CD IN ('O02','O04')						/* 2:결제완료, 3:주문확인 */
			   <!-- AND B.PAVLN_DIV_CD IN ('0', '1')	 -->						/* 0:대기업상품, 1:특산품 */
			   AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
			   AND (NVL(B.GIFT_ORDER_YN,'N') = 'N' OR (NVL(B.GIFT_ORDER_YN,'N') = 'Y' AND B.GIFT_CANCEL_YN = 'N'))
			<isNotEmpty property="regnPstCd">
			   AND C.REGIPOCD = #regnPstCd#
			</isNotEmpty>
			<isEmpty property="regnPstCd">
				<isNotEmpty property="searchSmrizeBuraCd">
			   AND C.MPOREGIPOCD = #searchSmrizeBuraCd#
				</isNotEmpty>
				<isEmpty property="searchSmrizeBuraCd">
				<isNotEmpty property="searchPstGrcCd">
			   AND C.MPOREGIPOCD IN (SELECT MPOREGIPOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND PODIVCD IN ('05', '06', '10', '18')
									   AND RCOCD = (SELECT RCOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND REGIPOCD = #searchPstGrcCd#))
				</isNotEmpty>
				</isEmpty>
			</isEmpty>
			<isEqual property="searchRecevSysCd" compareValue="01">
			   AND A.RECEVPO_RGISTPOCD NOT IN ('89903','85414')			/* 창구접수 */
			</isEqual>
			<isEqual property="searchRecevSysCd" compareValue="02">
			   AND A.RECEVPO_RGISTPOCD = '89903'						/* ePost접수 */
			</isEqual>
			<isEqual property="searchRecevSysCd" compareValue="03">
			   AND A.RECEVPO_RGISTPOCD = '85414'						/* 콜센터접수 */
			</isEqual>
			 GROUP BY C.RCOCD, C.MPOREGIPOCD, C.REGIPOCD, B.SUPP_COMP_ID, B.SUPP_COMP_NM, A.APPR_DATE
			   )
	</select>
	<!-- 연계접수 미이행현황 목록 -->
	<select id="selectCntcRceptNflflSttusList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /*+ no_merge  push_pred */
			   RCOCD
			  ,RCOCDNM
			  ,MPOREGIPOCD
			  ,MPOREGIPOCDNM
			  ,REGIPOCD
			  ,REGIPOCDNM
			  ,SUPP_COMP_ID
			  ,SUPP_COMP_NM
			  ,APPR_DATE
			  ,TOT_R_CNT
			  ,TOT_S_CNT
			  ,TOT_PRCL_AMT
			  ,SUPP_COMP_PHONE
			  ,REGIPOCD_NUM
		  FROM (
			SELECT /*+ no_merge  push_pred */
				   ROW_NUMBER() OVER(ORDER BY AA.APPR_DATE DESC, AA.REGIPOCD DESC) AS TNUM
				  ,RCOCD
				  ,RCOCDNM
				  ,MPOREGIPOCD
				  ,MPOREGIPOCDNM
				  ,REGIPOCD
				  ,REGIPOCDNM
				  ,SUPP_COMP_ID
				  ,SUPP_COMP_NM
				  ,APPR_DATE
				  ,NVL(SUM(R_CNT),0) TOT_R_CNT
				  ,NVL(SUM(S_CNT),0) TOT_S_CNT
				  ,NVL(SUM(PRCL_AMT),0) TOT_PRCL_AMT
				  ,(SELECT NVL(NVL(TELNO,PRSDT_MOBILE_NO),'') FROM CO_SUPP_COMP_MAST WHERE SUPP_COMP_ID = AA.SUPP_COMP_ID) SUPP_COMP_PHONE
				  ,(SELECT NVL(POFNO ||'-' ||POMNO||'-' ||POLNO,'') FROM PICMT0060 WHERE REGIPOCD = AA.REGIPOCD AND USEYN = 'Y') REGIPOCD_NUM
			  FROM (
				SELECT /*+ use_hash(C A B) */
					   C.RCOCD
					  ,(SELECT NAME FROM SYSTEM_CODE WHERE  CLASS = 'P32' AND CODE = C.RCOCD) RCOCDNM
					  ,C.MPOREGIPOCD
					  ,(SELECT PONM FROM PICMT0060 WHERE REGIPOCD = C.MPOREGIPOCD AND USEYN = 'Y') MPOREGIPOCDNM
					  ,C.REGIPOCD
					  ,(SELECT PONM FROM PICMT0060 WHERE REGIPOCD = C.REGIPOCD AND USEYN = 'Y') REGIPOCDNM
					  ,B.SUPP_COMP_ID
					  ,B.SUPP_COMP_NM
					  ,SUBSTR(A.APPR_DATE,1,8) APPR_DATE
					  ,SUM(DECODE(B.ORDER_STUS_CD,'O02',1,0)) R_CNT
					  ,SUM(DECODE(B.ORDER_STUS_CD,'O04',1,0)) S_CNT
					  ,SUM(DECODE(B.ORDER_STUS_CD,'O04',B.PRCL_AMT)) PRCL_AMT
				  FROM OD_ORDER_MAST A
					  ,OD_ORDER_ITM B
					  ,PICMT0060 C
				 WHERE 1=1
				   AND A.ORDER_ID = B.ORDER_ID
				   AND B.SUPPO_RGIST_POCD = C.REGIPOCD
				   AND EXISTS (SELECT 1 FROM OD_ORDER_SETL WHERE ORDER_ID = A.ORDER_ID AND USE_YN = 'Y' AND ROWNUM <![CDATA[<]]> 2)
				   AND C.USEYN = 'Y'
				   AND B.ORDER_STUS_CD IN ('O02', 'O04')						/* 2:결제완료, 3:주문확인 */
				   AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
				   AND (NVL(B.GIFT_ORDER_YN,'N') = 'N' OR (NVL(B.GIFT_ORDER_YN,'N') = 'Y' AND B.GIFT_CANCEL_YN = 'N'))
				<isNotEmpty property="regnPstCd">
				   AND C.REGIPOCD = #regnPstCd#
				</isNotEmpty>
				<isEmpty property="regnPstCd">
					<isNotEmpty property="searchSmrizeBuraCd">
				   AND C.MPOREGIPOCD = #searchSmrizeBuraCd#
					</isNotEmpty>
					<isEmpty property="searchSmrizeBuraCd">
					<isNotEmpty property="searchPstGrcCd">
				   AND C.MPOREGIPOCD IN (SELECT MPOREGIPOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND PODIVCD IN ('05', '06', '10', '18')
										   AND RCOCD = (SELECT RCOCD FROM PICMT0060 WHERE USEYN = 'Y' AND DSCDPOYN = 'N' AND REGIPOCD = #searchPstGrcCd#))
					</isNotEmpty>
					</isEmpty>
				</isEmpty>
				<isEqual property="searchRecevSysCd" compareValue="01">
				   AND A.RECEVPO_RGISTPOCD NOT IN ('89903','85414')
				</isEqual>
				<isEqual property="searchRecevSysCd" compareValue="02">
				   AND A.RECEVPO_RGISTPOCD = '89903'
				</isEqual>
				<isEqual property="searchRecevSysCd" compareValue="03">
				   AND A.RECEVPO_RGISTPOCD = '85414'
				</isEqual>
				 GROUP BY C.RCOCD, C.MPOREGIPOCD, C.REGIPOCD, B.SUPP_COMP_ID, B.SUPP_COMP_NM, A.APPR_DATE
				   ) AA
			 GROUP BY RCOCD
					 ,RCOCDNM
					 ,MPOREGIPOCD
					 ,MPOREGIPOCDNM
					 ,REGIPOCD
					 ,REGIPOCDNM
					 ,SUPP_COMP_ID
					 ,SUPP_COMP_NM
					 ,APPR_DATE
			 ORDER BY RCOCD
					 ,RCOCDNM
					 ,MPOREGIPOCD
					 ,MPOREGIPOCDNM
					 ,REGIPOCD
					 ,REGIPOCDNM
					 ,SUPP_COMP_ID
					 ,SUPP_COMP_NM
					 ,APPR_DATE
			) T1
	   WHERE 1=1
		<isNotNull property="firstIndex">
			<isNotNull property="lastIndex">
				AND T1.TNUM BETWEEN #firstIndex# AND #lastIndex#
			</isNotNull>
		</isNotNull>
		<isEmpty property="sidx">
			ORDER BY T1.TNUM DESC
		</isEmpty>
	</select>


	<!-- 주문관리 포인트 현황 리스트 카운트 -->
	<select id="selectOrderPointListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT /*+ INDEX(A MB_MEM_ACCMLAMT_HISTOR_IX08) */ COUNT(A.ACCESS_NAME)
			FROM MB_MEM_ACCMLAMT_HISTOR A
					, MB_MEM_ACCMLAMT B
			WHERE 1=1
				AND B.ACCESS_NAME(+)=A.ACCESS_NAME
				<isNotEmpty property="search_strt_ymd">
					<isNotEmpty property="search_end_ymd">
					AND A.REG_DATE BETWEEN #search_strt_ymd# AND #search_end_ymd#
					</isNotEmpty>
				</isNotEmpty>
				<isNotEmpty property="access_name">
					AND A.ACCESS_NAME LIKE '%'|| #access_name# ||'%'
				</isNotEmpty>
	</select>

	<!-- 주문관리 포인트 현황 리스트-->
	<select id="selectOrderPointList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT T1.REG_DATE
				, T1.ORDER_ID
				, T1.CASE_CONT
				, T1.ACCU_USE_POINT
				, T1.CUR_POINT
				, T1.RM_TYPE
				, T1.VALID_DATE
				, T1.ACCESS_NAME
			FROM
				(
				SELECT /*+ INDEX(A MB_MEM_ACCMLAMT_HISTOR_IX08) */ TO_CHAR( TO_DATE(A.REG_DATE, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') AS REG_DATE
						, A.ACCESS_NAME
						, NVL(A.ORDER_ID, ' ') ORDER_ID
						, A.ORDER_ITM_ID
						, A.CASE_CONT
						, TO_CHAR( DECODE(A.CANCEL_YN, 'N', DECODE(A.RM_TYPE, 'A', A.ACCU_POINT, 'U', A.USE_POINT * -1), 'Y', A.ACCU_POINT * -1, DECODE(A.RM_TYPE, 'A', A.ACCU_POINT, 'U', A.USE_POINT * -1) ) , '999,999,999,999') AS ACCU_USE_POINT
						, TO_CHAR( NVL(A.CUR_POINT, 0), '999,999,999,999') AS CUR_POINT
						, DECODE(A.CANCEL_YN, 'N', DECODE(A.RM_TYPE, 'A', '적립', 'U', '사용'), 'Y', '적립취소', DECODE(A.RM_TYPE, 'A', '적립', 'U', '사용') ) AS RM_TYPE /* 적립취소시 포인트값 확인요망 */
						, NVL( TO_CHAR(TO_DATE(A.VALID_DATE, 'YYYYMMDD'), 'YYYY-MM-DD'), ' ') AS VALID_DATE
						, A.REG_ID
						, ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC) AS TNUM
					FROM MB_MEM_ACCMLAMT_HISTOR A
							, MB_MEM_ACCMLAMT B
					WHERE 1=1
						AND B.ACCESS_NAME(+)=A.ACCESS_NAME
						<isNotEmpty property="search_strt_ymd">
							<isNotEmpty property="search_end_ymd">
							/* AND  TO_CHAR(TO_DATE(A.REG_DATE, 'YYYYMMDDHH24MISS'),'YYYYMMDD') BETWEEN ##search_strt_ymd## AND ##search_end_ymd## */
							AND A.REG_DATE BETWEEN #search_strt_ymd#||'000000' AND #search_end_ymd#||'999999'
							</isNotEmpty>
						</isNotEmpty>
						<isNotEmpty property="access_name">
							AND A.ACCESS_NAME LIKE '%'|| #access_name# ||'%'
						</isNotEmpty>
						ORDER BY A.REG_DATE DESC
				) T1
			WHERE 1=1
				AND T1.TNUM BETWEEN #firstIndex# AND #lastIndex#

	</select>
	<!-- 주문관리 포인트 현황 리스트 END -->

	<!-- 쇼핑회원 검색 precision -->
	<select id="selectShopUserPrecisioncnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(CUR_POINT) AS CUR_POINT
					, SUM(CNT) AS CNT
			FROM
				(
				SELECT NVL(CUR_POINT, 0) AS CUR_POINT
						, 0 AS CNT
					FROM MB_MEM_ACCMLAMT
				WHERE 1=1
					<isNotEmpty property="access_name">
						AND ACCESS_NAME = #access_name#
					</isNotEmpty>
				UNION
				SELECT 0 AS CUR_POINT
							, COUNT(*) AS CNT
					FROM MB_MEM_MAST B WHERE 1=1
					<isNotEmpty property="access_name">
						AND ACCESS_NAME = #access_name#
					</isNotEmpty>
				)
	</select>

	<!-- 포인트 현황사용자 포인트 지급하기 master -->
	<insert id="insertPointAccmlamt" parameterClass="java.util.HashMap">
			MERGE INTO MB_MEM_ACCMLAMT A
				USING DUAL ON (A.ACCESS_NAME = #access_name#)
				WHEN MATCHED THEN
					UPDATE
						SET
						<!-- 포인트 등록 -->
						<isEqual property="reg_use_gbn" compareValue="pointReg">
							CUR_POINT = CUR_POINT + #point_val#
							, TOT_ACCU_POINT = TOT_ACCU_POINT + #point_val#
						</isEqual>
						<!-- 포인트 회수 -->
						<isEqual property="reg_use_gbn" compareValue="pointUse">
							CUR_POINT = CUR_POINT - #point_val#
							, TOT_ACCU_POINT = TOT_ACCU_POINT - #point_val#
						</isEqual>
							, LASTCHANGE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
							, CHG_DATE = SYSDATE
							, CHGER_ID = SYSDATE
					WHERE 1=1
						AND ACCESS_NAME = #access_name#
					WHEN NOT MATCHED THEN
						INSERT (
							ACCESS_NAME
							, CUR_POINT
							, TOT_ACCU_POINT
							, TOT_USE_POINT
							, TOT_CANCEL_POINT
							, LASTCHANGE
							, OLD_ACCU_POINT
							, OLD_NOUSE_POINT
							, POST_POINT
							, REG_DATE
							, REGER_ID
						)
						VALUES
							(
							#access_name#
							, #point_val#
							, #point_val#
							, 0
							, 0
							, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
							, 0
							, 0
							, 0
							, SYSDATE
							, #reg_id#
							)
	</insert>

	<!-- 포인트 현황사용자 포인트 지급하기 history -->
	<insert id="insertPointAccmlamtHistor" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR (
			ACCESS_NAME
			, SEQ
			, RM_TYPE
		<!-- 포인트 등록 -->
		<isEqual property="reg_use_gbn" compareValue="pointReg">
			, ACCU_POINT
		</isEqual>
		<!-- 포인트 회수 -->
		<isEqual property="reg_use_gbn" compareValue="pointUse">
			, USE_POINT
		</isEqual>
			, CUR_POINT
			, CASE_CONT
			, REG_DATE
			, VALID_DATE
			, STATUS
			, TYPE_CD
			, CREATE_DATE
			, REG_ID
		)
		VALUES
			(
			#access_name#
			, ( SELECT NVL(MAX(B.SEQ)+1, 1) FROM MB_MEM_ACCMLAMT_HISTOR B WHERE B.ACCESS_NAME = #access_name# )
			<!-- 포인트 등록 -->
			, DECODE( #reg_use_gbn#, 'pointReg', 'A', 'pointUse', 'U', '') /* A 적립 U 사용 */
			, #point_val#
			, ( SELECT NVL(C.CUR_POINT, 0) FROM MB_MEM_ACCMLAMT C WHERE C.ACCESS_NAME = #access_name# )
			, #case_cont#
			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			, #valid_date#
			, '' /* STATUS (0,1,2,3) 조사필요 */
			, '' /* TYPE_CD (U1, A3,U5,U4,A1,A5,U3) 조사필요 */
			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			, #reg_id#
			)
	</insert>


	<!-- 클레임 관리 20160403 개편: start -->
	<!-- 환불관리 -->
	<!-- 환불관리 기간검색 -->
	<sql id="cancelRefundTermSearchCondition">
		<!--  기간 검색 -->
		<isNotEmpty property="search_ymd_type">
			<isNotEmpty property="search_strt_ymd">
				<isNotEmpty property="search_end_ymd">
					<!-- 결제(승인)완료일 -->
					<isEqual property="search_ymd_type" compareValue="appr_date">
					AND OOM.APPR_DATE
					</isEqual>
					<!-- 결제(승인)완료일 -->
					<!-- 환불신청일 -->
					<isEqual property="search_ymd_type" compareValue="claim_req_date">
					AND ORI.CLAIM_REQ_YMD
					</isEqual>
					<!-- 환불신청일 end -->
					<!-- 발주확인일 -->
					<isEqual property="search_ymd_type" compareValue="order_conf_date">
					 AND OOM.ORDER_CONF_DATE
					</isEqual>
					<!-- 발주확인일END -->
					<!-- 환불완료일 -->
					<isEqual property="search_ymd_type" compareValue="claim_done_date">
					 AND ORI.CLAIM_REFUND_YMD
					</isEqual>
					<!-- 환불완료일 end -->
					BETWEEN TO_DATE(#search_strt_ymd#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd#||'235959','YYYYMMDDHH24MISS')
				</isNotEmpty>
			</isNotEmpty>
		</isNotEmpty>
		<!--  기간 검색 end -->
	</sql>
	<!-- 환불관리 기간검색 end -->

	<!-- 환불관리 검색조건 -->
	<sql id="cancelRefundSearchCondition">
		<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
		<!-- 검색구분 -->
		<isEmpty property="search_access_type">
			<isNotEmpty property="search_access_value">
			AND ( OOM.ACCESS_NAME = #search_access_value# OR OOM.ORDRR_NM = #search_access_value#
					OR OOI.RECPTER_NM = #search_access_value# OR OOM.ORDER_ID = #search_access_value#
					OR OOI.GOODS_CD = #search_access_value#
			) /* 검색구분 전체 */
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="search_access_type">
			<isEqual property="search_access_type" compareValue="access_name">
			AND OOM.ACCESS_NAME = #search_access_value#  /* 주문자ID */
			</isEqual>
			<isEqual property="search_access_type" compareValue="name">
			AND OOM.ORDRR_NM = #search_access_value#  /* 주문자명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="recpter_nm">
			AND OOI.RECPTER_NM = #search_access_value#  /* 수취인명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="order_id">
			AND OOM.ORDER_ID = #search_access_value#  /* 주문번호 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="goods_cd">
			AND OOI.GOODS_CD = #search_access_value#  /* 상품번호 */
			</isEqual>
		</isNotEmpty>
		<!-- 검색구분 END -->
		<isNotEmpty property="search_pavln_id">
			AND OOI.PAVLN_DIV_CD = #search_pavln_id# /* 전시관 */
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
			AND OOI.SUPP_COMP_ID = #search_supp_comp_id# /* 공급업체 */
		</isNotEmpty>
		<!-- 클레임구분코드 -->
		<isNotEmpty property="search_claimdivcd">
			AND ORI.CLAIM_DIV_CD = #search_claimdivcd# /* 001:환불, 002:교환, 003:주문취소 */
		</isNotEmpty>
		<!-- 클레임구분코드 -->
		<isNotEmpty property="searchOrderMdaDivCd">
			<isEqual property="searchOrderMdaDivCd" compareValue="01">
			AND OOM.ORDER_MDA_DIV_CD = '01'
			</isEqual>
			<isEqual property="searchOrderMdaDivCd" compareValue="02">
			AND OOM.ORDER_MDA_DIV_CD IN ('02', '04')
			</isEqual>
			<isEqual property="searchOrderMdaDivCd" compareValue="03">
			AND OOM.ORDER_MDA_DIV_CD IN ('03', '06')
			</isEqual>
			<isEqual property="searchOrderMdaDivCd" compareValue="04">
			AND OOM.ORDER_MDA_DIV_CD = '05'
			</isEqual>
		</isNotEmpty>
		<!-- 클레임처리상태 -->
		<isNotEmpty property="searchTreatStusCds">
			AND ORI.TREAT_STUS_CD IN
				<iterate property="searchTreatStusCds" open="("  close=")" conjunction=",">
					#searchTreatStusCds[]#
				</iterate>
		</isNotEmpty>
		<!-- 클레임처리상태 end -->
		<!-- 취소가능건 조회 -->
		<isEqual property="searchCancelAbleAt" compareValue="Y">
			AND NVL(OOI.GOODS_CANCEL_YN,'N') = 'N'
			AND ORI.RETRNGD_REFUND_METH_CD IN ('04', '05', '06', '07')
			AND OOM.ORDER_MDA_DIV_CD IN ('01', '02', '03', '04', '06')
		</isEqual>
		<!-- 취소가능건 조회 end -->
	</sql>
	<!-- 환불관리 검색조건 end -->

	<!-- 환불관리 리스트 조회 카운트 -->
	<select id="selectOrderCancelRefundListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(ORDER_ID) AS CNT
			FROM
				(
					SELECT OOM.ORDER_ID
					  FROM OD_ORDER_MAST OOM
						  ,OD_ORDER_ITM OOI
						  ,OD_ORDER_SETL OOS
						  ,OD_RET_INTERFACE ORI
					 WHERE OOM.ORDER_ID = OOI.ORDER_ID
					   AND OOM.ORDER_ID = OOS.ORDER_ID
					   AND OOS.USE_YN = 'Y'
					   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
					<include refid="cancelRefundSearchCondition"/> /* 환불관리 검색조건 */
					 GROUP BY OOM.ORDER_ID, ORI.CLAIM_REQ_NO
				)
	</select>
	<!-- 환불관리 리스트 조회 카운트 END -->

	<!-- 환불관리 리스트 조회 -->
	<select id="selectOrderCancelRefundList" parameterClass="java.util.HashMap" resultClass="commMap">
		/* 동일상품 다수량 리스팅 오류로 수정 betakim 20160707 */
		SELECT T1.TNUM RNUM
			  ,T1.ORDER_ID
			  ,T1.CLAIM_REQ_NO
			  ,T1.ORDER_DATE
			  ,T1.ACCESS_NAME
			  ,T1.GOODS_CANCEL_YN
			  ,T1.DC_APPLY_PRC
			  ,T1.ORDER_STUS_CD
			  ,T1.SETL_STUS_CD
			  ,T1.SETL_MEAN_CD
			  ,T1.SETL_MEAN_NM
			  ,T1.ORDER_STUS_NM
			  ,T1.ORDRR_NM
			  ,T1.ORDRR_TELNO
			  ,T1.ORDRR_HTELNO
			  ,T1.CLAIM_REQ_PRSNNM
			  ,T1.CLAIM_REQ_PRSNTELNO
			  ,T1.CLAIM_REQ_PRSNHTELNO
			  ,T1.GOODS_NM
			  ,T1.RET_REASON
			  ,T1.RET_REASON1
			  ,T1.RET_REASON_GBN
			  ,T1.CLAIM_CONF_YMD
			  ,T1.REFUND_BANKNM
			  ,T1.DPSTRNM
			  ,T1.SEED_REFUND_ACC_NO
			  ,T1.RET_PAY
			  ,T1.TREAT_STUS_CD
			  ,T1.CLAIM_DIV_CD
			  ,T1.RETRNGD_REFUND_METH_CD
			  ,T1.CLAIM_REQ_YMD
			  ,T1.PAVLN_DIV_CD
			  ,T1.PAVLN_DIV_NM
			  ,T1.SUPP_COMP_NM
			  ,T1.ORDER_MDA_DIV_NM
		  FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY ORI.CLAIM_REQ_NO) AS TNUM
					  ,OOM.ORDER_ID
					  ,ORI.CLAIM_REQ_NO
					  ,MAX(OOM.ORDER_DATE) ORDER_DATE
					  ,MAX(OOM.ACCESS_NAME) ACCESS_NAME
					  ,MAX(OOI.GOODS_CANCEL_YN) GOODS_CANCEL_YN
					  ,TO_CHAR(SUM( NVL(OOI.DC_APPLY_PRC, 0) + NVL(OOI.OPTN_GOODS_APPLY_PRC, 0) + NVL(OOI.SEND_PRC, 0) + NVL(OOI.B2B_COMMISSION_PRC, 0)
						 - ( NVL(OOI.CPN_DC_AMT, 0) + NVL(OOI.PNT_USE_AMT, 0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT, 0)
						 + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0) + NVL(OOI.OKCASH_USE_AMT, 0) ) ), 'FM999,999,999,999') AS DC_APPLY_PRC	 /* 주문금액 */
					  ,MAX(OOI.ORDER_STUS_CD) ORDER_STUS_CD
					  ,MAX(OOS.SETL_STUS_CD) SETL_STUS_CD
					  ,MAX(OOS.SETL_MEAN_CD) SETL_MEAN_CD
					  ,F_GET_COMN_CD_NM('SETL_MEAN_CD',MAX(OOS.SETL_MEAN_CD)) SETL_MEAN_NM
					  ,F_GET_COMN_CD_NM('ORDER_STUS_CD',MAX(OOI.ORDER_STUS_CD)) ORDER_STUS_NM
					  ,MAX(OOM.ORDRR_NM) ORDRR_NM
					  ,MAX(OOM.ORDRR_TELNO) ORDRR_TELNO
					  ,MAX(OOM.ORDRR_HTELNO) ORDRR_HTELNO
					  ,NVL(MAX(ORI.CLAIM_REQ_PRSNNM), ' ') CLAIM_REQ_PRSNNM
					  ,MAX(ORI.CLAIM_REQ_PRSNTELNO) CLAIM_REQ_PRSNTELNO
					  ,MAX(ORI.CLAIM_REQ_PRSNHTELNO) CLAIM_REQ_PRSNHTELNO
					  ,MAX(OOI.GOODS_NM) GOODS_NM
					  ,REPLACE(REPLACE(MAX(ORI.CLAIM_REASN_CONT),CHR(13),''),CHR(10),' ') RET_REASON
					  ,SUBSTRB(MAX(ORI.CLAIM_REASN_CONT),1,150) RET_REASON1
					  ,DECODE(MAX(ORI.CLAIM_REASN_CD),'01','배송상의 문제','02','상품자체 불량 및 변질','03','고객의 변심') RET_REASON_GBN
					  ,MAX(ORI.CLAIM_CONF_YMD) CLAIM_CONF_YMD
					  ,F_GET_COMN_CD_NM('BANK_CD',MAX(ORI.REFUND_BANKCD)) REFUND_BANKNM
					  ,MAX(ORI.DPSTRNM) DPSTRNM
					  ,MAX(ORI.SEED_REFUND_ACC_NO) SEED_REFUND_ACC_NO
					  ,DECODE(MAX(ORI.CLAIM_PRCLPRCPAY_CD),'01','우체국','02','공급업체') RET_PAY
					  ,MAX(ORI.TREAT_STUS_CD) TREAT_STUS_CD
					  ,MAX(ORI.CLAIM_DIV_CD) CLAIM_DIV_CD
					  ,MAX(ORI.RETRNGD_REFUND_METH_CD) RETRNGD_REFUND_METH_CD
					  ,MAX(ORI.CLAIM_REQ_YMD) CLAIM_REQ_YMD
					  ,MAX(OOI.PAVLN_DIV_CD) PAVLN_DIV_CD
					  ,F_GET_COMN_CD_NM('PAVLN_DIV_CD', MAX(OOI.PAVLN_DIV_CD)) AS PAVLN_DIV_NM
					  ,MAX(OOI.SUPP_COMP_NM) SUPP_COMP_NM
					  ,F_GET_COMN_CD_NM('ORDER_MDA_DIV_CD',MAX(OOM.ORDER_MDA_DIV_CD)) ORDER_MDA_DIV_NM
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				<include refid="cancelRefundSearchCondition"/> /* 환불관리 검색조건 */
				 GROUP BY OOM.ORDER_ID, ORI.CLAIM_REQ_NO
				 ORDER BY ORI.CLAIM_REQ_NO
				) T1
		 WHERE 1=1
		   AND T1.TNUM BETWEEN #firstIndex# AND #lastIndex#
		 ORDER BY T1.TNUM
	</select>
	<!-- 환불관리 리스트 조회 end -->

	<!--  환불관리 ITM_ID GET -->
	<select id="selectClaimOrderItmId" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT B.ORDER_ITM_ID
			  ,B.ADJ_YN
			  ,B.PAVLN_DIV_CD
			  ,A.SETL_MEAN_CD
		  FROM OD_ORDER_MAST A
			  ,OD_ORDER_ITM B
			  ,OD_RET_INTERFACE C
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND B.ORDER_ITM_ID = C.ORDER_ITM_ID
		   AND A.ORDER_ID = #searchOrderId#
		   AND C.CLAIM_REQ_NO = #searchClaimReqNo#
	</select>

	<!-- 환불관리 취소완료 상태변경 -->
	<update id="updateOrderCliamConfirm" parameterClass="java.util.HashMap">
		UPDATE OD_RET_INTERFACE
		   SET TREAT_STUS_CD = #searchTreatstuscd#
			  ,RETRNGD_REFUND_METH_CD = #retrngdRefundMethCd#
			  ,CLAIM_CONF_YMD = TO_CHAR(SYSDATE,'YYYYMMDD')
		 WHERE ORDER_ID = #searchOrderId#
		   AND ORDER_ITM_ID = #searchOrderItmId#
	</update>
	<!-- 환불관리 취소완료 상태변경 end -->

	<!-- 환불관리 history -->
	<insert id="insertOrderClaimHistory" parameterClass="java.util.HashMap">
		INSERT INTO OD_RET_INTERFACE_HISTOR(
			  ORDER_ID			  	/* 주문 ID */
			, ORDER_ITM_ID		  	/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ		   	/* 클레임신청일련번호 */
			, GOODS_CD			   	/* 상품코드 */
			, CLAIM_REQ_YMD		   	/* 클레임신청일자 */
			, CLAIM_REQ_HMS			/* 클레임신청시각 */
			, CLAIM_DIV_CD			/* 클레임구분코드 */
			, SETL_AMT			   	/* 결제금액 */
			, GOODS_PRC			  	/* 상품가격 */
			, CLAIM_CNT			  	/* 클레임수량 */
			, CLAIM_REQ_PRSNNM		/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO	/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO	/* 클레임신청인핸드폰번호 */
			, TREAT_STUS_CD		   	/* 처리상태코드 */
			, CUSTNO				/* 고객번호 */
			, REGER_ID			   	/* 접수자아이디 */

		)VALUES(
			   (SELECT OOI.ORDER_ID FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)			/* 주문 ID */
			 , (SELECT OOI.ORDER_ITM_ID FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)		/* 주문 아이템 ID */
			 , (SELECT  '2' || TO_CHAR(SYSDATE, 'yymmddhh24miss') FROM DUAL)															/* 클레임신청일련번호 */
			 , (SELECT OOI.GOODS_CD FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)			/* 상품코드 */
			 , (SELECT  TO_CHAR(SYSDATE, 'YYYYMMDD') FROM DUAL)																			/* 클레임신청일자 */
			 , (SELECT  TO_CHAR(SYSDATE, 'HH24MISS') FROM DUAL) 																		/* 클레임신청시각 */
			 , #searchClaimdivcd#					  																					/* 클레임구분코드 */
			 ,  (SELECT OOI.DC_APPLY_PRC FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)   	/* 결제금액 */
			 , (SELECT OOI.CNSMR_PRC FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)	   	/* 상품가격 */
			 , (SELECT OOI.REQ_CNT FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)		 	/* 클레임수량 */
			 , (SELECT OOI.REALRECPTER FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)	 	/* 클레임신청인명 */
			 , (SELECT OOI.RECPTER_TELNO FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)   	/* 클레임신청인전화번호 */
			 , (SELECT OOI.RECPTER_HTELNO FROM OD_ORDER_ITM OOI WHERE 1=1 AND ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)  	/* 클레임신청인핸드폰번호 */
			 , #searchTreatstuscd#					 																					/* 처리상태코드 (000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소) */
			 , '' <!-- (SELECT OOM.ACCESS_NAME FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI WHERE OOM.ORDER_ID = OOI.ORDER_ID AND OOM.ORDER_ID =  AND OOI.ORDER_ITM_ID = ) -->	/* 고객번호 */
			 , #regerId#																												/* 접수자아이디 */
		)
	</insert>

	<!-- 환불관리 환불정보 -->
	<insert id="insertOrderClaimTrnAdLdg" parameterClass="java.util.HashMap">
		MERGE INTO OD_TRN_AD_LDG A
			USING DUAL ON (A.ORDER_ITM_ID = #searchOrderItmId#)
			WHEN MATCHED THEN
				UPDATE
					SET	  TRN_MOD_DATE = SYSDATE
						, RFD_BNK_CODE = #rfd_bnk_code#
						, RFD_ACC_NO = #rfd_acc_no#
						, RFD_DEP = #rfd_dep#
						, ACT_RSN = #rfd_reason_cont#
						, REQ_DATE = SYSDATE
				WHERE 1=1
					AND ORDER_ITM_ID = #searchOrderItmId#
				WHEN NOT MATCHED THEN
					INSERT (
						ORDER_ITM_ID
						, TRN_MOD_DATE
						, RFD_BNK_CODE
						, RFD_ACC_NO
						, RFD_DEP
						, ACT_RSN
						, REQ_DATE
					)VALUES(
						#searchOrderItmId#
						, SYSDATE
						, #rfd_bnk_code#
						, #rfd_acc_no#
						, #rfd_dep#
						, #rfd_reason_cont#
						, SYSDATE
					)
	</insert>
	<!-- 환불관리 환불정보 end -->

	<!-- 환불관리 과납환불 등록 -->
	<insert id="insertOnlineExPrice" parameterClass="java.util.HashMap">
	INSERT INTO OD_ONLINE_EX_PRICE(
		  ORDER_ITM_ID		/* 주문아이템아이디 */
		, EXPRICE_ID		/* 환불번호 */
		, ORDER_ID			/* 주문아이디 */
		, PRE_REF_PRICE		/* 환불예정액 */
		, PRE_SETTLE_DATE	/* 환불예정일자 */
		, FINANCE_NAME		/* 계좌은행명 */
		, ACCOUNT_SEED_NO	/* 계좌번호 */
		, DEPOSITOR			/* 예금주 */
		, REASON_CODE		/* 환불사유코드 */
		, REASON_CONT		/* 환불사유 */
		, MODIFY_STATE		/* 주문상태코드 */
		, MODIFY_CNT		/* 변경횟수 */
		, ACCESS_NAME		/* 회원아이디 */
	)
	SELECT  OOI.ORDER_ITM_ID
		  , (SELECT NVL(MAX(NVL(EXPRICE_ID,0)),0) + 1 MAXVAL
			   FROM OD_ONLINE_EX_PRICE
			  WHERE ORDER_ID		= #orderId#
			  	AND ORDER_ITM_ID 	= #searchOrderItmId#)
		  , OOI.ORDER_ID
		  , MAX(OOI.DC_APPLY_PRC)
		  , TO_CHAR(SYSDATE, 'YYYYMMDDHH24')
		  , NVL(F_GET_COMN_CD_NM('BANK_CD',  (SELECT LPAD(MAX(REFUND_BANKCD),3,'0')||'' FROM OD_RET_INTERFACE WHERE ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)), ' ')								/* 계좌은행명 */
		  , (SELECT MAX(SEED_REFUND_ACC_NO) FROM OD_RET_INTERFACE WHERE ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)																	/* 계좌번호(암호화) */
		  , (SELECT MAX(DPSTRNM) FROM OD_RET_INTERFACE WHERE ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)																				/* 예금주 */
		  , (SELECT MAX(CLAIM_REASN_CD) FROM OD_RET_INTERFACE WHERE ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)																		/* 환불사유코드 */
		  , (SELECT MAX(CLAIM_REASN_CONT) FROM OD_RET_INTERFACE WHERE ORDER_ID = #orderId# AND ORDER_ITM_ID = #searchOrderItmId#)																		/* 환불사유코드 */
		  , #modifyState#		/* 주문상태코드 */
		  , 1
		  , (SELECT ACCESS_NAME FROM OD_ORDER_MAST WHERE ORDER_ID = #orderId#)																													/* 회원아이디 */
	  FROM OD_ORDER_ITM OOI
		 , OD_ONLINE_EX_PRICE OOEP
	 WHERE OOI.ORDER_ID 	= #orderId#
	   AND OOI.ORDER_ITM_ID = #searchOrderItmId#
	   AND OOI.ORDER_ID 	= OOEP.ORDER_ID(+)
	   AND OOI.ORDER_ITM_ID = OOEP.ORDER_ITM_ID(+)
	 GROUP BY OOI.ORDER_ID
	 		, OOI.ORDER_ITM_ID
	 		, OOI.CNSMR_PRC
	</insert>

	<!-- 환불관리 퀵메뉴 카운트 -->
	<select id="selectClaimCancelItemCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(CNT1) AS CNT1
				, SUM(CNT2) AS CNT2
				, SUM(CNT3) AS CNT3
				, SUM(CNT4) AS CNT4
				, SUM(CNT5) AS CNT5
				, SUM(CNT6) AS CNT6
				, SUM(CNT7) AS CNT7
				, SUM(CNT8) AS CNT8
		  FROM (
				/* 전체 */
				SELECT /*+ USE_NL(OOI ORI) */ COUNT(*) AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/* 환불신청 */
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,COUNT(*) AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#
				   AND ORI.TREAT_STUS_CD = '000' /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/* 환불접수 */
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,COUNT(*) AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#	/* 001:환불, 002:교환, 003:주문취소 */
				   AND ORI.TREAT_STUS_CD = '001'   /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/* 환불확인 */
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,COUNT(*) AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#	/* 001:환불, 002:교환, 003:주문취소 */
				   AND ORI.TREAT_STUS_CD = '002'   /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/* 환불처리완료 */
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,COUNT(*) AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#	/* 001:환불, 002:교환, 003:주문취소 */
				   AND ORI.TREAT_STUS_CD = '003'   /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/* 환불취소 */
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,COUNT(*) AS CNT6
					  ,0 AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#	/* 001:환불, 002:교환, 003:주문취소 */
				   AND ORI.TREAT_STUS_CD = '004'   /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				/*최근 3일간 환불 완료*/
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,COUNT(*) AS CNT7
					  ,0 AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#	/* 001:환불, 002:교환, 003:주문취소 */
				   AND ORI.TREAT_STUS_CD = '003' 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				   AND ORI.CLAIM_REQ_YMD BETWEEN TO_CHAR(SYSDATE-3, 'YYYYMMDD') AND TO_CHAR(SYSDATE, 'YYYYMMDD')
				/*취소 가능 건*/
				UNION
				SELECT /*+ USE_NL(OOI ORI) */ 0 AS CNT1
					  ,0 AS CNT2
					  ,0 AS CNT3
					  ,0 AS CNT4
					  ,0 AS CNT5
					  ,0 AS CNT6
					  ,0 AS CNT7
					  ,COUNT(*) AS CNT8
				  FROM OD_ORDER_MAST OOM
					  ,OD_ORDER_ITM OOI
					  ,OD_ORDER_SETL OOS
					  ,OD_RET_INTERFACE ORI
				 WHERE OOM.ORDER_ID = OOI.ORDER_ID
				   AND OOM.ORDER_ID = OOS.ORDER_ID
				   AND OOM.ORDER_ID = ORI.ORDER_ID
				   AND OOS.USE_YN = 'Y'
				   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
				   AND NVL(OOI.GOODS_CANCEL_YN,'N') = 'N'
				   AND ORI.CLAIM_DIV_CD = #search_claimdivcd#
				   AND ORI.TREAT_STUS_CD IN ('002','003')
				   AND ORI.RETRNGD_REFUND_METH_CD IN ('04', '05', '06', '07')
				<include refid="cancelRefundTermSearchCondition"/> /* 환불관리 기간검색 */
				)
	</select>
	<!-- 환불관리 퀵메뉴 카운트 end-->



	<!-- 반품관리 -->
	<!-- 반품관리 검색기간 쿼리 -->
	<sql id="returnGoodsSearchTermCondition">
		<!--  기간 검색 -->
		<isNotEmpty property="search_ymd_type">
			<isNotEmpty property="search_strt_ymd">
				<isNotEmpty property="search_end_ymd">
					<!-- 반품 신청일 -->
					<isEqual property="search_ymd_type" compareValue="claim_req_date">
					AND TO_DATE(A.CLAIM_REQ_YMD, 'YYYYMMDD')
					</isEqual>
					<!-- 반품신청일 end -->
					<!-- 반품완료일 -->
					<isEqual property="search_ymd_type" compareValue="claim_done_date">
					 AND TO_DATE(A.CLAIM_REFUND_YMD, 'YYYYMMDD')
					</isEqual>
					<!-- 반품완료일 end -->
					<!-- 반품완료 예정일 정의 되지 않음 -->
					<isEqual property="search_ymd_type" compareValue="claim_plan_date">
					 AND TO_DATE(OOM.ORDER_CONF_DATE, 'YYYYMMDD')
					</isEqual>
					<!-- 반품완료 예정일 END -->
					 BETWEEN #search_strt_ymd# AND #search_end_ymd#
				</isNotEmpty>
			</isNotEmpty>
		</isNotEmpty>
		<!--  기간 검색 end -->
	</sql>
	<!-- 반품관리 검색기간 쿼리 end-->

	<!-- 반품관리 검색조건 쿼리 -->
	<sql id="returnGoodsSearchCondition">
		<include refid="returnGoodsSearchTermCondition"/> /* 반품관리 기간 검색조건 */
			<!-- 검색구분 -->
		<isEmpty property="search_access_type">
			<isNotEmpty property="search_access_value">
			AND ( OOM.ACCESS_NAME = #search_access_value# OR OOM.ORDRR_NM = #search_access_value#
					OR OOI.RECPTER_NM = #search_access_value# OR OOM.ORDER_ID = #search_access_value#
					OR OOI.GOODS_CD = #search_access_value#
			) /* 검색구분 전체 */
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="search_access_type">
			<isEqual property="search_access_type" compareValue="access_name">
			AND OOM.ACCESS_NAME = #search_access_value#  	/* 주문자ID */
			</isEqual>
			<isEqual property="search_access_type" compareValue="name">
			AND OOM.ORDRR_NM = #search_access_value#		/* 주문자명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="recpter_nm">
			AND OOI.RECPTER_NM = #search_access_value#  	/* 수취인명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="order_id">
			AND OOM.ORDER_ID = #search_access_value#  		/* 주문번호 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="goods_cd">
			AND OOI.GOODS_CD = #search_access_value#  		/* 상품번호 */
			</isEqual>
		</isNotEmpty>
		<!-- 검색구분 END -->
		<isNotEmpty property="search_pavln_id">
			AND OOI.PAVLN_DIV_CD = #search_pavln_id# 		/* 전시관 */
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
			AND OOI.SUPP_COMP_ID = #search_supp_comp_id# 	/* 공급업체 */
		</isNotEmpty>

		<!-- 클레임구분코드 -->
			AND A.CLAIM_DIV_CD = '001' 						/* 001:환불, 002:교환, 003:주문취소 */
		<!-- 클레임구분코드 -->

	   	<!-- 취소상태 -->
	   	<isNotEmpty property="search_cancel_type">
	   		AND A.TREAT_STUS_CD = #search_cancel_type# 		/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
	   	</isNotEmpty>
	   	<!-- 취소상태 end -->

	   	<!-- 매장구분 일반/해외/제휴/창구 구분-->
	   	<isNotEmpty property="searchTab">
	   		<isEqual property="searchTab" compareValue="1">
	   		AND OOI.PAVLN_DIV_CD NOT IN ('07')		/* 일반주문 */
	   		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	   		</isEqual>
	   		<isEqual property="searchTab" compareValue="2">
	   		AND OOI.PAVLN_DIV_CD = '07' 			/* 해외주문 */
	   		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	   		</isEqual>
	  		<isEqual property="searchTab" compareValue="4">
	  		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'	/* 제휴주문*/
	  		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	  		</isEqual>
	   		<isEqual property="searchTab" compareValue="5">
	   		AND ( OOM.WICKET_NO IS NOT NULL AND OOM.WICKET_SHOP_ORDRR_NM IS NOT NULL ) /* 채널구분 창구주문 */
	   		</isEqual>
	   	</isNotEmpty>
	   	<!-- 매장구분 일반/해외 end -->
	</sql>
	<!-- 반품관리 검색조건 쿼리 end -->

	<!-- 반품관리 리스트 조회 카운트 -->
	<select id="selectOrderReturnGoodsListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(OOI.ORDER_ID) AS CNT
			FROM OD_RET_INTERFACE A
					, OD_ORDER_MAST OOM
					, OD_ORDER_ITM OOI
					, OD_ORDER_SETL OOS
			WHERE 1=1
				AND OOM.ORDER_ID 		= OOI.ORDER_ID
				AND A.ORDER_ID(+) 		= OOI.ORDER_ID
				AND A.ORDER_ITM_ID(+) 	= OOI.ORDER_ITM_ID
				AND A.ORDER_ID	 		= OOS.ORDER_ID
		   		<include refid="returnGoodsSearchCondition"/> /* 반품관리 검색조건 */
	</select>
	<!-- 반품관리 리스트 조회 카운트 END -->

	<!-- 반품관리 리스트 조회 -->
	<select id="selectOrderReturnGoodsList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
				SELECT NVL(F_GET_COMN_CD_NM('CLAIM_DIV_CD', A.CLAIM_DIV_CD) || F_GET_COMN_CD_NM('TREAT_STUS_CD', A.TREAT_STUS_CD), ' ') AS TREATSTUSCD
						, A.TREAT_STUS_CD AS ORI_TREATSTUSCD
						, OOI.ORDER_ID
						, OOI.ORDER_ITM_ID
						, NVL(TO_CHAR(TO_DATE(A.CLAIM_REQ_YMD, 'YYYY-MM-DD')), ' ') AS CLM_DTIME
						, NVL(TO_CHAR(TO_DATE(A.CLAIM_REFUND_YMD, 'YYYY-MM-DD')), ' ') AS CLM_FIN_DTIME
						, NVL(OOI.REGI_NO, ' ') AS REGI_NO
						, F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) AS PAVLN_DIV_CD 			/* 전시관 */
						, OOI.SUPP_COMP_NM
						, OOI.GOODS_CD
						, OOI.GOODS_NM
						, NVL( F_GET_ORDER_ITM_GOODS_OPTN_NM(OOI.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD), ' ') AS GOODS_OPTN_NM
						, NVL(OOI.REQ_CNT, 0) AS REQ_CNT
						, TO_CHAR( NVL(OOI.CNSMR_PRC, 0), '999,999,999,999') AS CNSMR_PRC  				/* 판매금액(소비자가) */
						, TO_CHAR( NVL(OOI.DC_APPLY_PRC, 0), '999,999,999,999') AS DC_APPLY_PRC 		/*주문금액 */
						/*, OOS.SETL_APPR_AMT */ /*결제금액 */
						, TO_CHAR( NVL(OOI.DC_APPLY_PRC, 0), '999,999,999,999') AS SETL_APPR_AMT 		/* 결제테스트전까지 임시 */
						, NVL(A.CLAIM_REASN_CONT, ' ') AS CLM_MEMO /*클레임메모 */
						, OOM.ACCESS_NAME RECR_ID /* 접수자ID */
						, A.CLAIM_REQ_SEQ AS CLAIMREQSEQ /* 클레임번호 */
						, NVL(F_GET_COMN_CD_NM('HDRYCO_CD',  A.CLAIM_HDRYCOCD), ' ') AS RTGS_HDC_CD 	/*반품택배사 */
						, NVL(A.CLAIM_INV_NO, ' ') AS RTGS_INV_NO  /*반품송장 */

						/* 컬럼누락, A.REQADDR || ' ' || REQDTAILADDR SNDR_POST_ADDR */	/* 반품수거지 */
						, ' ' AS  SNDR_POST_ADDR	/* 반품수거지 */

						, A.CLAIM_RECPTER_ADDR1 || ' ' || A.CLAIM_RECPTER_ADDR2 AS RECV_POST_ADDR 		/* 반품 배송지 */
						, ROW_NUMBER() OVER(ORDER BY A.CLAIM_REQ_YMD, A.CLAIM_REFUND_YMD) AS TNUM
						, OOM.SETL_MEAN_CD
					FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS
					WHERE 1=1
						AND OOM.ORDER_ID		 = OOI.ORDER_ID
						AND A.ORDER_ID(+)		= OOI.ORDER_ID
						AND A.ORDER_ITM_ID(+)	= OOI.ORDER_ITM_ID
						AND A.ORDER_ID	 		= OOS.ORDER_ID

		   		<include refid="returnGoodsSearchCondition"/> /* 반품관리 검색조건 */
					ORDER BY OOI.ORDER_ID, A.CLAIM_REQ_YMD, A.CLAIM_REFUND_YMD DESC
		<include refid="pagingFooter"/>
	</select>
	<!-- 반품관리 리스트 조회 end -->

	<!-- 반품관리 상태변경 -->
	<update id="updateOrderReturnUpdate" parameterClass="java.util.HashMap">
		UPDATE OD_RET_INTERFACE SET
				  CLAIM_DIV_CD		= #searchClaimdivcd# 								/* 001:환불, 002:교환, 003:주문취소 */
				, TREAT_STUS_CD 	= #searchTreatstuscd# 								/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
				, CLAIM_REFUND_YMD 	= (SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') FROM DUAL) 	/* 클레임환불일자 */
				, CLAIM_REFUND_HMS 	= (SELECT TO_CHAR(SYSDATE, 'HH24MISS') FROM DUAL) 	/* 클레임환불시각 */

		WHERE 1=1
			AND ORDER_ID  		= #orderId#
			AND ORDER_ITM_ID	= #searchOrderItmId#

	</update>
	<!-- 반품관리 상태변경 end -->


	<!-- 반품관리 퀵메뉴 카운트 -->
	<select id="selectClaimReturnItemCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(CNT1) AS CNT1
				, SUM(CNT2) AS CNT2
				, SUM(CNT3) AS CNT3
				, SUM(CNT4) AS CNT4
				, SUM(CNT5) AS CNT5
			FROM
				(
					SELECT COUNT(*) AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							/* , OD_ORDER_SETL OOS */
						WHERE 1=1
							AND OOM.ORDER_ID		 = OOI.ORDER_ID
							AND A.ORDER_ID(+)		= OOI.ORDER_ID
							AND A.ORDER_ITM_ID(+)	= OOI.ORDER_ITM_ID
							AND A.CLAIM_DIV_CD = '001' 	/* 001:환불, 002:교환, 003:주문취소 */
							AND A.TREAT_STUS_CD = '000' /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */

				<include refid="returnGoodsSearchTermCondition"/> /* 반품관리 기간 검색조건 */
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2			/*  반품보류 */
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
						FROM DUAL
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3			/* 자동반품완료 보류 */
							, 0 AS CNT4
							, 0 AS CNT5
						FROM DUAL
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4			/* 1영업일 후 자동반품완료 신청 */
							, 0 AS CNT5
						FROM DUAL
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5			/* 1영업일 후 자동반품완료 보류 */
						FROM DUAL
				)
	</select>
	<!-- 반품관리 퀵메뉴 카운트 end-->

	<!-- 교환관리 -->
	<!-- 교환관리 일자 검색조건 쿼리 -->
	<sql id="exChangeSearchTermCondition">
	   	<!--  기간 검색 -->
		<isNotEmpty property="search_ymd_type">
			<isNotEmpty property="search_strt_ymd">
				<isNotEmpty property="search_end_ymd">
					<!-- 반품 신청일 -->
					<isEqual property="search_ymd_type" compareValue="claim_req_date">
					AND TO_DATE(A.CLAIM_REQ_YMD, 'YYYYMMDD')
					</isEqual>
					<!-- 반품신청일 end -->
					<!-- 반품완료일 -->
					<isEqual property="search_ymd_type" compareValue="claim_done_date">
					 AND TO_DATE(A.CLAIM_REFUND_YMD, 'YYYYMMDD')
					</isEqual>
					<!-- 반품완료일 end -->
					<!-- 반품완료 예정일 정의 되지 않음 -->
					<isEqual property="search_ymd_type" compareValue="claim_plan_date">
					 AND TO_DATE(OOM.ORDER_CONF_DATE, 'YYYYMMDD')
					</isEqual>
					<!-- 반품완료 예정일 END -->
					 BETWEEN #search_strt_ymd# AND #search_end_ymd#
				</isNotEmpty>
			</isNotEmpty>
		</isNotEmpty>
		<!--  기간 검색 end -->
	</sql>
	<!-- 교환관리 일자 검색조건 쿼리 -->

	<!-- 교환관리 검색조건 쿼리 -->
	<sql id="exChangeSearchCondition">
	<include refid="exChangeSearchTermCondition"/> /* 교환관리 일자 검색조건 */
		<!-- 검색구분 -->
		<isEmpty property="search_access_type">
			<isNotEmpty property="search_access_value">
			AND ( OOM.ACCESS_NAME = #search_access_value# OR OOM.ORDRR_NM = #search_access_value#
					OR OOI.RECPTER_NM = #search_access_value# OR OOM.ORDER_ID = #search_access_value#
					OR OOI.GOODS_CD = #search_access_value#
			) /* 검색구분 전체 */
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="search_access_type">
			<isEqual property="search_access_type" compareValue="access_name">
			AND OOM.ACCESS_NAME = #search_access_value#  	/* 주문자ID */
			</isEqual>
			<isEqual property="search_access_type" compareValue="name">
			AND OOM.ORDRR_NM = #search_access_value#  		/* 주문자명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="recpter_nm">
			AND OOI.RECPTER_NM = #search_access_value#  	/* 수취인명 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="order_id">
			AND OOM.ORDER_ID = #search_access_value#  		/* 주문번호 */
			</isEqual>
			<isEqual property="search_access_type" compareValue="goods_cd">
			AND OOI.GOODS_CD = #search_access_value#  		/* 상품번호 */
			</isEqual>
		</isNotEmpty>
		<!-- 검색구분 END -->
		<isNotEmpty property="search_pavln_id">
			AND OOI.PAVLN_DIV_CD = #search_pavln_id# 		/* 전시관 */
		</isNotEmpty>
		<isNotEmpty property="search_supp_comp_id">
			AND OOI.SUPP_COMP_ID = #search_supp_comp_id# 	/* 공급업체 */
		</isNotEmpty>

		<!-- 클레임구분코드 -->
	   		AND A.CLAIM_DIV_CD = '002' 						/* 001:환불, 002:교환, 003:주문취소 */
		<!-- 클레임구분코드 -->

	   	<!-- 취소상태 -->
	   	<isNotEmpty property="search_cancel_type">
	   		AND A.TREAT_STUS_CD = #search_cancel_type# 		/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
	   	</isNotEmpty>
	   	<!-- 취소상태 end -->

	   	<!-- 매장구분 일반/해외/제휴/창구/패션B2B 구분 -->
	   	<isNotEmpty property="searchTab">
	   		<isEqual property="searchTab" compareValue="1">
	   		AND OOI.PAVLN_DIV_CD NOT IN ('07') 		/* 일반주문 */
	   		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	   		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'	/* 제휴주문 제외 */
	   		</isEqual>
	   		<isEqual property="searchTab" compareValue="2">
	   		AND OOI.PAVLN_DIV_CD = '07' 			/* 해외주문 */
	   		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	   		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'	/* 제휴주문 제외 */
	   		</isEqual>
	  		<isEqual property="searchTab" compareValue="4">
	  		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'Y'	/* 제휴주문 */
	  		AND OOM.WICKET_SHOP_ORDRR_NM IS NULL	/* 창구주문 제외 */
	  		AND OOI.PAVLN_DIV_CD NOT IN ('07', '08')/* 해외주문, 패션B2B주문 제외 */
	  		</isEqual>
	   		<isEqual property="searchTab" compareValue="5">
	   		AND ( OOM.WICKET_NO IS NOT NULL AND OOM.WICKET_SHOP_ORDRR_NM IS NOT NULL ) /* 채널구분 창구주문 */
	   		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'	/* 제휴주문 제외 */
	   		AND OOI.PAVLN_DIV_CD NOT IN ('07', '08')/* 해외주문, 패션B2B주문 제외*/
	   		</isEqual>
	   		<isEqual property="searchTab" compareValue="6">
	   		AND OOI.PAVLN_DIV_CD = '08' 			/* 패션B2B주문 */
	   		AND NVL(OOM.COPRTN_ORDER_YN, 'N') = 'N'	/* 제휴주문 제외 */
	   		AND OOI.PAVLN_DIV_CD NOT IN ('07')		/* 해외주문 */
	   		</isEqual>
	   	</isNotEmpty>
	   	<!-- 매장구분 일반/해외 end -->

	</sql>
	<!-- 교환관리 검색조건 쿼리 end -->

	<!-- 교환관리 리스트 조회 카운트 -->
	<select id="selectOrderExchangeListCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(OOI.ORDER_ID) AS CNT
			FROM OD_RET_INTERFACE A
					, OD_ORDER_MAST OOM
					, OD_ORDER_ITM OOI
					, OD_ORDER_SETL OOS
			WHERE 1=1
				AND OOM.ORDER_ID 		= OOI.ORDER_ID
				AND A.ORDER_ID(+) 		= OOI.ORDER_ID
				AND A.ORDER_ITM_ID(+) 	= OOI.ORDER_ITM_ID
				AND A.ORDER_ID	 		= OOS.ORDER_ID
		   		<include refid="exChangeSearchCondition"/> /* 교환관리 검색조건 */
	</select>
	<!-- 교환관리 리스트 조회 카운트 END -->

	<!-- 교환관리 리스트 조회 -->
	<select id="selectOrderExchangeList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
				SELECT NVL(F_GET_COMN_CD_NM('CLAIM_DIV_CD', A.CLAIM_DIV_CD) || F_GET_COMN_CD_NM('TREAT_STUS_CD', A.TREAT_STUS_CD), ' ') AS TREATSTUSCD
						, A.TREAT_STUS_CD AS ORI_TREATSTUSCD
						, OOI.ORDER_ID
						, OOI.ORDER_ITM_ID
						, NVL(TO_CHAR(TO_DATE(A.CLAIM_REQ_YMD, 'YYYY-MM-DD')), ' ') AS CLM_DTIME
						, NVL(TO_CHAR(TO_DATE(A.CLAIM_REFUND_YMD, 'YYYY-MM-DD')), ' ') AS CLM_FIN_DTIME
						, NVL(OOI.REGI_NO, ' ') AS REGI_NO
						, F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) AS PAVLN_DIV_CD 		/* 전시관 */
						, OOI.SUPP_COMP_NM
						, OOI.GOODS_CD
						, OOI.GOODS_NM
						, NVL( F_GET_ORDER_ITM_GOODS_OPTN_NM(OOI.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD), ' ') AS GOODS_OPTN_NM
						, NVL(OOI.REQ_CNT, 0) AS REQ_CNT
						, TO_CHAR( NVL(OOI.CNSMR_PRC, 0), '999,999,999,999') AS CNSMR_PRC  			/* 판매금액(소비자가) */
						, TO_CHAR( NVL(OOI.DC_APPLY_PRC, 0), '999,999,999,999') AS DC_APPLY_PRC 	/* 주문금액 */
						/*, OOS.SETL_APPR_AMT */ /*결제금액 */
						, TO_CHAR( NVL(OOI.DC_APPLY_PRC, 0), '999,999,999,999') AS SETL_APPR_AMT 	/* 결제테스트전까지 임시 */
						, NVL(A.CLAIM_REASN_CONT, ' ') AS CLM_MEMO 									/* 클레임메모 */
						, OOM.ACCESS_NAME RECR_ID 													/* 접수자ID */
						, A.CLAIM_REQ_SEQ AS CLAIMREQSEQ 											/* 클레임번호 */
 						/* , B.CLM_DTL_SN  클레임내역일련번호 */
						/*, (
								SELECT CSCM.SEND_MEAN_MBY_DIV_CD
									FROM CO_SUPP_COMP_MAST CSCM WHERE CSCM.SUPP_COMP_ID = OOI.SUPP_COMP_ID) AS SEND_MEAN_MBY_DIV_CD
						공급업체 배송수단(계약택배)유무 */
						, ROW_NUMBER() OVER(ORDER BY A.CLAIM_REQ_YMD, A.CLAIM_REFUND_YMD) AS TNUM
						, OOM.SETL_MEAN_CD
					FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS
					WHERE 1=1
						AND OOM.ORDER_ID		= OOI.ORDER_ID
						AND A.ORDER_ID(+)		= OOI.ORDER_ID
						AND A.ORDER_ITM_ID(+)	= OOI.ORDER_ITM_ID
						AND A.ORDER_ID	 		= OOS.ORDER_ID
		   		<include refid="exChangeSearchCondition"/> /* 교환관리 검색조건 */
					ORDER BY OOI.ORDER_ID, A.CLAIM_REQ_YMD, A.CLAIM_REFUND_YMD DESC
		<include refid="pagingFooter"/>
	</select>
	<!-- 교환관리 리스트 조회 end -->

	<!-- 교환관리 교환발송처리 민간(안) 입력 -->
	<insert id="insertOrderClaimExchangeDelivery" parameterClass="java.util.HashMap">
		UPDATE OD_RET_INTERFACE SET
			HDRYCOCD		= #exch_hdc_cd#		/* 클레임 택배사코드 */
		  , CLAIM_INV_NO	= #exch_inv_no#		/* 클레임 송장번호 */

		WHERE 1=1
			AND ORDER_ID  		= #orderId#
			AND ORDER_ITM_ID	= #searchOrderItmId#
	</insert>
	<!-- 교환관리 교환발송처리 민간(안) 입력 -->

	<!-- 교환관리 퀵메뉴 카운트 -->
	<select id="selectClaimExchangeItemCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(CNT1) AS CNT1
				, SUM(CNT2) AS CNT2
				, SUM(CNT3) AS CNT3
				, SUM(CNT4) AS CNT4
				, SUM(CNT5) AS CNT5
				, SUM(CNT6) AS CNT6

			FROM
				(
					/*전체*/
					SELECT COUNT(*) AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
							, 0 AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS

						WHERE 1=1
							AND OOM.ORDER_ID	  = OOI.ORDER_ID
							AND A.ORDER_ID(+)	  = OOI.ORDER_ID
							AND A.ORDER_ITM_ID(+) = OOI.ORDER_ITM_ID
							AND A.ORDER_ID	 	  = OOS.ORDER_ID
							AND A.CLAIM_DIV_CD	= '002' 	/* 001:환불, 002:교환, 003:주문취소 */
							AND A.TREAT_STUS_CD   IN ('000', '001', '002', '003', '004') 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */

							<include refid="exChangeSearchTermCondition"/> /* 교환관리 일자검색조건 */

					/* 교환신청 */
					UNION
					SELECT 0 AS CNT1
							, COUNT(*) AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
							, 0 AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS

						WHERE 1=1
							AND OOM.ORDER_ID	  = OOI.ORDER_ID
							AND A.ORDER_ID(+)	  = OOI.ORDER_ID
							AND A.ORDER_ITM_ID(+) = OOI.ORDER_ITM_ID
							AND A.ORDER_ID		= OOS.ORDER_ID
							AND A.CLAIM_DIV_CD	= '002' 	/* 001:환불, 002:교환, 003:주문취소 */
							AND A.TREAT_STUS_CD   = '000' 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
							<include refid="exChangeSearchTermCondition"/> /* 교환관리 일자검색조건 */


					/* 교환접수 */
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, COUNT(*) AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
							, 0 AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS

						WHERE 1=1
							AND OOM.ORDER_ID	  = OOI.ORDER_ID
							AND A.ORDER_ID(+)	  = OOI.ORDER_ID
							AND A.ORDER_ITM_ID(+) = OOI.ORDER_ITM_ID
							AND A.ORDER_ID		= OOS.ORDER_ID
							AND A.CLAIM_DIV_CD	= '002' 	/* 001:환불, 002:교환, 003:주문취소 */
							AND A.TREAT_STUS_CD   = '001' 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
							<include refid="exChangeSearchTermCondition"/> /* 교환관리 일자검색조건 */

					/* 교환확인 */
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, COUNT(*) AS CNT4
							, 0 AS CNT5
							, 0 AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS

						WHERE 1=1
							AND OOM.ORDER_ID	  = OOI.ORDER_ID
							AND A.ORDER_ID(+)	  = OOI.ORDER_ID
							AND A.ORDER_ITM_ID(+) = OOI.ORDER_ITM_ID
							AND A.ORDER_ID		= OOS.ORDER_ID
							AND A.CLAIM_DIV_CD	= '002' 	/* 001:환불, 002:교환, 003:주문취소 */
							AND A.TREAT_STUS_CD   = '001' 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
							<include refid="exChangeSearchTermCondition"/> /* 교환관리 일자검색조건 */

					/* 교환처리완료 */
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, COUNT(*) AS CNT5
							, 0 AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS

						WHERE 1=1
   						  AND OOM.ORDER_ID		= OOI.ORDER_ID
						  AND A.ORDER_ID(+)		= OOI.ORDER_ID
						  AND A.ORDER_ITM_ID(+)	= OOI.ORDER_ITM_ID
						  AND A.ORDER_ID		= OOS.ORDER_ID
						  AND A.CLAIM_DIV_CD	= '002' 	/* 001:환불, 002:교환, 003:주문취소 */
						  AND A.TREAT_STUS_CD   = '003' 	/* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
						  <include refid="exChangeSearchTermCondition"/> /* 교환관리 일자검색조건 */

					/*최근 3일간 교환 완료*/
					UNION
					SELECT 0 AS CNT1
							, 0 AS CNT2
							, 0 AS CNT3
							, 0 AS CNT4
							, 0 AS CNT5
							, COUNT(*) AS CNT6

						FROM OD_RET_INTERFACE A
							, OD_ORDER_MAST OOM
							, OD_ORDER_ITM OOI
							, OD_ORDER_SETL OOS
						WHERE 1=1
						  AND OOM.ORDER_ID	  = OOI.ORDER_ID
						  AND A.ORDER_ID(+)	 = OOI.ORDER_ID
						  AND A.ORDER_ID		= OOS.ORDER_ID
						  AND A.ORDER_ITM_ID(+) = OOI.ORDER_ITM_ID
						  AND A.CLAIM_DIV_CD	= '002'		/* 001:환불, 002:교환, 003:주문취소 */
						  AND A.TREAT_STUS_CD   = '003'	 /* 000:신청, 001:접수, 002:확인, 003:처리완료, 004:취소 */
						  AND TO_DATE(A.CLAIM_REQ_YMD, 'YYYYMMDD') BETWEEN TO_CHAR(SYSDATE-3, 'YYYYMMDD') AND TO_CHAR(SYSDATE, 'YYYYMMDD')

				)
	</select>
	<!-- 교환관리 퀵메뉴 카운트 end-->

	<!-- OD_ORDER_MAST UPDATE -->
	<update id="updateOrderMastClaim" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_MAST SET

				 ORDER_STUS_CD = #searchOrderStusCd#						/* 주문 상태 코드 */
				, CHG_DATE = SYSDATE										/* 수정 일시 */
				, CHGER_ID = #chger_id#										/* 수정자 아이디 */
				, REFUND_YMD = SYSDATE										/* 환불 일자 */

				<isEqual property="searchClaimdivcd" compareValue="003">	/* 주문취소일 경우 */
				, ORDER_CANCEL_DATE = SYSDATE								/* 주문 취소 일시 */
				</isEqual>

				<isEqual property="searchClaimdivcd" compareValue="001">	/* 환불일 경우 */
				, ORDER_CANCEL_DATE = SYSDATE								/* 주문 취소 일시 */
				/*, REFUND_AMT						환불금액 */
				/*, PNT_REFUND_SETL_AMT 			포인트 환불 결제 금액 */
				/*, PREMI_CUST_PNT_REFUND_APRV_AMT 	우수 고객 포인트 환불 결재 금액 */
				</isEqual>

		WHERE 1=1
			AND ORDER_ID = #orderId#
	</update>

	<!-- OD_ORDER_ITM UPDATE -->
	<update id="updateOrderItmClaim" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM SET
				  ORDER_STUS_CD = #searchOrderStusCd#			/* 주문 상세 상태 코드 */
				, CHG_DATE = SYSDATE										/* 수정 일시 */
				, CHGER_ID = #chger_id#										/* 수정자 아이디 */

				<isEqual property="searchClaimdivcd" compareValue="003">	/* 주문취소일 경우 */
				, GOODS_CANCEL_YN = 'Y'										/* 상품 취소 여부 */
				, GOODS_CANCEL_DATE = SYSDATE								/* 상품 취소 일시 */
				</isEqual>

				<isEqual property="searchClaimdivcd" compareValue="001">	/* 환불일 경우 */
				/*, REFUND_AMT						환불금액 */
				/*, PNT_REFUND_SETL_AMT 			포인트 환불 결제 금액 */
				/*, PREMI_CUST_PNT_REFUND_APRV_AMT 	우수 고객 포인트 환불 결재 금액 */
				</isEqual>


		WHERE 1=1
			AND ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- OD_ORDER_MAST_HISTOR INSERT -->
	<insert id="insertOrderMastHistClaim" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_HISTOR
		(ORDER_ID, ACCESS_NAME, ORDRR_RECOM_PO_CD, RECOM_PO_RGISTPOCD, ORDRR_RECOM_ACCESS_NAME, BUYER_AGREE_YN, RECRTER_ID, RECRTER_INFO, SUPPO_DLIV_MATTER, RECEVPO_RGISTPOCD, RECEV_CANCELPO, WICKET_NO, WICKET_SHOP_ORDRR_NM, ORDER_MDA_DIV_CD, ORDER_TYP_CD, ORDER_DATE, APPR_DATE, ORDER_STUS_CD, ORDER_CONF_DATE, ORDER_CANCEL_DATE, CANCEL_REQ_CONT, CANCEL_REQ_REASN, TOT_CNSMR_PRC, TOT_STD_SELL_PRC, TOT_PUCHAS_PRC, TOT_DC_APPLY_PRC, TOT_SEND_PRC, EXRATE, SETL_DUE_AMT, TOT_CPN_DC_AMT, PNT_USE_AMT, PO_PNT_USE_AMT, OKCASH_APPLY_DIV_CD, OKCASH_ACCML_AMT, OKCASH_USE_AMT, SETL_AMT, REFUND_AMT, REFUND_YMD, PNT_USE_YN, PNT_ACCML_PNT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_USEYN, PREMI_CUST_PNT_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, THNKS_CPN_CREATE_YMD, THNKS_CPN_EMAIL_SEND_YMD, PO_CHECK_CARD_CPN_YMD, SETL_MEAN_CD, SETL_STUS_CD, SETL_APPR_TOT_AMT, MONEY_RCIPT_ISSUE_YN, PO_FNC_YN, COPRTN_ORDER_DIV_CD, PARTNR_ID, COPRTN_ORDER_YN, COPRTN_ORDER_NO, COPRTN_ORDER_SEQ, COPRTN_SHOPMALL_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, FIX_RESRV_ORDER_YN, ORDRR_NM, ORDRR_ZIPCD, ORDRR_ADDR1, ORDRR_ADDR2, ORDRR_TELNO, ORDRR_HTELNO, ORDRR_EMAIL, ORDRR_ADDR_DIV_CD)
		SELECT ORDER_ID, ACCESS_NAME, ORDRR_RECOM_PO_CD, RECOM_PO_RGISTPOCD, ORDRR_RECOM_ACCESS_NAME, BUYER_AGREE_YN, RECRTER_ID, RECRTER_INFO, SUPPO_DLIV_MATTER, RECEVPO_RGISTPOCD, RECEV_CANCELPO, WICKET_NO, WICKET_SHOP_ORDRR_NM, ORDER_MDA_DIV_CD, ORDER_TYP_CD, ORDER_DATE, APPR_DATE, ORDER_STUS_CD, ORDER_CONF_DATE, ORDER_CANCEL_DATE, CANCEL_REQ_CONT, CANCEL_REQ_REASN, TOT_CNSMR_PRC, TOT_STD_SELL_PRC, TOT_PUCHAS_PRC, TOT_DC_APPLY_PRC, TOT_SEND_PRC, EXRATE, SETL_DUE_AMT, TOT_CPN_DC_AMT, PNT_USE_AMT, PO_PNT_USE_AMT, OKCASH_APPLY_DIV_CD, OKCASH_ACCML_AMT, OKCASH_USE_AMT, SETL_AMT, REFUND_AMT, REFUND_YMD, PNT_USE_YN, PNT_ACCML_PNT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_USEYN, PREMI_CUST_PNT_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, THNKS_CPN_CREATE_YMD, THNKS_CPN_EMAIL_SEND_YMD, PO_CHECK_CARD_CPN_YMD, SETL_MEAN_CD, SETL_STUS_CD, SETL_APPR_TOT_AMT, MONEY_RCIPT_ISSUE_YN, PO_FNC_YN, COPRTN_ORDER_DIV_CD, PARTNR_ID, COPRTN_ORDER_YN, COPRTN_ORDER_NO, COPRTN_ORDER_SEQ, COPRTN_SHOPMALL_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, FIX_RESRV_ORDER_YN, ORDRR_NM, ORDRR_ZIPCD, ORDRR_ADDR1, ORDRR_ADDR2, ORDRR_TELNO, ORDRR_HTELNO, ORDRR_EMAIL, ORDRR_ADDR_DIV_CD
		  FROM OD_ORDER_MAST
		 WHERE ORDER_ID = #orderId#
	</insert>

	<!-- OD_ORDER_ITM_HISTOR INSERT -->
	<insert id="insertOrderItmHistClaim" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_ITM_HISTOR(
			ORDER_ITM_ID, ORDER_ITM_CHG_DATE, ORIG_ORDER_ITM_ID, ORDER_ID, PAVLN_ID, PAVLN_DIV_CD, SUPP_COMP_ID, SUPP_COMP_NM, SUPPO_RGIST_POCD, SUPP_PO_NM, GOODS_CD, GOODS_NM, GOODS_OPTN_GRP_SEQ, GOODS_OPTN_SEQ, REQ_CNT, GOODS_RETRNGD_DATE, ORDER_DTAIL_STUS_CD, ORDER_TYP_CD, GOODS_CANCEL_YN, GOODS_CANCEL_DATE, CNSMR_PRC, STD_SELL_PRC, PUCHAS_PRC, DC_APPLY_PRC, OPTN_GOODS_APPLY_PRC, CPN_DC_AMT, PNT_USE_AMT, PNT_ACCML_PNT, PO_PNT_USE_AMT, OKCASH_USE_AMT, PREMI_CUST_PNT_SETL_AMT, REFUND_AMT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, SEND_PRC, PRCL_AMT, IMMPMN_PRCL_AMT, AFTPMN_PRCL_AMT, EMS_AMT, EMS_DC_AMT, EMS_DCRATE, EMS_DOLAR_AMT, WGHT, VOLM, KIND_DIV_CD, AIR_SEND_YN, FRN_EXP_DIV_CD, PRCLTAXIN, STD_DIV_CD, GOODS_DIV_NO, FLWR_DELIVPO_SIGN, BALTSHT_PRT_YN, FIX_RESRV_ORDER_GOODS_YN, CPN_USE_YN, EVENT_DC_GOODS_YN, EVENT_DIV_CD, EVENT_ID, GIFT_ORDER_YN, GIFT_CANCEL_YN, EVENT_GOODS_SEQ, EXTRA_GOODS_YN, EXTRA_GOODS_CNT, EXTRA_GOODS_SEQ, RGR_GOODS_YN, RGR_GOODS_SEQ, RGR_GOODS_PRC, CORPSPCSAL_GOODS_YN, CORPSPCSAL_GOODS_SEQ, PLNBEF_GOODS_YN, PLNBEF_ID, CRRGR_CARD_USE_YN, WISH_SEND_DATE, TDAY_EXP_YN, DOM_EXP_YN, OVSEA_SEND_GOODS_YN, DELIV_CERT_YN, FLWRDELIV_SMS_DONE_DATE, FLWRDELIV_DELAY_REASN_CD, SEND_MSG, SENDER_NM, SENDER_ZIPCD, SENDER_ADDR1, SENDER_ADDR2, SENDER_TELNO, SENDER_HTELNO, SENDER_EMAIL, SENDER_ADDR_DIV_CD, RECPTER_NM, RECPTER_HONOR_CD, RECPTER_ZIPCD, RECPTER_ADDR1, RECPTER_ADDR2, RECPTER_TELNO, RECPTER_HTELNO, RECPTER_EMAIL, RECPTER_ADDR_DIV_CD, SENDPO_RGIST_POCD, HS_CD, SEND_TYP_CD, SEND_NATION_CD, SEND_AREA_CD, REGI_NO, REPRSNT_REGI_NO, REGI_NO_CREATE_DIV_CD, SEND_CONF_DATE, SEND_STRT_DATE, SEND_DONE_DATE, ORDER_CANCEL_ADJ_YN, REALRECPTER, INSTL_DUEDD, SMS_RECV_YN, MANY_ORDER_NO, BUND_SEND_YN, EPOST_MLG_ID, CANCEL_REQ_YMD, RETRNGD_YN, FLWRDELIV_DELAY_REASN, SENDER_VIRTL_NO, RECPTER_VIRTL_NO, TAXBIL_ADJ_YN, FLWRDELIV_SMS_RSLT, SUPPCOMP_SMS_TX_YN, SENDER_SMS_TX_YN, ADJ_YN, ADJ_CARD_REFUND_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, SUPP_NOTIC_DD_PER_SEQ, UPDATE_ITEM, UPDATE_CONT)
		SELECT ORDER_ITM_ID, SYSDATE, ORIG_ORDER_ITM_ID, ORDER_ID, PAVLN_ID, PAVLN_DIV_CD, SUPP_COMP_ID, SUPP_COMP_NM, SUPPO_RGIST_POCD, SUPP_PO_NM, GOODS_CD, GOODS_NM, GOODS_OPTN_GRP_SEQ, GOODS_OPTN_SEQ, REQ_CNT, GOODS_RETRNGD_DATE, ORDER_DTAIL_STUS_CD, ORDER_TYP_CD, GOODS_CANCEL_YN, GOODS_CANCEL_DATE, CNSMR_PRC, STD_SELL_PRC, PUCHAS_PRC, DC_APPLY_PRC, OPTN_GOODS_APPLY_PRC, CPN_DC_AMT, PNT_USE_AMT, PNT_ACCML_PNT, PO_PNT_USE_AMT, OKCASH_USE_AMT, PREMI_CUST_PNT_SETL_AMT, REFUND_AMT, PNT_REFUND_SETL_AMT, PREMI_CUST_PNT_REFUND_APRV_AMT, SEND_PRC, PRCL_AMT, IMMPMN_PRCL_AMT, AFTPMN_PRCL_AMT, EMS_AMT, EMS_DC_AMT, EMS_DCRATE, EMS_DOLAR_AMT, WGHT, VOLM, KIND_DIV_CD, AIR_SEND_YN, FRN_EXP_DIV_CD, PRCLTAXIN, STD_DIV_CD, GOODS_DIV_NO, FLWR_DELIVPO_SIGN, BALTSHT_PRT_YN, FIX_RESRV_ORDER_GOODS_YN, CPN_USE_YN, EVENT_DC_GOODS_YN, EVENT_DIV_CD, EVENT_ID, GIFT_ORDER_YN, GIFT_CANCEL_YN, EVENT_GOODS_SEQ, EXTRA_GOODS_YN, EXTRA_GOODS_CNT, EXTRA_GOODS_SEQ, RGR_GOODS_YN, RGR_GOODS_SEQ, RGR_GOODS_PRC, CORPSPCSAL_GOODS_YN, CORPSPCSAL_GOODS_SEQ, PLNBEF_GOODS_YN, PLNBEF_ID, CRRGR_CARD_USE_YN, WISH_SEND_DATE, TDAY_EXP_YN, DOM_EXP_YN, OVSEA_SEND_GOODS_YN, DELIV_CERT_YN, FLWRDELIV_SMS_DONE_DATE, FLWRDELIV_DELAY_REASN_CD, SEND_MSG, SENDER_NM, SENDER_ZIPCD, SENDER_ADDR1, SENDER_ADDR2, SENDER_TELNO, SENDER_HTELNO, SENDER_EMAIL, SENDER_ADDR_DIV_CD, RECPTER_NM, RECPTER_HONOR_CD, RECPTER_ZIPCD, RECPTER_ADDR1, RECPTER_ADDR2, RECPTER_TELNO, RECPTER_HTELNO, RECPTER_EMAIL, RECPTER_ADDR_DIV_CD, SENDPO_RGIST_POCD, HS_CD, SEND_TYP_CD, SEND_NATION_CD, SEND_AREA_CD, REGI_NO, REPRSNT_REGI_NO, REGI_NO_CREATE_DIV_CD, SEND_CONF_DATE, SEND_STRT_DATE, SEND_DONE_DATE, ORDER_CANCEL_ADJ_YN, REALRECPTER, INSTL_DUEDD, SMS_RECV_YN, MANY_ORDER_NO, BUND_SEND_YN, EPOST_MLG_ID, CANCEL_REQ_YMD, RETRNGD_YN, FLWRDELIV_DELAY_REASN, SENDER_VIRTL_NO, RECPTER_VIRTL_NO, TAXBIL_ADJ_YN, FLWRDELIV_SMS_RSLT, SUPPCOMP_SMS_TX_YN, SENDER_SMS_TX_YN, ADJ_YN, ADJ_CARD_REFUND_FEE, REG_DATE, CHG_DATE, REGER_ID, CHGER_ID, SUPP_NOTIC_DD_PER_SEQ, UPDATE_ITEM, UPDATE_CONT
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</insert>
	<!-- 클레임 관리 20160403 개편: end -->

	<!-- 주문취소 주문번호 조회 -->
	<select id="selectOrderCancelList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT ORDER_ID
			  ,SETL_MEAN_CD
			  ,SETL_APPR_TOT_AMT
			  ,COORIG_NO
			  ,OKCASH_APPLY_DIV_CD
			  ,OKCASH_ACCML_AMT
			  ,OKCASH_USE_AMT
			  /* ,SPCSAL_CORP_ID
			  ,SPCSAL_EVENT_ID */
		  FROM OD_ORDER_MAST
		 WHERE 1=1
		   AND ORDER_ID IN
				<iterate property="searchOrderIds" open="("  close=")" conjunction=",">
					#searchOrderIds[]#
				</iterate>
	</select>

	<!-- 주문취소아이템 조회 -->
	<select id="selectOrderItmCancelList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT OOI.ORDER_ITM_ID																						/* 주문아이템ID */
			 , OOI.ORDER_ID																							/* 주문ID */
			 , OOI.PAVLN_ID																							/* 전시관코드 */
			 , OOI.SUPP_COMP_ID																						/* 공급업체ID */
			 , OOI.SUPP_COMP_NM																						/* 공급업체명 */
			 , OOI.SUPPO_RGIST_POCD																					/* 공급국등기용국기호 */
			 , OOI.GOODS_CD																							/* 상품코드 */
			 , OOI.GOODS_NM																							/* 상품명 */
			 , OOI.SEND_PRC																							/* 배송비 */
			 , OOI.GOODS_CANCEL_DATE																				/* 취소일시 */
			 , OOM.ORDRR_EMAIL																						/* 주문자이메일 */
			 , OOM.ORDER_DATE																						/* 주문일시 */
			 , OOM.ACCESS_NAME																						/* 주문자ID */
			 , OOM.ORDRR_NM																							/* 주문자명 */
			 , OOM.ORDER_STUS_CD																					/* 주문상태코드 */
			 , NVL(F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD), ' ') AS ORDER_STUS_NM						/* 주문상태명 */
			 , OOM.SETL_MEAN_CD																						/* 결제수단코드 */
			 , NVL(F_GET_COMN_CD_NM('SETL_MEAN_CD', OOM.SETL_MEAN_CD), ' ') AS SETL_MEAN_NM							/* 결제수단명 */
			 , OOI.ORDER_STUS_CD																					/* 주문상태코드 */
			 , NVL(F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD), ' ') AS ORDER_STUS_NM						/* 주문상태 */
			 , (SELECT F_GET_ORDER_ITM_GOODS_OPTN_NM(OOM.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD) FROM DUAL) OPT_NM	/* 옵션명 */
			 , NVL(OOI.REQ_CNT, 0) AS REQ_CNT																		/* 수량 */
			 , NVL(OOI.CNSMR_PRC , 0) AS CNSMR_PRC 																	/* 판매가 */
			 , NVL(OOI.DC_APPLY_PRC, 0) AS DC_APPLY_PRC 															/* 할인적용가 */
			 , NVL(OOI.OPTN_GOODS_APPLY_PRC, 0) AS  OPTN_GOODS_APPLY_PRC 											/* 옵션상품가격	*/
			 , NVL(OOM.PO_FNC_YN, 'N') AS PO_FNC_YN																	/* 우체국금융여부 */
			 , NVL(OOI.ADJ_YN,'N') AS ADJ_YN																		/* 정산 여부 */
			 ,CASE WHEN OOI.ORDER_STUS_CD IN ('O02','O04','D02') THEN 'N'
					WHEN OOI.ORDER_STUS_CD IN ('D03','D04') THEN 'Y'
					ELSE 'N'
				END AS SEND_COMPLETE_YN
			 ,OOI.PAVLN_DIV_CD
		  FROM  OD_ORDER_MAST OOM
			  , OD_ORDER_ITM OOI
		 WHERE 1=1
		   AND OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ID = #orderId#
		   AND OOI.ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</select>

	<!-- 환불처리아이템 조회 -->
	<select id="selectOrderItmCancelListForRefund" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT OOI.ORDER_ITM_ID																						/* 주문아이템ID */
			 , ORI.CLAIM_REQ_NO																						/* 클레임 신청 번호 */
			 , OOI.ORDER_ID																							/* 주문ID */
			 , OOI.PAVLN_ID																							/* 전시관코드 */
			 , OOI.SUPP_COMP_ID																						/* 공급업체ID */
			 , OOI.SUPP_COMP_NM																						/* 공급업체명 */
			 , OOI.SUPPO_RGIST_POCD																					/* 공급국등기용국기호 */
			 , OOI.GOODS_CD																							/* 상품코드 */
			 , OOI.GOODS_NM																							/* 상품명 */
			 , OOI.SEND_PRC																							/* 배송비 */
			 , OOI.GOODS_CANCEL_DATE																				/* 취소일시 */
			 , OOM.ORDRR_EMAIL																						/* 주문자이메일 */
			 , OOM.ORDER_DATE																						/* 주문일시 */
			 , OOM.ACCESS_NAME																						/* 주문자ID */
			 , OOM.ORDRR_NM																							/* 주문자명 */
			 , OOM.ORDER_STUS_CD																					/* 주문상태코드 */
			 , NVL(F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD), ' ') AS ORDER_STUS_NM						/* 주문상태명 */
			 , OOM.SETL_MEAN_CD																						/* 결제수단코드 */
			 , NVL(F_GET_COMN_CD_NM('SETL_MEAN_CD', OOM.SETL_MEAN_CD), ' ') AS SETL_MEAN_NM							/* 결제수단명 */
			 , OOI.ORDER_STUS_CD																					/* 주문상태코드 */
			 , NVL(F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD), ' ') AS ORDER_STUS_NM						/* 주문상태 */
			 , (SELECT F_GET_ORDER_ITM_GOODS_OPTN_NM(OOM.ORDER_ID, OOI.ORDER_ITM_ID, OOI.GOODS_CD) FROM DUAL) OPT_NM	/* 옵션명 */
			 , NVL(OOI.REQ_CNT, 0) AS REQ_CNT																		/* 수량 */
			 , NVL(OOI.CNSMR_PRC , 0) AS CNSMR_PRC 																	/* 판매가 */
			 , NVL(OOI.DC_APPLY_PRC, 0) AS DC_APPLY_PRC 															/* 할인적용가 */
			 , NVL(OOI.OPTN_GOODS_APPLY_PRC, 0) AS  OPTN_GOODS_APPLY_PRC 											/* 옵션상품가격	*/
			 , NVL(OOM.PO_FNC_YN, 'N') AS PO_FNC_YN																	/* 우체국금융여부 */
			 , NVL(OOI.ADJ_YN,'N') AS ADJ_YN																		/* 정산 여부 */
			 ,CASE WHEN OOI.ORDER_STUS_CD IN ('O02','O04','D02') THEN 'N'
					WHEN OOI.ORDER_STUS_CD IN ('D03','D04') THEN 'Y'
					ELSE 'N'
				END AS SEND_COMPLETE_YN
			 ,OOI.PAVLN_DIV_CD
		  FROM  OD_ORDER_MAST OOM
			  , OD_ORDER_ITM OOI
			  , OD_RET_INTERFACE ORI
		 WHERE 1=1
		   AND OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ITM_ID = ORI.ORDER_ITM_ID
		   AND OOI.ORDER_ID = #orderId#
		   AND ORI.CLAIM_REQ_NO IN
				<iterate property="searchClaimReqNos" open="("  close=")" conjunction=",">
					#searchClaimReqNos[]#
				</iterate>
	</select>

	<!-- 환불처리 위수탁세금계산서 미취소 금액 조회 -->
	<select id="selectTaxNonCancelAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(OOI.DC_APPLY_PRC, 0) + NVL(OOI.OPTN_GOODS_APPLY_PRC, 0)) AS TAX_NON_CANCEL_AMT
		  FROM  OD_ORDER_MAST OOM
			  , OD_ORDER_ITM OOI
		 WHERE 1=1
		   AND OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ID = #orderId#
		   AND OOI.ORDER_STUS_CD != 'O06'
		   AND OOI.SUPP_COMP_ID = #attr06#
	</select>

	<!-- 환불처리 위수탁세금계산서 금액 조회 -->
	<select id="selectTaxAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT ITEMPRC1 AS TAX_AMT
		  FROM  X_INVOICE_TBL
		 WHERE 1=1
		   AND ATTR02 = #orderId#
		   AND ATTR06 = #attr06#		/* suppCompId */
 		   AND PROCFLAG = '80'			/* 발행상태인것만 */
	</select>

	<!--  세금계산서 재발행 정보 조회 -->
	<select id="selectTaxReIssueInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT CASE WHEN COUNT(A.ITEMQTY1) <![CDATA[>]]> 1 THEN MAX(A.ITEM1) || ' 외 ' || (COUNT(A.ITEMQTY1) - 1) || '건'
					ELSE MAX(A.ITEM1)
				END ITEM1
			  ,SUM(NVL(A.ITEMPRC1,0)) ITEMPRC1
			  ,SUM(A.ITEMQTY1) ITEMQTY1
			  ,SUM(NVL(A.ITEMAMT1,0)) ITEMAMT1
			  ,SUM(NVL(A.ITEMSTAX1,0)) ITEMSTAX1
		  FROM (SELECT SUBSTRB(MAX(GOODS_NM),1,50) AS ITEM1
					  ,SUM(DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC) AS ITEMPRC1
					  ,COUNT(ORDER_ID) AS ITEMQTY1
					  ,SUM((DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC) * 0.9) AS ITEMAMT1
					  ,SUM((DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC) * 0.1) AS ITEMSTAX1
					  ,GOODS_CD
				  FROM OD_ORDER_ITM
				 WHERE ORDER_ID = #orderId#
				   AND SUPP_COMP_ID = #attr06#
				   AND GOODS_CANCEL_YN = 'N'
				 GROUP BY GOODS_CD
				) A
	</select>

	<!--  세금계산서(위수탁) 재발행 상태변경 -->
	<insert id="updateTaxReIssueInfo" parameterClass ="java.util.HashMap">
		UPDATE X_INVOICE_REQ
		   SET STATE = '80'
		 WHERE PURCHASE_ID = #orderId#
	</insert>

	<!--  세금계산서(위수탁) 재발행 정보 등록 -->
	<insert id="insertTaxReIssueInfo" parameterClass ="java.util.HashMap">
		INSERT INTO X_INVOICE_TBL
			(
			 INVDATE
			,INVSEQ
			,INVTYPE0
			,INVTYPE1
			,INVTYPE2
			,INVTYPE3
			,INVTYPE4
			,SNDMSTID
			,SNDUSRNAME
			,SNDEMAIL
			,SNDTEL
			,ISPOSTING
			,RCVMSTID
			,RCVUSRNAME
			,RCVEMAIL
			,RCVTEL
			,AGNMSTID
			,AGNUSRNAME
			,AGNEMAIL
			,AGNTEL
			,PROCFLAG
			,PROCDATE
			,BPROCFLAG
			,BPROCDATE
			,ATTR01
			,ATTR02
			,ATTR03
			,ATTR04
			,ATTR05
			,ATTR06
			,ATTR07
			,ATTR08
			,ATTR09
			,ATTR10
			,ATTR11
			,ATTR12
			,ATTR13
			,ATTR14
			,ATTR15
			,ATTR16
			,ATTR17
			,ATTR18
			,ATTR19
			,ATTR20
			,INVHASH
			,SUPREGNUM
			,SUPCMPNAME
			,SUPOWNER
			,SUPBIZTYPE
			,SUPBIZKIND
			,SUPADDRESS
			,DEMREGNUM
			,DEMCMPNAME
			,DEMOWNER
			,DEMBIZTYPE
			,DEMBIZKIND
			,DEMADDRESS
			,AGNREGNUM
			,AGNCMPNAME
			,AGNOWNER
			,AGNBIZTYPE
			,AGNBIZKIND
			,AGNADDRESS
			,ITEM1
			,ITEMSTD1
			,ITEMPRC1
			,ITEMQTY1
			,ITEMDATE1
			,ITEMAMT1
			,ITEMSTAX1
			,ITEMMEMO1
			,ITEM2
			,ITEMSTD2
			,ITEMPRC2
			,ITEMQTY2
			,ITEMDATE2
			,ITEMAMT2
			,ITEMSTAX2
			,ITEMMEMO2
			,ITEM3
			,ITEMSTD3
			,ITEMPRC3
			,ITEMQTY3
			,ITEMDATE3
			,ITEMAMT3
			,ITEMSTAX3
			,ITEMMEMO3
			,ITEM4
			,ITEMSTD4
			,ITEMPRC4
			,ITEMQTY4
			,ITEMDATE4
			,ITEMAMT4
			,ITEMSTAX4
			,ITEMMEMO4
			,PUBDATE
			,AMTBLANK
			,SUPTOTAMT
			,SURTAX
			,SUMAMT
			,CASHAMT
			,CHECKAMT
			,BILLAMT
			,CREDITAMT
			,DEALTYPE
			,BOOKNUM1
			,BOOKNUM2
			,BOOKNUM3
			,REMARK
			)
		SELECT
			 TO_CHAR(SYSDATE, 'YYYYMMDD') AS INVDATE
			,TRIM(TO_CHAR(INV_SEQ.NEXTVAL,'00000000')) AS INVSEQ
			,INVTYPE0
			,INVTYPE1
			,INVTYPE2
			,INVTYPE3
			,INVTYPE4
			,SNDMSTID
			,SNDUSRNAME
			,SNDEMAIL
			,SNDTEL
			,ISPOSTING
			,RCVMSTID
			,RCVUSRNAME
			,RCVEMAIL
			,RCVTEL
			,AGNMSTID
			,AGNUSRNAME
			,AGNEMAIL
			,AGNTEL
			,'80' AS PROCFLAG
			,PROCDATE
			,'' AS BPROCFLAG
			,BPROCDATE
			,ATTR01
			,ATTR02
			,ATTR03
			,ATTR04
			,ATTR05
			,ATTR06
			,ATTR07
			,ATTR08
			,ATTR09
			,ATTR10
			,ATTR11
			,ATTR12
			,ATTR13
			,ATTR14
			,ATTR15
			,ATTR16
			,ATTR17
			,ATTR18
			,ATTR19
			,ATTR20
			,INVHASH
			,SUPREGNUM
			,SUPCMPNAME
			,SUPOWNER
			,SUPBIZTYPE
			,SUPBIZKIND
			,SUPADDRESS
			,DEMREGNUM
			,DEMCMPNAME
			,DEMOWNER
			,DEMBIZTYPE
			,DEMBIZKIND
			,DEMADDRESS
			,AGNREGNUM
			,AGNCMPNAME
			,AGNOWNER
			,AGNBIZTYPE
			,AGNBIZKIND
			,AGNADDRESS
			,#item1#
			,ITEMSTD1
			,#itemprc1#
			,#itemqty1#
			,ITEMDATE1
			,#itemamt1#
			,#itemstax1#
			,ITEMMEMO1
			,ITEM2
			,ITEMSTD2
			,ITEMPRC2
			,ITEMQTY2
			,ITEMDATE2
			,ITEMAMT2
			,NVL(ITEMSTAX2, 0) AS ITEMSTAX2
			,ITEMMEMO2
			,ITEM3
			,ITEMSTD3
			,ITEMPRC3
			,ITEMQTY3
			,ITEMDATE3
			,ITEMAMT3
			,ITEMSTAX3
			,ITEMMEMO3
			,ITEM4
			,ITEMSTD4
			,ITEMPRC4
			,ITEMQTY4
			,ITEMDATE4
			,ITEMAMT4
			,ITEMSTAX4
			,ITEMMEMO4
			,PUBDATE
			,AMTBLANK
			,SUPTOTAMT
			,SURTAX
			,SUMAMT
			,CASHAMT
			,CHECKAMT
			,BILLAMT
			,CREDITAMT
			,DEALTYPE
			,BOOKNUM1
			,BOOKNUM2
			,BOOKNUM3
			,REMARK
		FROM X_INVOICE_TBL
		WHERE 1=1
			AND ATTR02 = #orderId#
			AND ATTR06 = #attr06#	/* suppCompId */
			AND BPROCFLAG = '80'
	</insert>

	<!-- 환불처리 현금영수증 금액 조회 -->
	<select id="selectCashAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT AMOUNT AS CASH_AMT
		  FROM OD_CASHINFO
		 WHERE 1=1
		   AND ORDER_ID = #orderId#
		   AND SUPP_COMP_ID = #attr06#		/* suppCompId */
 		   AND STATUS = 'D1'			/* 발행상태인것만 */
	</select>

	<!-- 주문취소 아이템 카운트 -->
	<select id="selectOrderItmCancelCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT COUNT(ORDER_ITM_ID) CNT
			  ,SUM(DECODE(GOODS_CANCEL_YN,'Y',0,1)) NON_CANCEL_CNT
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID IN #orderId#
	</select>

	<!-- 주문취소 아이템 상품코드 조회 -->
	<select id="selectGoodsStock" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT GOODS_CD
			  ,OPTN_ESSN_CHOICE_YN
			  ,GOODS_OPTN_GRP_SEQ
			  ,GOODS_OPTN_SEQ
			  ,OPTN_CNT1
			  ,GOODS_OPTN_GRP_SEQ2
			  ,GOODS_OPTN_SEQ2
			  ,OPTN_CNT2
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
	</select>

	<!-- 상품재고량 + 1 -->
	<update id="updateGoodsStock" parameterClass="java.util.HashMap">
		UPDATE GD_GOODS_MAST
		   SET STOCK_VOLM = STOCK_VOLM + 1
		 WHERE GOODS_CD = #goodsCd#
	</update>

	<!-- 관리용 상품MAST 상품재고량 + 1 -->
	<update id="updateMgtGoodsStock" parameterClass="java.util.HashMap">
		UPDATE GD_MGT_GOODS_MAST
		   SET STOCK_VOLM = STOCK_VOLM + 1
		 WHERE GOODS_CD = #goodsCd#
	</update>

	<!-- 상품 옵션 재고량 처리 -->
	<update id="updateGoodsOptnDtailStockVolm" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE GD_GOODS_OPTN_DTAIL
		   SET STOCK_VOLM = STOCK_VOLM + #stockVolm#
			  ,CHG_DATE	  = SYSDATE
			  ,CHGER_ID	  = #chgerId#
		 WHERE GOODS_CD			  = #goodsCd#
		   AND GOODS_OPTN_GRP_SEQ = #goodsOptnGrpSeq#
		   AND GOODS_OPTN_SEQ	  = #goodsOptnSeq#
		]]>
	</update>

	<!-- 상품 옵션 관리 재고량 처리 -->
	<update id="updateMgtGoodsOptnDtailStockVolm" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE GD_MGT_GOODS_OPTN_DTAIL
		   SET STOCK_VOLM = STOCK_VOLM + #stockVolm#
			  ,CHG_DATE	  = SYSDATE
			  ,CHGER_ID	  = #chgerId#
		 WHERE GOODS_CD			  = #goodsCd#
		   AND GOODS_OPTN_GRP_SEQ = #goodsOptnGrpSeq#
		   AND GOODS_OPTN_SEQ	  = #goodsOptnSeq#
		]]>
	</update>

	<!-- 주문취소 아이템 쿠폰1 할인정보 조회 -->
	<select id="selectCancelOrderItmCpnDcInfo1" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT A.CPN_MAST_NO1
			  ,A.CP_CMP_CD1
			  ,A.CPN_DC_AMT1
			  ,A.CPN_SEQ1
			  ,B.CPN_APPLY_CNT_CD
		  FROM OD_ORDER_ITM A
			  ,EV_CPN_MAST B
		 WHERE A.CPN_MAST_NO1 = B.CPN_MAST_NO
		   AND A.ORDER_ITM_ID = #searchOrderItmId#
	</select>

	<!-- 주문취소 아이템 쿠폰1 남은 상품정보 조회 -->
	<select id="selectNonCancelOrderItmCpnDcInfo1" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT MIN(ORDER_ITM_ID) ORDER_ITM_ID
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND ORDER_ITM_ID NOT IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
		   AND GOODS_CD = #goodsCd#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		   AND CPN_MAST_NO1 IS NOT NULL
		 ORDER BY ORDER_ITM_ID
	</select>

	<!-- 남은 아이템 쿠폰1 UPDATE -->
	<update id="updateNonCancelItmCpnDcInfo1" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET CPN_MAST_NO1		= #cpnMastNo1#
			  ,CP_CMP_CD1		= #cpCmpCd1#
			  ,CPN_DC_AMT1		= #cpnDcAmt1#
			  ,CPN_SEQ1			= #cpnSeq1#
			  ,CPN_DC_AMT		= CPN_DC_AMT + #cpnDcAmt1#
			  ,CPN_USE_YN		= #cpnUseYn#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 주문취소 아이템 쿠폰1 UPDATE -->
	<update id="updateCancelItmCpnDcInfo1" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET CPN_MAST_NO1		= null
			  ,CP_CMP_CD1		= null
			  ,CPN_DC_AMT1		= 0
			  ,CPN_SEQ1			= null
			  ,CPN_USE_YN		= 'N'
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 주문취소 아이템 쿠폰2 할인정보 조회 -->
	<select id="selectCancelOrderItmCpnDcInfo2" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT A.CPN_MAST_NO2
			  ,A.CP_CMP_CD2
			  ,A.CPN_DC_AMT2
			  ,A.CPN_SEQ2
			  ,B.CPN_APPLY_CNT_CD
		  FROM OD_ORDER_ITM A
			  ,EV_CPN_MAST B
		 WHERE A.CPN_MAST_NO2 = B.CPN_MAST_NO
		   AND A.ORDER_ITM_ID = #searchOrderItmId#
	</select>

	<!-- 주문취소 아이템 쿠폰2 남은 상품정보 조회 -->
	<select id="selectNonCancelOrderItmCpnDcInfo2" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT MIN(ORDER_ITM_ID) ORDER_ITM_ID
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND ORDER_ITM_ID NOT IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		 ORDER BY ORDER_ITM_ID
	</select>

	<!-- 남은 아이템 쿠폰2 UPDATE -->
	<update id="updateNonCancelItmCpnDcInfo2" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET CPN_MAST_NO2		= #cpnMastNo2#
			  ,CP_CMP_CD2		= #cpCmpCd2#
			  ,CPN_DC_AMT2		= CPN_DC_AMT2 + #cpnDcAmt2#
			  ,CPN_SEQ2			= #cpnSeq2#
			  ,CPN_DC_AMT		= CPN_DC_AMT + #cpnDcAmt2#
			  ,CPN_USE_YN		= #cpnUseYn#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 주문취소 아이템 쿠폰2 UPDATE -->
	<update id="updateCancelItmCpnDcInfo2" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET CPN_MAST_NO2		= null
			  ,CP_CMP_CD2		= null
			  ,CPN_DC_AMT2		= 0
			  ,CPN_SEQ2			= null
			  ,CPN_USE_YN		= 'N'
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 쿠폰반환 -->
	<update id="updateOrderCpnInfo" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_CPN
		   SET USE_YN = 'N'
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 쿠폰발행방법코드 조회 -->
	<select id="selectCpnIssueMethCd" parameterClass="java.util.HashMap" resultClass="String">
		SELECT CPN_ISSUE_METH_CD
		  FROM EV_CPN_MAST
		 WHERE CPN_MAST_NO = #cpnMastNo#
	</select>

	<!-- 쿠폰반환 -->
	<update id="updateOrderCpnUserIssueInfo" parameterClass="java.util.HashMap">
		UPDATE EV_CPN_USER_ISSUE_INFO
		   SET USE_DATE = NULL
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
		   AND CPN_MAST_NO = #cpnMastNo#
		   AND CPN_SEQ = #cpnSeq#
	</update>

	<!-- 쿠폰반환 -->
	<delete id="deleteOrderCpnUserIssueInfo" parameterClass="java.util.HashMap">
		DELETE EV_CPN_USER_ISSUE_INFO
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
		   AND CPN_MAST_NO = #cpnMastNo#
		   AND CPN_SEQ = #cpnSeq#
	</delete>

	<!-- 전자지갑 주문결제내역 조회	-->
	<select id="selectWalletUseHistor" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT PROMTN_NO WALLET_NO
			  ,SETL_SEQ
			  ,RESRCE_MGT_SEQ
			  ,AMT WALLET_AMT
		  FROM OD_MEM_RESRCE_MGT_HISTOR
		 WHERE ORDER_ID	= #orderId#
		   AND ACCESS_NAME = #searchAccessName#
		   AND RESRCE_DIV_CD = '03'
	</select>

	<!-- 전자지갑 결제금액 사용취소	처리 -->
	<update id="updateMemWalletUseCancel" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE	OD_MEM_RESRCE_MGT_WALLET
		SET		AMT			= AMT +	#walletAmt#
		,		CHGER_ID	= #chgerId#
		,		CHG_DATE	= SYSDATE
		WHERE	ACCESS_NAME	= #searchAccessName#
		AND		WALLET_NO	= #walletNo#
		]]>
	</update>

	<!-- 전자지갑 결제 이력	정보 생성 -->
	<update id="createMemWalletUseCancelHistory" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO	OD_MEM_RESRCE_MGT_HISTOR
			(
			 ORDER_ID
			,SETL_SEQ
			,RESRCE_MGT_SEQ
			,ACCESS_NAME
			,RESRCE_DIV_CD
			,ACCML_USE_DIV_CD
			,AMT
			,WALLET_STUS_CD
			,RESRCE_ISSUE_DATE
			,RESRCE_ACCML_USE_REASN_CD
			,RESRCE_MGT_MEMO_CONT
			,VLD_STRT_DATE
			,VLD_END_DATE
			,PROMTN_NO
			,RESRCE_USE_DATE
			,ORDER_CONT_SEQ
			,CLAIM_CONT_SEQ
			,ORIG_RESRCE_MGT_SEQ
			,REGER_ID
			,REG_DATE
			,CHGER_ID
			,CHG_DATE
			)
		SELECT #orderId#
			  ,(SELECT NVL(MAX(SETL_SEQ),0) + 1 FROM OD_MEM_RESRCE_MGT_HISTOR WHERE ORDER_ID = #orderId#)
			  ,(SELECT NVL(MAX(RESRCE_MGT_SEQ),0) + 1 FROM OD_MEM_RESRCE_MGT_HISTOR WHERE ORDER_ID = #orderId#)
			  ,#searchAccessName#
			  ,RESRCE_DIV_CD
			  ,#accmlUseDivCd#
			  ,AMT
			  ,WALLET_STUS_CD
			  ,SYSDATE
			  ,#resrceAccmlUseReasnCd#
			  ,#resrceMgtMemoCont#
			  ,VLD_STRT_DATE
			  ,VLD_END_DATE
			  ,PROMTN_NO
			  ,SYSDATE
			  ,ORDER_CONT_SEQ
			  ,CLAIM_CONT_SEQ
			  ,ORIG_RESRCE_MGT_SEQ
			  ,#regerId#
			  ,SYSDATE
			  ,#chgerId#
			  ,SYSDATE
		  FROM OD_MEM_RESRCE_MGT_HISTOR
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = #setlSeq#
		   AND RESRCE_MGT_SEQ = #resrceMgtSeq#
		]]>
	</update>

	<!-- 주문 아이템 배송비 재계산 -->
	<select id="selectNonCancelItmSendFeeInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT MIN(ORDER_ITM_ID) ORDER_ITM_ID
			  ,FN_GOODS_SEND_FEE(#goodsCd#, '', COUNT(0), SUM(DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC), MAX(SEND_NATION_CD), NULL) SEND_FEE
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND ORDER_ITM_ID NOT IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
		   AND GOODS_CD = #goodsCd#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		 ORDER BY ORDER_ITM_ID
	</select>

	<!-- 주문 아이템 쿠폰할인/배송비 UPDATE -->
	<update id="updateNonCancelItmSendFee" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET SEND_PRC		= #sendFee#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 포인트 가용포인트 조회 -->
	<select id="selectMilePntMaster" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(CUR_POINT, 0) CUR_POINT
			  ,NVL(TOT_USE_POINT, 0) TOT_USE_POINT
			  ,NVL(TOT_ACCU_POINT, 0) TOT_ACCU_POINT
			  ,NVL(POST_POINT,0) POST_POINT
		  FROM MB_MEM_ACCMLAMT
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
	</select>

	<!-- 취소상품 금액 합계 조회 -->
	<select id="selectCancelOrderAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(A.CNSMR_PRC,0)) CANCEL_CNSMR_PRC_SUM										/* 취소 소비자가 SUM */
			  ,SUM(NVL(A.STD_SELL_PRC,0))	CANCEL_STD_SELL_PRC_SUM								/* 취소 기준판매가 SUM */
			  ,SUM(NVL(A.PUCHAS_PRC,0)) CANCEL_PUCHAS_PRC_SUM									/* 취소 매입가 SUM */
			  ,SUM(NVL(A.DC_APPLY_PRC,0) + NVL(A.OPTN_GOODS_APPLY_PRC,0) - NVL(A.PNT_USE_AMT,0) - NVL(A.PREMI_CUST_PNT_SETL_AMT,0) - NVL(A.WALLET_SETL_AMT,0)
				 - NVL(A.OKCASH_USE_AMT,0) + NVL(A.B2B_COMMISSION_PRC,0)) CANCEL_SETL_AMT_SUM	/* 결제취소금액(쿠폰, 배송비 제외) */
			  ,SUM(NVL(A.PNT_USE_AMT,0)) CANCEL_PNT_USE_AMT_SUM									/* 취소 포인트사용금액 SUM */
			  ,SUM(NVL(A.PNT_ACCML_PNT,0)) CANCEL_PNT_ACCML_PNT_SUM								/* 취소 적립포인트 SUM */
			  ,SUM(NVL(A.PO_PNT_USE_AMT,0)) CANCEL_PO_PNT_USE_AMT_SUM							/* 취소 우체국금융포인트사용금액 SUM */
			  ,SUM(NVL(A.OKCASH_USE_AMT,0)) CANCEL_OKCASH_USE_AMT_SUM							/* 취소 OKCASH사용금액 SUM */
			  ,SUM(NVL(A.PREMI_CUST_PNT_SETL_AMT,0)) CANCEL_SP_USE_AMT_SUM						/* 취소 우수고객포인트결제금액 SUM */
			  ,SUM(NVL(A.WALLET_SETL_AMT,0)) CANCEL_WALLET_SETL_AMT_SUM							/* 취소 전자지갑결제금액 SUM */
			  ,SUM(NVL(A.PRCL_AMT,0)) CANCEL_PRCL_AMT_SUM										/* 취소 소포금액 SUM */
			  ,SUM(NVL(A.IMMPMN_PRCL_AMT,0)) CANCEL_IMMPMN_PRCL_AMT_SUM							/* 취소 즉납소포금액 SUM */
			  ,SUM(NVL(A.EMS_AMT,0)) CANCEL_EMS_AMT_SUM											/* 취소 EMS금액 SUM */
			  ,SUM(NVL(A.EMS_DC_AMT,0)) CANCEL_EMS_DC_AMT_SUM									/* 취소 EMS할인금액 SUM */
			  ,SUM(NVL(A.EMS_DOLAR_AMT,0)) CANCEL_EMS_DOLAR_AMT_SUM								/* 취소 EMS달러금액 SUM */
			  ,SUM(DECODE(B.OKCASH_SUPP_YN,'Y',NVL(B.OKCASH_SUPP_AMT,NVL(B.DC_APPLY_PRC*B.OKCASH_SUPP_RATE,0)),0)) CANCEL_OKCASH_SUPP_AMT_SUM	/* 취소 OKCASH적립금액 */
		  FROM OD_ORDER_ITM A
			  ,GD_GOODS_MAST B
		 WHERE A.GOODS_CD = B.GOODS_CD
		   AND A.ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</select>

	<!-- 현재시점에서 취소안된 상품의 포인트 합계, 결제금액 합계, 상품금액 합계 조회 -->
	<select id="selectExtraOrderAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(DC_APPLY_PRC,0) + NVL(OPTN_GOODS_APPLY_PRC,0) - NVL(PNT_USE_AMT,0) - NVL(PREMI_CUST_PNT_SETL_AMT,0) - NVL(CPN_DC_AMT,0) - NVL(WALLET_SETL_AMT,0)
				 - NVL(OKCASH_USE_AMT,0) + NVL(B2B_COMMISSION_PRC,0) + NVL(SEND_PRC,0)) EXTRA_SETL_AMT_SUM						/* 전체 결제금액 */
			  ,SUM(NVL(CPN_DC_AMT,0)) EXTRA_CPN_DC_AMT_SUM																		/* 쿠폰할인금액 SUM */
			  ,SUM(NVL(SEND_PRC,0)) EXTRA_SEND_PRC_SUM																			/* 배송가격 SUM */
			  ,SUM(NVL(PNT_USE_AMT,0) + NVL(PREMI_CUST_PNT_SETL_AMT,0)) EXTRA_ALL_PNT_SUM				/* OKCASH,포인트,우수고객 SUM */
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
	</select>

	<!-- 부분취소시 남은 상품 배송비 계산 -->
	<select id="selectNonCancelSendFeeInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(SEND_FEE) TOT_SEND_FEE
		  FROM (
				SELECT FN_GOODS_SEND_FEE(GOODS_CD, '', COUNT(0), SUM(DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC), MAX(SEND_NATION_CD), NULL) SEND_FEE
				  FROM OD_ORDER_ITM
				 WHERE ORDER_ID = #orderId#
				   AND ORDER_ITM_ID NOT IN
						<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
							#searchOrderItmIds[]#
						</iterate>
				   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
				 GROUP BY ORDER_ID, GOODS_CD
				)
	</select>

	<!-- 부분취소시 남은 상품 금액 합계 조회 -->
	<select id="selectNonCancelOrderAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(DC_APPLY_PRC,0) + NVL(OPTN_GOODS_APPLY_PRC,0) - NVL(WALLET_SETL_AMT,0) + NVL(B2B_COMMISSION_PRC,0)) REMNDR_GOODS_PRC_SUM	/* 상품금액 SUM */
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND ORDER_ITM_ID NOT IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
	</select>

	<!-- 복합결제 결제수단별 결제금액 조회 -->
	<select id="selectMultiPaySetlAmtInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(AMOUNT_BANKTOWN,0) AMOUNT_BANKTOWN				/* 즉시이체_우체국계좌이체 */
			  ,NVL(AMOUNT_OTHER_BANKTOWN,0) AMOUNT_OTHER_BANKTOWN	/* 즉시이체_우체국계좌외 */
			  ,NVL(AMOUNT_CARD_EPOST,0) AMOUNT_CARD_EPOST			/* 신용카드 */
			  ,NVL(AMOUNT_CARD_OVERSEA,0) AMOUNT_CARD_OVERSEA		/* 해외카드 */
			  ,NVL(AMOUNT_ONURI,0) AMOUNT_ONURI						/* 온누리상품권결제금액 */
		  FROM OD_ORDER_SETL
		 WHERE ORDER_ID = #orderId#
		   AND SETL_SEQ = '1'
	</select>

	<!-- 쿠폰1 할인취소금액 조회 -->
	<select id="selectCancelCpnDcAmtInfo1" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(CPN_DC_AMT1, 0)) CPN_DC_AMT1
		  FROM OD_ORDER_ITM A
			  ,EV_CPN_MAST B
		 WHERE A.CPN_MAST_NO1 = B.CPN_MAST_NO
		   AND B.CPN_APPLY_CNT_CD = '2'
		   AND ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</select>

	<!-- 쿠폰2 할인취소금액 조회 -->
	<select id="selectCancelCpnDcAmtInfo2" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT SUM(NVL(CPN_DC_AMT2, 0)) CPN_DC_AMT2
		  FROM OD_ORDER_ITM A
			  ,EV_CPN_MAST B
		 WHERE A.CPN_MAST_NO2 = B.CPN_MAST_NO
		   AND B.CPN_APPLY_CNT_CD = '2'
		   AND ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</select>

	<!-- 주문 금액 및 포인트, 수수료, 특판 정보 -->
	<select id="selectOrderItmPntPayment" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT A.ORDER_ITM_ID
			  ,B.ACCESS_NAME
			  ,A.PAVLN_DIV_CD
			  ,NVL(A.PNT_ACCML_PNT,0) PNT_ACCML_PNT
			  ,NVL(A.PNT_USE_AMT,0) PNT_USE_AMT
			  ,NVL(A.PREMI_CUST_PNT_SETL_AMT,0) PREMI_CUST_PNT_SETL_AMT
			  ,NVL(A.PO_PNT_USE_AMT,0) PO_PNT_USE_AMT
			  ,DECODE(NVL(A.GIFT_ORDER_YN,'N'),'Y',DECODE(A.GIFT_CANCEL_YN,'Y','N','Y'),'N') GIFT_ORDER_YN
		  FROM OD_ORDER_ITM A
			  ,OD_ORDER_MAST B
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ITM_ID = #searchOrderItmId#
	</select>

	<!-- OD_ORDER_ITM_HISTOR 취소 이력 INSERT -->
	<update id="insertOrderItmHistCancel" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_ITM_HISTOR
			(
			 ORDER_ITM_ID			,ORDER_ITM_CHG_DATE			,ORDER_HISTOR_CHG_CD	,ORIG_ORDER_ITM_ID			,ORDER_ID						,PAVLN_ID				,PAVLN_DIV_CD			,SUPP_COMP_ID			,SUPP_COMP_NM				,SUPPO_RGIST_POCD
			,SUPP_PO_NM				,GOODS_CD					,GOODS_NM				,GOODS_OPTN_GRP_SEQ			,GOODS_OPTN_SEQ					,REQ_CNT				,GOODS_RETRNGD_DATE		,ORDER_DTAIL_STUS_CD	,ORDER_TYP_CD				,GOODS_CANCEL_YN
			,GOODS_CANCEL_DATE		,CNSMR_PRC					,STD_SELL_PRC			,PUCHAS_PRC					,DC_APPLY_PRC					,OPTN_GOODS_APPLY_PRC	,CPN_DC_AMT				,PNT_USE_AMT			,PNT_ACCML_PNT				,PO_PNT_USE_AMT
			,OKCASH_USE_AMT			,PREMI_CUST_PNT_SETL_AMT	,REFUND_AMT				,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_REFUND_APRV_AMT	,SEND_PRC				,PRCL_AMT				,IMMPMN_PRCL_AMT		,AFTPMN_PRCL_AMT			,EMS_AMT
			,EMS_DC_AMT				,EMS_DCRATE					,EMS_DOLAR_AMT			,WGHT						,VOLM							,KIND_DIV_CD			,AIR_SEND_YN			,FRN_EXP_DIV_CD			,PRCLTAXIN					,STD_DIV_CD
			,GOODS_DIV_NO			,FLWR_DELIVPO_SIGN			,BALTSHT_PRT_YN			,FIX_RESRV_ORDER_GOODS_YN	,CPN_USE_YN						,EVENT_DC_GOODS_YN		,EVENT_DIV_CD			,EVENT_ID				,GIFT_ORDER_YN				,GIFT_CANCEL_YN
			,EVENT_GOODS_SEQ		,EXTRA_GOODS_YN				,EXTRA_GOODS_CNT		,EXTRA_GOODS_SEQ			,RGR_GOODS_YN					,RGR_GOODS_SEQ			,RGR_GOODS_PRC			,CORPSPCSAL_GOODS_YN	,CORPSPCSAL_GOODS_SEQ		,PLNBEF_GOODS_YN
			,PLNBEF_ID				,CRRGR_CARD_USE_YN			,WISH_SEND_DATE			,TDAY_EXP_YN				,DOM_EXP_YN						,OVSEA_SEND_GOODS_YN	,DELIV_CERT_YN			,FLWRDELIV_SMS_DONE_DATE,FLWRDELIV_DELAY_REASN_CD	,SEND_MSG
			,SENDER_NM				,SENDER_ZIPCD				,SENDER_ADDR1			,SENDER_ADDR2				,SENDER_ADDR3					,SENDER_TELNO			,SENDER_HTELNO			,SENDER_EMAIL			,SENDER_ADDR_DIV_CD			,RECPTER_NM
			,RECPTER_HONOR_CD		,RECPTER_ZIPCD				,RECPTER_ADDR1			,RECPTER_ADDR2				,RECPTER_ADDR3					,RECPTER_TELNO			,RECPTER_HTELNO			,RECPTER_EMAIL			,RECPTER_ADDR_DIV_CD		,SENDPO_RGIST_POCD
			,HS_CD					,SEND_TYP_CD				,SEND_NATION_CD			,SEND_AREA_CD				,REGI_NO						,REPRSNT_REGI_NO		,REGI_NO_CREATE_DIV_CD	,SEND_CONF_DATE			,SEND_STRT_DATE				,SEND_DONE_DATE
			,ORDER_CANCEL_ADJ_YN	,ADJ_DATE					,REALRECPTER			,INSTL_DUEDD				,SMS_RECV_YN					,MANY_ORDER_NO			,BUND_SEND_YN			,EPOST_MLG_ID			,CANCEL_REQ_YMD				,RETRNGD_YN
			,FLWRDELIV_DELAY_REASN	,SENDER_VIRTL_NO			,RECPTER_VIRTL_NO		,TAXBIL_ADJ_YN				,FLWRDELIV_SMS_RSLT				,SUPPCOMP_SMS_TX_YN		,SENDER_SMS_TX_YN		,ADJ_YN					,ADJ_CARD_REFUND_FEE		,SUPP_NOTIC_DD_PER_SEQ
			,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,SEND_SEQ				,RETRUN_DELIV_DONE_YN		,HDRYCO_CD						,RET_STATUS_CD			,GOODS_OPTN_GRP_SEQ2	,GOODS_OPTN_SEQ2		,CP_TYP_CD
			,ONOFF_FLAG				,DTV_CHK					,OPTN_CNT1				,OPTN_CNT2					,OPTN_NM1						,OPTN_NM2				,OPTN_ESSN_CHOICE_YN	,CPN_MAST_NO1			,CPN_DC_AMT1				,CPN_MAST_NO2
			,CPN_DC_AMT2			,HS_US_PRICE				,GOODS_BASIC_FEE		,PRSNT_YN					,PRSNT_SEQ						,CASH_BILL_AMT			,LATER_PRCL_SALE_PRC	,B2B_COMMISSION_PRC		,ORDER_CONF_DATE			,OVSEA_GOODS_PRC
			,SEND_MEMO				,SETL_METH_DIV_CD			,REG_DATE				,CHG_DATE					,REGER_ID						,CHGER_ID				,UPDATE_ITEM			,UPDATE_CONT			,DEFICIT_YN					,SETTLE_DATE
			,CP_CMP_CD1				,CP_CMP_CD2					,WALLET_SETL_AMT		,CPN_SEQ1					,CPN_SEQ2						,TAX_YN					,TAX_AMT				,CARD_TAX_AMT			,CASH_TAX_AMT				,CASH_BILL_YN
			,SEND_ADDR_SEQ			,ECODE						,ORDER_STUS_CD			,SETL_SEQ					,CTGRY_CD						,SET_GOODS_CNT
			)
			SELECT
			 ORDER_ITM_ID			,SYSDATE					,#orderHistorChgCd#		,ORIG_ORDER_ITM_ID			,ORDER_ID						,PAVLN_ID				,PAVLN_DIV_CD			,SUPP_COMP_ID			,SUPP_COMP_NM				,SUPPO_RGIST_POCD
			,SUPP_PO_NM				,GOODS_CD					,GOODS_NM				,GOODS_OPTN_GRP_SEQ			,GOODS_OPTN_SEQ					,REQ_CNT				,GOODS_RETRNGD_DATE		,ORDER_DTAIL_STUS_CD	,ORDER_TYP_CD				,GOODS_CANCEL_YN
			,GOODS_CANCEL_DATE		,CNSMR_PRC					,STD_SELL_PRC			,PUCHAS_PRC					,DC_APPLY_PRC					,OPTN_GOODS_APPLY_PRC	,CPN_DC_AMT				,PNT_USE_AMT			,PNT_ACCML_PNT				,PO_PNT_USE_AMT
			,OKCASH_USE_AMT			,PREMI_CUST_PNT_SETL_AMT	,REFUND_AMT				,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_REFUND_APRV_AMT	,SEND_PRC				,PRCL_AMT				,IMMPMN_PRCL_AMT		,AFTPMN_PRCL_AMT			,EMS_AMT
			,EMS_DC_AMT				,EMS_DCRATE					,EMS_DOLAR_AMT			,WGHT						,VOLM							,KIND_DIV_CD			,AIR_SEND_YN			,FRN_EXP_DIV_CD			,PRCLTAXIN					,STD_DIV_CD
			,GOODS_DIV_NO			,FLWR_DELIVPO_SIGN			,BALTSHT_PRT_YN			,FIX_RESRV_ORDER_GOODS_YN	,CPN_USE_YN						,EVENT_DC_GOODS_YN		,EVENT_DIV_CD			,EVENT_ID				,GIFT_ORDER_YN				,GIFT_CANCEL_YN
			,EVENT_GOODS_SEQ		,EXTRA_GOODS_YN				,EXTRA_GOODS_CNT		,EXTRA_GOODS_SEQ			,RGR_GOODS_YN					,RGR_GOODS_SEQ			,RGR_GOODS_PRC			,CORPSPCSAL_GOODS_YN	,CORPSPCSAL_GOODS_SEQ		,PLNBEF_GOODS_YN
			,PLNBEF_ID				,CRRGR_CARD_USE_YN			,WISH_SEND_DATE			,TDAY_EXP_YN				,DOM_EXP_YN						,OVSEA_SEND_GOODS_YN	,DELIV_CERT_YN			,FLWRDELIV_SMS_DONE_DATE,FLWRDELIV_DELAY_REASN_CD	,SEND_MSG
			,SENDER_NM				,SENDER_ZIPCD				,SENDER_ADDR1			,SENDER_ADDR2				,SENDER_ADDR3					,SENDER_TELNO			,SENDER_HTELNO			,SENDER_EMAIL			,SENDER_ADDR_DIV_CD			,RECPTER_NM
			,RECPTER_HONOR_CD		,RECPTER_ZIPCD				,RECPTER_ADDR1			,RECPTER_ADDR2				,RECPTER_ADDR3					,RECPTER_TELNO			,RECPTER_HTELNO			,RECPTER_EMAIL			,RECPTER_ADDR_DIV_CD		,SENDPO_RGIST_POCD
			,HS_CD					,SEND_TYP_CD				,SEND_NATION_CD			,SEND_AREA_CD				,REGI_NO						,REPRSNT_REGI_NO		,REGI_NO_CREATE_DIV_CD	,SEND_CONF_DATE			,SEND_STRT_DATE				,SEND_DONE_DATE
			,ORDER_CANCEL_ADJ_YN	,ADJ_DATE					,REALRECPTER			,INSTL_DUEDD				,SMS_RECV_YN					,MANY_ORDER_NO			,BUND_SEND_YN			,EPOST_MLG_ID			,CANCEL_REQ_YMD				,RETRNGD_YN
			,FLWRDELIV_DELAY_REASN	,SENDER_VIRTL_NO			,RECPTER_VIRTL_NO		,TAXBIL_ADJ_YN				,FLWRDELIV_SMS_RSLT				,SUPPCOMP_SMS_TX_YN		,SENDER_SMS_TX_YN		,ADJ_YN					,ADJ_CARD_REFUND_FEE		,SUPP_NOTIC_DD_PER_SEQ
			,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,SEND_SEQ				,RETRUN_DELIV_DONE_YN		,HDRYCO_CD						,RET_STATUS_CD			,GOODS_OPTN_GRP_SEQ2	,GOODS_OPTN_SEQ2		,CP_TYP_CD
			,ONOFF_FLAG				,DTV_CHK					,OPTN_CNT1				,OPTN_CNT2					,OPTN_NM1						,OPTN_NM2				,OPTN_ESSN_CHOICE_YN	,CPN_MAST_NO1			,CPN_DC_AMT1				,CPN_MAST_NO2
			,CPN_DC_AMT2			,HS_US_PRICE				,GOODS_BASIC_FEE		,PRSNT_YN					,PRSNT_SEQ						,CASH_BILL_AMT			,LATER_PRCL_SALE_PRC	,B2B_COMMISSION_PRC		,ORDER_CONF_DATE			,OVSEA_GOODS_PRC
			,SEND_MEMO				,SETL_METH_DIV_CD			,REG_DATE				,CHG_DATE					,REGER_ID						,CHGER_ID				,#updateItem#			,#updateCont#			,DEFICIT_YN					,SETTLE_DATE
			,CP_CMP_CD1				,CP_CMP_CD2					,WALLET_SETL_AMT		,CPN_SEQ1					,CPN_SEQ2						,TAX_YN					,TAX_AMT				,CARD_TAX_AMT			,CASH_TAX_AMT				,CASH_BILL_YN
			,SEND_ADDR_SEQ			,ECODE						,ORDER_STUS_CD			,SETL_SEQ					,CTGRY_CD						,SET_GOODS_CNT
			FROM OD_ORDER_ITM
			WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 클레임 환불완료 처리 -->
	<update id="updateOrderClaimCmplte" parameterClass="java.util.HashMap">
		UPDATE OD_RET_INTERFACE
		   SET TREAT_STUS_CD = #cliamTreatCd#
			  ,POSA_ACC_TRANSF_TRGT_YN = #posaAccTransfTrgtYn#
			<isNotEmpty property="retrngdRefundMethCd" >
			  ,RETRNGD_REFUND_METH_CD = #retrngdRefundMethCd#
			</isNotEmpty>
		 WHERE ORDER_ID = #orderId#
		   AND ORDER_ITM_ID = #searchOrderItmId#
		   AND TREAT_STUS_CD != '004'
	</update>

	<!-- 주문취소 상태값 변경 및 마일리지 변경 -->
	<update id="updateOrderItmCancelStateMilePnt" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET
			   ORDER_STUS_CD					= #cancelStusCd#,
			   ORDER_DTAIL_STUS_CD				= #cancelDtailStusCd#,
			<isEqual property="goodsCancelYn" compareValue="Y">
			   GOODS_CANCEL_YN					= #goodsCancelYn#,
			   GOODS_CANCEL_DATE				= SYSDATE,
			</isEqual>
			<isNotEmpty property="retStatusCd">
			   RET_STATUS_CD					= #retStatusCd#,
			</isNotEmpty>
			<isNotEmpty property="retYn">
			   RETRNGD_YN						= #retYn#,
			</isNotEmpty>
			   PNT_ACCML_PNT					= 0
			  ,PNT_USE_AMT						= 0
			  ,PNT_REFUND_SETL_AMT				= PNT_REFUND_SETL_AMT + #pntUseAmt#
			  ,PREMI_CUST_PNT_SETL_AMT			= 0
			  ,PREMI_CUST_PNT_REFUND_APRV_AMT	= PREMI_CUST_PNT_REFUND_APRV_AMT + #premiCustPntSetlAmt#
			  ,CHG_DATE = SYSDATE
			  ,CHGER_ID = #chgerId#
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- OD_ORDER_ITM UPDATE -->
	<update id="updateOrderItmClaimRequest" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET ORDER_STUS_CD		= #searchOrderStusCd#		/* 주문 상세 상태 코드 */
			  ,ORDER_DTAIL_STUS_CD	= #searchOrderDtailStusCd#	/* 주문 상세 상태 코드 */
			  ,CHG_DATE				= SYSDATE					/* 수정 일시 */
			  ,CHGER_ID				= #chgerId#					/* 수정자 아이디 */
		 WHERE 1=1
		   AND ORDER_ITM_ID = #searchOrderItmId#
	</update>

	<!-- 포인트 이력 시퀀스 채번 -->
	<select id="selectMilePntHistSeq" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(MAX(SEQ), 0) + 1 SEQ
		  FROM MB_MEM_ACCMLAMT_HISTOR
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
	</select>

	<!-- 포인트결제금액 환불 이력 등록 -->
	<update id="insertMileRmHistoryUsePointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR
			(
			 ACCESS_NAME
			,SEQ
			,RM_TYPE
			,ORDER_ID
			,ACCU_POINT
			,CUR_POINT
			,CASE_CONT
			,VALID_DATE
			,STATUS
			,TYPE_CD
			,REG_DATE
			,CREATE_DATE
			)
		VALUES(
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,'A'
			,#orderId#
			,#pntUsePntSum#
			,#curPoint#
			,'주문 취소 환불'
			,TO_CHAR(SYSDATE + 730, 'YYYYMMDD')
			,'1'
			,'A3'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			)
	</update>

	<!-- 적립포인트 회수 이력 추가 -->
	<update id="insertMilePntHistoryAccuPointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR
			(
			 ACCESS_NAME
			,SEQ
			,RM_TYPE
			,ORDER_ID
			,ORDER_ITM_ID
			,USE_POINT
			,CUR_POINT
			,CASE_CONT
			,STATUS
			,TYPE_CD
			,REG_DATE
			,CREATE_DATE
			)
		VALUES (
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,'U'
			,#orderId#
			,#searchOrderItmId#
			,#pntAccmlPnt#
			,#curPoint#
			,'주문 취소 회수'
			,'2'
			,'U3'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			)
	</update>

	<!-- 적립예정포인트 회수 이력 추가 -->
	<update id="insertMilePntHistoryAccuPrearngePointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR
			(
			 ACCESS_NAME
			,SEQ
			,RM_TYPE
			,ORDER_ID
			,ORDER_ITM_ID
			,PRE_ACCU_POINT
			,CUR_POINT
			,CASE_CONT
			,STATUS
			,TYPE_CD
			,REG_DATE
			,CREATE_DATE
			)
		VALUES (
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,'U'
			,#orderId#
			,#searchOrderItmId#
			,#pntAccmlPnt#*-1
			,#curPoint#
			,'주문 취소 회수'
			,'2'
			,'U3'  /* A1 : 적립, A2 : 적립, A3 : 환불, U1 : 사용, U2 : 사용, U3 : 회수, U4 : 소멸 */
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			)
	</update>

	<!-- 우체국계좌포인트 이력 시퀀스 채번 -->
	<select id="selectPostPntHistSeq" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(MAX(SEQ), 0) + 1 SEQ
		  FROM MB_MEM_ACCMLAMT_HISTOR
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
	</select>

	<!-- 우체국계좌포인트 적립포인트 조회 -->
	<select id="selectMileDownPostAccuPoint" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(SUM(ACCU_POINT),0) ACCU_POINT
		  FROM MB_MEM_ACCMLAMT_HISTOR
		 WHERE ORDER_ITM_ID = #searchOrderItmId#
		   AND STATUS IN ('1','2')
		   AND NVL(CASE_CONT,' ') = '우체국계좌 적립포인트'
	</select>

	<!-- 우체국계좌포인트결제금액 환불 이력 등록 -->
	<update id="insertPostRmHistoryUsePointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR
			(
			 ACCESS_NAME
			,SEQ
			,RM_TYPE
			,ORDER_ID
			,ACCU_POINT
			,CUR_POINT
			,CASE_CONT
			,STATUS
			,TYPE_CD
			,REG_DATE
			,CREATE_DATE
			,POST_GBN
			)
		VALUES(
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,'A'
			,#orderId#
			,#poPntUsePntSum#
			,#curPoint#
			,'우체국계좌 사용포인트 환불'
			,'1'
			,'A3'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,'P'
			)
	</update>

	<!-- 우체국계좌 적립포인트 회수 이력 등록 -->
	<update id="insertPostRmHistoryAccuPointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_MEM_ACCMLAMT_HISTOR
			(
			 ACCESS_NAME
			,SEQ
			,RM_TYPE
			,ORDER_ID
			,ORDER_ITM_ID
			,USE_POINT
			,CUR_POINT
			,REF_POINT
			,CASE_CONT
			,STATUS
			,TYPE_CD
			,REG_DATE
			,CREATE_DATE
			,POST_GBN
			)
		VALUES(
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,'U'
			,#orderId#
			,#orderItmId#
			,#poPntAccuAmt#
			,#curPoint#
			,#refPoint#
			,'우체국계좌 적립포인트 회수'
			,'2'
			,'U3'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,'P'
			)
	</update>

	<!-- 우수고객포인트 이력 시퀀스 채번 -->
	<select id="selectSpHistoryCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(MAX(MEM_PNT_SEQ), 0) + 1 SEQ
			  ,MAX(SP_CLASS) SP_CLASS
		  FROM MB_SP_HISTORY
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
	</select>

	<!-- 우수고객포인트결제금액 환불 이력 등록 -->
	<update id="insertSpPntHistoryUsePointCancel" parameterClass="java.util.HashMap">
		INSERT INTO MB_SP_HISTORY
			(
			 ACCESS_NAME
			,MEM_PNT_SEQ
			,SP_CLASS
			,SP_TYPE
			,PURCHASE_ID
			,ACCU_POINT
			,CUR_POINT
			,CASE_CONT
			,VALID_DATE
			,STATUS
			,TYPE_CD
			,REG_DATE
			,LASTCHANGE
			)
		SELECT
			 NVL(#searchAccessName#,' ')
			,#iSeq#
			,#spClass#
			,'A'
			,#orderId#
			,#premiCustPntSetlPntSum#
			,CUR_POINT + #premiCustPntSetlPntSum#
			,'주문 취소 환불'
			,TO_CHAR(SYSDATE + 730, 'YYYYMMDD')
			,'1'
			,'A3'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			,SYSDATE
		  FROM MB_SP_MASTER
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
		   AND SP_CLASS = #spClass#
	</update>

	<!--  결제정보 사용여부 업데이트 -->
	<update id="updateOrderSetlUseYn" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_SETL
		   SET USE_YN = 'N'
		 WHERE ORDER_ID = #orderId#
	</update>

	<!--  주문취소 결제정보 Insert -->
	<update id="insertOrderSetlCancel" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_SETL (
			   ORDER_ID
			 , SETL_SEQ
			 , SETL_MEAN_CD
			 , PG_ID
			 , SETL_STUS_CD
			 , SETL_REQ_AMT
			 , SETL_APPR_AMT
			 , TXN_ID
			 , ORIG_TXN_ID
			 , SETL_REQ_DATE
			 , SETL_APPR_DATE
			 , SETL_APPR_CD
			 , SETL_ERROR_CD
			 , SETL_ERROR_MSG
			 , BILL_TO_ID
			 , PAY_NAME
			 , PAY_COMP_CD
			 , PAY_CARD_CD
			 , PAY_CARD_NM
			 , CREDITCARD_INSTLMT_MNTH_CNT
			 , CREDITCARD_INSTLMT_TYP_CD
			 , REFUND_AMOUNT
			 , CANCEL_DATE
			 , RECEIVE_DATE
			 , IP_ADDR
			 , USE_YN
			 , GOODS_AMOUNT
			 , TOT_DELIV_CERT_FEE
			 , TOT_CONG_CARD_FEE
			 , FEE_AMOUNT
			 , AMOUNT_ACCOUNT
			 , AMOUNT_CARD_EPOST
			 , AMOUNT_CARD_OVERSEA
			 , AMOUNT_CARD
			 , AMOUNT_BANKTOWN
			 , AMOUNT_OTHER_BANKTOWN
			 , AMOUNT_PAYPAL
			 , AMOUNT_ONURI
			 , AMOUNT_SP
			 , WALLET_SETL_AMT
			 , AMOUNT_SPCSAL
			 , AMOUNT_SMLAMT_SETL
			 , AMOUNT_MOBILE
			 , AMOUNT_RM
			 , AMOUNT_CASH
			 , AMOUNT_CMPND_SETL
			 , AMOUNT_CMPND_RCPT
			 , AMOUNT_OKCASH
			 , AMOUNT_KAKAO
			 , AMOUNT_POSTMPAY
			 , AMOUNT_SYRUP_PAY
			 , AMOUNT_NAVER_PAY
			 , AMOUNT_PAYNOW
			 , AMOUNT_PAYCO
			 , AMOUNT_BANK_KAKAO
			 , AMOUNT_RPAY
			 , AMOUNT_COUPON
			 , AMOUNT_MULTIGIFT
			 , AMOUNT_CYBERPASS
			 , TOT_TAX_AMT
			 , TOT_CARD_TAX_AMT
			 , TOT_CASH_TAX_AMT
			 , TOT_CASH_BILL_AMT
			 , JUNG_DATE
			 , JUNG_YN
			 , JUNG_COMPLETE_DATE
			 , CANCEL_YN
			 , CLOSE_RECEV_YN
			 , RCPT_CLOSE_YMD
			 , SALES_CLOSE_YMD
			 , RECEV_PO_REGIPOCD
			 , CUST_NO
			 , STRT_REG_PRSN_ID
			 , CNTER_NO
			 , EXT_BIZ_ORDER_YN
			 , EXT_BIZ_CODE
			 , EXT_BIZ_ORD_NO
			 , EXT_BIZ_ORD_SEQ
			 , EXT_MALL_CODE
			 , REG_DATE
			 , REGER_ID
			 , CHG_DATE
			 , CHGER_ID
			 )
		SELECT A.ORDER_ID
			 , B.SEQ + 1
			 , #setlMeanCd#
			 , #pgId#
			 , #setlStusCd#
			 , #setlReqAmt#
			 , #setlApprAmt#
			 , #txnId#
			 , #origTxnId#
			<isEmpty property="setlReqDate">
			 , SYSDATE
			</isEmpty>
			<isNotEmpty property="setlReqDate">
			 , TO_DATE(#setlReqDate#, 'YYYYMMDDHH24MISS')
			</isNotEmpty>
			<isEmpty property="setlApprDate">
			 , SYSDATE
			</isEmpty>
			<isNotEmpty property="setlApprDate">
			 , TO_DATE(#setlApprDate#, 'YYYYMMDDHH24MISS')
			</isNotEmpty>
			 , #setlApprCd#
			 , #setlErrorCd#
			 , #setlErrorMsg#
			 , A.BILL_TO_ID
			 , #payName#
			 , #payCompCd#
			 , #payCardCd#
			 , #payCardNm#
			 , #creditcardInstlmtMnthCnt#
			 , #creditcardInstlmtTypCd#
			 , #refundAmount#
			 , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			 , #receiveDate#
			 , #ipAddr#
			 , #useYn#
			 , #goodsAmount#
			 , #totDelivCertFee#
			 , #totCongCardFee#
			 , #feeAmount#
			 , #amountAccount#
			 , #amountCardEpost#
			 , #amountCardOversea#
			 , #amountCard#
			 , #amountBanktown#
			 , #amountOtherBanktown#
			 , #amountPaypal#
			 , #amountOnuri#
			 , #amountSp#
			 , #walletSetlAmt#
			 , #amountSpcsal#
			 , #amountSmlamtSetl#
			 , #amountMobile#
			 , #amountRm#
			 , #amountCash#
			 , #amountCmpndSetl#
			 , #amountCmpndRcpt#
			 , #amountOkcash#
			 , #amountKakao#
			 , #amountPostmpay#
			 , #amountSyrupPay#
			 , #amountNaverPay#
			 , #amountPaynow#
			 , #amountPayco#
			 , #amountBankKakao#
			 , #amountRpay#
			 , #amountCoupon#
			 , #amountMultigift#
			 , #amountCyberpass#
			 , #totTaxAmt#
			 , #totCardTaxAmt#
			 , #totCashTaxAmt#
			 , #totCashBillAmt#
			 , #jungDate#
			 , #jungYn#
			 , #jungCompleteDate#
			 , #cancelYn#
			 , #closeRecevYn#
			 , #rcptCloseYmd#
			 , #salesCloseYmd#
			 , A.RECEV_PO_REGIPOCD
			 , A.CUST_NO
			 , #strtRegPrsnId#
			 , A.CNTER_NO
			 , #extBizOrderYn#
			 , #extBizCode#
			 , #extBizOrdNo#
			 , #extBizOrdSeq#
			 , #extMallCode#
			 , SYSDATE
			 , #regerId#
			 , SYSDATE
			 , #chgerId#
		  FROM OD_ORDER_SETL A
			  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_ORDER_SETL WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = #orderId#
		   AND A.SETL_SEQ = '1'
	</update>

	<!-- 주문취소 시 환불처리 SEQ 조회 -->
	<select id="selectClaimReqNoForCancelFail" parameterClass="java.util.HashMap" resultClass="String">
		<![CDATA[  SELECT SEQ_RET_INTERFACE.NEXTVAL FROM DUAL ]]>
	</select>

	<!-- 주문취소 시 환불처리 -->
	<insert id="insertRetInterfaceForCancelFail" parameterClass="java.util.HashMap">
		<selectKey keyProperty="claimReqSeq" resultClass="String">
			<![CDATA[
				SELECT NVL(MAX(CLAIM_REQ_SEQ)+1||'','1' || TO_CHAR(SYSDATE, 'YYMMDDHH24MISS')||'1')
				  FROM OD_RET_INTERFACE
				 WHERE CLAIM_REQ_SEQ LIKE '1' || TO_CHAR(SYSDATE, 'YYMMDDHH24MISS')||'%'
			]]>
		</selectKey>
		/** BO.Order.insertRetInterfaceForCancelFail **/
		INSERT ALL
		INTO OD_RET_INTERFACE
			( ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			, RETRNGD_REFUND_METH_CD	/* 반품환불방법코드 */
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			)
		VALUES (
			  ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			, RETRNGD_REFUND_METH_CD	/* 반품환불방법코드 */
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			)
		INTO OD_RET_INTERFACE_HISTOR
			( ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			, RETRNGD_REFUND_METH_CD	/* 반품환불방법코드 */
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			)
		VALUES (
			  ORDER_ID					/* 주문 ID */
			, ORDER_ITM_ID				/* 주문 아이템 ID */
			, CLAIM_REQ_SEQ				/* 클레임신청일련번호 */
			, CLAIM_REQ_NO				/* 클레임신청번호 */
			, GOODS_CD					/* 상품코드 */
			, GOODS_SEQ					/* 상품일련번호 */
			, GOODS_RECPTER_SEQ			/* 상품별 수취인 일련번호 */
			, SUPPO_RGISTPO_CD			/* 공급국등기용국기호 */
			, CLAIM_RECEVPO_RGISTPO_CD	/* 클레임접수국등기용국기호 */
			, CLAIM_RECEVPO_WICKETNO	/* 클레임접수국창구번호 */
			, CLAIM_REQ_YMD				/* 클레임신청일자 */
			, CLAIM_REQ_HMS				/* 클레임신청시각 */
			, CLAIM_DIV_CD				/* 클레임구분코드 001:환불, 002:교환, 003:주문취소 */
			, SETL_AMT					/* 결제금액 */
			, GOODS_PRC					/* 상품가격 */
			, CLAIM_CNT					/* 클레임수량 */
			, CLAIM_TREAT_AMT			/* 클레임처리금액 */
			, RETRNGD_PRCL_PRC			/* 반송소포요금 */
			, CLAIM_REASN_CD			/* 클레임사유코드 */
			, CLAIM_REASN_CONT			/* 클레임사유내역 */
			, CLAIM_PRCLPRCPAY_CD		/* 클레임소포요금납부코드 */
			, CLAIM_REQ_PRSNNM			/* 클레임신청인명 */
			, CLAIM_REQ_PRSNTELNO		/* 클레임신청인전화번호 */
			, CLAIM_REQ_PRSNHTELNO		/* 클레임신청인핸드폰번호 */
			, RETRNGD_REFUND_METH_CD	/* 반품환불방법코드 */
			, REFUND_BANKCD				/* 환불은행코드 */
			, SEED_REFUND_ACC_NO		/* 암호화 환불계좌번호 */
			, DPSTRNM					/* 예금주명 */
			, TREAT_STUS_CD				/* 처리상태코드 */
			, REFUND_RETRNGD_TOTCNT		/* 환불반품총수량 */
			, REFUND_RETRNGD_CSF_FEE	/* 반품환불진흥원수수료 */
			, SEND_REQ_NO				/* 배송신청번호 */
			, REQ_ADDR_TYPE				/* 클레임주소구분 */
			, REQ_TEL_NO				/* 수취인 전화번호 */
			, REQ_HTEL_NO				/* 수취인 핸드폰번호 */
			, REFUND_RESERV_AMT			/* 반품적립금금액 */
			, DOWN_RESERV_AMT			/* 다운적립금 */
			, RECALLRESERV_AMT			/* 회수적립금 */
			, REST_RESERV_AMT			/* 고객적립금 */
			, PAY_AMT					/* 지불금액 */
			, CLAIM_RECPTER_ZIPCD		/* 클레임수취인우편번호 */
			, CLAIM_RECPTER_ADDR_1		/* 클레임수취인주소1 */
			, CLAIM_RECPTER_ADDR_2		/* 클레임수취인주소2 */
			, CLAIM_REQ_RECPTER_NM		/* 클레임수취인명 */
			, REGER_ID					/* 접수자아이디 */
			, REG_DATE					/* 접수일시 */
			, CHGER_ID					/* 변경자아이디 */
			, CHG_DATE					/* 변경일시 */
			)
		SELECT OOI.ORDER_ID
			  ,OOI.ORDER_ITM_ID
			  ,#claimReqSeq# AS CLAIM_REQ_SEQ
			  ,#claimReqNo# AS CLAIM_REQ_NO
			  ,OOI.GOODS_CD
			  ,(SELECT NVL(MAX(ORI.GOODS_SEQ),1) FROM OD_RET_INTERFACE ORI WHERE ORI.ORDER_ID = #orderId# AND ORI.GOODS_CD = OOI.GOODS_CD) AS GOODS_SEQ
			  ,(SELECT NVL(MAX(ORI.GOODS_RECPTER_SEQ) + 1,1) FROM OD_RET_INTERFACE ORI WHERE ORI.ORDER_ID = #orderId# AND ORI.GOODS_CD = OOI.GOODS_CD) AS GOODS_RECPTER_SEQ
			  ,OOI.SUPPO_RGIST_POCD AS SUPPO_RGISTPO_CD
			  ,'89903' AS CLAIM_RECEVPO_RGISTPO_CD
			  ,'000' AS CLAIM_RECEVPO_WICKETNO
			  ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS CLAIM_REQ_YMD
			  ,TO_CHAR(SYSDATE, 'HH24MISS') AS CLAIM_REQ_HMS
			  ,#searchClaimdivcd# AS CLAIM_DIV_CD
			  ,(NVL(DC_APPLY_PRC,0) + NVL(OPTN_GOODS_APPLY_PRC,0) + NVL(SEND_PRC,0)
			   - (NVL(PNT_USE_AMT,0) + NVL(PREMI_CUST_PNT_SETL_AMT,0) + NVL(CPN_DC_AMT,0) + NVL(OKCASH_USE_AMT,0) + NVL(WALLET_SETL_AMT,0))
			    + NVL(B2B_COMMISSION_PRC,0)) AS SETL_AMT
			  ,NVL(CNSMR_PRC,0) AS GOODS_PRC
			  ,OOI.REQ_CNT AS CLAIM_CNT
			  ,NVL(CNSMR_PRC,0) AS CLAIM_TREAT_AMT
			  ,0 AS RETRNGD_PRCL_PRC
			  ,#claimReasnCd# AS CLAIM_REASN_CD
			  ,#claimReason# AS CLAIM_REASN_CONT
			  ,#claimReasnCd# AS CLAIM_PRCLPRCPAY_CD
			  ,OOI.RECPTER_NM AS CLAIM_REQ_PRSNNM
			  ,OOI.RECPTER_TELNO AS CLAIM_REQ_PRSNTELNO
			  ,OOI.RECPTER_HTELNO AS CLAIM_REQ_PRSNHTELNO
			<isNotEmpty property="searchRefundMethCd">
			  ,#searchRefundMethCd# AS RETRNGD_REFUND_METH_CD
			</isNotEmpty>
			<isEmpty property="searchRefundMethCd">
			  ,'05' AS RETRNGD_REFUND_METH_CD
			</isEmpty>
			  ,#refundBankcd# AS REFUND_BANKCD
			  ,#acctNo# AS SEED_REFUND_ACC_NO
			  ,#acctNm# AS DPSTRNM
			  ,#searchTreatstuscd# AS TREAT_STUS_CD
			  ,0 AS REFUND_RETRNGD_TOTCNT
			  ,0 AS REFUND_RETRNGD_CSF_FEE
			  ,0 AS SEND_REQ_NO
			  ,OOI.RECPTER_ADDR_DIV_CD AS REQ_ADDR_TYPE
			  ,#recpterTelno# AS REQ_TEL_NO
			  ,#recpterHtelno# AS REQ_HTEL_NO
			  ,0 AS REFUND_RESERV_AMT
			  ,0 AS DOWN_RESERV_AMT
			  ,0 AS RECALLRESERV_AMT
			  ,0 AS REST_RESERV_AMT
			  ,0 AS PAY_AMT
			  ,#recpterZipcd# AS CLAIM_RECPTER_ZIPCD
			  ,#recpterAddr1# AS CLAIM_RECPTER_ADDR_1
			  ,#recpterAddr2# AS CLAIM_RECPTER_ADDR_2
			  ,#recpterNm# AS CLAIM_REQ_RECPTER_NM
			  ,#regerId# AS REGER_ID
			  ,SYSDATE AS REG_DATE
			  ,#chgerId# AS CHGER_ID
			  ,SYSDATE AS CHG_DATE
		  FROM OD_ORDER_ITM OOI
		 WHERE OOI.ORDER_ITM_ID = #searchOrderItmId#
	</insert>

	<!-- 환불처리 - 환불/과납금 테이블 insert -->
	<insert id="insertOnlineExPriceCancel" parameterClass="java.util.HashMap">
		<selectKey keyProperty="expriceId" resultClass="int">
			<![CDATA[
			SELECT NVL(MAX(NVL(EXPRICE_ID,0)),0) + 1 MAXVAL
			  FROM OD_ONLINE_EX_PRICE
			 WHERE ORDER_ID = #orderId# ]]>
		</selectKey>
		<![CDATA[
		INSERT INTO OD_ONLINE_EX_PRICE
			(
			 ORDER_ID
			,EXPRICE_ID
			,PRE_REF_PRICE
			,PRE_SETTLE_DATE
			,FINANCE_NAME
			,ACCOUNT_SEED_NO
			,DEPOSITOR
			,REASON_CODE
			,MODIFY_STATE
			,MODIFY_CNT
			,ACCESS_NAME
			,BANK_CD
			,REMIT_STUS_CD
			)
		SELECT
			 #orderId#
			,#expriceId#
			,#cancelSetlAmtSum#
			,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			,F_GET_COMN_CD_NM('BANK_CD',LPAD(MAX(REFUND_BANKCD),3,'0')||'')
			,MAX(SEED_REFUND_ACC_NO)
			,MAX(DPSTRNM)
			,MAX(CLAIM_REASN_CD)
			,#searchOrderDtailStusCd#
			,1
			,#searchAccessName#
			,#refundBankcd#
			,'01'
		  FROM OD_RET_INTERFACE
		 WHERE ORDER_ID = #orderId#
		   AND CLAIM_REQ_NO = #claimReqNo#
		 GROUP BY ORDER_ID, CLAIM_REQ_NO
		]]>
	</insert>

	<!-- 환불/과납금 테이블 insert 후 RET_INTERFACE EXPRICE_ID update -->
	<update id="updateRetInterfaceExpriceId" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE OD_RET_INTERFACE
		   SET EXPRICE_ID = #expriceId#
		 WHERE ORDER_ID = #orderId#
		   AND CLAIM_REQ_NO = #claimReqNo#
		]]>
	</update>

	<!--  정산용 결제정보 Insert -->
	<update id="insertOrderSetlExcclcPrvuse" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_SETL (
			   ORDER_ID
			 , SETL_SEQ
			 , SETL_MEAN_CD
			 , PG_ID
			 , SETL_STUS_CD
			 , SETL_REQ_AMT
			 , SETL_APPR_AMT
			 , TXN_ID
			 , ORIG_TXN_ID
			 , SETL_REQ_DATE
			 , SETL_APPR_DATE
			 , SETL_APPR_CD
			 , SETL_ERROR_CD
			 , SETL_ERROR_MSG
			 , BILL_TO_ID
			 , PAY_NAME
			 , PAY_COMP_CD
			 , PAY_CARD_CD
			 , PAY_CARD_NM
			 , CREDITCARD_INSTLMT_MNTH_CNT
			 , CREDITCARD_INSTLMT_TYP_CD
			 , REFUND_AMOUNT
			 , CANCEL_DATE
			 , RECEIVE_DATE
			 , IP_ADDR
			 , USE_YN
			 , GOODS_AMOUNT
			 , TOT_DELIV_CERT_FEE
			 , TOT_CONG_CARD_FEE
			 , FEE_AMOUNT
			 , AMOUNT_ACCOUNT
			 , AMOUNT_CARD_EPOST
			 , AMOUNT_CARD_OVERSEA
			 , AMOUNT_CARD
			 , AMOUNT_BANKTOWN
			 , AMOUNT_OTHER_BANKTOWN
			 , AMOUNT_PAYPAL
			 , AMOUNT_ONURI
			 , AMOUNT_SP
			 , WALLET_SETL_AMT
			 , AMOUNT_SPCSAL
			 , AMOUNT_SMLAMT_SETL
			 , AMOUNT_MOBILE
			 , AMOUNT_RM
			 , AMOUNT_CASH
			 , AMOUNT_CMPND_SETL
			 , AMOUNT_CMPND_RCPT
			 , AMOUNT_OKCASH
			 , AMOUNT_KAKAO
			 , AMOUNT_POSTMPAY
			 , AMOUNT_SYRUP_PAY
			 , AMOUNT_NAVER_PAY
			 , AMOUNT_PAYNOW
			 , AMOUNT_PAYCO
			 , AMOUNT_BANK_KAKAO
			 , AMOUNT_RPAY
			 , AMOUNT_COUPON
			 , AMOUNT_MULTIGIFT
			 , AMOUNT_CYBERPASS
			 , TOT_TAX_AMT
			 , TOT_CARD_TAX_AMT
			 , TOT_CASH_TAX_AMT
			 , TOT_CASH_BILL_AMT
			 , JUNG_DATE
			 , JUNG_YN
			 , JUNG_COMPLETE_DATE
			 , CANCEL_YN
			 , CLOSE_RECEV_YN
			 , RCPT_CLOSE_YMD
			 , SALES_CLOSE_YMD
			 , RECEV_PO_REGIPOCD
			 , CUST_NO
			 , STRT_REG_PRSN_ID
			 , CNTER_NO
			 , EXT_BIZ_ORDER_YN
			 , EXT_BIZ_CODE
			 , EXT_BIZ_ORD_NO
			 , EXT_BIZ_ORD_SEQ
			 , EXT_MALL_CODE
			 , REG_DATE
			 , REGER_ID
			 , CHG_DATE
			 , CHGER_ID
			 )
		SELECT A.ORDER_ID
			 , MAX(B.SEQ) + 1
			 , MAX(A.SETL_MEAN_CD)
			 , MAX(A.PG_ID)
			 , ''
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.SETL_REQ_AMT*(-1),A.SETL_REQ_AMT))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.SETL_APPR_AMT*(-1),A.SETL_APPR_AMT))
			 , #txnId#
			 , #origTxnId#
			 , SYSDATE
			 , SYSDATE
			 , ''
			 , #setlErrorCd#
			 , #setlErrorMsg#
			 , #billToId#
			 , #payName#
			 , #payCompCd#
			 , #payCardCd#
			 , #payCardNm#
			 , #creditcardInstlmtMnthCnt#
			 , #creditcardInstlmtTypCd#
			 , SUM(A.REFUND_AMOUNT)
			 , #cancelDate#
			 , #receiveDate#
			 , #ipAddr#
			 , 'Y'
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.GOODS_AMOUNT*(-1),A.GOODS_AMOUNT))
			 , MAX(A.TOT_DELIV_CERT_FEE)
			 , MAX(A.TOT_CONG_CARD_FEE)
			 , MAX(A.FEE_AMOUNT)
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_ACCOUNT*(-1),A.AMOUNT_ACCOUNT))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CARD_EPOST*(-1),A.AMOUNT_CARD_EPOST))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CARD_OVERSEA*(-1),A.AMOUNT_CARD_OVERSEA))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CARD*(-1),A.AMOUNT_CARD))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_BANKTOWN*(-1),A.AMOUNT_BANKTOWN))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_OTHER_BANKTOWN*(-1),A.AMOUNT_OTHER_BANKTOWN))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_PAYPAL*(-1),A.AMOUNT_PAYPAL))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_ONURI*(-1),A.AMOUNT_ONURI))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_SP*(-1),A.AMOUNT_SP))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.WALLET_SETL_AMT*(-1),A.WALLET_SETL_AMT))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_SPCSAL*(-1),A.AMOUNT_SPCSAL))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_SMLAMT_SETL*(-1),A.AMOUNT_SMLAMT_SETL))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_MOBILE*(-1),A.AMOUNT_MOBILE))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_RM*(-1),A.AMOUNT_RM))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CASH*(-1),A.AMOUNT_CASH))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CMPND_SETL*(-1),A.AMOUNT_CMPND_SETL))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CMPND_RCPT*(-1),A.AMOUNT_CMPND_RCPT))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_OKCASH*(-1),A.AMOUNT_OKCASH))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_KAKAO*(-1),A.AMOUNT_KAKAO))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_POSTMPAY*(-1),A.AMOUNT_POSTMPAY))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_SYRUP_PAY*(-1),A.AMOUNT_SYRUP_PAY))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_NAVER_PAY*(-1),A.AMOUNT_NAVER_PAY))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_PAYNOW*(-1),A.AMOUNT_PAYNOW))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_PAYCO*(-1),A.AMOUNT_PAYCO))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_BANK_KAKAO*(-1),A.AMOUNT_BANK_KAKAO))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_RPAY*(-1),A.AMOUNT_RPAY))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_COUPON*(-1),A.AMOUNT_COUPON))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_MULTIGIFT*(-1),A.AMOUNT_MULTIGIFT))
			 , SUM(DECODE(A.CANCEL_YN,'Y',A.AMOUNT_CYBERPASS*(-1),A.AMOUNT_CYBERPASS))
			 , MAX(A.TOT_TAX_AMT)
			 , MAX(A.TOT_CARD_TAX_AMT)
			 , MAX(A.TOT_CASH_TAX_AMT)
			 , MAX(A.TOT_CASH_BILL_AMT)
			 , #jungDate#
			 , #jungYn#
			 , #jungCompleteDate#
			 , 'N'
			 , #closeRecevYn#
			 , #rcptCloseYmd#
			 , #salesCloseYmd#
			 , #recevPoRegipocd#
			 , #custNo#
			 , #strtRegPrsnId#
			 , #cnterNo#
			 , #extBizOrderYn#
			 , #extBizCode#
			 , #extBizOrdNo#
			 , #extBizOrdSeq#
			 , #extMallCode#
			 , SYSDATE
			 , #regerId#
			 , SYSDATE
			 , #chgerId#
		  FROM OD_ORDER_SETL A
			  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_ORDER_SETL WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = #orderId#
		   AND A.SETL_STUS_CD IS NOT NULL
		 GROUP BY A.ORDER_ID
	</update>

	<!--  주문 결제 정보 전체취소 -->
	<update id="insertOrderSetlAllCancel" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_SETL (
			   ORDER_ID
			 , SETL_SEQ
			 , SETL_MEAN_CD
			 , PG_ID
			 , SETL_STUS_CD
			 , SETL_REQ_AMT
			 , SETL_APPR_AMT
			 , TXN_ID
			 , ORIG_TXN_ID
			 , SETL_REQ_DATE
			 , SETL_APPR_DATE
			 , SETL_APPR_CD
			 , SETL_ERROR_CD
			 , SETL_ERROR_MSG
			 , BILL_TO_ID
			 , PAY_NAME
			 , PAY_COMP_CD
			 , PAY_CARD_CD
			 , PAY_CARD_NM
			 , CREDITCARD_INSTLMT_MNTH_CNT
			 , CREDITCARD_INSTLMT_TYP_CD
			 , REFUND_AMOUNT
			 , CANCEL_DATE
			 , RECEIVE_DATE
			 , IP_ADDR
			 , USE_YN
			 , GOODS_AMOUNT
			 , TOT_DELIV_CERT_FEE
			 , TOT_CONG_CARD_FEE
			 , FEE_AMOUNT
			 , AMOUNT_ACCOUNT
			 , AMOUNT_CARD_EPOST
			 , AMOUNT_CARD_OVERSEA
			 , AMOUNT_CARD
			 , AMOUNT_BANKTOWN
			 , AMOUNT_OTHER_BANKTOWN
			 , AMOUNT_PAYPAL
			 , AMOUNT_ONURI
			 , AMOUNT_SP
			 , AMOUNT_WALLET
			 , AMOUNT_SPCSAL
			 , AMOUNT_SMLAMT_SETL
			 , AMOUNT_MOBILE
			 , AMOUNT_RM
			 , AMOUNT_CASH
			 , AMOUNT_CMPND_SETL
			 , AMOUNT_CMPND_RCPT
			 , AMOUNT_OKCASH
			 , AMOUNT_KAKAO
			 , AMOUNT_POSTMPAY
			 , AMOUNT_SYRUP_PAY
			 , AMOUNT_NAVER_PAY
			 , AMOUNT_PAYNOW
			 , AMOUNT_PAYCO
			 , AMOUNT_BANK_KAKAO
			 , AMOUNT_RPAY
			 , AMOUNT_COUPON
			 , AMOUNT_MULTIGIFT
			 , AMOUNT_CYBERPASS
			 , TOT_TAX_AMT
			 , TOT_CARD_TAX_AMT
			 , TOT_CASH_TAX_AMT
			 , TOT_CASH_BILL_AMT
			 , JUNG_DATE
			 , JUNG_YN
			 , JUNG_COMPLETE_DATE
			 , CANCEL_YN
			 , CLOSE_RECEV_YN
			 , RCPT_CLOSE_YMD
			 , SALES_CLOSE_YMD
			 , RECEV_PO_REGIPOCD
			 , CUST_NO
			 , STRT_REG_PRSN_ID
			 , CNTER_NO
			 , EXT_BIZ_ORDER_YN
			 , EXT_BIZ_CODE
			 , EXT_BIZ_ORD_NO
			 , EXT_BIZ_ORD_SEQ
			 , EXT_MALL_CODE
			 , REG_DATE
			 , REGER_ID
			 , CHG_DATE
			 , CHGER_ID
			 )
			SELECT A.ORDER_ID
				 , B.SEQ + ROWNUM
				 , A.SETL_MEAN_CD
				 , A.PG_ID
				 , #setlStusCd#
				 , A.SETL_REQ_AMT
				 , A.SETL_APPR_AMT
				 , A.TXN_ID
				 , A.ORIG_TXN_ID
				 , A.SETL_REQ_DATE
				 , A.SETL_APPR_DATE
				 , A.SETL_APPR_CD
				 , A.SETL_ERROR_CD
				 , A.SETL_ERROR_MSG
				 , A.BILL_TO_ID
				 , A.PAY_NAME
				 , A.PAY_COMP_CD
				 , A.PAY_CARD_CD
				 , A.PAY_CARD_NM
				 , A.CREDITCARD_INSTLMT_MNTH_CNT
				 , A.CREDITCARD_INSTLMT_TYP_CD
				 , A.REFUND_AMOUNT
				 , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
				 , A.RECEIVE_DATE
				 , A.IP_ADDR
				 , #useYn#
				 , A.GOODS_AMOUNT
				 , A.TOT_DELIV_CERT_FEE
				 , A.TOT_CONG_CARD_FEE
				 , A.FEE_AMOUNT
				 , A.AMOUNT_ACCOUNT
				 , A.AMOUNT_CARD_EPOST
				 , A.AMOUNT_CARD_OVERSEA
				 , A.AMOUNT_CARD
				 , A.AMOUNT_BANKTOWN
				 , A.AMOUNT_OTHER_BANKTOWN
				 , A.AMOUNT_PAYPAL
				 , A.AMOUNT_ONURI
				 , A.AMOUNT_SP
				 , A.WALLET_SETL_AMT
				 , A.AMOUNT_SPCSAL
				 , A.AMOUNT_SMLAMT_SETL
				 , A.AMOUNT_MOBILE
				 , A.AMOUNT_RM
				 , A.AMOUNT_CASH
				 , A.AMOUNT_CMPND_SETL
				 , A.AMOUNT_CMPND_RCPT
				 , A.AMOUNT_OKCASH
				 , A.AMOUNT_KAKAO
				 , A.AMOUNT_POSTMPAY
				 , A.AMOUNT_SYRUP_PAY
				 , A.AMOUNT_NAVER_PAY
				 , A.AMOUNT_PAYNOW
				 , A.AMOUNT_PAYCO
				 , A.AMOUNT_BANK_KAKAO
				 , A.AMOUNT_RPAY
				 , A.AMOUNT_COUPON
				 , A.AMOUNT_MULTIGIFT
				 , A.AMOUNT_CYBERPASS
				 , A.TOT_TAX_AMT
				 , A.TOT_CARD_TAX_AMT
				 , A.TOT_CASH_TAX_AMT
				 , A.TOT_CASH_BILL_AMT
				 , A.JUNG_DATE
				 , A.JUNG_YN
				 , A.JUNG_COMPLETE_DATE
				 , #cancelYn#
				 , A.CLOSE_RECEV_YN
				 , A.RCPT_CLOSE_YMD
				 , A.SALES_CLOSE_YMD
				 , A.RECEV_PO_REGIPOCD
				 , A.CUST_NO
				 , A.STRT_REG_PRSN_ID
				 , A.CNTER_NO
				 , A.EXT_BIZ_ORDER_YN
				 , A.EXT_BIZ_CODE
				 , A.EXT_BIZ_ORD_NO
				 , A.EXT_BIZ_ORD_SEQ
				 , A.EXT_MALL_CODE
				 , SYSDATE
				 , #regerId#
				 , SYSDATE
				 , #chgerId#
			  FROM OD_ORDER_SETL A
				  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_ORDER_SETL WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
			 WHERE A.ORDER_ID = B.ORDER_ID
			   AND A.ORDER_ID = #orderId#
			   AND A.SETL_SEQ = '1'
			   AND NVL(A.CANCEL_YN,'N') = 'N'
	</update>

	<!-- BankTown 주문 전체취소 -->
	<update id="insertBankTownCancel" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_BANKTOWN
			(
			  ACCESS_NAME
			, ACCT_NAME
			, AUTH_NUM
			, AUTH_TIME
			, BILLTO_NAME
			, ORDER_ID
			, POST_GBN
			, PRICE
			, RESULT
			, SETL_SEQ
			)
		SELECT #searchAccessName#
			 , ''
			 , #authNum#
			 , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')
			 , A.BILLTO_NAME
			 , #orderId#
			 , A.POST_GBN
			 , TO_NUMBER(#price#)
			 , #status#
			 , B.SEQ + ROWNUM
		  FROM OD_BANKTOWN A
			  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_BANKTOWN WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = #orderId#
		   AND A.SETL_SEQ = '1'
		]]>
	</update>

	<!-- 포인트 주문 시퀀스 채번 -->
	<select id="selectRmPaymentCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(MAX(TO_NUMBER(SETL_SEQ)), 0) + 1 SEQ
		  FROM OD_RM_PAYMENT
		 WHERE ORDER_ID = #orderId#
	</select>

	<!-- 포인트 주문 반환 등록 -->
	<update id="insertMileRmPayment" parameterClass="java.util.HashMap">
		INSERT INTO OD_RM_PAYMENT
			(
			 ORDER_ID
			,SETL_SEQ
			,ACCESS_NAME
			,USE_TYPE
			,AMOUNT
			,RM_STUS_CD
			,PAY_DATE
			)
		VALUES (
			 #orderId#
			,#iSeq#
			,NVL(#searchAccessName#,' ')
			,'1'	/* (1: 주문, 2: 부가서비스) */
			,#pntUseCancelAmtSum# * -1
			,'1'	/* (0: 결제전(입금확인전), 1: 결제, 2: 정산완료) */
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			)
	</update>

	<!-- 포인트 마스터 환불 -->
	<update id="updateRmMaster" parameterClass="java.util.HashMap">
		UPDATE MB_MEM_ACCMLAMT
		   SET CUR_POINT		= #curPoint#
			  ,TOT_USE_POINT	= #totUsePoint#
			  ,TOT_ACCU_POINT	= #totAccuPoint#
			  ,POST_POINT		= #postPoint#
			  ,LASTCHANGE		= TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		 WHERE ACCESS_NAME = NVL(#searchAccessName#,' ')
	</update>

	<!-- 상품금액SUM 조회 -->
	<select id="selectOrderGoodsPrcSum" parameterClass="java.util.HashMap" resultClass="String">
		<![CDATA[
		SELECT SUM(DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC) GOODS_PRC_SUM
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		]]>
	</select>

	<!-- 포인트 보정분 계산 -->
	<select id="selectCancelOrderRmDstbAmtList" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ITM_ID
			  ,FLOOR((DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC)/#goodsPrcSum#*#pntUseDstbAmtSum#) PNT_DSTB_AMT
			  ,FLOOR((DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC)/#goodsPrcSum#*#poPntUseDstbAmtSum#) PO_PNT_DSTB_AMT
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		]]>
	</select>

	<!-- 포인트 보정 -->
	<update id="updateOrderRmDstbAmt" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET PNT_USE_AMT		= PNT_USE_AMT + #pntDstbAmt#
			  ,PO_PNT_USE_AMT	= PO_PNT_USE_AMT + #poPntDstbAmt#
		 WHERE ORDER_ITM_ID = #dstbOrderItmId#
	</update>

	<!-- 우수고객포인트 주문 시퀀스 채번 -->
	<select id="selectSpPaymentCnt" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT NVL(MAX(TO_NUMBER(SETL_SEQ)), 0) + 1 seq
		  FROM MB_SP_PAYMENT
		 WHERE ORDER_ID = #orderId#
	</select>

	<!-- 우수고객포인트 주문 반환 등록 -->
	<update id="insertMileSpPayment" parameterClass="java.util.HashMap">
		INSERT INTO MB_SP_PAYMENT
			(
			 ORDER_ID
			,SETL_SEQ
			,ACCESS_NAME
			,USE_TYPE
			,AMOUNT
			,STATUS
			,PAY_DATE
			)
		VALUES(
			 #orderId#
			,#iSeq#
			,NVL(#searchAccessName#,' ')
			,'1'
			,#premiCustPntSetlAmtSum# * -1
			,'1'
			,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			)
	</update>

	<!-- 우수고객포인트 마스터 환불 -->
	<update id="updateSpMaster" parameterClass="java.util.HashMap">
		UPDATE MB_SP_MASTER
		   SET CUR_POINT	  = CUR_POINT		+ #premiCustPntSetlPntSum#
			  ,TOT_USE_POINT  = TOT_USE_POINT	- #premiCustPntSetlPntSum#
			  ,TOT_ACCU_POINT = TOT_ACCU_POINT	+ #premiCustPntSetlPntSum#
			  ,LASTCHANGE	 = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		 WHERE ACCESS_NAME  = NVL(#searchAccessName#,' ')
		   AND SP_CLASS = #spClass#
	</update>

	<!-- 우수고객포인트 보정분 계산 -->
	<select id="selectCancelOrderSpDstbAmtList" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT ORDER_ITM_ID
			  ,FLOOR((DC_APPLY_PRC + OPTN_GOODS_APPLY_PRC)/#goodsPrcSum#*#spUseDstbAmtSum#) SP_DSTB_AMT
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ID = #orderId#
		   AND NVL(GOODS_CANCEL_YN,'N') = 'N'
		]]>
	</select>

	<!-- 우수고객포인트 보정 -->
	<update id="updateOrderSpDstbAmt" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_ITM
		   SET PREMI_CUST_PNT_SETL_AMT		= PREMI_CUST_PNT_SETL_AMT + #spDstbAmt#
		 WHERE ORDER_ITM_ID = #dstbOrderItmId#
	</update>

	<!-- 포인트 결손금액 처리 -->
	<update id="updatePntExPrice" parameterClass="java.util.HashMap">
		MERGE INTO MB_EX_PRICE A
			 USING DUAL
				ON (A.ORDER_ID = #orderId#)
		WHEN MATCHED THEN
			UPDATE SET AMOUNT = #dfctPoint#
		WHEN NOT MATCHED THEN
			INSERT
				(
				 ORDER_ID
				,AMOUNT
				,CREATE_DATE
				)
			VALUES(
				 #orderId#
				,#dfctPoint#
				,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
				)
	</update>

	<!-- 주문 취소 안내 메일 정보 조회 -->
	<select id="selectMailTemplate" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
			SELECT
				SUBSTR(A.EMAIL_TEMPL_PATH, 1, INSTR(A.EMAIL_TEMPL_PATH, '/', -1, 1) )	EMAIL_TEMPL_PATH,
				SUBSTR(A.EMAIL_TEMPL_PATH, INSTR(A.EMAIL_TEMPL_PATH, '/', -1, 1) + 1, LENGTH(A.EMAIL_TEMPL_PATH))	EMAIL_TEMPL_NAME
			FROM CM_SMS_EMAIL_TEMPL A
			WHERE 1 = 1
			AND A.DEL_YN = 'N'
			AND A.TEMPL_MGT_NO = #templMgtNo#
		]]>
	</select>

	<!-- 주문 취소 안내 메일 정보 조회 -->
	<select id="selectCancelOrderMailInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT A.ORDER_ID
			  ,TO_CHAR(MAX(A.ORDER_DATE), 'YYYYMMDDHH24MISS') ORDER_DATE
			  ,NVL(MAX(C.BILLTO_EMAIL),MAX(A.ORDRR_EMAIL)) ORDRR_EMAIL
			  ,MAX(A.ORDRR_NM) ORDRR_NM
			  ,MAX(A.ORDRR_ZIPCD) ORDRR_ZIPCD
			  ,MAX(A.ORDRR_ADDR1) ORDRR_ADDR1
			  ,MAX(A.ORDRR_ADDR2) ORDRR_ADDR2
			  ,MAX(A.ACCESS_NAME) ACCESS_NAME
			  ,(SELECT BB.FILE_STRE_PATH || BB.STRE_FILE_NM FROM GD_GOODS_IMAGE AA, CM_FILE_MGT BB  WHERE AA.REPRSNT_IMAGE = BB.ATTCHFILE_ID AND AA.GOODS_CD = B.GOODS_CD) GOODS_IMAGE
			  ,MAX(B.GOODS_NM) GOODS_NM
			  ,COUNT(0) GOODS_CNT
			  ,TO_CHAR(SUM(NVL(B.DC_APPLY_PRC,0) + NVL(B.OPTN_GOODS_APPLY_PRC,0)), 'FM999,999,999,999') CANCEL_GOODS_AMOUNT_STR
			  ,SUM(NVL(B.DC_APPLY_PRC,0) + NVL(B.OPTN_GOODS_APPLY_PRC,0)) CANCEL_GOODS_AMOUNT
			  ,MAX(B.RECPTER_NM) RECPTER_NM
			  ,MAX(B.RECPTER_ADDR1) RECPTER_ADDR1
			  ,MAX(B.RECPTER_ADDR2) RECPTER_ADDR2
			  ,MAX(B.PAVLN_DIV_CD) PAVLN_DIV_CD
			  ,MAX(A.NATION_CD) NATION_CD
		  FROM OD_ORDER_MAST A
			  ,OD_ORDER_ITM B
			  ,OD_ORDERINFO C
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = C.ORDER_ID(+)
		   AND A.ORDER_ID = #orderId#
		   AND B.ORDER_ITM_ID IN
			<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
				#searchOrderItmIds[]#
			</iterate>
		 GROUP BY A.ORDER_ID, B.GOODS_CD, B.SEND_SEQ
		 ORDER BY A.ORDER_ID, B.SEND_SEQ
	</select>

	<!-- 주문 취소 안내 메일 발송 후 업데이트 -->
	<update id="updateOdOrderinfo" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE OD_ORDERINFO SET
				MAILSENDGBN = '2',
				MAILSENDDATE = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
			WHERE ORDER_ID = #orderId#
		]]>
	</update>

	<!-- OD_ORDER_MAST_HISTOR 전체취소 이력 INSERT -->
	<update id="insertOrderMastHistCancel" parameterClass="java.util.HashMap">
		INSERT INTO OD_ORDER_HISTOR
			(
			 ORDER_ID						,ORDER_CHG_DATE			,ACCESS_NAME				,ORDRR_RECOM_PO_CD
			,RECOM_PO_RGISTPOCD				,ORDRR_RECOM_ACCESS_NAME,BUYER_AGREE_YN				,RECRTER_ID				,RECRTER_INFO
			,SUPPO_DLIV_MATTER				,RECEVPO_RGISTPOCD		,RECEV_CANCELPO				,WICKET_NO				,WICKET_SHOP_ORDRR_NM
			,ORDER_MDA_DIV_CD				,ORDER_TYP_CD			,ORDER_DATE					,APPR_DATE				,ORDER_CONF_DATE
			,ORDER_CANCEL_DATE				,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,TOT_CNSMR_PRC			,TOT_STD_SELL_PRC
			,TOT_PUCHAS_PRC					,TOT_DC_APPLY_PRC		,TOT_SEND_PRC				,EXRATE					,SETL_DUE_AMT
			,TOT_CPN_DC_AMT					,PNT_USE_AMT			,PO_PNT_USE_AMT				,OKCASH_APPLY_DIV_CD	,OKCASH_ACCML_AMT
			,OKCASH_USE_AMT					,SETL_AMT				,REFUND_AMT					,REFUND_YMD
			,PNT_USE_YN						,PNT_ACCML_PNT			,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_USEYN	,PREMI_CUST_PNT_SETL_AMT
			,PREMI_CUST_PNT_REFUND_APRV_AMT	,THNKS_CPN_CREATE_YMD	,THNKS_CPN_EMAIL_SEND_YMD	,PO_CHECK_CARD_CPN_YMD	,SETL_MEAN_CD
			,SETL_STUS_CD					,SETL_APPR_TOT_AMT		,MONEY_RCIPT_ISSUE_YN		,PO_FNC_YN				,COPRTN_ORDER_DIV_CD
			,PARTNR_ID						,COPRTN_ORDER_YN		,COPRTN_ORDER_NO			,COPRTN_ORDER_SEQ		,COPRTN_SHOPMALL_FEE
			,REG_DATE						,CHG_DATE				,REGER_ID					,CHGER_ID
			)
			SELECT
			 ORDER_ID						,SYSDATE				,ACCESS_NAME				,ORDRR_RECOM_PO_CD
			,RECOM_PO_RGISTPOCD				,ORDRR_RECOM_ACCESS_NAME,BUYER_AGREE_YN				,RECRTER_ID				,RECRTER_INFO
			,SUPPO_DLIV_MATTER				,RECEVPO_RGISTPOCD		,RECEV_CANCELPO				,WICKET_NO				,WICKET_SHOP_ORDRR_NM
			,ORDER_MDA_DIV_CD				,ORDER_TYP_CD			,ORDER_DATE					,APPR_DATE				,ORDER_CONF_DATE
			,ORDER_CANCEL_DATE				,CANCEL_REQ_CONT		,CANCEL_REQ_REASN_CD		,TOT_CNSMR_PRC			,TOT_STD_SELL_PRC
			,TOT_PUCHAS_PRC					,TOT_DC_APPLY_PRC		,TOT_SEND_PRC				,EXRATE					,SETL_DUE_AMT
			,TOT_CPN_DC_AMT					,PNT_USE_AMT			,PO_PNT_USE_AMT				,OKCASH_APPLY_DIV_CD	,OKCASH_ACCML_AMT
			,OKCASH_USE_AMT					,SETL_AMT				,REFUND_AMT					,REFUND_YMD
			,PNT_USE_YN						,PNT_ACCML_PNT			,PNT_REFUND_SETL_AMT		,PREMI_CUST_PNT_USEYN	,PREMI_CUST_PNT_SETL_AMT
			,PREMI_CUST_PNT_REFUND_APRV_AMT	,THNKS_CPN_CREATE_YMD	,THNKS_CPN_EMAIL_SEND_YMD	,PO_CHECK_CARD_CPN_YMD	,SETL_MEAN_CD
			,SETL_STUS_CD					,SETL_APPR_TOT_AMT		,MONEY_RCIPT_ISSUE_YN		,PO_FNC_YN				,COPRTN_ORDER_DIV_CD
			,PARTNR_ID						,COPRTN_ORDER_YN		,COPRTN_ORDER_NO			,COPRTN_ORDER_SEQ		,COPRTN_SHOPMALL_FEE
			,REG_DATE						,CHG_DATE				,REGER_ID					,CHGER_ID
			FROM OD_ORDER_MAST
			WHERE ORDER_ID = #orderId#
	</update>

	<!-- 주문취소 상태값 변경 -->
	<update id="updateOrderCancelStateMilePnt" parameterClass="java.util.HashMap">
		UPDATE OD_ORDER_MAST
		   SET
		<isNotEmpty property="cancelStusCd">
			   ORDER_STUS_CD					= F_GET_ORDER_STUS_MAST_CD(#orderId#),
		</isNotEmpty>
			   TOT_CNSMR_PRC					= TOT_CNSMR_PRC						- #cancelCnsmrPrcSum#,
			   TOT_STD_SELL_PRC					= TOT_STD_SELL_PRC					- #cancelStdSellPrcSum#,
			   TOT_PUCHAS_PRC					= TOT_PUCHAS_PRC					- #cancelPuchasPrcSum#,
			   TOT_DC_APPLY_PRC					= TOT_DC_APPLY_PRC					- #cancelSetlAmtSum#,
			   SETL_AMT							= SETL_AMT							- #cancelSetlAmtSum#,
			   SETL_DUE_AMT						= SETL_DUE_AMT						- #cancelSetlAmtSum#,
			   SETL_APPR_TOT_AMT				= SETL_APPR_TOT_AMT					- #cancelSetlAmtSum#,
			   WALLET_SETL_AMT					= WALLET_SETL_AMT					- #cancelWalletSetlAmtSum#,
			   TOT_CPN_DC_AMT					= TOT_CPN_DC_AMT					- #cancelCpnDcAmtSum#,
			   PNT_ACCML_PNT					= PNT_ACCML_PNT						- #cancelPntAccmlPntSum#,
			   PNT_USE_AMT						= PNT_USE_AMT						- #pntUseCancelAmtSum#,
			   PNT_REFUND_SETL_AMT				= PNT_REFUND_SETL_AMT				+ #pntUseCancelAmtSum#,
			   PREMI_CUST_PNT_SETL_AMT			= PREMI_CUST_PNT_SETL_AMT			- #spUseCancelAmtSum#,
			   PREMI_CUST_PNT_REFUND_APRV_AMT	= PREMI_CUST_PNT_REFUND_APRV_AMT	+ #spUseCancelAmtSum#,
			   PO_PNT_USE_AMT					= PO_PNT_USE_AMT					- #poPntUseCancelAmtSum#,
			   OKCASH_USE_AMT					= OKCASH_USE_AMT					- #cancelOkcashSuppAmtSum#,
			   TOT_SEND_PRC						= TOT_SEND_PRC						- #cancelSendFee#,
			   CHG_DATE = SYSDATE,
			   CHGER_ID = #chgerId#
		 WHERE ORDER_ID = #orderId#
	</update>

	<!--OK CASHBAG 적립취소를 위한 정보 조회-->
    <select id="selectOkcashFundPntCancelApprInfo" parameterClass="java.util.HashMap" resultClass="commMap">
        <![CDATA[
        SELECT  /* QUERYID(F_orderCancel_selectOkcashFundPntCancelApprInfo)*/
                ORDER_ID
            ,   SETL_SEQ
            ,   AUTHID_SEED
            ,   PAYMESTPCD
            ,   OKCASH_POINT_AMOUNT AS OKCASH_POINT
            ,   TXNO
            ,   APPTIME
        FROM    OD_OKCASH_FUND
        WHERE   ORDER_ID = #orderId#
        AND     SMODE = 'N011'
        AND     SETL_SEQ = (SELECT MAX(SETL_SEQ) FROM OD_OKCASH_FUND
					        WHERE   ORDER_ID = #orderId#
					        AND     SMODE = 'N011' )
        ]]>
    </select>

    <!--OK CASHBAG 사용취소를 위한 정보 조회-->
    <select id="selectOkcashUsePntCancelApprInfo" parameterClass="java.util.HashMap" resultClass="commMap">
        <![CDATA[
        SELECT  /* QUERYID(F_orderCancel_selectOkcashUsePntCancelApprInfo)*/
                OK1.ORDER_ID
            ,   OK2.AUTHID_SEED
            ,   OK2.PAYMESTPCD
            ,   OK1.AMOUNT AS OKCASH_POINT
            ,   OK1.TXNO
            ,   OK1.APPTIME
        FROM    OD_OKCASH_PAYMENT OK1
            ,   OD_OKCASH_FUND OK2
        WHERE   OK1.ORDER_ID = OK2.ORDER_ID
        AND     OK1.SETL_SEQ = OK2.SETL_SEQ
        AND     OK1.ORDER_ID = #orderId#
        AND     OK1.STATUS = 'D1'
        AND     OK2.SMODE = 'N011'
        AND     ROWNUM = 1
        ORDER BY OK1.SETL_SEQ DESC
        ]]>
    </select>

    <!-- OK CASHBAG HISTORY INSERT -->
    <insert id="insertOkcashFundHistory" parameterClass="java.util.HashMap">
        <![CDATA[
        INSERT INTO OD_OKCASH_FUND_HISTORY  /* QUERYID(F_orderCancel_insertOkcashFundHistory)*/
            (
              ORDER_ID
            , SETL_SEQ
            , HISTOR_SEQ
            , ACCESS_NAME
            , TXNO
            , APPTIME
            , AMOUNT
            , OKCASH_POINT_AMOUNT
            , OKCASH_POINT_CSF_AMOUNT
            , STATUS
            , CANCEL_YN
            , CASE_CONT
            , JUNG_DATE
            , OKCASH_POINT_SENDDATE
            , RESULT
            , RESULT_TEXT
            , CREATE_DATE
            )

            SELECT ORDER_ID
                 , SETL_SEQ
                 , (SELECT NVL(MAX(HISTOR_SEQ)+1,1) FROM OD_OKCASH_FUND_HISTORY
                    WHERE ORDER_ID = #orderId# AND SETL_SEQ = #setlSeq#)
                 , ACCESS_NAME
                 , TXNO
                 , APPTIME
                 , AMOUNT
                 , OKCASH_POINT_AMOUNT
                 , OKCASH_POINT_CSF_AMOUNT
                 , STATUS
                 , CANCEL_YN
                 , CASE_CONT
                 , JUNG_DATE
                 , OKCASH_POINT_SENDDATE
                 , RESULT
                 , RESULT_TEXT
                 , CREATE_DATE
            FROM   OD_OKCASH_FUND
            WHERE  ORDER_ID = #orderId#
            AND    SMODE = 'N011'
        ]]>
    </insert>

    <!-- OK CASHBAG 적립취소 처리 -->
    <update id="updateOkcashFundPntCancelApprInfo" parameterClass="java.util.HashMap">
        <![CDATA[
        UPDATE OD_OKCASH_FUND   /* QUERYID(F_orderCancel_updateOkcashFundPntCancelApprInfo)*/
           SET TXNO = #txno#
             , APPTIME = #apptime#
             , STATUS = 'D2'
             , CANCEL_YN = 'Y'
             , OKCASH_POINT_SENDDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE ORDER_ID = #orderId#
           AND SMODE = 'N011'
        ]]>
    </update>

    <!-- OK CASHBAG 사용취소 처리 -->
    <update id="updateOkcashUsePntCancelApprInfo" parameterClass="java.util.HashMap">
        <![CDATA[
        UPDATE OD_OKCASH_PAYMENT    /* QUERYID(F_orderCancel_updateOkcashUsePntCancelApprInfo)*/
           SET STATUS = 'D2'
             , CANCEL_DATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
         WHERE ORDER_ID = #orderId#
        ]]>
    </update>

	<!-- OK CASHBAG 사용취소 처리 -->
	<update id="insertOkcashUsePntCancelApprInfo" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO OD_OKCASH_PAYMENT    /* QUERYID(F_orderCancel_insertOkcashUsePntCancelApprInfo)*/
			(
			 ACCESS_NAME
			,AMOUNT
			,APPTIME
			,CANCEL_DATE
			,ORDER_ID
			,SETL_SEQ
			,STATUS
			,TXNO
			)
		SELECT
			 ACCESS_NAME
			,AMOUNT
			,APPTIME
			,#cancelDate#
			,A.ORDER_ID
			,SEQ
			,#status#
			,TXNO
		  FROM OD_OKCASH_PAYMENT A
			  ,(SELECT MAX(SETL_SEQ) SEQ, ORDER_ID FROM OD_OKCASH_PAYMENT WHERE ORDER_ID = #orderId# GROUP BY ORDER_ID) B
		 WHERE A.ORDER_ID = B.ORDER_ID
		   AND A.ORDER_ID = #orderId#
		   AND A.SETL_SEQ = '1'
		]]>
	</update>

	<!-- 주문상태 조회 Ajax -->
	<select id="selectOrderStusChkAjax" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT ORDER_ITM_ID
			  ,ORDER_STUS_CD
		  FROM OD_ORDER_ITM
		 WHERE ORDER_ITM_ID IN
				<iterate property="searchOrderItmIds" open="("  close=")" conjunction=",">
					#searchOrderItmIds[]#
				</iterate>
	</select>

	<!-- 産加工食品 주문자정보 조회 -->
	<select id="selectOrderSendJpInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT 1
			  , T1.ORDRR_NM NAME
			  , T1.ACCESS_NAME
			  , T1.SENDER_EMAIL
			  , T1.SENDER_TELNO
			  , T1.SENDER_HTELNO
			  , '('||T1.SENDER_ZIPCD||')' || T1.SENDER_ADDR1 || ' ' || T1.SENDER_ADDR2 AS ADDR
	FROM(

			SELECT OOM.ORDER_ID
					   ,OOM.SETL_MEAN_CD
					  , OOM.ACCESS_NAME
					  , OOM.REGER_ID
					  , OOM.ORDER_DATE
					  , OOM.ORDRR_NM
					  , OOI.SENDER_EMAIL
					  , OOI.SENDER_TELNO
					  , OOI.SENDER_HTELNO
					  , OOI.SENDER_ZIPCD
					  , OOI.SENDER_ADDR1
					  , OOI.SENDER_ADDR2
					  , SUM(1) CNT
					  , SUM( DEcode( OOI.GOODS_CANCEL_YN, 'Y', 0, 1 ) ) CNT1
					  , MAX(OOI.GOODS_CANCEL_DATE ) GOODS_CANCEL_DATE
					  , MIN(OOI.ORDER_STUS_CD ) ORDER_STUS_CD
					  , MAX(OOM.APPR_DATE ) COMPLETE_DATE
					  , MAX(OOM.ORDER_CONF_DATE) CHKDATE
					  , MAX(OOI.SEND_CONF_DATE) INVOICE_DATE
					  , MAX(OOI.SEND_DONE_DATE ) INVOICE_COMPLETE_DATE
					  , MAX(OOM.RECRTER_ID) RECOMMENDID
					  , MAX(OOM.RECRTER_INFO) RECOMMENDINFO
					  , NVL(OOI.GIFT_ORDER_YN, 'N') GIFTICON_YN

			  FROM OD_ORDER_MAST OOM
				 , OD_ORDER_ITM OOI
			WHERE 1=1
				AND OOM.ORDER_ID = OOI.ORDER_ID
				AND OOM.ORDER_ID =  #orderId#
				AND OOM.NATION_CD = #nationCd#
			GROUP BY OOM.ORDER_ID
			,  OOM.SETL_MEAN_CD
			,  OOM.ACCESS_NAME
			, OOM.REGER_ID
			, OOM.ORDER_DATE
			, OOM.ORDRR_NM
			, OOI.SENDER_EMAIL
			, OOI.SENDER_TELNO
			, OOI.SENDER_HTELNO
			, OOI.SENDER_ZIPCD
			, OOI.SENDER_ADDR1
			, OOI.SENDER_ADDR2
			, OOI.GIFT_ORDER_YN
		)T1
		, MEMINFO T2

		, (SELECT PPO.ORDER_ID
					 , MAX(PP.NAME) NAME
			  FROM PT_PARTNER_ORDER PPO
				  , PT_PARTNER PP
			WHERE PPO.PARTNR_ID  = PP.PARTNR_ID
				 AND PPO.ORDER_ID =  #orderId#
			GROUP BY PPO.ORDER_ID
		) T3

	WHERE 1=1
	AND  T1.ACCESS_NAME = T2.ACCESS_NAME(+)
	AND  T1.ORDER_ID = T3.ORDER_ID(+)
	]]>
	</select>

	<!-- 産加工食品 수취인정보 조회 -->
	<select id="selectOrderDelivJpList" parameterClass ="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT  3
		, T2.RECPTER_NM
		, T2.RECPTER_TELNO
		, T2.RECPTER_HTELNO
		, DECODE(NVL(T2.GIFT_ORDER_YN, 'N'),'N', '('||T2.RECPTER_ZIPCD||')' || T2.RECPTER_ADDR1 || ' ' || T2.RECPTER_ADDR2 ,DECODE((SELECT COUNT(*) FROM GIFTICON_ORDER ODR WHERE ODR.PURCHASE_ID = T1.ORDER_ID),'1', '('||T2.RECPTER_ZIPCD||')' || T2.RECPTER_ADDR1 || ' ' || T2.RECPTER_ADDR2)) ADDR

	 FROM OD_ORDER_MAST T1
		, OD_ORDER_ITM T2
		, CO_SUPP_COMP_MAST T4
		, PICMT0060 T5
		, OD_ORDER_ITM T6
		, OD_ORDER_ITM T7
		, OD_ORDER_ITM T8
		, OD_ORDER_SETL T9

	WHERE 1=1
	  AND T1.ORDER_ID = #orderId#
	  AND T1.ORDER_ID = T2.ORDER_ID(+)
	  AND T2.GOODS_CD(+) > 0
	  AND T2.CNSMR_PRC(+) > 0
	  AND T2.SUPP_COMP_ID = T4.SUPP_COMP_ID
	  AND T4.SUPP_COMP_ID LIKE '%' || '' || '%'
	  AND T1.RECEVPO_RGISTPOCD = T5.REGIPOCD
	  AND T5.USEYN = 'Y'
	  AND T1.ORDER_ID = T6.ORDER_ID(+)
	  AND T6.GOODS_CD(+) > 0
	  AND T6.CNSMR_PRC(+) = 0
	  AND T1.ORDER_ID = T7.ORDER_ID(+)
	  AND T7.GOODS_CD(+) = 0
	  AND T1.ORDER_ID = T8.ORDER_ID(+)
	  AND T8.GOODS_CD(+) = -1
	  AND T1.ORDER_ID = T9.ORDER_ID(+)
	  AND NVL(T9.USE_YN,'Y') = 'Y'
	  AND T1.NATION_CD = #nationCd#
	]]>
	</select>
	<select id="selectOrderEmail" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT BILLTO_EMAIL FROM OD_ORDERINFO WHERE ORDER_ID = #orderId#
	</select>
	<!-- 메일 재발송 -->
	<update id="updateEmailSend" parameterClass ="java.util.HashMap">
		UPDATE	OD_ORDERINFO
	   	SET 	 MAILSENDGBN  	= '3'
		  		,MAILSENDDATE 	= to_char(sysdate,'yyyymmddhh24miss')
		  		,BILLTO_EMAIL 	= #billtoEmail#
	   	WHERE 	ORDER_ID 		= #orderId#
   </update>
   <update id="updateRecomPost" parameterClass ="java.util.HashMap">
		UPDATE 	OD_ORDER_MAST
		SET 	ORDRR_RECOM_PO_CD = #postPcode# ,
				RECOM_PO_RGISTPOCD = #postRcode#
		WHERE 	ORDER_ID = #orderId#
   </update>
   <select id="selectRecvAccountInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT RFD_BNK_CODE,RFD_ACC_NO,RFD_DEP FROM OD_TRN_AD_LDG WHERE ORD_NO = #orderId# AND ROWNUM=1 ORDER BY REQ_DATE DESC
	</select>
   <update id="updateRecvAccount" parameterClass ="java.util.HashMap">
		UPDATE 	OD_TRN_AD_LDG
		SET 	RFD_BNK_CODE = #rfdBnkCode# ,
				RFD_ACC_NO = #rfdAccNo#,
				RFD_DEP =  #rfdDep#
		WHERE 	ORD_NO = #orderId#
   </update>

   <sql id="conditionCmpnspBank">
        <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				  OOM.SITE_DIV_CD = '05'
		</isEqual>
		<isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			<isNotEmpty property="searchPavlnDivCd" >
		   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
		    </isNotEmpty>
		    <isEmpty property="searchPavlnDivCd" >
		    OOM.SITE_DIV_CD IN ('01','02','03','06')
		    </isEmpty>
		</isNotEqual>
		<isEqual property="searchListSe" compareValue="L1">
			AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND A.SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			AND SETL.SETL_STUS_CD IN ('2100','2200','2400')
		</isEqual>
		<isEqual property="searchListSe" compareValue="L2">
			AND EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND A.SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L3">
			AND EXISTS (SELECT 1 FROM
						OD_BANKTOWN ODB
						WHERE OB.ORDER_ID = ODB.ORDER_ID
						AND ODB.RESULT = 0
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND ODB.AUTH_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
			AND SETL.SETL_STUS_CD IN ('2100','2400')
			AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND A.SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L4">
			AND EXISTS (SELECT 1 FROM
						OD_BANKTOWN ODB
						WHERE OB.ORDER_ID = ODB.ORDER_ID
						AND ODB.RESULT = 1
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND ODB.AUTH_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
			AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L5">
			AND EXISTS (SELECT 1 FROM
						OD_BANKTOWN ODB
						WHERE OB.ORDER_ID = ODB.ORDER_ID
						AND ODB.RESULT = 8
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND ODB.AUTH_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
		</isEqual>
  			/* 검색조건: START */
  		<isNotEmpty property="searchTerm01" >
			<isEqual property="searchTerm01" compareValue="01"> /* 우체국 금융여부 */
				AND NVL(OOM.PO_FNC_YN,'I') ='I'
				AND SETL.SETL_MEAN_CD ='06'
			</isEqual>
			<isEqual property="searchTerm01" compareValue="02"> /* 우체국 금융여부 */
				AND OOM.PO_FNC_YN = 'P'
				AND SETL.SETL_MEAN_CD ='05'
			</isEqual>
		</isNotEmpty>
		<isEmpty property="searchTerm01" >
				AND SETL.SETL_MEAN_CD IN ('05','06')
		</isEmpty>
		<isEqual property="searchListDetailDate" compareValue="apprDate">
			AND SETL.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="searchListDetailDate" compareValue="orderDate">
			AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>

		<isNotEmpty property="searchText"> /* 상세검색 */
			<isEmpty property="searchType"> /* 전체 */
			 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
			 		OR OB.BILLTO_NAME LIKE '%' || #searchText# || '%'
			 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%')
			</isEmpty>
			<isEqual property="searchType" compareValue="01"> /* 회원ID */
			   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="02"> /* 고객성명 */
			   AND OB.BILLTO_NAME LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="03"> /* 주문번호 */
			   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
			</isEqual>
		</isNotEmpty>
   </sql>
    <sql id="conditionCmpnspVbankDate">
    	<isEqual property="searchTerm02" compareValue="03"> /* 주문일자별 */
			AND OOM.ORDER_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			AND OOP.ONLINEDATE IS NOT NULL
		</isEqual>
		<isEqual property="searchTerm02" compareValue="04"> /* 송금일자별 */
			AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
    </sql>
    <sql id="conditionCmpnspVbankDate1">
    	<isEqual property="searchTerm02" compareValue="03"> /* 주문일자별 */
			AND OOM.ORDER_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="searchTerm02" compareValue="04"> /* 송금일자별 */
			AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
     </sql>
     <sql id="conditionCmpnspVbankDate2">
    	<isEqual property="searchTerm02" compareValue="03"> /* 주문일자별 */
			AND OOM.ORDER_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			AND OOP.ONLINEDATE IS NOT NULL
		</isEqual>
		<isEqual property="searchTerm02" compareValue="04"> /* 송금일자별 */
			AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
    </sql>
     <sql id="conditionCmpnspVbank1">
            <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				  OOM.SITE_DIV_CD = '05'
			</isEqual>
			<isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				<isNotEmpty property="searchPavlnDivCd" >
			   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
			    </isNotEmpty>
			    <isEmpty property="searchPavlnDivCd" >
			    OOM.SITE_DIV_CD IN ('01','02','03','06')
			    </isEmpty>
			</isNotEqual>
			<isNotEmpty property="searchBankSe">	/* 은행 계좌별 */
				AND OOP.BNK_CODE = #searchBankSe#
			</isNotEmpty>
			<isNotEmpty property="searchText"> /* 상세검색 */
				<isEmpty property="searchType"> /* 전체 */
				 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
				 		OR OOI.SENDER_NM LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%'
				 		OR OOP.ONLINENAME LIKE '%' || #searchText# || '%'
				 		OR OOP.AMOUNT LIKE '%' || #searchText# || '%')
				</isEmpty>
				<isEqual property="searchType" compareValue="01"> /* 회원ID */
				   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02"> /* 고객성명 */
				   AND OOI.SENDER_NM LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="03"> /* 주문번호 */
				   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="04"> /* 실송금인명 */
				   AND OOP.ONLINENAME LIKE '%'||#searchText#||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="05"> /* 실송금금액 */
				   AND OOP.AMOUNT LIKE '%'||#searchText#||'%'
				</isEqual>
			</isNotEmpty>
    </sql>
    <sql id="conditionCmpnspVbank2">
    	        <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				  OOM.SITE_DIV_CD = '05'
				</isEqual>
				<isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
					<isNotEmpty property="searchPavlnDivCd" >
				   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
				    </isNotEmpty>
				    <isEmpty property="searchPavlnDivCd" >
				    OOM.SITE_DIV_CD IN ('01','02','03','06')
				    </isEmpty>
				</isNotEqual>
			 			/* 검색조건: START */
				<isNotEmpty property="searchBankSe">	/* 은행 계좌별 */
					AND OOP.BNK_CODE = #searchBankSe#
				</isNotEmpty>
				<isNotEmpty property="searchText"> /* 상세검색 */
					<isEmpty property="searchType"> /* 전체 */
					 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
					 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
					 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%'
					 		OR OOP.ONLINENAME LIKE '%' || #searchText# || '%'
					 		OR OOP.AMOUNT LIKE '%' || #searchText# || '%')
					</isEmpty>
					<isEqual property="searchType" compareValue="01"> /* 회원ID */
					   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
					</isEqual>
					<isEqual property="searchType" compareValue="02"> /* 고객성명 */
					   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
					</isEqual>
					<isEqual property="searchType" compareValue="03"> /* 주문번호 */
					   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
					</isEqual>
					<isEqual property="searchType" compareValue="04"> /* 실송금인명 */
					   AND OOP.ONLINENAME LIKE '%'||#searchText#||'%'
					</isEqual>
					<isEqual property="searchType" compareValue="05"> /* 실송금금액 */
					   AND OOP.AMOUNT LIKE '%'||#searchText#||'%'
					</isEqual>
				</isNotEmpty>
    </sql>
    <sql id="conditionCmpnspCredit2">
		  <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
		   OOM.SITE_DIV_CD = '05'
		  </isEqual>
		  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			<isNotEmpty property="searchPavlnDivCd" >
		   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
		    </isNotEmpty>
		    <isEmpty property="searchPavlnDivCd" >
		    OOM.SITE_DIV_CD IN ('01','02','03','06')
		    </isEmpty>
		</isNotEqual>
		<!-- 결제일 기준, 주문일자 기준 선택 -->
		<isEqual property="searchListDetailDate" compareValue="apprDate">
			AND OCCSI.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
			AND OOS.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="searchListDetailDate" compareValue="orderDate">
			 AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		/* 검색조건: START */
		<isEmpty property="searchTerm03"> /* 전체 */
			AND OOS.SETL_MEAN_CD IN ('02', '03', '04','16','08')
		</isEmpty>
		<isEqual property="searchTerm03" compareValue="05"> /* 국내(ePost) */
			AND OOS.SETL_MEAN_CD IN ('02','16','08')
			AND OCCSI.CARD_OVERSEA_YN ='N'
		</isEqual>
		<isEqual property="searchTerm03" compareValue="06"> /* 국내(창구) */
			AND OOS.SETL_MEAN_CD IN ('04','17')
		</isEqual>
		<isEqual property="searchTerm03" compareValue="07"> /* 해외(ePost) */
			AND OOS.SETL_MEAN_CD IN ('03','16','08')
			AND OCCSI.CARD_OVERSEA_YN ='Y'
		</isEqual>
		<isNotEmpty property="searchCardSe"> /* 카드사별 */
			AND  OCCSI.ACQUIRE_CODE = #searchCardSe#
		</isNotEmpty>
		<isNotEmpty property="searchPgGuBunSe" >
			AND OCCSI.PG_DIV_CD = #searchPgGuBunSe#
		</isNotEmpty>
		<isNotEmpty property="searchOnuriDivCd">
			AND OCCSI.ONNURI_YN =#searchOnuriDivCd#
			<isEqual property="searchOnuriDivCd" compareValue="Y">
			AND OOS.SETL_MEAN_CD IN ('16','08')
			</isEqual>
		</isNotEmpty>
		<isEqual property="searchListSe" compareValue="L1">		<!-- 신용카드_승인결과보기 -->
			 AND OOS.SETL_STUS_CD IN ('2100','2200','2400')
			 AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = OOS.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L2">		<!-- 신용카드_승인취소결과보기 -->
			 AND EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = OOS.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L3">		<!-- 정산요청 -->
			 AND EXISTS (SELECT 1 FROM
						OD_CREDIT_CARD_SETL_INFO A
						WHERE A.ORDER_ID = OCCSI.ORDER_ID
						AND A.STATUS = 'D1'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND A.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
			AND OOS.SETL_STUS_CD IN ('2100','2400')
			AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = OOS.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L4">		<!-- 신용카드_정산요청처리결과보기 -->
			AND EXISTS (SELECT 1 FROM
						OD_CREDIT_CARD_SETL_INFO A
						WHERE A.ORDER_ID = OCCSI.ORDER_ID
						AND A.STATUS = 'S1'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND A.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
			AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = OOS.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L5">		<!-- 정산후 매입취소 -->
			 AND EXISTS (SELECT 1 FROM
						OD_CREDIT_CARD_SETL_INFO A
						WHERE A.ORDER_ID = OCCSI.ORDER_ID
						AND A.STATUS = 'S2'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
						AND A.APPROVAL_TIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
		</isEqual>
		<isNotEmpty property="searchText"> /* 상세검색 */
			<isEmpty property="searchType"> /* 전체 */
			 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
			 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
			 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%'
			 		OR OCCSI.APPROVAL_NO LIKE '%'||#searchText#||'%')
			</isEmpty>
			<isEqual property="searchType" compareValue="01"> /* 회원ID */
			   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="02"> /* 고객성명 */
			   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="03"> /* 주문번호 */
			   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="06"> /* 승인번호 */
			   AND OCCSI.APPROVAL_NO LIKE '%'||#searchText#||'%'
			</isEqual>
		</isNotEmpty>
    </sql>
    <sql id="conditionCmpnspCredit3">
    	<isEqual property="searchListSe" compareValue="L1">		<!-- 신용카드_승인결과보기 -->
		       AND PT.BATCH_STATUS_CODE IN ('1','11')
		       AND OOS.USE_YN = 'Y'
			   AND OOS.SETL_STUS_CD ='2100'
		   </isEqual>
		   <isEqual property="searchListSe" compareValue="L2">		<!-- 신용카드_승인취소결과보기 -->
			   AND EXISTS (SELECT 1 FROM
			               OD_ORDER_SETL SETL WHERE OOS.ORDER_ID = SETL.ORDER_ID
			               AND SETL.USE_YN = 'Y' AND SETL.SETL_STUS_CD ='2999'  AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L3">		<!-- 신용카드_정산요청 -->
			   AND PT.BATCH_STATUS_CODE = '1'
			   AND OOS.USE_YN = 'Y'
			   AND OOS.SETL_STUS_CD ='2100'
			   AND NOT EXISTS (SELECT 1 FROM
			               PCSS_TRANS A WHERE PT.ACCEPT_NUM = A.ACCEPT_NUM
			               AND A.BATCH_STATUS_CODE = '11' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L4">		<!-- 신용카드_정산요청 결과보기 -->
			   AND PT.BATCH_STATUS_CODE ='11'
			   AND OOS.USE_YN = 'Y'
			   /*AND NOT EXISTS (SELECT 1 FROM
			               PCSS_TRANS A WHERE PT.ACCEPT_NUM = A.ACCEPT_NUM
			               AND A.BATCH_STATUS_CODE = '11' AND <![CDATA[ROWNUM < 2 ]]>)*/
		   </isEqual>
			<isEqual property="searchListSe" compareValue="L5">		<!-- 정산후 매입취소결과보기 -->
				AND EXISTS (SELECT 1 FROM
								PRRWT0700 A WHERE A.CARDDEALDIVCD ='0' AND A.CLOSEDIVCD ='21' /*정산후 매입취소 코드 추가*/
								AND P0070.RECEVNO = A.RECEVNO
								<isEqual property="searchListDetailDate" compareValue="apprDate">
									AND A.CREDITCARDAPPRYMD BETWEEN #searchFromDt# AND #searchToDt#
								</isEqual>
								AND <![CDATA[ROWNUM < 2 ]]>
						)
			</isEqual>
			/* 검색조건: START */
			<isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				  OOM.SITE_DIV_CD = '05'
			</isEqual>
			<isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				<isNotEmpty property="searchPavlnDivCd" >
			   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
			    </isNotEmpty>
			    <isEmpty property="searchPavlnDivCd" >
			    OOM.SITE_DIV_CD IN ('01','02','03','06')
			    </isEmpty>
			</isNotEqual>

			<isNotEmpty property="searchOnuriDivCd">
			    AND DECODE(#searchOnuriDivCd#,'Y','N','Y') = 'Y'
			</isNotEmpty>
				AND OOS.SETL_MEAN_CD IN ('04', '17')
			<!-- 결제일 기준, 주문일자 기준 선택 -->
			<isEqual property="searchListDetailDate" compareValue="apprDate">
				AND P0070.CREDITCARDAPPRYMD BETWEEN #searchFromDt# AND #searchToDt#
				AND OOS.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="searchListDetailDate" compareValue="orderDate">
				 AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			<isNotEmpty property="searchCardSe"> /* 카드사별 */
				AND  P0070.BUYCOMPCD = #searchCardSe#
			</isNotEmpty>
			<isNotEmpty property="searchPgGuBunSe" ><!-- 창구카드 PG사는 KICC만 있음 -->
				AND  DECODE(#searchPgGuBunSe#,'10', OOM.ORDER_ID,'') = OOS.ORDER_ID
			</isNotEmpty>
			<isNotEmpty property="searchText"> /* 상세검색 */
				<isEmpty property="searchType"> /* 전체 */
				 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%'
				 		OR P0070.CREDITCARDAPPRNO LIKE '%'||#searchText#||'%')
				</isEmpty>
				<isEqual property="searchType" compareValue="01"> /* 회원ID */
				   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02"> /* 고객성명 */
				   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="03"> /* 주문번호 */
				   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="06"> /* 승인번호 */
				   AND P0070.CREDITCARDAPPRNO LIKE '%'||#searchText#||'%'
				</isEqual>
			</isNotEmpty>
			/* 검색조건: END */
    </sql>
    <sql id="conditionCmpnspMobile">
    	AND SETL.SETL_MEAN_CD = '13'
    	<isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			   OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				<isNotEmpty property="searchPavlnDivCd" >
			   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
			    </isNotEmpty>
			    <isEmpty property="searchPavlnDivCd" >
			    OOM.SITE_DIV_CD IN ('01','02','03','06')
			    </isEmpty>
			</isNotEqual>
			/* 리스트구분 */
			<isEqual property="searchListSe" compareValue="L1">		<!-- 휴대폰결제_승인결과 보기 -->
				AND SETL.SETL_STUS_CD IN ('2100','2200','2400')
				AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L2">		<!-- 휴대폰결제_승인취소 요청결과 보기 -->
				AND EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)

			</isEqual>
			<isEqual property="searchListSe" compareValue="L3">		<!-- 휴대폰결제_정산 요청 -->
				AND EXISTS (SELECT 1 FROM
							OD_MOBILE_PAYMENT A
							WHERE OOM.ORDER_ID = A.ORDER_ID
							AND A.STATUS = 'D1'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.APPTIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
				AND SETL.SETL_STUS_CD IN ('2100','2400')
				AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L4">		<!-- 휴대폰결제_정산 요청 결과보기 -->
				AND EXISTS (SELECT 1 FROM
							OD_MOBILE_PAYMENT A
							WHERE OOM.ORDER_ID = A.ORDER_ID
							AND A.STATUS = 'S1'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.APPTIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
				AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L5">		<!-- 휴대폰결제 정산후 매입취소결과 보기 -->
				AND EXISTS (SELECT 1 FROM
							OD_MOBILE_PAYMENT A
							WHERE OOM.ORDER_ID = A.ORDER_ID
							AND A.STATUS = 'S2'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.APPTIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
			</isEqual>
			<!-- 결제일 기준, 주문일자 기준 선택 -->
			<isEqual property="searchListDetailDate" compareValue="apprDate">
				AND OMP.APPTIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
				AND SETL.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="searchListDetailDate" compareValue="orderDate">
				AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			/* 검색조건: START */
			<isNotEmpty property="searchText"> /* 상세검색 */
				<isEmpty property="searchType"> /* 전체 */
				 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%')
				</isEmpty>
				<isEqual property="searchType" compareValue="01"> /* 회원ID */
				   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02"> /* 고객성명 */
				   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="03"> /* 주문번호 */
				   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
				</isEqual>
			</isNotEmpty>
			/* 검색조건: END */
    </sql>
    <sql id="conditionCmpnspEasy">
    	<isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			   OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				<isNotEmpty property="searchPavlnDivCd" >
			   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
			    </isNotEmpty>
			    <isEmpty property="searchPavlnDivCd" >
			    OOM.SITE_DIV_CD IN ('01','02','03','06')
			    </isEmpty>
			</isNotEqual>
			/* 리스트구분 */
			<isNotEmpty property="sSetlMeanCd">						<!-- 간편결제수단 -->
				AND OOM.SETL_MEAN_CD = #sSetlMeanCd#
			</isNotEmpty>
			<isEqual property="searchListSe" compareValue="L1">		<!-- 간편결제_승인결과 보기 -->
				   AND SETL.SETL_STUS_CD IN ('2100','2200','2400')
				   AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L2">		<!-- 간편결제_승인취소 요청결과 보기 -->
				AND EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L3">		<!-- 간편결제_정산 요청 보기 -->
				AND EXISTS (SELECT 1 FROM
							OD_KAKAO_PAYMENT A
							WHERE A.ORDER_ID = OKP.ORDER_ID
							AND A.STATUS = 'D1'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.AUTHDATE BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
				AND SETL.SETL_STUS_CD IN ('2100','2400')
				AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID  AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L4">		<!-- 간편결제_정산 요청 결과보기 -->
				AND EXISTS (SELECT 1 FROM
							OD_KAKAO_PAYMENT A
							WHERE A.ORDER_ID = OKP.ORDER_ID
							AND A.STATUS = 'S1'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.AUTHDATE BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
				AND NOT EXISTS (SELECT 1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
			</isEqual>
			<isEqual property="searchListSe" compareValue="L5">		<!-- 정산후매입취소 보기 -->
				AND EXISTS (SELECT 1 FROM
							OD_KAKAO_PAYMENT A
							WHERE A.ORDER_ID = OKP.ORDER_ID
							AND A.STATUS = 'S2'
							<isEqual property="searchListDetailDate" compareValue="apprDate">
								AND A.AUTHDATE BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
							</isEqual>
							AND <![CDATA[ROWNUM < 2 ]]>
					)
			</isEqual>
			<isEqual property="searchListDetailDate" compareValue="apprDate">
				AND OKP.AUTHDATE BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
				AND SETL.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			<isEqual property="searchListDetailDate" compareValue="orderDate">
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
			</isEqual>
			<isNotEmpty property="searchText"> /* 상세검색 */
				<isEmpty property="searchType"> /* 전체 */
				 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
				 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%')
				</isEmpty>
				<isEqual property="searchType" compareValue="01"> /* 회원ID */
				   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02"> /* 고객성명 */
				   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="03"> /* 주문번호 */
				   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
				</isEqual>
			</isNotEmpty>
    </sql>
    <sql id="conditionCmpnspOkcash">
    	<isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
		   OOM.SITE_DIV_CD = '05'
		  </isEqual>
		  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			<isNotEmpty property="searchPavlnDivCd" >
		   	OOM.SITE_DIV_CD = #searchPavlnDivCd#
		    </isNotEmpty>
		    <isEmpty property="searchPavlnDivCd" >
		    OOM.SITE_DIV_CD IN ('01','02','03','06')
		    </isEmpty>
		</isNotEqual>
		/* 리스트구분 */
		<isEqual property="searchListSe" compareValue="L1">		<!-- OK캐쉬백_승인결과 보기 -->
			AND SETL.SETL_STUS_CD IN ('2100','2200','2400')
			AND NOT EXISTS (SELECT  1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L2">		<!-- OK캐쉬백_승인취소 요청결과 보기 -->
			AND EXISTS (SELECT  1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L3">		<!-- 정산요청  -->
			AND EXISTS (SELECT  1 FROM
						OD_OKCASH_PAYMENT A
						WHERE OOP.ORDER_ID = A.ORDER_ID
						AND A.STATUS ='D1'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
							AND A.APPTIME BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
			AND SETL.SETL_STUS_CD IN ('2100','2400')
			AND NOT EXISTS (SELECT  1 FROM OD_ORDER_SETL A WHERE A.ORDER_ID = SETL.ORDER_ID AND SETL_STUS_CD ='2999' AND <![CDATA[ROWNUM < 2 ]]>)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L4">		<!-- 정산요청 결과보기 -->
			AND EXISTS (SELECT  1 FROM
						OD_OKCASH_PAYMENT A
						WHERE OOP.ORDER_ID = A.ORDER_ID
						AND A.STATUS ='S1'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
							AND A.APPTIME BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
		</isEqual>
		<isEqual property="searchListSe" compareValue="L5">		<!-- OK캐쉬백_정산 요청 결과보기 -->
			AND EXISTS (SELECT  1 FROM
						OD_OKCASH_PAYMENT A
						WHERE OOP.ORDER_ID = A.ORDER_ID
						AND A.STATUS ='S2'
						<isEqual property="searchListDetailDate" compareValue="apprDate">
							AND A.APPTIME BETWEEN #searchFromDt# || '0000' AND #searchToDt# || '2359'
						</isEqual>
						AND <![CDATA[ROWNUM < 2 ]]>
				)
		</isEqual>
		<isEqual property="searchListDetailDate" compareValue="apprDate">
			AND OOP.APPTIME BETWEEN #searchFromDt# || '000000' AND #searchToDt# || '235959'
			AND SETL.SETL_APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		<isEqual property="searchListDetailDate" compareValue="orderDate">
			AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959', 'YYYYMMDDHH24MISS')
		</isEqual>
		/* 검색조건: START */
		<isNotEmpty property="searchText"> /* 상세검색 */
			<isEmpty property="searchType"> /* 전체 */
			 	AND ( OOM.ACCESS_NAME LIKE '%' || #searchText# || '%'
			 		OR OOM.ORDRR_NM LIKE '%' || #searchText# || '%'
			 		OR OOM.ORDER_ID LIKE '%' || #searchText# || '%')
			</isEmpty>
			<isEqual property="searchType" compareValue="01"> /* 회원ID */
			   AND OOM.ACCESS_NAME LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="02"> /* 고객성명 */
			   AND OOM.ORDRR_NM LIKE '%'|| #searchText# ||'%'
			</isEqual>
			<isEqual property="searchType" compareValue="03"> /* 주문번호 */
			   AND OOM.ORDER_ID LIKE '%'||#searchText#||'%'
			</isEqual>
		</isNotEmpty>
		/* 검색조건: END */
    </sql>
	<!-- 대사관리_즉시이체_조회 count -->
	<select id="selectCmpnspBankCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS TOTCNT
		FROM
		(
		 SELECT  /*+ use_NL(SETL OOM  OB) */ OOM.ORDER_ID
			  	, OB.BILLTO_NAME
			  	, OOM.ACCESS_NAME
			  	, MAX(OB.PAY_BANK) PAY_BANK
			  	, OOM.SETL_MEAN_CD
	 	 FROM  OD_ORDER_MAST OOM
	 	     , OD_ORDER_SETL SETL
	 	     , OD_BANKTOWN OB
  		 WHERE OOM.ORDER_ID = SETL.ORDER_ID
	  	  AND SETL.ORDER_ID = OB.ORDER_ID
		  AND OB.SETL_SEQ = SETL.SETL_SEQ
		/* 리스트구분 */
		<include refid="conditionCmpnspBank"/>
		GROUP BY OOM.ORDER_ID
			  	, OB.BILLTO_NAME
			  	, OOM.ACCESS_NAME
			  	, OOM.SETL_MEAN_CD
		/* 검색조건: END */
		)
	</select>

	<!-- 대사관리_가상계좌1_조회 count -->
	<select id="selectCmpnspVbankCnt1" parameterClass="java.util.HashMap" resultClass="int">
		SELECT  COUNT(*) AS TOTCNT
		 FROM
		 (
		 SELECT  /*+ use_nl(OOM OOP OOS OOI MINFO) */ OOM.ORDER_ID
		 FROM  OD_ORDER_MAST OOM
           INNER JOIN OD_ONLINE_PAYMENT OOP
             ON OOM.ORDER_ID = OOP.ORDER_ID
            AND OOM.SETL_MEAN_CD = '01'
            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
            <include refid="conditionCmpnspVbankDate1"/>
           INNER JOIN  OD_ORDER_SETL OOS
             ON OOP.ORDER_ID = OOS.ORDER_ID
            AND OOM.ORDER_ID = OOS.ORDER_ID
            AND OOP.SETL_SEQ = OOS.SETL_SEQ
            AND OOS.SETL_SEQ = '1'
           INNER JOIN  OD_ORDER_ITM  OOI
             ON OOM.ORDER_ID = OOI.ORDER_ID
            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후 -> 매입처리후 주문취소 기준 바뀜*/
           LEFT OUTER JOIN MEMINFO MINFO
             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
	     WHERE 1 = 1
			AND OOP.RESULT = '0'
			AND OOS.SETL_STUS_CD ='2030'
            <include refid="conditionCmpnspVbank1"/>
				/* 검색조건: END */
			GROUP BY OOM.ORDER_ID
			 )
	</select>

	<!-- 대사관리_가상계좌2_조회 count -->
	<select id="selectCmpnspVbankCnt2" parameterClass="java.util.HashMap" resultClass="int">
		SELECT  COUNT(*) AS TOTCNT
		FROM
		(
		 SELECT  /*+ use_nl(OOM OOP OOS OOI MINFO) */  OOM.ORDER_ID
	    FROM  OD_ORDER_MAST OOM
           INNER JOIN OD_ONLINE_PAYMENT OOP
             ON OOM.ORDER_ID = OOP.ORDER_ID
            AND OOM.SETL_MEAN_CD = '01'
            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
            <include refid="conditionCmpnspVbankDate2"/>
           INNER JOIN  OD_ORDER_SETL OOS
             ON OOP.ORDER_ID = OOS.ORDER_ID
            AND OOM.ORDER_ID = OOS.ORDER_ID
            AND OOP.SETL_SEQ = OOS.SETL_SEQ
            AND OOS.SETL_SEQ = '1'
           INNER JOIN  OD_ORDER_ITM  OOI
             ON OOM.ORDER_ID = OOI.ORDER_ID
            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
           LEFT OUTER JOIN MEMINFO MINFO
             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
	     WHERE 1 = 1
			AND OOP.RESULT = '1'
			AND OOS.SETL_STUS_CD ='2100'
            <include refid="conditionCmpnspVbank2"/>
				/* 검색조건: END */
					GROUP BY OOM.ORDER_ID
				)
	</select>

	<!-- 대사관리_신용카드1_조회 count -->
	<select id="selectCmpnspCreditCnt1" parameterClass="java.util.HashMap" resultClass="int">

		SELECT /*+ no_merge  push_pred */ COUNT(*) AS TOTCNT
		FROM (
				<isNotEqual property="searchTerm03" compareValue="06">
				SELECT /*+ no_merge  push_pred use_NL(OOS OOM OCCSI  ) index(OD_CREDIT_CARD_SETL_INFO_PK) */ OOM.ORDER_ID
				 	 , OOM.ACCESS_NAME
				 	 , OOM.ORDER_DATE
			   		 , ORDRR_NM
			   		 , OOM.SETL_MEAN_CD
				 FROM OD_ORDER_MAST OOM
					  , OD_ORDER_SETL OOS
					  , OD_CREDIT_CARD_SETL_INFO OCCSI
						WHERE 1=1
						  AND OOM.ORDER_ID = OOS.ORDER_ID
						  AND OOS.ORDER_ID = OCCSI.ORDER_ID
						  AND NVL(OOS.USE_YN,'N') = 'Y'
						  <include refid="conditionCmpnspCredit2"/>
						/* 검색조건: END */
	  				GROUP BY OOM.ORDER_ID
				   		   , OOM.ACCESS_NAME
				   		   , OOM.ORDER_DATE
				   		   , ORDRR_NM
				   		   , OOM.SETL_MEAN_CD
				 </isNotEqual>
				/* 리스트구분 */
			  <isNotEqual property="searchOnuriDivCd" compareValue="Y">
				<isNotEqual property="searchTerm03" compareValue="05">
				 <isNotEqual property="searchTerm03" compareValue="07">
					 <isNotEqual property="searchTerm03" compareValue="06">
					   UNION ALL
					 </isNotEqual>
				   SELECT	/*+ no_merge  push_pred use_nl( OOS OOM PT P0070 ) index(PRRWT0700_IX07) */  OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDER_DATE
						   , OOM.ORDRR_NM
						   , OOM.SETL_MEAN_CD
				   FROM OD_ORDER_MAST OOM
						, OD_ORDER_SETL OOS
						, PRRWT0700 P0070
						, PCSS_TRANS PT
				   WHERE 1=1
					   AND OOM.ORDER_ID = OOS.ORDER_ID
					   AND P0070.RECEVNO  = OOS.ORDER_ID || OOS.SETL_SEQ
					   AND P0070.RECEVNO  = PT.ACCEPT_NUM
					   AND P0070.CREDITCARDAPPRNO = PT.AGREE_NUM
					   AND PT.WORK_FLAG = 'BS'
					   AND PT.UNIT_FLAG = 'BA'
					   AND P0070.DEALSTUSCD ='S'
					   AND PT.REQ_CODE = '0000'
					   <include refid="conditionCmpnspCredit3"/>
					GROUP BY OOM.ORDER_DATE
						   , OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDRR_NM
						   , OOM.SETL_MEAN_CD
							</isNotEqual>
						</isNotEqual>
					</isNotEqual>
		)T1
	</select>

	<!-- 대사관리_휴대폰결제_조회 count -->
	<select id="selectCmpnspMobileCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS TOTCNT
		 FROM(
			   SELECT /*+ use_NL(SETL OOM) */ OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
				 FROM OD_ORDER_MAST OOM
							, OD_MOBILE_PAYMENT OMP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OMP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND OMP.SETL_SEQ = SETL.SETL_SEQ
						  <include refid="conditionCmpnspMobile"/>
			 GROUP BY OOM.ORDER_ID
			 		, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
		)T1
		WHERE 1=1
	</select>

	<!-- 대사관리_간편결제_조회 count -->
	<select id="selectCmpnspEasyCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS TOTCNT
		 FROM(
			   SELECT /*+ leading(OKP OOM SETL) use_nl(OOM SETL)*/ OOM.ORDER_ID
			   		, OOM.ORDER_DATE
				 	, OOM.SETL_MEAN_CD
				  FROM OD_ORDER_MAST OOM
							, OD_KAKAO_PAYMENT OKP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OKP.ORDER_ID
						  AND SETL.ORDER_ID = OOM.ORDER_ID
						  AND SETL.SETL_SEQ = OKP.SETL_SEQ
						  <include refid="conditionCmpnspEasy"/>
						/* 검색조건: END */
			 GROUP BY OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
		)T1
		WHERE 1=1
	</select>

	<!-- 대사관리_OK캐쉬백_조회 count -->
	<select id="selectCmpnspOkcashCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS TOTCNT
		 FROM(
			   SELECT /*+ use_NL(SETL OOM) */ OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
				 FROM OD_ORDER_MAST OOM
							, OD_OKCASH_PAYMENT OOP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OOP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND SETL.SETL_SEQ = OOP.SETL_SEQ
						  <include refid="conditionCmpnspOkcash"/>
			 GROUP BY OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
		)T1
		WHERE 1=1
	</select>

	<!-- 대사관리_즉시이체_조회 -->
	<select id="selectCmpnspBankList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT
		       T2.ORDER_ID
			 , T2.BILLTO_NAME
			 , T2.ACCESS_NAME
			 , T2.PAY_BANK
			 , T2.AUTH_TIME
			 , T2.AUTH_NUM
			 , T2.APPR_AMOUNT
			 , T2.CANCEL_AMOUNT
			 , T2.TOTAL_AMOUNT
			 , T2.S2_AMOUNT
			 , T2.STATE
			 , T2.SETL_MEAN_CD
		  FROM(
				SELECT
					    T1.ORDER_ID
					  , T1.BILLTO_NAME
					  , T1.ACCESS_NAME
					  , T1.PAY_BANK
					  , T1.AUTH_TIME
					  , T1.AUTH_NUM
					  , NVL(PRICE1,0)   AS APPR_AMOUNT
					  , NVL(PRICE2,0)   AS CANCEL_AMOUNT
					  , NVL(PRICE1,0) - NVL(PRICE2,0)  AS TOTAL_AMOUNT
					  , NVL(PRICE3,0)   AS S2_AMOUNT
					  , T1.STATE
					  , T1.SETL_MEAN_CD
				 FROM(
  						SELECT /*+ use_NL(SETL OOM  OB) */  OOM.ORDER_ID
							 , NVL(OB.BILLTO_NAME, '.') AS BILLTO_NAME
							 , NVL(OOM.ACCESS_NAME, '.') AS ACCESS_NAME
							 , MAX(OB.PAY_BANK) PAY_BANK
							 , MAX(OB.AUTH_TIME) AUTH_TIME
							 , MAX(OB.AUTH_NUM) AUTH_NUM
							 , 	<![CDATA[SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OB.AUTH_TIME < '20161029' || '000000' AND OB.RESULT ='9'
		                                   THEN NVL(DECODE(OB.RESULT,'9', OB.PRICE,0),0)
		                                ELSE NVL(DECODE(OB.RESULT,'0',OB.PRICE,'1',OB.PRICE,0),0) END) PRICE1 ]]>
							 , SUM(NVL(DECODE(OB.RESULT,'9', OB.PRICE,0),0)) PRICE2
							 , SUM(NVL(DECODE(OB.RESULT,'8', OB.PRICE,0),0)) PRICE3
							 , '' AS STATE
							 , OOM.SETL_MEAN_CD
						 FROM OD_ORDER_MAST OOM
						     , OD_ORDER_SETL SETL
						     , OD_BANKTOWN OB
						WHERE 1=1
						  AND OOM.ORDER_ID = SETL.ORDER_ID
	  	                  AND SETL.ORDER_ID = OB.ORDER_ID
				          AND OB.SETL_SEQ = SETL.SETL_SEQ
						  <include refid="conditionCmpnspBank"/>
						GROUP BY OOM.ORDER_ID
						 	, OB.BILLTO_NAME
						 	, OOM.ACCESS_NAME
						 	, OOM.SETL_MEAN_CD
				)T1
			) T2
		WHERE 1=1
		ORDER BY AUTH_TIME ASC
		<include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_가상계좌1_조회 - 송금예정리스트 -->
	<select id="selectCmpnspVbankList1" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT  T2.ORDER_ID
			 , T2.ORDER_DATE
			 , T2.ACCESS_NAME
			 , T2.TOT_DC_APPLY_PRC
			 , T2.PNT_USE_AMT
			 , T2.ONLINE_AMOUNT
			 , T2.PREMI_CUST_PNT_SETL_AMT
			 , T2.ORDRR_NM
			 , T2.PEOPLENUM
			 , T2.FINANCE_NAME
			 , T2.ACCOUNT_NO
			 , T2.ONLINENAME
			 , T2.RECVDATE
			 , T2.SELECT_BANK
			 , T2.SETL_MEAN_CD
		  FROM(
				SELECT	 T1.ORDER_ID
					  , T1.ORDER_DATE
					  , T1.ACCESS_NAME
					  , T1.TOT_DC_APPLY_PRC
					  , RM_AMOUNT AS PNT_USE_AMT
					  , T1.ONLINE_AMOUNT
					  , SP_AMOUNT AS PREMI_CUST_PNT_SETL_AMT
					  , T1.ORDRR_NM
					  , T1.PEOPLENUM
					  , T1.FINANCE_NAME
					  , T1.ACCOUNT_NO
					  , T1.ONLINENAME
					  , T1.RECVDATE
					  , T1.SELECT_BANK
					  , T1.SETL_MEAN_CD
				 FROM(
						SELECT /*+ use_nl(OOM OOP OOS OOI MINFO) */
							  OOM.ORDER_ID
							 , MAX(TO_CHAR(OOM.ORDER_DATE, 'YYYYMMDDHH24MISS')) ORDER_DATE
							 , MAX(OOM.ACCESS_NAME) ACCESS_NAME
							 , SUM(OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) TOT_DC_APPLY_PRC
							 , SUM((OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0)) - (NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0)) - OOI.CPN_DC_AMT - NVL(OOI.OKCASH_USE_AMT,0)) AS ONLINE_AMOUNT
							 , MAX(OOM.ORDRR_NM) ORDRR_NM
							 , SUM(NVL(OOI.PNT_USE_AMT,0) - NVL(OOI.PNT_REFUND_SETL_AMT,0)) RM_AMOUNT
							 , SUM(NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) - NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT,0)) SP_AMOUNT
							 , MAX(MINFO.PEOPLENUM) PEOPLENUM
							 , MAX(OOP.FINANCE_NAME) FINANCE_NAME
							 , MAX(OOP.ACCOUNT_NO) ACCOUNT_NO
							 , MAX(OOP.ONLINENAME) ONLINENAME
							 , MAX(DECODE(OOP.RECVDATE,NULL,'입금대기','입금완료')) RECVDATE
							 , MAX(OOP.ACCOUNT_NO) ||','|| MAX(OOP.FINANCE_NAME) AS SELECT_BANK
							 , MAX(OOM.SETL_MEAN_CD) SETL_MEAN_CD
				  FROM  OD_ORDER_MAST OOM
		           INNER JOIN OD_ONLINE_PAYMENT OOP
		             ON OOM.ORDER_ID = OOP.ORDER_ID
		            AND OOM.SETL_MEAN_CD = '01'
		            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
		            <include refid="conditionCmpnspVbankDate1"/>
		           INNER JOIN  OD_ORDER_SETL OOS
		             ON OOP.ORDER_ID = OOS.ORDER_ID
		            AND OOM.ORDER_ID = OOS.ORDER_ID
		            AND OOP.SETL_SEQ = OOS.SETL_SEQ
		            AND OOS.SETL_SEQ = '1'
		           INNER JOIN  OD_ORDER_ITM  OOI
		             ON OOM.ORDER_ID = OOI.ORDER_ID
		            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
		           LEFT OUTER JOIN MEMINFO MINFO
		             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
			     WHERE 1 = 1
					AND OOP.RESULT = '0'
					AND OOS.SETL_STUS_CD ='2030'
		            <include refid="conditionCmpnspVbank1"/>
						/* 검색조건: END */
					GROUP BY OOM.ORDER_ID
					,OOM.ORDER_DATE
				)T1
			) T2
		WHERE 1=1
		 ORDER BY ORDER_DATE DESC
		<include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_가상계좌2_조회 - 가상계좌 송금완료 리스트-->
	<select id="selectCmpnspVbankList2" parameterClass="java.util.HashMap" resultClass="commMap">

		<include refid="pagingHeader"/>
		SELECT  T2.ORDER_ID
			 , T2.ORDER_DATE
			 , T2.ORDER_STUS_CD
			 , T2.ACCESS_NAME
			 , T2.PNT_USE_AMT
			 , T2.ONLINE_AMOUNT
			 , T2.PREMI_CUST_PNT_SETL_AMT
			 , T2.ORDRR_NM
			 , T2.PEOPLENUM
			 , T2.REALBANKNAME
			 , T2.ACCOUNT_NO
			 , T2.ONLINENAME
			 , T2.ONLINEDATE
			 , T2.RECVDATE
			 , T2.SELECT_BANK
			 , T2.SETL_MEAN_CD
		  FROM(
				SELECT  T1.ORDER_ID
					  , T1.ORDER_DATE
					  , T1.ORDER_STUS_CD
					  , T1.ACCESS_NAME
					  , RM_AMOUNT AS PNT_USE_AMT
					  , T1.ONLINE_AMOUNT
					  , SP_AMOUNT AS PREMI_CUST_PNT_SETL_AMT
					  , T1.ORDRR_NM
					  , T1.PEOPLENUM
					  , T1.REALBANKNAME
					  , T1.ACCOUNT_NO
					  , T1.ONLINENAME
					  , T1.ONLINEDATE
					  , T1.RECVDATE
					  , T1.SELECT_BANK
					  , T1.SETL_MEAN_CD
				 FROM(
						SELECT /*+ use_nl(OOM OOP OOS OOI MINFO) */
						       OOM.ORDER_ID
							 , MAX(TO_CHAR(OOM.ORDER_DATE, 'YYYYMMDDHH24MISS')) ORDER_DATE
							 , MAX(OOM.ORDER_STUS_CD) ORDER_STUS_CD
							 , MAX(OOM.ACCESS_NAME) ACCESS_NAME
							 , SUM(OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) TOT_DC_APPLY_PRC
							 , SUM((OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0)) - (NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0)) - OOI.CPN_DC_AMT - NVL(OOI.OKCASH_USE_AMT,0)) AS ONLINE_AMOUNT
							 , MAX(OOM.ORDRR_NM) ORDRR_NM
							 , SUM(NVL(OOI.PNT_USE_AMT,0) - NVL(OOI.PNT_REFUND_SETL_AMT,0)) RM_AMOUNT
							 , SUM(NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) - NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT,0)) SP_AMOUNT
							 , MAX(MINFO.PEOPLENUM) PEOPLENUM
							 , MAX(OOP.REALBANKNAME) REALBANKNAME
							 , MAX(OOP.REALBANKACCOUNT) AS ACCOUNT_NO
							 , MAX(OOP.ONLINENAME) ONLINENAME
							 , MAX(OOP.ONLINEDATE) ONLINEDATE
							 , MAX(DECODE(OOP.RECVDATE, NULL, '수동', '자동')) AS RECVDATE
							 , MAX(OOP.ACCOUNT_NO) ||','|| MAX(OOP.FINANCE_NAME) AS SELECT_BANK
							 , MAX(OOM.SETL_MEAN_CD)  SETL_MEAN_CD
					FROM  OD_ORDER_MAST OOM
			           INNER JOIN OD_ONLINE_PAYMENT OOP
			             ON OOM.ORDER_ID = OOP.ORDER_ID
			            AND OOM.SETL_MEAN_CD = '01'
			            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
			            <include refid="conditionCmpnspVbankDate2"/>
			           INNER JOIN  OD_ORDER_SETL OOS
			             ON OOP.ORDER_ID = OOS.ORDER_ID
			            AND OOM.ORDER_ID = OOS.ORDER_ID
			            AND OOP.SETL_SEQ = OOS.SETL_SEQ
			            AND OOS.SETL_SEQ = '1'
			           INNER JOIN  OD_ORDER_ITM  OOI
			             ON OOM.ORDER_ID = OOI.ORDER_ID
			            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
			           LEFT OUTER JOIN MEMINFO MINFO
			             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
				     WHERE 1 = 1
						AND OOP.RESULT = '1'
						AND OOS.SETL_STUS_CD ='2100'
			            <include refid="conditionCmpnspVbank2"/>
						/* 검색조건: END */
						GROUP BY OOM.ORDER_ID
						,OOP.ONLINEDATE
				)T1
			) T2
		WHERE 1=1
		 ORDER BY ORDER_DATE DESC
		<include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_신용카드1_조회 -->
	<select id="selectCmpnspCreditList1" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT /*+ no_merge  push_pred */
			   T2.ORDER_ID
			 , T2.ACCESS_NAME
			 , TO_CHAR(T2.ORDER_DATE, 'YYYYMMDDHH24MISS') ORDER_DATE
			 , T2.TERMINAL_ID
			 , T2.APPROVAL_NO
			 , T2.APPR_AMOUNT
			 , T2.CANCEL_AMOUNT
			 , T2.S2_AMOUNT
			 , T2.TOTAL_AMOUNT
			 , T2.CARD_INSTALLMENT
			 , T2.MODIFY_DATE
			 , T2.ORDRR_NM
			 , T2.RESERVED1
			 , T2.SETL_MEAN_CD
			 , T2.SETL_MEAN_NM
		  FROM(
				SELECT	/*+ no_merge  push_pred */
					    T1.ORDER_ID
					  , T1.ACCESS_NAME
					  , T1.ORDER_DATE
					  , T1.TERMINAL_ID
					  , T1.APPROVAL_NO
					  , PRICE1 AS APPR_AMOUNT
					  , PRICE3   AS CANCEL_AMOUNT
					  , PRICE1-PRICE3 AS TOTAL_AMOUNT
					  ,  PRICE4   AS S2_AMOUNT
					  , T1.CARD_INSTALLMENT
					  , T1.MODIFY_DATE
					  , T1.ORDRR_NM
					  , T1.RESERVED1
					  , T1.SETL_MEAN_CD
					  , T1.SETL_MEAN_NM
				 FROM(

				 <isNotEqual property="searchTerm03" compareValue="06">
				      SELECT /*+ no_merge  push_pred use_NL(OOS OOM OCCSI  ) index(OD_CREDIT_CARD_SETL_INFO_PK) */ OOM.ORDER_ID
							, NVL(OOM.ACCESS_NAME,'.') AS ACCESS_NAME
							, OOM.ORDER_DATE
							, MAX(TERMINAL_ID) TERMINAL_ID
							, MAX(APPROVAL_NO) APPROVAL_NO
		           <![CDATA[, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OCCSI.APPROVAL_TIME < '20161029' || '000000' AND OCCSI.STATUS ='D2'
                                            THEN NVL(DECODE(OCCSI.STATUS,'D2',OCCSI.TOTAL_AMOUNT,0),0)
                                       ELSE NVL(DECODE(OCCSI.STATUS,'D1',OCCSI.TOTAL_AMOUNT,'S1',OCCSI.TOTAL_AMOUNT,0),0) END) PRICE1]]>
	 						, SUM(DECODE(OCCSI.STATUS,'D2',OCCSI.TOTAL_AMOUNT,0)) PRICE3
	 						, SUM(DECODE(OCCSI.STATUS,'S2',OCCSI.TOTAL_AMOUNT,0)) PRICE4
							, DECODE(OCCSI.CARD_INSTALLMENT, '00', '.', NVL(OCCSI.CARD_INSTALLMENT, '.')) AS CARD_INSTALLMENT
							<isEqual property="searchListSe" compareValue="L1">		<!-- 신용카드_승인결과 보기 -->
								, MAX(DECODE(OCCSI.APPROVAL_TIME, NULL, '.', OCCSI.APPROVAL_TIME)) AS MODIFY_DATE
							</isEqual>
							<isEqual property="searchListSe" compareValue="L2">		<!-- 신용카드_승인취소결과보기 -->
								, MAX(DECODE(OCCSI.APPROVAL_TIME, NULL, '.', OCCSI.APPROVAL_TIME)) AS MODIFY_DATE
							</isEqual>
							<isEqual property="searchListSe" compareValue="L3">		<!-- 신용카드_정산요청보기 -->
								, MAX(DECODE(OCCSI.APPROVAL_TIME, NULL, '.', OCCSI.APPROVAL_TIME)) AS MODIFY_DATE
							</isEqual>
							<isEqual property="searchListSe" compareValue="L4">		<!-- 신용카드_정산요청결과보기 -->
								, MAX(DECODE(OOS.RECEIVE_DATE, NULL, '.', OOS.RECEIVE_DATE)) AS MODIFY_DATE
							</isEqual>
							<isEqual property="searchListSe" compareValue="L5">		<!-- 정산후 매입취소결과보기 -->
								, MAX(DECODE(OCCSI.APPROVAL_TIME, NULL, '.', OCCSI.APPROVAL_TIME)) AS MODIFY_DATE
							</isEqual>
							, NVL(OOM.ORDRR_NM, '.') AS ORDRR_NM
							, MAX(DECODE(OCCSI.PG_DIV_CD,'01', 'KCP', '06', 'KSNET', '10', 'KICC' )) AS RESERVED1
							, OOM.SETL_MEAN_CD
							, NVL( F_GET_COMN_CD_NM('SETL_MEAN_CD', OOM.SETL_MEAN_CD), ' ') AS SETL_MEAN_NM
						 FROM OD_ORDER_MAST OOM
							, OD_ORDER_SETL OOS
							, OD_CREDIT_CARD_SETL_INFO OCCSI
						WHERE 1=1
						  AND OOM.ORDER_ID = OOS.ORDER_ID
						  AND OOS.ORDER_ID = OCCSI.ORDER_ID
						  AND NVL(OOS.USE_YN,'N') ='Y'
						  <include refid="conditionCmpnspCredit2"/>
					GROUP BY OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDER_DATE
						   , OCCSI.CARD_INSTALLMENT
						   , ORDRR_NM
						   , OOM.SETL_MEAN_CD
				</isNotEqual>
			<isNotEqual property="searchOnuriDivCd" compareValue="Y">
				<isNotEqual property="searchTerm03" compareValue="05">
				 <isNotEqual property="searchTerm03" compareValue="07">
					<isNotEqual property="searchTerm03" compareValue="06">
					   UNION ALL
					 </isNotEqual>
					SELECT	/*+ no_merge  push_pred use_nl( OOS OOM PT P0070 ) index(PRRWT0700_IX07) */  OOM.ORDER_ID
						  , NVL(OOM.ACCESS_NAME,'.') AS ACCESS_NAME
						  , OOM.ORDER_DATE
						  , MAX(TO_CHAR(PT.TRML_ID)) TERMINAL_ID
						  , MAX(TO_CHAR(PT.AGREE_NUM)) APPROVAL_NO
						  , SUM(CASE WHEN PT.TRADE_FLAG = '1'       AND PT.BATCH_STATUS_CODE IN ('1','11')  THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE1
						  , SUM(CASE WHEN PT.TRADE_FLAG = '0'		AND PT.BATCH_STATUS_CODE IN ('1','11')	THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE3
						  , SUM(CASE WHEN PT.TRADE_FLAG = '0'		AND PT.BATCH_STATUS_CODE = '21' THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE4
						  , MAX(DECODE(TO_CHAR(P0070.DIVMMCNT),'0','.',NVL(TO_CHAR(P0070.DIVMMCNT),'.'))) CARD_INSTALLMENT
						  , MAX(P0070.CREDITCARDAPPRYMD|| NVL(P0070.CREDITCARDAPPRHMS,'000000')) MODIFY_DATE
						  , NVL(OOM.ORDRR_NM, '.') AS ORDRR_NM
						  , '창구' AS RESERVED1
						  , OOM.SETL_MEAN_CD
						  , NVL(F_GET_COMN_CD_NM('SETL_MEAN_CD', OOM.SETL_MEAN_CD), ' ') AS SETL_MEAN_NM
					 FROM OD_ORDER_MAST OOM
						, OD_ORDER_SETL OOS
						, PRRWT0700 P0070
						, PCSS_TRANS PT
				   WHERE 1=1
					   AND OOM.ORDER_ID = OOS.ORDER_ID
					   AND P0070.RECEVNO  = OOS.ORDER_ID || OOS.SETL_SEQ
					   AND P0070.RECEVNO  = PT.ACCEPT_NUM
					   AND P0070.CREDITCARDAPPRNO = PT.AGREE_NUM
					   AND PT.WORK_FLAG = 'BS'
					   AND PT.UNIT_FLAG = 'BA'
					   AND P0070.DEALSTUSCD ='S'
					   AND PT.REQ_CODE = '0000'
					   <include refid="conditionCmpnspCredit3"/>
					GROUP BY OOM.ORDER_DATE
						   , OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDRR_NM
						   , OOM.SETL_MEAN_CD
					/* ORDER BY ORDER_DATE */
					</isNotEqual>
				  </isNotEqual>
				 </isNotEqual>
				)T1
			) T2
		WHERE 1=1
		ORDER BY T2.ORDER_DATE DESC
		<include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_휴대폰결제_조회 -->
	<select id="selectCmpnspMobileList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT T2.ORDER_ID
			 , T2.ORDRR_NM
			 , T2.ACCESS_NAME
			 , T2.AUTH_TIME
			 , T2.APPR_AMOUNT
			 , T2.CANCEL_AMOUNT
			 , T2.TOTAL_AMOUNT
			 , T2.S2_AMOUNT
			 , T2.STATE
			 , T2.SETL_MEAN_CD
			 , T2.SETL_MEAN_NM
			 , T2.PRICE1
			 , T2.PRICE3
			 , T2.TID
		  FROM(
				SELECT	T1.ORDER_ID
					  , T1.ORDRR_NM
					  , T1.ACCESS_NAME
					  , T1.AUTH_TIME
					  , NVL(PRICE_1,0)  AS APPR_AMOUNT
					  , NVL(PRICE_2,0)   AS CANCEL_AMOUNT
					  , NVL(PRICE_1,0) - NVL(PRICE_2,0) AS TOTAL_AMOUNT
					  ,  NVL(PRICE_3,0)   AS S2_AMOUNT
					  , T1.STATE
					  , T1.SETL_MEAN_CD
					  , T1.SETL_MEAN_NM
					  , T1.PRICE1
					  , T1.PRICE3
					  , T1.TID
				 FROM(
					   SELECT /*+ use_NL(SETL OOM) */ OOM.ORDER_ID
							, OOM.ORDER_DATE
							, MAX(OOM.ORDRR_NM) AS ORDRR_NM
							, MAX(NVL(OOM.ACCESS_NAME,'.')) AS ACCESS_NAME
							, MAX(OMP.APPTIME) AS AUTH_TIME
			<![CDATA[		, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OMP.APPTIME < '20161029' || '000000' AND OMP.STATUS ='D2'
                                            THEN DECODE(OMP.STATUS,'D2',OMP.AMOUNT,0)
                                       ELSE DECODE(OMP.STATUS,'D1',OMP.AMOUNT,'S1',OMP.AMOUNT,0) END) PRICE_1 ]]>
							, SUM(DECODE(OMP.STATUS,'D2',OMP.AMOUNT,0)) PRICE_2
							, SUM(DECODE(OMP.STATUS,'S2',OMP.AMOUNT,0)) PRICE_3
							, '' AS STATE
							, MAX(OOM.SETL_MEAN_CD) AS SETL_MEAN_CD
							, (SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', MAX(OOM.SETL_MEAN_CD)) FROM DUAL) AS SETL_MEAN_NM
							, TRUNC(MAX(OMP.AMOUNT)* 0.01)  AS PRICE1
							, TRUNC(MAX(OMP.AMOUNT)* 0.03)  AS PRICE3
							, MAX(OMP.TID) AS TID
						 FROM OD_ORDER_MAST OOM
							, OD_MOBILE_PAYMENT OMP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OMP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND OMP.SETL_SEQ = SETL.SETL_SEQ
						 <include refid="conditionCmpnspMobile"/>
					GROUP BY OOM.ORDER_ID
						   , OOM.ORDER_DATE
						   , OOM.SETL_MEAN_CD
				)T1
			) T2
		WHERE 1=1
			ORDER BY T2.AUTH_TIME DESC
		    <include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_간편결제_조회 -->
	<select id="selectCmpnspEasyList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT T2.ORDER_ID
			 , T2.ORDRR_NM
			 , T2.ACCESS_NAME
			 , T2.PAY_BANK
			 , T2.AUTH_TIME
			 , T2.AUTHCODE
			 , T2.TID
			 , T2.APPR_AMOUNT
			 , T2.CANCEL_AMOUNT
			 , T2.TOTAL_AMOUNT
			 , T2.S2_AMOUNT
			 , T2.STATE
			 , T2.SETL_MEAN_CD
			 , T2.SETL_MEAN_NM
			 , T2.PRICE1
			 , T2.PRICE3
		  FROM(
				SELECT	T1.ORDER_ID
					  , T1.ORDRR_NM
					  , T1.ACCESS_NAME
					  , T1.PAY_BANK
					  , T1.AUTH_TIME
					  , T1.AUTHCODE
					  , T1.TID
					  , NVL(PRICE_1,0)   AS APPR_AMOUNT
					  , NVL(PRICE_2,0)   AS CANCEL_AMOUNT
					  , NVL(PRICE_1,0) - NVL(PRICE_2,0)  AS TOTAL_AMOUNT
					  , NVL(PRICE_3,0)   AS S2_AMOUNT
					  , T1.STATE
					  , T1.SETL_MEAN_CD
					  , T1.SETL_MEAN_NM
					  , T1.PRICE1
					  , T1.PRICE3
				 FROM(
					   SELECT /*+ leading(OKP OOM SETL) use_nl(OOM SETL)*/
					          OOM.ORDER_ID
							, OOM.ORDER_DATE
							, MAX(OOM.ORDRR_NM) AS ORDRR_NM
							, MAX(NVL(OOM.ACCESS_NAME,'.')) AS ACCESS_NAME
							, '' AS PAY_BANK
							, MAX(OKP.AUTHDATE) AS AUTH_TIME
							, MAX(AUTHCODE) AUTHCODE
							, MAX(TID) TID
		<![CDATA[			, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OKP.AUTHDATE < '20161029' || '000000' AND OKP.STATUS ='D2'
                                    THEN NVL(DECODE(OKP.STATUS,'D2',OKP.AMT,0),0)
                                   ELSE DECODE(OKP.STATUS,'D1',OKP.AMT,'S1',OKP.AMT,0) END) PRICE_1]]>
							, SUM(DECODE(OKP.STATUS,'D2',OKP.AMT,0)) PRICE_2
							, SUM(DECODE(OKP.STATUS,'S2',OKP.AMT,0)) PRICE_3
							, '' AS STATE
							, MAX(OOM.SETL_MEAN_CD) AS SETL_MEAN_CD
							, (SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', MAX(OOM.SETL_MEAN_CD)) FROM DUAL) AS SETL_MEAN_NM
							, TRUNC(MAX(OKP.AMT)* 0.01)  AS PRICE1
							, TRUNC(MAX(OKP.AMT)* 0.03)  AS PRICE3
						 FROM OD_ORDER_MAST OOM
							, OD_KAKAO_PAYMENT OKP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OKP.ORDER_ID
						  AND SETL.ORDER_ID = OOM.ORDER_ID
						  AND SETL.SETL_SEQ = OKP.SETL_SEQ
						  <include refid="conditionCmpnspEasy"/>

					GROUP BY OOM.ORDER_ID
						   , OOM.ORDER_DATE
						   , OOM.SETL_MEAN_CD
				)T1
			) T2
		WHERE 1=1
			ORDER BY T2.AUTH_TIME DESC
			 <include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_OK캐쉬백_조회 -->
	<select id="selectCmpnspOkcashList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT T2.ORDER_ID
			 , T2.ORDRR_NM
			 , T2.ACCESS_NAME
			 , T2.PAY_BANK
			 , T2.AUTH_TIME
			 , T2.PRICE
			 , T2.STATE
			 , T2.SETL_MEAN_CD
			 , T2.SETL_MEAN_NM
			 , T2.PRICE1
			 , T2.PRICE3
		  FROM(
				SELECT	T1.ORDER_ID
					  , T1.ORDRR_NM
					  , T1.ACCESS_NAME
					  , T1.PAY_BANK
					  , T1.AUTH_TIME
					  <isEqual property="searchListSe" compareValue="L1">
					  , (PRICE1 - PRICE2) AS PRICE
					  , TRUNC((PRICE1 - (PRICE2 + PRICE3)) * 0.01 ) AS PRICE1
					  , TRUNC((PRICE1 - (PRICE2 + PRICE3)) * 0.03 ) AS PRICE3
					  </isEqual>
					  <isEqual property="searchListSe" compareValue="L2">
					  , PRICE2 AS PRICE
					  , TRUNC( PRICE2 * 0.01 ) AS PRICE1
					  , TRUNC( PRICE2 * 0.03 ) AS PRICE3
					  </isEqual>
					  <isEqual property="searchListSe" compareValue="L3">
					  , (NVL(PRICE1,0) - NVL(PRICE2,0)) AS PRICE
					  , TRUNC( (NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.01 ) AS PRICE1
					  , TRUNC( (NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.03 ) AS PRICE3
					  </isEqual>
					  <isEqual property="searchListSe" compareValue="L4">
					  , (NVL(PRICE1,0) - NVL(PRICE2,0)) AS PRICE
					  , TRUNC( (NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.01 ) AS PRICE1
					  , TRUNC( (NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.03 ) AS PRICE3
					  </isEqual>
					  <isEqual property="searchListSe" compareValue="L5">
					  , PRICE3 AS PRICE
					  , TRUNC( PRICE3 * 0.01 ) AS PRICE1
					  , TRUNC( PRICE3 * 0.03 ) AS PRICE3
					  </isEqual>
					  , T1.STATE
					  , T1.SETL_MEAN_CD
					  , T1.SETL_MEAN_NM
				 FROM(
					   SELECT /*+ use_NL(SETL OOM) */
							  OOM.ORDER_ID
							, OOM.ORDER_DATE
							, MAX(OOM.ORDRR_NM) AS ORDRR_NM
							, MAX(NVL(OOM.ACCESS_NAME,'.')) AS ACCESS_NAME
							, '' AS PAY_BANK
							, MAX(OOP.APPTIME) AS AUTH_TIME
				<![CDATA[	, SUM(CASE WHEN  OOM.SITE_DIV_CD ='01' AND  OOP.APPTIME < '20161029' || '000000' AND OOP.STATUS ='D2'
                                       THEN DECODE(OOP.STATUS,'D2', OOP.AMOUNT,0)
                                    ELSE DECODE(OOP.STATUS,'D1', OOP.AMOUNT,'S1',OOP.AMOUNT,0) END) PRICE1 ]]>
							, SUM(DECODE(OOP.STATUS,'D2', OOP.AMOUNT,0)) PRICE2
							, SUM(DECODE(OOP.STATUS,'S2', OOP.AMOUNT,0)) PRICE3
							, MAX(OOP.AMOUNT) AS PRICE
							, '' AS STATE
							, MAX(OOM.SETL_MEAN_CD) AS SETL_MEAN_CD
							, (SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', MAX(OOM.SETL_MEAN_CD)) FROM DUAL) AS SETL_MEAN_NM
						 FROM OD_ORDER_MAST OOM
							, OD_OKCASH_PAYMENT OOP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OOP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND SETL.SETL_SEQ = OOP.SETL_SEQ
						  <include refid="conditionCmpnspOkcash"/>
					GROUP BY OOM.ORDER_ID
						   , OOM.ORDER_DATE
						   , OOM.SETL_MEAN_CD
				)T1
			) T2
		WHERE 1=1
			ORDER BY T2.AUTH_TIME DESC
			<include refid="pagingFooter"/>
	</select>

	<!-- 대사관리_즉시이체_합계 -->
	<select id="selectCmpnspBankSummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT  COUNT(*) AS TOTCNT
			  , SUM(NVL(PRICE1,0))  AS SUM_APPR_AMOUNT
			  , SUM(NVL(PRICE2,0))   AS SUM_CANCEL_AMOUNT
			  , SUM(NVL(PRICE1,0)- NVL(PRICE2,0))  AS SUM_TOTAL_AMOUNT
			  , SUM(NVL(PRICE3,0)) AS SUM_S2_AMOUNT
		  FROM
		  (
		  SELECT    /*+ use_NL(SETL OOM  OB) */ OOM.ORDER_ID
				   	, OB.BILLTO_NAME
				   	, OOM.ACCESS_NAME
				   	, MAX(OB.PAY_BANK) PAY_BANK
				   	, OOM.SETL_MEAN_CD
		   <![CDATA[, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OB.AUTH_TIME < '20161029' || '000000' AND OB.RESULT ='9'
                                 THEN NVL(DECODE(OB.RESULT,'9', OB.PRICE,0),0)
                              ELSE NVL(DECODE(OB.RESULT,'0',OB.PRICE,'1',OB.PRICE,0),0) END) PRICE1 ]]>
					, SUM(NVL(DECODE(OB.RESULT,'9', OB.PRICE,0),0)) PRICE2
					, SUM(NVL(DECODE(OB.RESULT,'8', OB.PRICE,0),0)) PRICE3
		  FROM  OD_ORDER_MAST OOM
		      , OD_ORDER_SETL SETL
		      , OD_BANKTOWN OB
	  	   WHERE OOM.ORDER_ID = SETL.ORDER_ID
	  	        AND SETL.ORDER_ID = OB.ORDER_ID
				AND OB.SETL_SEQ = SETL.SETL_SEQ
				<include refid="conditionCmpnspBank"/>
			GROUP BY OOM.ORDER_ID
					, OB.BILLTO_NAME
					, OOM.ACCESS_NAME
					, OOM.SETL_MEAN_CD
			)
	</select>

	<!-- 대사관리_가상계좌1_합계 -->
	<select id="selectCmpnspVbankSummary1" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT  COUNT(*) AS TOTCNT
			 , NVL(SUM (TOT_DC_APPLY_PRC), 0) AS SUM_TOT_DC_APPLY_PRC
			 , NVL(SUM (ONLINE_AMOUNT), 0) AS SUM_ONLINE_AMOUNT
			 , SUM (NVL(RM_AMOUNT,0)) AS SUM_PNT_USE_AMT
			 , SUM (NVL(SP_AMOUNT,0)) AS SUM_PREMI_CUST_PNT_SETL_AMT
			FROM
			(
			 SELECT   /*+ use_nl(OOM OOP OOS OOI MINFO) */  OOM.ORDER_ID
					 , SUM(OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) TOT_DC_APPLY_PRC
					 , SUM((OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0)) - (NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0)) - OOI.CPN_DC_AMT - NVL(OOI.OKCASH_USE_AMT,0)) AS ONLINE_AMOUNT
					 , SUM(NVL(OOI.PNT_USE_AMT,0) - NVL(OOI.PNT_REFUND_SETL_AMT,0)) RM_AMOUNT
					 , SUM(NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) - NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT,0)) SP_AMOUNT
			  FROM  OD_ORDER_MAST OOM
	           INNER JOIN OD_ONLINE_PAYMENT OOP
	             ON OOM.ORDER_ID = OOP.ORDER_ID
	            AND OOM.SETL_MEAN_CD = '01'
	            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
	            <include refid="conditionCmpnspVbankDate1"/>
	           INNER JOIN  OD_ORDER_SETL OOS
	             ON OOP.ORDER_ID = OOS.ORDER_ID
	            AND OOM.ORDER_ID = OOS.ORDER_ID
	            AND OOP.SETL_SEQ = OOS.SETL_SEQ
	            AND OOS.SETL_SEQ = '1'
	           INNER JOIN  OD_ORDER_ITM  OOI
	             ON OOM.ORDER_ID = OOI.ORDER_ID
	            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
	           LEFT OUTER JOIN MEMINFO MINFO
	             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
		     WHERE 1 = 1
				AND NVL(OOP.ITSTATUS,'Y') = 'Y'
				AND OOP.RESULT = '0'
				AND OOS.SETL_STUS_CD ='2030'
	            <include refid="conditionCmpnspVbank1"/>
				/* 검색조건: END */
			GROUP BY OOM.ORDER_ID
			)
	</select>

	<!-- 대사관리_가상계좌2_합계 -->
	<select id="selectCmpnspVbankSummary2" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT COUNT(*) AS TOTCNT
			 , NVL(SUM (TOT_DC_APPLY_PRC), 0) AS SUM_TOT_DC_APPLY_PRC
			 , NVL(SUM (ONLINE_AMOUNT), 0) AS SUM_ONLINE_AMOUNT
			 FROM
			 (
				SELECT  /*+ use_nl(OOM OOP OOS OOI MINFO) */ OOM.ORDER_ID
					 , SUM(OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) TOT_DC_APPLY_PRC
					 , SUM((OOI.DC_APPLY_PRC + NVL(OOI.OPTN_GOODS_APPLY_PRC,0) + NVL(OOI.SEND_PRC,0)) - (NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)) - (NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PNT_REFUND_SETL_AMT, 0)) - OOI.CPN_DC_AMT - NVL(OOI.OKCASH_USE_AMT,0)) AS ONLINE_AMOUNT
					 , SUM(NVL(OOI.PNT_USE_AMT,0) - NVL(OOI.PNT_REFUND_SETL_AMT,0)) RM_AMOUNT
					 , SUM(NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) - NVL(OOI.PREMI_CUST_PNT_REFUND_APRV_AMT,0)) SP_AMOUNT
		   FROM  OD_ORDER_MAST OOM
           INNER JOIN OD_ONLINE_PAYMENT OOP
             ON OOM.ORDER_ID = OOP.ORDER_ID
            AND OOM.SETL_MEAN_CD = '01'
            AND OOM.RECEVPO_RGISTPOCD IN ('89903','85414')
            <include refid="conditionCmpnspVbankDate2"/>
           INNER JOIN  OD_ORDER_SETL OOS
             ON OOP.ORDER_ID = OOS.ORDER_ID
            AND OOM.ORDER_ID = OOS.ORDER_ID
            AND OOP.SETL_SEQ = OOS.SETL_SEQ
            AND OOS.SETL_SEQ = '1'
           INNER JOIN  OD_ORDER_ITM  OOI
             ON OOM.ORDER_ID = OOI.ORDER_ID
            AND OOI.GOODS_CANCEL_YN ='N' /*D02 배송중,D03 배송완료,D04 배송완료후(꽃배달),O02 결제완료,O04 주문확인후*/
           LEFT OUTER JOIN MEMINFO MINFO
             ON OOM.ACCESS_NAME = MINFO.ACCESS_NAME
	     WHERE 1 = 1
			AND OOP.RESULT = '1'
			AND OOS.SETL_STUS_CD ='2100'
            <include refid="conditionCmpnspVbank2"/>
				/* 검색조건: END */
			  GROUP BY   OOM.ORDER_ID
			)
	</select>

	<!-- 대사관리_신용카드1_합계 -->
	<select id="selectCmpnspCreditSummary1" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /*+ no_merge  push_pred */ CNT AS TOTCNT
			 , NVL(T1.APPR_AMOUNT, 0) AS SUM_APPR_AMOUNT
			 , NVL(T1.CANCEL_AMOUNT, 0) AS SUM_CANCEL_AMOUNT
			 , NVL(T1.TOTAL_AMOUNT, 0) AS SUM_TOTAL_AMOUNT
			 , NVL(T1.S2_AMOUNT, 0) AS SUM_S2_AMOUNT

		FROM (
				SELECT /*+ no_merge  push_pred */ COUNT(ORDER_ID) CNT
					  , SUM(NVL(PRICE1,0))  AS APPR_AMOUNT
					  , SUM(NVL(PRICE3,0))   AS CANCEL_AMOUNT
					  , SUM(NVL(PRICE1,0) - NVL(PRICE3,0))  AS TOTAL_AMOUNT
					  , SUM(NVL(PRICE4,0))   AS S2_AMOUNT
				 FROM
				(
				<isNotEqual property="searchTerm03" compareValue="06">
				   SELECT  /*+ no_merge  push_pred use_NL(OOS OOM OCCSI  ) index(OD_CREDIT_CARD_SETL_INFO_PK) */ OOM.ORDER_ID
			     <![CDATA[, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OCCSI.APPROVAL_TIME < '20161029' || '000000' AND OCCSI.STATUS ='D2'
                                            THEN NVL(DECODE(OCCSI.STATUS,'D2',OCCSI.TOTAL_AMOUNT,0),0)
                                       ELSE NVL(DECODE(OCCSI.STATUS,'D1',OCCSI.TOTAL_AMOUNT,'S1',OCCSI.TOTAL_AMOUNT,0),0) END) PRICE1]]>
		 				   ,SUM(DECODE(OCCSI.STATUS,'D2',OCCSI.TOTAL_AMOUNT,0)) PRICE3
		 				   ,SUM(DECODE(OCCSI.STATUS,'S2',OCCSI.TOTAL_AMOUNT,0)) PRICE4
				 FROM OD_ORDER_MAST OOM
						, OD_ORDER_SETL OOS
						, OD_CREDIT_CARD_SETL_INFO OCCSI
					WHERE 1=1
					  AND OOM.ORDER_ID = OOS.ORDER_ID
					  AND OOS.ORDER_ID = OCCSI.ORDER_ID
					  AND NVL(OOS.USE_YN, 'Y') = 'Y'
					  <include refid="conditionCmpnspCredit2"/>
					GROUP BY OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDER_DATE
						   , OCCSI.CARD_INSTALLMENT
						   , ORDRR_NM
						   , OOM.SETL_MEAN_CD
					</isNotEqual>
				/* 리스트구분 */
			<isNotEqual property="searchOnuriDivCd" compareValue="Y">
				<isNotEqual property="searchTerm03" compareValue="05">
				 <isNotEqual property="searchTerm03" compareValue="07">
				   <isNotEqual property="searchTerm03" compareValue="06">
					   UNION ALL
					 </isNotEqual>
				   SELECT  /*+ no_merge  push_pred use_nl( OOS OOM PT P0070 ) index(PRRWT0700_IX07) */  OOM.ORDER_ID
						   , SUM(CASE WHEN PT.TRADE_FLAG = '1'       AND PT.BATCH_STATUS_CODE IN ('1','11')  THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE1
						   , SUM(CASE WHEN PT.TRADE_FLAG = '0'		 AND PT.BATCH_STATUS_CODE IN ('1','11')  THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE3
						   , SUM(CASE WHEN PT.TRADE_FLAG = '0'		 AND PT.BATCH_STATUS_CODE = '21' THEN NVL(PT.TOTAL_TRADE_PRICE,0) ELSE 0 END) PRICE4
					FROM OD_ORDER_MAST OOM
						, OD_ORDER_SETL OOS
						, PRRWT0700 P0070
						, PCSS_TRANS PT
				   WHERE 1=1
					   AND OOM.ORDER_ID = OOS.ORDER_ID
					   AND P0070.RECEVNO  = OOS.ORDER_ID || OOS.SETL_SEQ
					   AND P0070.RECEVNO  = PT.ACCEPT_NUM
					   AND P0070.CREDITCARDAPPRNO = PT.AGREE_NUM
					   AND PT.WORK_FLAG = 'BS'
					   AND PT.UNIT_FLAG = 'BA'
					   AND P0070.DEALSTUSCD ='S'
					   AND PT.REQ_CODE = '0000'
					   <include refid="conditionCmpnspCredit3"/>
					GROUP BY OOM.ORDER_DATE
						   , OOM.ORDER_ID
						   , OOM.ACCESS_NAME
						   , OOM.ORDRR_NM
						   , OOM.SETL_MEAN_CD
					  </isNotEqual>
					</isNotEqual>
				</isNotEqual>
				)
		)T1
	</select>

	<!-- 대사관리_휴대폰결제_합계 -->
	<select id="selectCmpnspMobileSummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT COUNT(*) AS TOTCNT
				  ,  SUM(NVL(PRICE_1,0))  AS SUM_APPR_AMOUNT
				  ,  SUM(PRICE_2)   AS SUM_CANCEL_AMOUNT
				  ,  SUM(NVL(PRICE_1,0)- NVL(PRICE_2,0))  AS SUM_TOTAL_AMOUNT
				  , NVL(SUM(PRICE_3),0) AS SUM_S2_AMOUNT
				  , NVL(SUM(T1.PRICE1), 0) AS SUM_PRICE1
				  , NVL(SUM(T1.PRICE3), 0) AS SUM_PRICE3
		 FROM(
			   SELECT		/*+ use_NL(SETL OOM) */  OOM.ORDER_ID
							, OOM.ORDER_DATE
							, MAX(OOM.ORDRR_NM) AS ORDRR_NM
							, MAX(NVL(OOM.ACCESS_NAME,'.')) AS ACCESS_NAME
							, MAX(OMP.APPTIME) AS AUTH_TIME
		   <![CDATA[		, SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OMP.APPTIME < '20161029' || '000000' AND OMP.STATUS ='D2'
                                            THEN DECODE(OMP.STATUS,'D2',OMP.AMOUNT,0)
                                       ELSE DECODE(OMP.STATUS,'D1',OMP.AMOUNT,'S1',OMP.AMOUNT,0) END) PRICE_1 ]]>
							, SUM(DECODE(OMP.STATUS,'D2',OMP.AMOUNT,0)) PRICE_2
							, SUM(DECODE(OMP.STATUS,'S2',OMP.AMOUNT,0)) PRICE_3
							, '' AS STATE
							, MAX(OOM.SETL_MEAN_CD) AS SETL_MEAN_CD
							, (SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', MAX(OOM.SETL_MEAN_CD)) FROM DUAL) AS SETL_MEAN_NM
							, TRUNC(MAX(OMP.AMOUNT)* 0.01)  AS PRICE1
							, TRUNC(MAX(OMP.AMOUNT)* 0.03)  AS PRICE3
				  FROM   OD_ORDER_MAST OOM
					   , OD_MOBILE_PAYMENT OMP
					   , OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OMP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND OMP.SETL_SEQ = SETL.SETL_SEQ
						  <include refid="conditionCmpnspMobile"/>
			 GROUP BY OOM.ORDER_ID
					, OOM.SETL_MEAN_CD
					, OOM.ORDER_DATE
		)T1
		WHERE 1=1
	</select>

	<!-- 대사관리_간편결제_합계 -->
	<select id="selectCmpnspEasySummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT COUNT(*) AS TOTCNT
				, SUM(NVL(PRICE_1,0))  AS SUM_APPR_AMOUNT
				, SUM(PRICE_2)   AS SUM_CANCEL_AMOUNT
				, SUM(NVL(PRICE_1,0)- NVL(PRICE_2,0))  AS SUM_TOTAL_AMOUNT
				, NVL(SUM(PRICE_3),0) AS SUM_S2_AMOUNT
				, NVL(SUM(T1.PRICE1), 0) AS SUM_PRICE1
				, NVL(SUM(T1.PRICE3), 0) AS SUM_PRICE3
		 FROM(
			   SELECT /*+ leading(OKP OOM SETL) use_nl(OOM SETL)*/
	<![CDATA[	      SUM(CASE WHEN OOM.SITE_DIV_CD ='01' AND  OKP.AUTHDATE < '20161029' || '000000' AND OKP.STATUS ='D2'
                                THEN NVL(DECODE(OKP.STATUS,'D2',OKP.AMT,0),0)
                               ELSE DECODE(OKP.STATUS,'D1',OKP.AMT,'S1',OKP.AMT,0) END) PRICE_1]]>
					, SUM(DECODE(OKP.STATUS,'D2',OKP.AMT,0)) PRICE_2
					, SUM(DECODE(OKP.STATUS,'S2',OKP.AMT,0)) PRICE_3
					, TRUNC(MAX(OKP.AMT)* 0.01) AS PRICE1
					, TRUNC(MAX(OKP.AMT)* 0.03) AS PRICE3
				  FROM  OD_ORDER_MAST OOM
						, OD_KAKAO_PAYMENT OKP
						, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OKP.ORDER_ID
						  AND SETL.ORDER_ID = OOM.ORDER_ID
						  AND SETL.SETL_SEQ = OKP.SETL_SEQ
						  <include refid="conditionCmpnspEasy"/>
			 GROUP BY OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
		)T1
		WHERE 1=1
	</select>

	<!-- 대사관리_OK캐쉬백_합계 -->
	<select id="selectCmpnspOkcashSummary" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT COUNT(*) AS TOTCNT
			  <isEqual property="searchListSe" compareValue="L1">
				, SUM((PRICE1 - (PRICE2 + PRICE3))) AS SUM_PRICE
				, NVL(TRUNC(SUM((PRICE1 - (PRICE2 + PRICE3)) * 0.01)),0) AS SUM_PRICE1
				, NVL(TRUNC(SUM((PRICE1 - (PRICE2 + PRICE3)) * 0.03)),0) AS SUM_PRICE3
				</isEqual>
				<isEqual property="searchListSe" compareValue="L2">
				, SUM(PRICE2) AS SUM_PRICE
				, TRUNC(SUM( PRICE2 * 0.01) ) AS SUM_PRICE1
				, TRUNC(SUM( PRICE2 * 0.03) ) AS SUM_PRICE3
				</isEqual>
				<isEqual property="searchListSe" compareValue="L3">
				, SUM((NVL(PRICE1,0) - NVL(PRICE2,0))) AS SUM_PRICE
				, TRUNC(SUM((NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.01) ) AS SUM_PRICE1
				, TRUNC(SUM((NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.03) ) AS SUM_PRICE3
				</isEqual>
				<isEqual property="searchListSe" compareValue="L4">
				, SUM((NVL(PRICE1,0) - NVL(PRICE2,0))) AS SUM_PRICE
				, TRUNC(SUM((NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.01) ) AS SUM_PRICE1
				, TRUNC(SUM((NVL(PRICE1,0) - NVL(PRICE2,0)) * 0.03) ) AS SUM_PRICE3
				</isEqual>
				<isEqual property="searchListSe" compareValue="L5">
				, SUM(PRICE3) AS SUM_PRICE
				, TRUNC(SUM( PRICE3 * 0.01) ) AS SUM_PRICE1
				, TRUNC(SUM( PRICE3 * 0.03) ) AS SUM_PRICE3
				</isEqual>
		 FROM(
			   SELECT /*+ use_NL(SETL OOM) */
		<![CDATA[	SUM(CASE WHEN  OOM.SITE_DIV_CD ='01' AND  OOP.APPTIME < '20161029' || '000000' AND OOP.STATUS ='D2'
                               THEN DECODE(OOP.STATUS,'D2', OOP.AMOUNT,0)
                            ELSE DECODE(OOP.STATUS,'D1', OOP.AMOUNT,'S1',OOP.AMOUNT,0) END) PRICE1 ]]>
					, SUM(DECODE(OOP.STATUS,'D2', OOP.AMOUNT,0)) PRICE2
					, SUM(DECODE(OOP.STATUS,'S2', OOP.AMOUNT,0)) PRICE3
				  FROM OD_ORDER_MAST OOM
							, OD_OKCASH_PAYMENT OOP
							, OD_ORDER_SETL SETL
						WHERE 1=1
						  AND OOM.ORDER_ID = OOP.ORDER_ID
						  AND OOM.ORDER_ID = SETL.ORDER_ID
						  AND SETL.SETL_SEQ = OOP.SETL_SEQ
						  <include refid="conditionCmpnspOkcash"/>
			 GROUP BY OOM.ORDER_ID
					, OOM.ORDER_DATE
					, OOM.SETL_MEAN_CD
		)T1
		WHERE 1=1
	</select>

	<!-- 즉시이체_정산확정처리 -->
	<update id="modifyBankTownPay" parameterClass ="java.util.HashMap" >

		UPDATE OD_BANKTOWN A
		SET   RESULT	 = 1
		WHERE EXISTS (

			SELECT /*+ ordered use_nl(OOM OB OOS) */ 1
			  FROM OD_BANKTOWN OB
			    INNER JOIN OD_ORDER_MAST OOM
			      ON OOM.ORDER_ID = OB.ORDER_ID
			     AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			     AND OOM.SETL_MEAN_CD IN ('05','06')
			    INNER JOIN  OD_ORDER_SETL OOS
			      ON OOM.ORDER_ID = OOS.ORDER_ID
			 WHERE 1=1
			   AND A.ORDER_ID = OOM.ORDER_ID
			   AND OOS.USE_YN = 'Y'
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND RESULT = 0
	</update>

	<!-- 즉시이체 정산확정정보갱신 -->
	<update id="modifyBankTownPayPmtState" parameterClass ="java.util.HashMap" >

		UPDATE OD_ORDER_SETL A
		   SET SETL_STUS_CD	= '2200',
			   RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
		 WHERE EXISTS (
			SELECT /*+ ordered use_nl(OOM OB OOS) */ 1
			  FROM OD_BANKTOWN OB
			   INNER JOIN OD_ORDER_MAST OOM
			    ON OOM.ORDER_ID = OB.ORDER_ID
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			   AND OOM.SETL_MEAN_CD IN ('05','06')
			   INNER JOIN OD_ORDER_SETL OOS
				ON OOM.ORDER_ID = OOS.ORDER_ID
			 WHERE 1=1
			   AND OOS.USE_YN = 'Y'
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND SETL_STUS_CD ='2100'
	</update>

	<!-- 휴대폰결제_정산확정처리 -->
	<update id="modifyDanalpay" parameterClass ="java.util.HashMap" >

		UPDATE OD_MOBILE_PAYMENT A
		SET   STATUS	 = 'S1'
			, BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE EXISTS (

			SELECT /*+ ordered use_nl(OMP OOM OOS) */ 1
			  FROM OD_MOBILE_PAYMENT OMP
			     , OD_ORDER_MAST OOM
				 , OD_ORDER_SETL OOS
			 WHERE OOM.ORDER_ID = OOS.ORDER_ID
			   AND OOM.ORDER_ID = OMP.ORDER_ID
			   AND OOM.SETL_MEAN_CD = '13'
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			   AND OOS.USE_YN = 'Y'
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND STATUS ='D1'
	</update>

	<!-- 휴대폰결제_정산확정정보갱신 -->
	<update id="modifyDanalpayPmtState" parameterClass ="java.util.HashMap" >

		UPDATE OD_ORDER_SETL A
		   SET SETL_STUS_CD	= '2200',
			   RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
		 WHERE EXISTS (

			SELECT  /*+ ordered use_nl(OMP OOM OOS) */ 1
			  FROM OD_MOBILE_PAYMENT OMP
			     , OD_ORDER_MAST OOM
				 , OD_ORDER_SETL OOS
			 WHERE OOM.ORDER_ID = OOS.ORDER_ID
		 	   AND OOM.ORDER_ID = OMP.ORDER_ID
			   AND OOM.SETL_MEAN_CD = '13'
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			   AND OOS.USE_YN = 'Y'
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND SETL_STUS_CD ='2100'

	</update>

	<!-- 간편결제_정산확정처리 -->
	<update id="modifyKakaopayRslt" parameterClass ="java.util.HashMap" >

		UPDATE OD_KAKAO_PAYMENT A
		SET   STATUS	 = 'S1'
			, BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE EXISTS (

			SELECT /*+ ordered use_nl(OKP OOM OOS) */ 1
			  FROM OD_KAKAO_PAYMENT OKP
			     , OD_ORDER_MAST OOM
				 , OD_ORDER_SETL OOS
			 WHERE OOM.ORDER_ID = OOS.ORDER_ID
			   AND OOM.ORDER_ID = OKP.ORDER_ID
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			   AND NVL(OOS.USE_YN, 'Y') = 'Y'
			   AND OOS.SETL_MEAN_CD IN ( '07','19','20','21','22','23','24','25','26','27','29')
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		 AND STATUS ='D1'

	</update>

	<!-- 간편결제_정산확정정보갱신 -->
	<update id="modifyKakaopayPmtState" parameterClass ="java.util.HashMap" >

		UPDATE OD_ORDER_SETL A
		   SET SETL_STUS_CD	= '2200'
		   	 , RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
		 WHERE EXISTS (

			SELECT /*+ ordered use_nl(OKP OOM OOS) */ 1
			  FROM OD_KAKAO_PAYMENT OKP
			     , OD_ORDER_MAST OOM
				 , OD_ORDER_SETL OOS
			 WHERE OOM.ORDER_ID = OOS.ORDER_ID
		 	   AND OOM.ORDER_ID = OKP.ORDER_ID
			   AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
			   AND NVL(OOS.USE_YN, 'Y') = 'Y'
			   AND OOS.SETL_MEAN_CD IN ( '07','19','20','21','22','23','24','25','26','27')
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND SETL_STUS_CD ='2100'

	</update>

	<!-- OK캐쉬백_정산확정처리 -->
	<update id="modifyOkCashBangRslt" parameterClass ="java.util.HashMap" >

	UPDATE OD_OKCASH_PAYMENT A
	   SET STATUS = 'S1'
	 WHERE 1=1
	   AND STATUS = 'D1'
	   AND EXISTS (
			 SELECT /*+ ordered use_nl(OKP OOM OOS) */ 1
			  FROM OD_OKCASH_PAYMENT OKP
			INNER JOIN OD_ORDER_MAST OOM
			   ON OOM.ORDER_ID = OKP.ORDER_ID
			  AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
			INNER JOIN OD_ORDER_SETL OOS
			   ON OOM.ORDER_ID = OOS.ORDER_ID
			 WHERE 1=1
			   AND OOS.USE_YN = 'Y'
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
			  )
	</update>

	<!-- OK캐쉬백_정산확정갱신 -->
	<update id="modifyOkCashBangPmtState" parameterClass ="java.util.HashMap" >

		UPDATE OD_ORDER_SETL A
		   SET SETL_STUS_CD	= '2200'
			 , RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
		 WHERE EXISTS (
			 SELECT /*+ ordered use_nl(OKP OOM OOS) */ 1
			  FROM OD_OKCASH_PAYMENT OKP
			INNER JOIN OD_ORDER_MAST OOM
			   ON OOM.ORDER_ID = OKP.ORDER_ID
			  AND OOM.APPR_DATE BETWEEN TO_DATE(#searchFromDt#, 'YYYYMMDD') AND TO_DATE(#searchToDt#, 'YYYYMMDD') + .99999
			INNER JOIN OD_ORDER_SETL OOS
			   ON OOM.ORDER_ID = OOS.ORDER_ID
			 WHERE 1=1
			   AND OOS.USE_YN = 'Y'
			   AND A.ORDER_ID = OOM.ORDER_ID
			   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						OOM.SITE_DIV_CD = '05'
			  </isEqual>
			  <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			  <![CDATA[ OOM.SITE_DIV_CD IN ('01','02','03','06')]]>
			  </isNotEqual>
		)
		AND SETL_STUS_CD ='2100'
		AND SETL_MEAN_CD = '19'
	</update>

	<!-- 카드 정산확정 -->
	<update id="modifyCreditEdiPmtPenUpdate" parameterClass="java.util.HashMap">

		UPDATE	OD_ORDER_SETL SETL
		SET		SETL_STUS_CD = '2200',
				RECEIVE_DATE = TO_CHAR( SYSDATE, 'YYYYMMDDHH24MI' )
		WHERE	EXISTS (
				   SELECT
						/*+ ordered use_nl(A C) */  1
				   FROM OD_CREDIT_CARD_SETL_INFO C
				INNER JOIN OD_ORDER_MAST A
				   ON A.ORDER_ID = C.ORDER_ID
				  AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
				  AND A.SETL_MEAN_CD in ('02','03','08','16') /*창구 카드건 제외*/
				 WHERE 1=1
				   AND SETL.ORDER_ID = A.ORDER_ID
				   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						A.SITE_DIV_CD = '05'
				   </isEqual>
				   <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				   <![CDATA[ A.SITE_DIV_CD IN ('01','02','03','06')]]>
				   </isNotEqual>
		)
		AND SETL_STUS_CD ='2100'
	</update>

	<update id="modifyCreditPRRWT0700PoolUpdate" parameterClass="java.util.HashMap">

		UPDATE	PRRWT0700 B1
		SET		B1.BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD'),
				B1.CLOSEDIVCD = '11'
		WHERE	B1.RECEVNO IN (
				 SELECT /*+ ordered use_nl(A3 A2 A4) */ DISTINCT (A2.ORDER_ID || A2.SETL_SEQ) AS PURCHASE_ID_SEQ
				 FROM  OD_ORDER_MAST A3
				INNER JOIN OD_ORDER_SETL A2
				   ON A2.ORDER_ID = A3.ORDER_ID
				  AND A3.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
				  AND A2.SETL_MEAN_CD in ('04','17')
				  AND A2.USE_YN = 'Y'
				 INNER JOIN OD_ORDER_ITM A4
				   ON A3.ORDER_ID = A4.ORDER_ID
				 WHERE 1=1
				 AND NOT (A4.ORDER_STUS_CD != 'O06' AND A4.GOODS_CANCEL_YN = 'Y' AND A4.RETRNGD_YN = 'Y')
				)
		AND		B1.SETLSYSCD = 'BS' AND B1.BIZDIVCD = 'BA'
<![CDATA[ AND		B1.CLOSEDIVCD ='1' and B1.CARDDEALDIVCD <> '0' and B1.DEALSTUSCD = 'S' ]]>
		AND		NOT EXISTS (
					   SELECT 'X'
					   FROM  PCSS_TRANS OP
					   WHERE 1=1
					   AND   OP.ORG_AGREE_NUM = B1.CREDITCARDAPPRNO
					   AND   OP.accept_num = B1.RECEVNO
					   AND   OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'
					   AND   OP.REQ_CODE = '0000'
					   AND   OP.TRADE_FLAG IN('0', '2')
					 )

	</update>
	<update id="modifyCreditEdiKiccPenUpdate" parameterClass="java.util.HashMap">

		UPDATE	OD_CREDIT_CARD_SETL_INFO CARD
		SET		REPLY_CODE = '0000',
				SCREEN_MSG = '0000',
				STATUS	 = 'S1',
				BUYCOMPREQYMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
		WHERE EXISTS (
				 SELECT
						/*+ ordered use_nl(A C) */  1
				   FROM OD_CREDIT_CARD_SETL_INFO C
				INNER JOIN OD_ORDER_MAST A
				   ON A.ORDER_ID = C.ORDER_ID
				  AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
				  AND A.SETL_MEAN_CD in ('02','03','08','16') /*창구 카드건 제외*/
				 WHERE 1=1
				   AND CARD.ORDER_ID = A.ORDER_ID
				   <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
						A.SITE_DIV_CD = '05'
				   </isEqual>
				   <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
				   <![CDATA[ A.SITE_DIV_CD IN ('01','02','03','06')]]>
				   </isNotEqual>
			)
		AND STATUS ='D1'

	</update>
	<update id="modifyCreditPCSS_TRANSPoolUpdate" parameterClass="java.util.HashMap">

		UPDATE	PCSS_TRANS B1
		SET		B1.BATCH_STATUS_CODE = '11',
				B1.BATCH_START_DATE = SYSDATE
		WHERE	B1.ACCEPT_NUM in (
				 SELECT /*+ ordered use_nl(A3 A2 A4) */ DISTINCT (A2.ORDER_ID || A2.SETL_SEQ) AS PURCHASE_ID_SEQ
				 FROM  OD_ORDER_MAST A3
				INNER JOIN OD_ORDER_SETL A2
				   ON A2.ORDER_ID = A3.ORDER_ID
				  AND A3.APPR_DATE BETWEEN TO_DATE(#searchFromDt# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
				  AND A2.SETL_MEAN_CD in ('04','17')
				  AND A2.USE_YN = 'Y'
				 INNER JOIN OD_ORDER_ITM A4
				   ON A3.ORDER_ID = A4.ORDER_ID
				 WHERE 1=1
				 AND NOT (A4.ORDER_STUS_CD != 'O06' AND A4.GOODS_CANCEL_YN = 'Y' AND A4.RETRNGD_YN = 'Y')
				)
		AND		B1.WORK_FLAG = 'BS'  AND B1.UNIT_FLAG = 'BA'
		AND		B1.REQ_CODE = '0000' AND B1.MSG_CODE = 'D1'
		AND		B1.BATCH_STATUS_CODE ='1'
		AND		NOT EXISTS (
						SELECT 'X'
						FROM PCSS_TRANS OP
						WHERE 1=1
						AND OP.ORG_AGREE_NUM = B1.AGREE_NUM
						AND OP.ACCEPT_NUM = B1.ACCEPT_NUM
						AND B1.TRADE_DATE BETWEEN TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE('20'||SUBSTR(NVL(OP.ORG_TRADE_DATE, '000101'), 1, 6)||'235959', 'YYYYMMDDHH24MISS')
						AND OP.WORK_FLAG = 'BS' AND OP.UNIT_FLAG = 'BA'
						AND OP.REQ_CODE = '0000'
						AND OP.TRADE_FLAG IN('0', '2')
					 )
		<!-- 		OD_ORDER_SETL, OD_ORDER_ITM seq 조인제거 -->
	</update>
	<select id="checkRefundOrder" 	parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		    SELECT SUM(DECODE(RET, 'RET',NVL(CNT,0),0)) RETCNT ,SUM(DECODE(RET, 'EX_PRICE',NVL(CNT,0),0)) EX_PRICECNT FROM
		(
		   SELECT /*+ ordered use_nl(C B A) */ 'RET' RET ,NVL(COUNT(*),0) CNT
		   FROM  OD_ORDER_MAST C
		    INNER JOIN OD_RET_INTERFACE B
		   ON C.ORDER_ID = B.ORDER_ID
		  AND C.APPR_DATE BETWEEN TO_DATE(#searchFromDt#|| '000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt# || '235959','YYYYMMDDHH24MISS')
		   INNER JOIN OD_ORDER_ITM A
		   ON B.ORDER_ITM_ID = A.ORDER_ITM_ID
		 WHERE A.GOODS_CANCEL_YN ='N' AND B.RETRNGD_REFUND_METH_CD = '05'
           AND B.CLAIM_DIV_CD = '001'
           AND B.TREAT_STUS_CD IN ('002','003')      /* CM_COMN_CD : RETRNGD_STUS_CD 002 반품확인,  003 반품처리완료 */
           <isEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
					C.SITE_DIV_CD = '05'
		   </isEqual>
		   <isNotEqual property="siteDivCd" compareValue="DB2B" prepend="AND">
			     <![CDATA[ C.SITE_DIV_CD IN ('01','02','03','06')]]>
			</isNotEqual>
		  )
	</select>
	<select id="selectKiccEasyPayNotiCnt"   parameterClass="java.util.HashMap" resultClass="int">
	 SELECT /*+ index( a IX_KICC_CREDIT_ORIGIN_02)*/ count(*) cnt
        from OD_KICC_CREDIT_ORIGIN  a
        where a.APPROVAL_NO = #auth_no#
          and a.BIGO3 = #cno#
	</select>
	<insert id="registerKiccEasyPayNoti" parameterClass="java.util.HashMap">
				INSERT INTO  OD_KICC_CREDIT_ORIGIN (
				        TERMINAL_ID,
				        SEQUENCE_NO,
				        ORDER_DATE,
				        APPROVAL_NO,
				        BIGO3,
				        TOTAL_AMOUNT,
				        APPROVAL_TIME,
				        SETL_SEQ
				    )
				    VALUES (
				        '99999900',
				        '99999901',
				        to_char(sysdate,'yyyymmddhh24miss'),
				        #auth_no#,
				        #cno#,
				        #amount#,
				        #tran_date#,
				        1
				    )
	</insert>
	<sql id="selectGiftOrderRecv">
		SELECT CODE
		     , ORDER_ID
		     , ORDER_ITM_ID
		     , MESSAGE
		     , TO_DATE(SEND_DATE, 'YYYY-MM-DD') SEND_DATE
		     , TO_DATE(FAIL_DATE, 'YYYY-MM-DD') FAIL_DATE
		     , DECODE(SEND_TYPE, 'CAA02', '주문의 발송', 'CAA06', '재발송의 발송', '수신자 변경 재발송') SEND_TYPE
		  FROM OD_GIFT_ORDER_RECEV
		 WHERE TR_ID LIKE 'FAIL%'
		 <isNotEmpty property="search_strt_ymd">
		 	<isNotEmpty property="search_end_ymd">
		 AND FAIL_DATE BETWEEN TO_DATE(#search_strt_ymd# || '000000','YYYYMMDDHH24MISS') AND TO_DATE(#search_end_ymd# || '235959','YYYYMMDDHH24MISS')
			</isNotEmpty>
		 </isNotEmpty>
		ORDER BY FAIL_DATE DESC, TR_ID DESC
	</sql>
	<select id="selectGiftOrderRecvListCnt" parameterClass="java.util.HashMap" resultClass="int">
	SELECT COUNT(*) AS TOTCNT
		 FROM
		 (
		 	<include refid="selectGiftOrderRecv" />
		 )
	</select>
	<select id="selectGiftOrderRecvList"  parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
			<include refid="selectGiftOrderRecv" />
		<include refid="pagingFooter"/>

	</select>


	<select id="selectCallcenterOrderDeliveryListInfoList" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
	/* OrderMgr_SQL.xml : selectCallcenterOrderDeliveryListInfoList */
	SELECT NVL((SELECT COMN_CD_ID FROM CM_COMN_CD WHERE CD_GRP_ID ='CLAIM_DIV_CD' AND COMN_CD_ID =(SELECT MAX(CLAIM_DIV_CD) FROM OD_RET_INTERFACE AA WHERE AA.ORDER_ITM_ID = OOI.ORDER_ITM_ID)),'-') AS CLAIM_DIV_ID
              ,NVL((SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID ='CLAIM_DIV_CD' AND COMN_CD_ID =(SELECT MAX(CLAIM_DIV_CD) FROM OD_RET_INTERFACE AA WHERE AA.ORDER_ITM_ID = OOI.ORDER_ITM_ID)),'-') AS CLAIM_DIV_NM
              ,(SELECT F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) FROM DUAL) PAVLN_NM			/* 전시관 */
			  ,OOI.GOODS_CD																					/* 상품번호 */
			  ,OOI.GOODS_NM																	/* 상품명 */
			  ,F_GET_COMN_CD_NM('ORDER_STUS_CD', OOI.ORDER_STUS_CD) AS ORDER_STUS_NM		/* 주문상태 */
			  ,OOI.ORDER_CONF_DATE															/* 통보일시(등기번호 생성) */
			  ,OOI.ORDER_STUS_CD																		/* 주문상태 상세 코드 */
			  ,TO_CHAR(NVL(OOI.REQ_CNT,0), 'FM999,999,999,999') REQ_CNT											/* 주문수량 */
			  ,TO_CHAR(GGM.CNSMR_PRC, 'FM999,999,999,999') CNSMR_PRC												/* 상품가격 */
			  ,TO_CHAR(NVL(OOI.STD_SELL_PRC,0), 'FM999,999,999,999') STD_SELL_PRC							/* 판매가 */
			  ,TO_CHAR(NVL(OOI.OPTN_GOODS_APPLY_PRC,0), 'FM999,999,999,999') OPTN_GOODS_APPLY_PRC			/* 옵션가 */
			  ,TO_CHAR(NVL(OOI.DC_APPLY_PRC,0)+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)+NVL(OOI.SEND_PRC,0), 'FM999,999,999,999') DC_APPLY_PRC	/* 주문금액 */
			  ,TO_CHAR(NVL(OOI.CPN_DC_AMT,0) + NVL(OOI.PNT_USE_AMT,0) + NVL(OOI.PO_PNT_USE_AMT,0) + NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) + NVL(OOI.OKCASH_USE_AMT, 0), 'FM999,999,999,999') AS DC_PRC	/* 할인금액 */
			  ,NVL(OOI.CPN_DC_AMT,0)	  AS CPN_DC_AMT														/* 쿠폰할인금액*/
			  ,NVL(OOI.PO_PNT_USE_AMT,0)  AS PO_PNT_USE_AMT												/* 우체국포인트사용금액*/
			  ,NVL(OOI.PNT_USE_AMT,0)	 AS PNT_USE_AMT												/* 마일리지사용금액*/
			  ,NVL(OOI.PREMI_CUST_PNT_SETL_AMT,0) AS PREMI_CUST_PNT_SETL_AMT								/* 우수고객포인트사용금액*/
			  ,NVL(OOI.OKCASH_USE_AMT,0)			AS OKCASH_USE_AMT										/* OKCASHBACK 사용금액*/
			  ,TO_CHAR(NVL(OOF.FEE_AMT, 0), 'FM999,999,999,999') AS FEE										/* 서비스이용료 */
			  ,NVL(OOF.SETL_FEE_RATE, 0) AS FEE_RATE													/* 서비스이용료율 */
			  ,F_GET_COMN_CD_NM('ORGPLCE_DIV_CD', GGM.ORGPLCE_DIV_CD) ORGPLCE_DIV_NM					/* 원산지 */
			  ,F_GET_GOODS_CRTFC_NM(GGM.GOODS_CD)  AS GOODS_CRTFCT										/* 인증정보 목록 */
			  ,GGM.TRDACL_GOODS_YN TRDACL_GOODS_YN														/* 전통주 여부 */
			  ,TO_CHAR(NVL(GGM.TRDACL_CNT,0), 'FM999,999,999,999') TRDACL_CNT								/* 전통주 개수 */
			  ,F_GET_COMN_CD_NM('BUYER_AGELIMIT_CD', GGM.BUYER_AGELIMIT_CD) BUYER_AGELIMIT_NM			/* 구매가능 연령기준 */
			  ,NVL(OOI.REPRSNT_REGI_NO,OOI.REGI_NO) REGI_NO										/* 등기번호 */
			  ,OOI.RECPTER_ZIPCD															/* 배송주소 - 우편번호 */
			  ,OOI.RECPTER_ADDR1															/* 배송주소 - 상세1 */
			  ,OOI.RECPTER_ADDR2															/* 배송주소 - 상세2 */
			  ,OOI.RECPTER_ADDR3															/* 배송주소 - 상세3 */
			  ,OOI.SENDER_NM																	/* 보내는분 */
			  ,OOI.SENDER_ZIPCD																/* 발송주소 - 우편번호 */
			  ,OOI.SENDER_ADDR1																/* 발송주소 - 상세1 */
			  ,OOI.SENDER_ADDR2																/* 발송주소 - 상세2 */
			  ,OOI.SENDER_ADDR3																/* 발송주소 - 상세3 */
			  ,NVL2(OOI.SENDER_TELNO,F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.SENDER_TELNO,'-'),'L'),'') SENDER_TELNO /* 보내는분 연락처1 */
			  ,NVL2(OOI.SENDER_HTELNO,F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.SENDER_HTELNO,'-'),'L'),'') SENDER_HTELNO /* 보내는분 연락처2 */
			  ,OOI.RECPTER_NM																/* 수취인명 */
			  ,NVL2(OOI.RECPTER_TELNO,F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.RECPTER_TELNO,'-'),'L'),'') RECPTER_TELNO /* 받으시는분 연락처1 */
			  ,NVL2(OOI.RECPTER_HTELNO,F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'F')||'-'||F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'M')||'-' ||F_DIV_TELNO(replace(OOI.RECPTER_HTELNO,'-'),'L'),'') RECPTER_HTELNO /* 받으시는분 연락처2 */
			  ,DECODE(NVL(OOI.SEND_PRC, 0), 0, '무료', TO_CHAR(NVL(OOI.SEND_PRC, 0), 'FM999,999,999,999')) SEND_PRC	/* 배송비 */
			  ,OOI.SMS_RECV_YN																/* SMS */
			  ,F_GET_COMN_CD_NM('SEND_TYP_CD', OOI.SEND_TYP_CD) AS SEND_TYP_NM							/* 배송타입코드 */
			  ,'' AS SEND_PERIOD_NM				/* 발송주기 */
			  ,TO_CHAR(OOI.SEND_STRT_DATE, 'YYYY/MM/DD') AS SEND_STRT_YMD								/* 발송 시작일 */
			  ,TO_CHAR(OOI.SEND_DONE_DATE, 'YYYY/MM/DD') AS SEND_END_YMD								/* 발송 종료일 */
			  ,NVL(TO_CHAR(OOI.WISH_SEND_DATE, 'YYYY/MM/DD HH24:MI:SS'),'-') AS WISH_SEND_DATE					/* 희망배송일시 */
			  ,TO_CHAR(OOI.SEND_CONF_DATE, 'YYYY/MM/DD') AS FIX_RESRV_SEND_YMD							/* 실배송일시 */
			  ,TO_CHAR((SELECT COUNT(0)
						  FROM OD_ORDER_ITM x
						 WHERE x.ORDER_ID = OOM.ORDER_ID
						   AND x.GOODS_CD = OOI.GOODS_CD), 'FM999,999,999,999') ORDER_CNT							/* 배송총건수 */
			  ,OOI.OVSEA_SEND_GOODS_YN												/* 해외배송여부 */
			  ,OOI.AIR_SEND_YN																/* 항공 배송 여부 */
			  ,F_GET_COMN_CD_NM('SEND_AREA_CD', OOI.SEND_AREA_CD) SEND_AREA_NM							/* 배송지역코드 */
			  ,OOI.SEND_MSG																	/* 배송시 요청사항 */
			  ,OOI.SUPP_COMP_NM															/* 공급업체명 */
			  ,NVL2(CSCM.TELNO,F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.TELNO,'-'),'L'),'') TELNO /* 공급업체 전화번호 */
			  ,NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.FAXNO,'-'),'L'),'') FAXNO /* 공급업체 팩스번호 */
			  ,NVL2(CSCM.FAXNO,F_DIV_TELNO(REPLACE(CSCM.CHRGER_MOBILE,'-'),'F')||'-'||F_DIV_TELNO(REPLACE(CSCM.CHRGER_MOBILE,'-'),'M')||'-' ||F_DIV_TELNO(REPLACE(CSCM.CHRGER_MOBILE,'-'),'L'),'') DHTELNO /* 공급업체 담당자 휴대번호 */
			  ,OOI.SUPP_PO_NM																/* 공급우체국명 */
			  , NVL(PI.POFNO,'') ||'-'|| NVL(PI.POMNO,'') ||'-'|| NVL(PI.POLNO,'')  POTELNO                                /* 공급우체국 전화번호 */
              , NVL(PI.BIZFAXFNO,'') ||'-'|| NVL(PI.BIZFAXMNO,'') ||'-'|| NVL(PI.BIZFAXLNO,'') POFAXNO                    /* 공급우체국 팩스번호 */
			  ,OOI.REPRSNT_REGI_NO														/* 대표등기번호 */
			  ,OOI.REGI_NO_CREATE_DIV_CD											/* 등기 번호 생성 구분 코드 */
			  ,OOI.PAVLN_DIV_CD															/* 전시관 분류 코드 */
			  ,OOI.ORDER_ITM_ID															/* 주문아이템 아이디 */
			  ,OOM.ORDER_ID																					/* 주문 아이디 */
			  ,OOI.SUPPO_RGIST_POCD
			  ,TO_CHAR(OOM.ORDER_DATE, 'YYYY/MM/DD HH24:MI:SS') AS ORDER_DATE							/* 주문일시 */
			  ,OOM.ACCESS_NAME																/* 구매자 ID */
			  ,OOM.ORDRR_NM																	/* 구매자 성명 */
			  ,OOM.ORDRR_HTELNO															/* 구매자 휴대폰 */
			  ,OOM.SETL_MEAN_CD															/* 결제수단코드 */
			  ,CASE WHEN OOI.ORDER_STUS_CD IN ('O01','O02','O03','O04','D01','D02') THEN 'N'
					WHEN OOI.ORDER_STUS_CD IN ('D03','D04') THEN 'Y'
				END AS SEND_COMPLETE_YN																		/* 배송완료여부 */
			  ,DECODE(OOI.BALTSHT_PRT_MBY_CD,'03','Y','N') REGI_NO_CHANGE_ABLE_YN                                              /* 송장수정 가능 여부 */
			  ,OOI.SEND_SEQ
			  ,(SELECT TO_CHAR(NVL(OOI.REQ_CNT-NVL(COUNT(DISTINCT(ORI.ORDER_ITM_ID)), 0), 0), 'FM999,999,999,999')
				  FROM OD_RET_INTERFACE ORI
				 WHERE ORI.ORDER_ITM_ID = OOI.ORDER_ITM_ID
				   AND CLAIM_DIV_CD IN ('001', '002') ) LAST_REQ_CNT											/* 잔여수량	*/
			  ,NVL(OOI.EXTRA_GOODS_YN,'N')		AS  EXTRA_GOODS_YN						 /*덤상품여부*/
			  ,NVL(OOI.GOODS_CANCEL_YN, 'N')	  AS  CANCEL_STATE						  /*상품취소여부*/
			  , ''								AS  CHECK_YN							  /*체크여부*/
			  , TO_CHAR(OOM.APPR_DATE, 'YYYYMMDD')  AS  APPR_DATE						   /*승인일자*/
			  ,(SELECT SEND_MSG_CONT
				  FROM OD_SEND_MSG OSM
				 WHERE OSM.ORDER_ITM_ID	= OOI.ORDER_ITM_ID AND ROWNUM = 1) SEND_MSG_CONT									/* 경조메세지 */
              ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = OOI.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG_SE /* 카드 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = OOI.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '001' AND ROWNUM = 1) CARD_MSG /* 카드 메세지 */
			  ,(SELECT F_GET_COMN_CD_NM('SEND_MSG_DIV_CD',SEND_MSG_DIV_CD) FROM OD_SEND_MSG WHERE ORDER_ITM_ID = OOI.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG_SE /* 리본 메세지 구분 */
			  ,(SELECT SEND_MSG_CONT FROM OD_SEND_MSG WHERE ORDER_ITM_ID = OOI.ORDER_ITM_ID AND SEND_MSG_DLIV_FOM = '002' AND ROWNUM = 1) RIBBON_MSG /* 리본 메세지 */
			  ,(select TO_CHAR(max(ORDER_ITM_CHG_DATE), 'YYYY-MM-DD HH24:MI:SS') CHG_DATE from OD_ORDER_ITM_HISTOR where  order_itm_id = ooi.order_itm_id) as CHG_DATE /*주문변경일*/
              ,(select name from meminfo where ACCESS_NAME = (select max(CHGER_ID) from OD_ORDER_ITM_HISTOR where  order_itm_id = ooi.order_itm_id)) as CHGER_NM /*주문변경자명*/
              ,(select max(CHGER_ID) from OD_ORDER_ITM_HISTOR where  order_itm_id = ooi.order_itm_id) as CHGER_ID /*주문변경자*/
              ,(select F_GET_COMN_CD_NM('ORDER_HISTOR_CHG_CD',max(ORDER_HISTOR_CHG_CD)) UPDATE_ITEM from OD_ORDER_ITM_HISTOR where  order_itm_id = ooi.order_itm_id) as UPDATE_ITEM /*주문변경항목*/
              ,(select max(UPDATE_CONT) from OD_ORDER_ITM_HISTOR where  order_itm_id = ooi.order_itm_id) as UPDATE_CONT /*주문변경내용*/
              ,OOI.GOODS_CANCEL_DATE /*상품 취소일시*/
              ,OOI.CANCEL_REQ_CONT  /*취소응답내용*/
              ,OOI.CANCEL_REQ_REASN_CD  /*취소응답사유*/
              ,OOI.OPTN_ESSN_CHOICE_YN															/* 옵션필수선택여부 */
			  ,OOI.OPTN_NM1																					/* 옵션명1 */
			  ,OOI.OPTN_NM2																					/* 옵션명2 */
			  ,OOI.OPTN_CNT1																				/* 옵션수량1 */
			  ,OOI.OPTN_CNT2																				/* 옵션수량2 */
			  ,OOI.GIFT_ORDER_YN
		  FROM OD_ORDER_MAST OOM, OD_ORDER_ITM OOI, OD_ORDER_FEE OOF, GD_GOODS_MAST GGM, CO_SUPP_COMP_MAST CSCM
		 	   ,(select POCHGSEQ,PONM ,regiPoCd, POFNO, POMNO, POLNO, BIZFAXFNO, BIZFAXMNO, BIZFAXLNO
                from PICMT0060 ) PI
		 WHERE OOM.ORDER_ID = OOI.ORDER_ID
		   AND OOI.ORDER_ITM_ID = OOF.ORDER_ITM_ID(+)
		   AND OOI.GOODS_CD = GGM.GOODS_CD
		   AND CSCM.SUPP_COMP_ID = OOI.SUPP_COMP_ID
		   AND NVL(OOI.PRSNT_YN,'N') = 'N'
		   --AND NVL(OOI.EXTRA_GOODS_YN,'N') = 'N'
		   AND PI.regiPoCd LIKE cscm.SUPPO_RGIST_POCD ||'%' and PI.POCHGSEQ = (select max(A.POCHGSEQ) from PICMT0060 A where A.regiPoCd LIKE cscm.SUPPO_RGIST_POCD||'%' )
		   AND OOM.ORDER_ID = #orderId#
	</select>

	<!-- (콜센터용)주문 상세 팝업 - 주문 결제 정보 -->
	<select id="selectOrderSetlInfoCallenter" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
			/* OrderMgr_SQL.xml : selectOrderSetlInfoCallenter */
			SELECT
			 TO_CHAR((NVL(OM.PNT_USE_AMT, 0) + NVL(OM.PNT_REFUND_SETL_AMT, 0)), 'FM999,999,999,999')  AS TOTDELIV_CERTFEE -- 포인트
			 ,TO_CHAR((NVL(OM.PREMI_CUST_PNT_SETL_AMT, 0) + NVL(OM.PREMI_CUST_PNT_REFUND_APRV_AMT, 0)),'FM999,999,999,999') AS TOTCONG_CARDFEE -- 우수고객포인트
			 ,TO_CHAR(NVL(OM.TOT_CPN_DC_AMT , 0) , 'FM999,999,999,999') AS TOT_MONEYAMT -- 할인쿠폰 사용액
			 ,NVL(DECODE(OM.OKCASH_APPLY_DIV_CD, '01', OM.OKCASH_ACCML_AMT, '02', OM.OKCASH_USE_AMT), 0) AS TOTOK_CASHAMT -- OK캐쉬백 01이면 적립액, 02이면 사용액
			 ,TO_CHAR(NVL(OS.SETL_APPR_AMT, 0), 'FM999,999,999,999') AS TOT_SETLAMT -- 결제금액
			 ,(SELECT F_GET_COMN_CD_NM('SETL_MEAN_CD', OM.SETL_MEAN_CD) FROM DUAL) AS SETL_TYPENM -- 결제수단코드명
			 ,TO_DATE(MAX(OEP.SETTLE_DATE),'YYYY/MM/DD HH24:MI:SS') SETTLE_DATE		--  환불일자
			FROM od_order_mast OM, OD_ORDER_ITM OI, OD_ORDER_SETL OS, OD_ONLINE_EX_PRICE OEP
			WHERE OM.order_id = OI.order_id
			AND OM.ORDER_ID = OS.ORDER_ID
			AND OM.ORDER_ID = OEP.ORDER_ID(+)
			AND OS.CANCEL_YN = 'N'
			AND OM.order_id = #orderId#
			 GROUP BY OM.PNT_USE_AMT,OM.PNT_REFUND_SETL_AMT,OM.PREMI_CUST_PNT_SETL_AMT,OM.PREMI_CUST_PNT_REFUND_APRV_AMT
            ,OM.TOT_CPN_DC_AMT,OM.OKCASH_APPLY_DIV_CD,OM.OKCASH_ACCML_AMT,OM.OKCASH_USE_AMT,OS.SETL_APPR_AMT,OM.SETL_MEAN_CD
	</select>

	<!-- (콜센터용)환불계좌정보 -->
	<select id="selectRecvAccountInfoCallcenter" parameterClass ="com.devwork.common.util.CommandMap" resultClass="commMap">
		/* OrderMgr_SQL.xml : selectRecvAccountInfoCallcenter */
		SELECT  FINANCE_NAME as REFUND_BANKNM --환불은행명
       			,ACCOUNT_SEED_NO as SEED_REFUND_ACC_NO --계좌번호(암호화)
       			,DEPOSITOR as DPSTRNM --예금주
       			,TO_DATE(SETTLE_DATE,'YYYY/MM/DD HH24:MI:SS') as SETTLE_DATE --환불일자
		FROM od_online_ex_price ret WHERE order_id = #orderId#
	</select>

</sqlMap>
