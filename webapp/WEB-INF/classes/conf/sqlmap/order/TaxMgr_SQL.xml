<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BO.Tax">
	<typeAlias  alias="commMap" type="com.devwork.common.map.CommonMap"/>

	<!-- 페이징 Header -->
	<sql id="pagingHeader">
		<![CDATA[
		SELECT * 
		  FROM (
				SELECT RE.*
				     , ROWNUM  AS RNUM
				  FROM (
		]]>	  
	</sql>
	
	<!-- 페이징 Footer -->
	<sql id="pagingFooter">
		<![CDATA[
                       ) RE	WHERE ROWNUM <= #lastIndex#
		       ) WHERE RNUM >= #firstIndex#
		]]>
	</sql>
	
	<!-- 주문관리/세금계산서 관리 수수료세금계산서 검색조건 -->
	<sql id="taxMgrListQry1Condition">
										<isNotEmpty property="searchFromDt">
											<isNotEmpty property="searchToDt">
											AND OIT.DAYS BETWEEN #searchFromDt# AND #searchToDt# 
											</isNotEmpty>
										</isNotEmpty>
										<!-- 정산구분 -->
						           		<isEqual property="jobidType1" compareValue="01">
						           			<!-- 매장구분에 따른 분기 -->
						           			<isEmpty property="jobidType2">
						           			AND OIT.JOBID IN ('01','02','03','04','05','06','07') 
						           			</isEmpty>
						           			<isNotEmpty property="jobidType2">
						           			AND OIT.JOBID = DECODE(#jobidType2#, '11', '01', '12', '02', '13', '03', '14', '04', '15', '05', '16', '06', '17', '07')
						           			</isNotEmpty>
						 				</isEqual>
						 				
						           		<isEqual property="jobidType1" compareValue="02">
						           			<!-- 매장구분에 따른 분기 -->
						           			<isEmpty property="jobidType2">
						           			AND OIT.JOBID IN ('11','12','13','14','15','16','17')
						           			</isEmpty>
						           			<isNotEmpty property="jobidType2">
						           			AND OIT.JOBID = #jobidType2#
						           			</isNotEmpty>						           		
						 				</isEqual>
						 				<!-- 정산구분 -->
						 				
						 				<!-- 매장구분 -->
										<isEmpty property="jobidType1">
											<!-- 매장구분에 따른 분기 -->
						           			<isNotEmpty property="jobidType2">										
											AND OIT.JOBID IN( 
															DECODE(#jobidType2#, '11', '01', '12', '02', '13', '03', '14', '04', '15', '05', '16', '06', '17', '07')
															 , #jobidType2#
															 )
											</isNotEmpty>
										</isEmpty>						 				
										
										<!-- 검색구분 -->
										<isNotEmpty property="search_text_fee">
											<!-- 사업자등록번호 -->
											<isEqual property="search_type_fee" compareValue="01">
												AND REPLACE(B.COMPREG_NO, '-', '') = #search_text_fee#	 
											</isEqual>				
											<!-- 사업자등록번호 end -->
											<!-- 업체명 -->
											<isEqual property="search_type_fee" compareValue="02">
												AND B.BCNC_NM LIKE '%'||#search_text_fee#||'%'											
											</isEqual>
											<!-- 업체코드 -->
											<isEqual property="search_type_fee" compareValue="03">
												AND OIT.BIZ_CODE = #search_text_fee#
											</isEqual>
										</isNotEmpty>										
										
										
										<!-- 업체코드 -->
										<isNotEmpty property="searchSuppCompId">
											AND OIT.BIZ_CODE = #searchSuppCompId#
										</isNotEmpty>	
										
										<!-- 패션B2B 제외 -->
										<isNotEmpty property="b2bNot">
											AND OIT.JOBID NOT IN ('07')
										</isNotEmpty>										

	</sql>	
	<!-- 주문관리/세금계산서 관리 수수료세금계산서 검색조건 END -->	
	
	<!-- 주문관리/세금계산서 관리 위수탁세금계산서 검색조건 -->
	<sql id="taxMgrListQry2Condition">
				<!-- 주문구분 -->
           		<isEqual property="searchOrderDiv" compareValue="01">
					AND C.ONOFFLINE = '1'
 				</isEqual>
           		<isEqual property="searchOrderDiv" compareValue="04">
					AND C.ONOFFLINE = '2'
 				</isEqual>		 							
				<!-- 주문구분 end -->
				<!-- 상태 -->
			   <isNotEmpty property="procflag">
						AND X.PROCFLAG = #procflag#
			   </isNotEmpty>				
				<!--  기간 검색 -->
			   <isNotEmpty property="searchFromDt">
			   		<isEqual property="search_ymd_type" compareValue="com_date">
						AND X.ITEMDATE1 BETWEEN #searchFromDt# AND #searchToDt#
	 				</isEqual>
					<isEqual property="search_ymd_type" compareValue="req_date">
						AND C.REG_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
	 				</isEqual>
					<isEqual property="search_ymd_type" compareValue="send_date">
						AND X.SEND_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYY-MM-DDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYY-MM-DDHH24MISS')
					</isEqual>														
				</isNotEmpty>   
				<!--  기간 검색 end -->	
				
				<!-- 주문구분 -->
				<isNotEmpty property="search_text">
					<!-- 공급받는자상호 -->
					<isEqual property="searchType" compareValue="01">
						AND X.DEMCMPNAME LIKE '%'||#search_text#||'%' 
					</isEqual>				
					<!-- 상호 end -->
					<!-- 공급자사업자번호 -->
					<isEqual property="searchType" compareValue="02">
						AND REPLACE(X.SUPREGNUM, '-', '') = #search_text#	
					</isEqual>
					<!-- 신청ID -->
					<isEqual property="searchType" compareValue="03">
						AND C.ACCESS_NAME LIKE #search_text#||'%'
					</isEqual>
					<!-- 신청자명 -->
					<isEqual property="searchType" compareValue="04">
						AND X.RCVUSRNAME LIKE #search_text#||'%'
					</isEqual>
					<!-- 주문번호 -->
					<isEqual property="searchType" compareValue="05">
						AND C.PURCHASE_ID LIKE #search_text#||'%' 
					</isEqual>												
				</isNotEmpty>				
				<!-- 주문구분 end -->
				
				<!-- 공급받는자사업자번호 -->
	            <isNotEmpty property="search_compregNo">
						AND REPLACE(X.DEMREGNUM, '-', '') = #search_compregNo#		/*공급받는자사업자번호 */					
				</isNotEmpty>
				<!-- 사업자번호 END -->	
				<!-- BTOB 제외 -->
				AND NVL(X.ATTR04, 1) NOT IN ('4')							
	</sql>	
	<!-- 주문관리/세금계산서 관리 위수탁세금계산서 검색조건 END -->
	
	<!-- 수수료 리스트 쿼리 -->
	<sql id="taxMgrListQry1">
			/* 수수료 세금계산서(INVTYPE3 : 1) */
				SELECT A.PURCHASE_ID AS ORDER_ID
                    , A.BIZ_CODE
                    , A.BCNC_NM
                    , A.COMPREG_NO
                    , A.PRSDT_NM    /* 대표자명 */
                    , A.ENTRPS  /*업태 */
                    , A.INDUTY  /* 업종 */
                    , A.ADDRESS /*주소 */
                    , A.TELNO    /*전화번호 */
                    , A.EMAIL	/*이메일 */                    
                    /* , NVL(C.STATE,'T0')   AS REQ_FLAG */
                    , NVL(X.PROCFLAG, 'T0') AS REQ_FLAG 
                    , NVL(X.PROCFLAG, 'T0') AS PROCFLAG
                    , NVL(A.REQ_REGNUM, X.SUPREGNUM) SUPREGNUM     /*공급자 사업자등록번호-우편사업진흥원 X_INVOICE_INFO csf */
					, A.COM_DATE AS ITEMDATE1   
					, TO_NUMBER(SUBSTR(A.COM_DATE,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) CLOSE_DATE
					, SUBSTR(A.COM_DATE,5,4) APPR_DATE
					, TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) AS TO_DATE1
					, '1' TAXT_DIV_CD 
					, '과세'  TAXT_DIV_NM
					/* , C.REG_DATE AS REG_DATE */
					, A.REG_DATE
					,   
					(
						SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
						FROM PIEMT0160 
						WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
						AND HOLDAYYN = 'N'
						AND SUBSTR(WORKCALEYMD,7,2) >= 10
						AND RCOCD = '00'
					) TAX_LAST_YMD
					, A.ACCESS_NAME
					, A.REQ_NAME
					, A.REQ_NAME AS SUPCMPNAME
					, A.BIZ_NAME AS  DEMCMPNAME
                    , A.GOODS_AMT   /* 판매금액 */
                    , A.GOODS_CNT   /* 판대수량 */
                    , A.SUPTOTAMT   /* 공급가액 */
                    , A.SURTAX          /* 부가세 */
                    , A.SUMAMT          /* 판매수수료 (공급가액 + 부가세) */
					, A.SUPTOTAMT ITEMAMT1
					, A.SURTAX ITEMSTAX1
					, CASE  WHEN SUBSTR(A.PURCHASE_ID,6,8) = '02'  THEN  SUBSTR(A.PURCHASE_ID,4,6) || '월우체국쇼핑운영수수료(추가)' ELSE '우체국쇼핑 운영수수료(통합)' END  ITEM1
					, NVL(C.ONOFFLINE, '1')  ONOFFLINE /* 배치에서 생성된 신청건 모두 ONLINE */
					,'1' INVTYPE3	/* 수수료/위수탁구분 수수료:1, 위수탁: */
					, X.SEND_DATE   
					, X.INVDATE
					, X.INVSEQ
					, TOT.SUM_GOODS_AMT
					, TOT.SUM_GOODS_CNT
					, TOT.SUM_SUPTOTAMT
					, TOT.SUM_SURTAX
					, TOT.SUM_SUMAMT	
					, C.STATE																			
						FROM 
							(
								SELECT SUBSTR(OIT.DAYS,1,6),
										SUBSTR(OIT.DAYS,1,6) || DECODE(OIT.JOBID,'01','01','02','01','03','01','04','01','02') PURCHASE_ID
                                        , OIT.BIZ_CODE BIZ_CODE    /*공급업체ID */
                                        , B.BCNC_NM   /*거래처명 */
                                        , MIN(B.COMPREG_NO) COMPREG_NO      /*사업자등록번호 */
                                        , MAX(B.PRSDT_NM) PRSDT_NM    /* 대표자명 */
                                        , MAX(B.ENTRPS) ENTRPS  /*업태 */
                                        , MAX(B.INDUTY) INDUTY  /* 업종 */
                                        , MAX( B.ADDR1 ||' '|| B.ADDR2 ) ADDRESS /*주소 */
                                        , MAX(B.TELNO) TELNO    /*전화번호 */
                                        , MAX(B.EMAIL) EMAIL    /*이메일 */
                                        /*
										MIN(decode(OIT.JOBID,'01', TO_CHAR(LAST_DAY(TO_DATE(SUBSTR(OIT.DAYS,1,6),'yyyymm')),'yyyymmdd'),
										           '02', TO_CHAR(LAST_DAY(to_date(substr(OIT.days,1,6),'yyyymm')),'yyyymmdd'),
										           '03', TO_CHAR(LAST_DAY(to_date(substr(OIT.days,1,6),'yyyymm')),'yyyymmdd'),
										           '04', TO_CHAR(LAST_DAY(to_date(substr(OIT.days,1,6),'yyyymm')),'yyyymmdd')
										           , TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(OIT.days,1,6),'yyyymm'),1),'yyyymm') || '10' )) COM_DATE,
										*/
										, TO_CHAR(LAST_DAY(TO_DATE(SUBSTR(OIT.DAYS,1,6),'yyyymm')),'yyyymmdd') AS COM_DATE  									         
										, '1' TAXGBN
										, '1' SHOP_ID
										, 'csf' ACCESS_NAME
										, (SELECT CMPNAME FROM  X_INVOICE_INFO INFO WHERE  ACCESS_NAME  = 'csf') REQ_NAME
										, (SELECT REGNUM   FROM  X_INVOICE_INFO INFO WHERE  ACCESS_NAME  = 'csf') REQ_REGNUM
										, MAX(REPLACE(B.COMPREG_NO, '-', '')) REGISTER_NO
										, SUBSTRB(MAX(B.BCNC_NM),1,60) AS BIZ_NAME
										, SUBSTRB(MAX(B.PRSDT_NM ),1,60) AS BOSS_NAME
										, NVL(MAX(OIT.ITEMMEMO),' ') AS TAX_STATE
										, NVL(SUM(OIT.ITEMPRC),0) AS GOODS_AMT
										, NVL(SUM(OIT.ITEMQTY),0) AS GOODS_CNT
										, NVL(SUM(OIT.SUPTOTAMT),0) AS SUPTOTAMT
										, NVL(SUM(OIT.SURTAX),0) AS SURTAX
										, NVL(SUM(OIT.SUMAMT),0) AS SUMAMT
										, MAX(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) PROCDATE
										, MAX(OIT.REG_DATE) AS REG_DATE
									FROM OD_INVOICE_TAX OIT 
										, CO_SUPP_COMP_MAST B
								WHERE OIT.BIZ_CODE= B.SUPP_COMP_ID
										/* AND   B.NATION_CD     = 'KO' */
										<include refid="taxMgrListQry1Condition"/> /* 주문관리/세금계산서 관리 검색 */									
									GROUP BY SUBSTR(OIT.DAYS,1,6)
											, SUBSTR(OIT.DAYS,1,6) || DECODE(OIT.JOBID,'01','01','02','01','03','01','04','01','02')
											, OIT.BIZ_CODE
											, B.BCNC_NM							
							) A
							, X_INVOICE_REQ C 
							, 
							(
								SELECT B.ATTR02
										, B.ATTR03
										, B.ATTR06	
										, B.SEND_DATE   
										, B.INVDATE
										, B.INVSEQ
										, B.SUPREGNUM
										, REPLACE(DEMREGNUM, '-', '') AS DEMREGNUM
										, B.AGNCMPNAME
										, B.PROCFLAG
									FROM X_INVOICE_TBL B
								WHERE 1=1
										AND B.ATTR03 = 'csf'
							) X
						/* 합계쿼리 */
						,
						(
                        SELECT SUM(NVL(AAA.GOODS_AMT, 0)) AS SUM_GOODS_AMT
                                    , SUM(NVL(AAA.GOODS_CNT, 0)) AS SUM_GOODS_CNT
                                    , SUM(NVL(AAA.SUPTOTAMT, 0)) AS SUM_SUPTOTAMT
                                    , SUM(NVL(AAA.SURTAX, 0)) AS SUM_SURTAX
                                    , SUM(NVL(AAA.SUMAMT, 0)) AS SUM_SUMAMT
                            FROM
                            	(                                
                                SELECT 
                                        NVL(SUM(OIT.ITEMPRC),0)    GOODS_AMT,
                                        NVL(SUM(OIT.ITEMQTY),0)    GOODS_CNT,
                                        NVL(SUM(OIT.SUPTOTAMT),0) SUPTOTAMT,
                                        NVL(SUM(OIT.SURTAX),0)    SURTAX,
                                        NVL(SUM(OIT.SUMAMT),0)    SUMAMT
                                    FROM OD_INVOICE_TAX OIT 
                                        , CO_SUPP_COMP_MAST B
                                WHERE OIT.BIZ_CODE= B.SUPP_COMP_ID
										<include refid="taxMgrListQry1Condition"/> /* 주문관리/세금계산서 관리 검색 */									
									GROUP BY SUBSTR(OIT.DAYS,1,6)
											, SUBSTR(OIT.DAYS,1,6) || DECODE(OIT.JOBID,'01','01','02','01','03','01','04','01','02')
											, OIT.BIZ_CODE
											, B.BCNC_NM
								) AAA                     
						) TOT    
						/* 합계쿼리 END */                        					
						WHERE 1=1
						AND A.PURCHASE_ID = C.PURCHASE_ID(+)
						AND  A.ACCESS_NAME = C.ACCESS_NAME(+)
						AND  A.ACCESS_NAME = X.ATTR03(+)	/* 신청자ID */
						AND  A.PURCHASE_ID = X.ATTR02(+)	/* 주문번호 */
						AND A.BIZ_CODE = X.ATTR06(+)		/* 업체코드 */
						AND  A.REGISTER_NO = X.DEMREGNUM(+) /* 사업자등록번호 이행데이터 123-12-12345 형식이므로 확인요망 */
						<!-- 상태 -->
					   <isNotEmpty property="procflag2">
							<!-- 이메일없는 공급업체 임시로 20161108 -->
							<isNotEqual property="procflag2" compareValue="email_null">
								<isNotEqual property="procflag2" compareValue="email_notnull">
								AND NVL(X.PROCFLAG, 'T0') = #procflag2#
								</isNotEqual>
							</isNotEqual>
							<isEqual property="procflag2" compareValue="email_null">
								AND A.EMAIL IS NULL
							</isEqual>
							<isEqual property="procflag2" compareValue="email_notnull">
								AND A.EMAIL IS NOT NULL
							</isEqual>							
					   </isNotEmpty>																
	</sql>	
	<!-- 수수료 리스트 쿼리 end-->	
	
	<!-- 위수탁 리스트 쿼리 -->
	<sql id="taxMgrListQry2">
				/* 위수탁 세금계산서(INVTYPE3 : 2) */	
				SELECT
					X.ATTR02 AS ORDER_ID
					/* , NVL(C.STATE,'00') REQ_FLAG */
					, NVL(X.PROCFLAG, '00') AS REQ_FLAG
					, X.ITEMDATE1
					, TO_NUMBER(SUBSTR(X.ITEMDATE1,0,6)) - to_number(to_char(add_months(SYSDATE,-1),'yyyymm')) close_date
					, SUBSTR(X.ITEMDATE1,5,4) APPR_DATE
					, TO_NUMBER(to_char(SYSDATE,'YYYYMMDDHH24MISS')) to_date1 
					, X.INVTYPE2 TAXT_DIV_CD
					,
						CASE X.INVTYPE2 
							WHEN  '1' THEN '과세' 
							WHEN  '2' THEN '영세' ELSE '면세' 
						END TAXT_DIV_NM  
					, C.REG_DATE AS REG_DATE
					,
					(
					    SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
					    FROM PIEMT0160 
					    WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
					    AND   HOLDAYYN = 'N'
					    AND   SUBSTR(WORKCALEYMD,7,2) >= 10
					    AND   RCOCD = '00'
					) TAX_LAST_YMD
					, C.ACCESS_NAME
					, ME.NAME AS REQ_NAME
                    , X.SUPREGNUM                    
                    , X.SUPCMPNAME 
                    , X.DEMREGNUM
                    , X.DEMCMPNAME 
                    , X.AGNCMPNAME       
                    , X.ITEMQTY1    /*판매수량 */
                    , X.ITEMPRC1       /* 판매가 */
                    , X.ITEMAMT1
                    , ITEMSTAX1     /* 세액 */
					, X.ITEM1
					, C.ONOFFLINE
					, X.INVTYPE3
					, X.SEND_DATE
					, X.INVDATE
					, X.INVSEQ
					, X.ATTR05 AS SEND_SEQ
                    , TOT.SUM_ITEMQTY1       /* 수량 */
                    , TOT.SUM_ITEMPRC1       /*판매가 */
                    , TOT.SUM_SUMAMT        /* 공급가 */
                    , TOT.SUM_ITEMSTAX1     /* 세액토탈 */
					, X.ATTR06
					, X.ATTR04
                FROM  X_INVOICE_REQ C 
                	, X_INVOICE_TBL X
                	, MEMINFO ME
                    ,
					/* 합계쿼리 */           
					(
                        SELECT SUM(NVL(AAA.SUMITEMQTY1, 0)) AS SUM_ITEMQTY1 
                                , SUM(NVL(AAA.SUMITEMPRC1, 0)) AS SUM_ITEMPRC1        
                                , SUM(NVL(AAA.SUMATM, 0)) AS SUM_SUMAMT        
                                , SUM(NVL(AAA.ITEMSTAX1, 0)) AS SUM_ITEMSTAX1
							FROM
								(
                                SELECT NVL(X.ITEMQTY1, 0) AS SUMITEMQTY1        /* 수량 */
                                        , NVL(X.ITEMPRC1, NVL(X.ITEMAMT1 + X.ITEMSTAX1, 0) ) AS SUMITEMPRC1    /* 판매가 */ 
                                        , NVL(X.ITEMAMT1, 0) AS SUMATM   /* 공급가액 */
                                        , NVL(X.ITEMSTAX1, 0) AS ITEMSTAX1          /* 세액 */
                                    FROM X_INVOICE_REQ C 
                                        , X_INVOICE_TBL X     
								WHERE 1=1
										AND C.ACCESS_NAME  = X.ATTR03
										AND C.PURCHASE_ID = X.ATTR02(+)
										AND X.INVTYPE3 = '2'    
								<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 위수탁 검색 */	
								) AAA                                                                                   
					) TOT    
					/* 합계쿼리 END */                       	
                WHERE C.ACCESS_NAME  = ME.ACCESS_NAME(+)
                 AND C.ACCESS_NAME  = X.ATTR03
                 AND C.PURCHASE_ID = X.ATTR02
                 AND X.INVTYPE3 = '2'	
	</sql>	
	<!-- 위수탁 리스트 쿼리 end-->
	
	<!-- 세금계산서 리스트 카운트 -->
	<select id="selectTaxMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
			<!-- 전체검색 사용안함  
			<isEqual property="searchTab" compareValue="1">	/* 전체검색 */
				<include refid="taxMgrListQry1"/> /* 수수료 리스트 쿼리 */
				<include refid="taxMgrListQry1Condition"/> /* 주문관리/세금계산서 관리 검색 */
				UNION			
				<include refid="taxMgrListQry2"/> /* 위수탁 리스트 쿼리 */
				<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 검색 */
			</isEqual>	
			-->
		SELECT COUNT(*) AS TOTCNT
		FROM  
			(			
			<!-- 수수료 세금계산서 -->
			<isEqual property="searchTab" compareValue="2">
				<include refid="taxMgrListQry1"/> /* 수수료 리스트 쿼리 */
			</isEqual>			
			
			<!-- 위수탁 세금계산서 -->
			<isEqual property="searchTab" compareValue="3">
				<include refid="taxMgrListQry2"/> /* 위수탁 리스트 쿼리 */
				<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 검색 */
			</isEqual>
			) T
	</select>	
	
	
	<!-- 수수료 세금계산서 리스트 조회 -->	
	<select id="selectTaxMgrList" parameterClass ="java.util.HashMap" resultClass="commMap">
	
			<!-- 전체검색 사용안함
			<isEqual property="searchTab" compareValue="1">	/* 전체검색 */
				<include refid="taxMgrListQry1"/> /* 수수료 리스트 쿼리 */
				<include refid="taxMgrListQry1Condition"/> /* 주문관리/세금계산서 관리 검색 */
				UNION			
				<include refid="taxMgrListQry2"/> /* 위수탁 리스트 쿼리 */
				<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 검색 */
			</isEqual>	
			 -->
		<include refid="pagingHeader"/>			
			<!-- 수수료 세금계산서 -->
			<isEqual property="searchTab" compareValue="2">
       SELECT T.ORDER_ID
                , T.BIZ_CODE
                , T.BCNC_NM
                , T.COMPREG_NO
                , T.PRSDT_NM    /* 대표자명 */
                , T.ENTRPS  /*업태 */
                , T.INDUTY  /* 업종 */
                , T.ADDRESS /*주소 */
                , T.TELNO    /*전화번호 */
                , T.EMAIL    /*이메일 */                             
                , T.SUPREGNUM       /*공급자 사업자등록번호 SUPREGNUM*/
                , T.ITEMDATE1
                , T.ITEMAMT1 + T.ITEMSTAX1 AS SUMATM 
                , T.ITEMAMT1
                , T.ITEMSTAX1
                , T.ITEM1
                , T.REQ_FLAG
                , (SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'TAX_STATE' AND T.REQ_FLAG = CM.COMN_CD_ID) AS REQ_FLAG_NM 
                , T.PROCFLAG
                , T.CLOSE_DATE
                , T.APPR_DATE
                , T.TO_DATE1
                , T.TAXT_DIV_CD 
                , T.TAXT_DIV_NM 
                , to_char(to_date(T.REG_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') REG_DATE
                , T.TAX_LAST_YMD
                , T.ACCESS_NAME
                , T.REQ_NAME
                , T.SUPCMPNAME
                , T.DEMCMPNAME
                , T.GOODS_AMT   /* 판매금액 */
                , T.GOODS_CNT   /* 판대수량 */
                , T.SUPTOTAMT   /* 공급가액 */
                , T.SURTAX          /* 부가세 */
                , T.SUMAMT          /* 판매수수료 (공급가액 + 부가세) */              
                , T.ONOFFLINE
                , T.INVTYPE3
                , TO_CHAR(T.SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE
                , T.INVDATE
                , T.INVSEQ
				, T.SUM_GOODS_AMT
				, T.SUM_GOODS_CNT
				, T.SUM_SUPTOTAMT
				, T.SUM_SURTAX
				, T.SUM_SUMAMT	                
			FROM  
				(	                	
				<include refid="taxMgrListQry1"/> /* 수수료 리스트 쿼리 */
			</isEqual>			
			ORDER BY REG_DATE DESC, SEND_DATE ASC
			) T
		<include refid="pagingFooter"/>				
	</select>	
	
	<!-- 위수탁 세금계산서 -->
	<select id="selectTaxMgrList2" parameterClass ="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
        SELECT T.ORDER_ID
                , T.SUPREGNUM
                , T.SUPCMPNAME
                , T.DEMREGNUM
                , T.DEMCMPNAME
                , T.ITEMDATE1
                , T.ITEMQTY1
                , T.ITEMPRC1
                , T.ITEMAMT1
                , T.ITEMSTAX1
                , T.ITEM1
                , T.REQ_FLAG
                , (SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'TAX_STATE' AND T.REQ_FLAG = CM.COMN_CD_ID) AS REQ_FLAG_NM 
                , T.CLOSE_DATE
                , T.APPR_DATE
                , T.TO_DATE1
                , T.TAXT_DIV_CD 
                , T.TAXT_DIV_NM 
                , TO_CHAR(to_date(T.REG_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') REG_DATE
                , T.TAX_LAST_YMD
                , T.ACCESS_NAME
                , T.REQ_NAME
                , T.AGNCMPNAME
                , T.ONOFFLINE
                , T.INVTYPE3
                , TO_CHAR(T.SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE
                , T.INVDATE
                , T.INVSEQ
                , T.SEND_SEQ
                , T.SUM_ITEMQTY1
                , T.SUM_ITEMPRC1
                , T.SUM_SUMAMT
                , T.SUM_ITEMSTAX1
                , T.ATTR06                           
                , T.ATTR04         		
		FROM  
			(			
				<include refid="taxMgrListQry2"/> /* 위수탁 리스트 쿼리 */
				<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 검색 */
			ORDER BY REG_DATE DESC, SEND_DATE DESC
			) T			
		<include refid="pagingFooter"/>			
	</select>
	
	<!--  세금계산서 발행 내역리스트 조회 -->	
	<select id="selectTaxPublishList" parameterClass ="java.util.HashMap" resultClass="commMap">
         SELECT T2.ONUM
		         , T2.ORDER_ID
                 , T2.SUPREGNUM
                 , T2.ITEMDATE1
                 , T2.SUMATM 
                 , T2.ITEMAMT1
                 , T2.ITEMSTAX1
                 , T2.ITEM1
                 , T2.REQ_FLAG
                 , T2.REQ_FLAG_NM 
                 , T2.CLOSE_DATE
                 , T2.APPR_DATE
                 , T2.TO_DATE1
                 , T2.TAXT_DIV_CD 
                 , T2.TAXT_DIV_NM 
                 , T2.REG_DATE
                 , T2.TAX_LAST_YMD
                 , T2.ACCESS_NAME
                 , T2.REQ_NAME
                 , T2.SUPCMPNAME
                 , T2.DEMCMPNAME
                 , T2.AGNCMPNAME
                 , T2.ONOFFLINE
                 , T2.INVTYPE3 
                 , T2.SEND_DATE  
                 , T2.INVDATE
                 , T2.INVSEQ      
        FROM(
            SELECT
		           ROW_NUMBER() OVER(ORDER BY T1.ORDER_ID DESC, T1.SUPREGNUM ASC ) AS ONUM
                 , T1.ORDER_ID
                 , T1.SUPREGNUM
                 , T1.ITEMDATE1
                 , T1.ITEMAMT1 + T1.ITEMSTAX1 AS SUMATM 
                 , T1.ITEMAMT1
                 , T1.ITEMSTAX1
                 , T1.ITEM1
                 , T1.REQ_FLAG
                 , (SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'TAX_STATE' AND T1.REQ_FLAG = CM.COMN_CD_ID) AS REQ_FLAG_NM 
                 , T1.CLOSE_DATE
                 , T1.APPR_DATE
                 , T1.TO_DATE1
                 , T1.TAXT_DIV_CD 
                 , T1.TAXT_DIV_NM 
                 , to_char(to_date(T1.REG_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') REG_DATE
                 , T1.TAX_LAST_YMD
                 , T1.ACCESS_NAME
                 , T1.REQ_NAME
                 , T1.SUPCMPNAME
                 , T1.DEMCMPNAME
                 , T1.AGNCMPNAME
                 , T1.ONOFFLINE
                 , T1.INVTYPE3
                 , to_char(T1.SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE
                 , T1.INVDATE
                 , T1.INVSEQ
            FROM (
            <isNotEqual property="searchTab" compareValue="2">
            	SELECT
                     X.ATTR02 AS ORDER_ID,
                     X.SUPREGNUM,
                     NVL(C.STATE,'00') REQ_FLAG,
                     X.ITEMDATE1,
                     to_number(substr(X.ITEMDATE1,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) close_date,
                     substr(X.ITEMDATE1,5,4) APPR_DATE,
                     to_number(to_char(sysdate,'YYYYMMDDHH24MISS')) to_date1 ,
                     X.INVTYPE2 TAXT_DIV_CD,
                     CASE  X.INVTYPE2 WHEN  '1' THEN '과세' WHEN  '2' THEN '영세' ELSE '면세' END TAXT_DIV_NM  ,
                     C.REG_DATE as REG_DATE,
                     (
                         SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                         FROM PIEMT0160 
                         WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                         AND   HOLDAYYN = 'N'
                         AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                         AND   RCOCD = '00'
                     ) TAX_LAST_YMD,
                     C.ACCESS_NAME,
                     ME.NAME AS REQ_NAME,
                     X.SUPCMPNAME AS SUPCMPNAME,  
                     X.DEMCMPNAME AS DEMCMPNAME,  
                     X.AGNCMPNAME AS AGNCMPNAME,
                     X.ITEMAMT1,
                     X.ITEMSTAX1,
                     X.ITEM1,
                     C.ONOFFLINE,
                     X.INVTYPE3,
                     X.SEND_DATE,
                     X.INVDATE,
                     X.INVSEQ
                FROM  X_INVOICE_REQ C , X_INVOICE_TBL X, MEMINFO ME
                WHERE 1=1  
                 AND C.ACCESS_NAME  = ME.ACCESS_NAME(+)
                 AND  C.ACCESS_NAME  = X.ATTR03
                 AND  C.PURCHASE_ID = X.ATTR02
                 AND  X.INVTYPE3 = '2'
           <isNotEmpty property="searchOrderDiv">
           		<isEqual property="searchOrderDiv" compareValue="10">
					AND C.ONOFFLINE = '1'
 				</isEqual>
				<isEqual property="searchOrderDiv" compareValue="40">
					AND C.ONOFFLINE = '2'
				</isEqual>																		
			</isNotEmpty>
			<isNotEmpty property="search_compregNo">
				AND  ( X.SUPREGNUM = replace( #search_compregNo#, '-','' ) OR X.DEMREGNUM 	= replace(  #search_compregNo#, '-','' ) )												
			</isNotEmpty>
		   <isNotEmpty property="searchFromDt">
		   		<isEqual property="search_ymd_type" compareValue="com_date">
					AND X.ITEMDATE1 BETWEEN #searchFromDt# AND #searchToDt#
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="req_date">
					AND C.REG_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="send_date">
					AND X.SEND_DATE BETWEEN #searchFromDt# AND #searchToDt#
				</isEqual>														
			</isNotEmpty>   
		    <isNotEmpty property="search_text">
				<isEqual property="searchType" compareValue="01">
					AND X.SUPCMPNAME LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="02">
					AND X.SUPOWNER LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="03">
					AND C.ACCESS_NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="04">
					AND ME.NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="05">
					AND X.ATTR02 LIKE '%'||#searchTxt#||'%' 
				</isEqual>												
			</isNotEmpty>
			</isNotEqual>
			<isEqual property="searchTab" compareValue="1">
				UNION
			</isEqual>
			<isNotEqual property="searchTab" compareValue="3">
				SELECT
                     X.ATTR02 AS ORDER_ID,
                     X.SUPREGNUM,
                     NVL(C.STATE,'00') REQ_FLAG,
                     X.ITEMDATE1,
                     to_number(substr(X.ITEMDATE1,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) close_date,
                     substr(X.ITEMDATE1,5,4) APPR_DATE,
                     to_number(to_char(sysdate,'YYYYMMDDHH24MISS')) to_date1 ,
                     X.INVTYPE2 TAXT_DIV_CD,
                     CASE  X.INVTYPE2 WHEN  '1' THEN '과세' WHEN  '2' THEN '영세' ELSE '면세' END TAXT_DIV_NM  ,
                     C.REG_DATE as REG_DATE,
                     (
                         SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                         FROM PIEMT0160 
                         WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                         AND   HOLDAYYN = 'N'
                         AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                         AND   RCOCD = '00'
                     ) TAX_LAST_YMD,
                     C.ACCESS_NAME,
                     ME.cmpname AS REQ_NAME,
                     X.SUPCMPNAME AS SUPCMPNAME,  
                     X.DEMCMPNAME AS DEMCMPNAME,  
                     X.AGNCMPNAME AS AGNCMPNAME,
                     X.ITEMAMT1,
                     X.ITEMSTAX1,
                     X.ITEM1,
                     C.ONOFFLINE,
                     X.INVTYPE3,
                     X.SEND_DATE,
                     X.INVDATE,
                     X.INVSEQ
                FROM  X_INVOICE_REQ C , X_INVOICE_TBL X, X_INVOICE_INFO ME
                WHERE 1=1  
                  AND C.ACCESS_NAME = ME.ACCESS_NAME(+)
                 AND  C.REGNUM = ME.REGNUM(+)
                 AND  C.ACCESS_NAME  = X.ATTR03
                 AND  C.PURCHASE_ID = X.ATTR02
                 AND  X.INVTYPE3 = '1'
           <isNotEmpty property="searchOrderDiv">
           		<isEqual property="searchOrderDiv" compareValue="10">
					AND C.ONOFFLINE = '1'
 				</isEqual>
				<isEqual property="searchOrderDiv" compareValue="40">
					AND C.ONOFFLINE = '2'
				</isEqual>																		
			</isNotEmpty>
			<isNotEmpty property="search_compregNo">
				AND  ( X.SUPREGNUM = replace( #search_compregNo#, '-','' ) OR X.DEMREGNUM 	= replace(  #search_compregNo#, '-','' ) )												
			</isNotEmpty>
		   <isNotEmpty property="searchFromDt">
		   		<isEqual property="search_ymd_type" compareValue="com_date">
					AND X.ITEMDATE1 BETWEEN #searchFromDt# AND #searchToDt#
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="req_date">
					AND C.REG_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="send_date">
					AND X.SEND_DATE BETWEEN #searchFromDt# AND #searchToDt#
				</isEqual>														
			</isNotEmpty>   
		    <isNotEmpty property="search_text">
				<isEqual property="searchType" compareValue="01">
					AND X.SUPCMPNAME LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="02">
					AND X.SUPOWNER LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="03">
					AND C.ACCESS_NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="04">
					AND ME.CMPNAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="05">
					AND X.ATTR02 LIKE '%'||#searchTxt#||'%' 
				</isEqual>												
			</isNotEmpty>
			</isNotEqual>
            ) T1
            WHERE 1=1
             )T2
        WHERE 1=1
        <isNotNull property="firstIndex">
        	<isNotNull property="lastIndex">
        		AND T2.ONUM BETWEEN #firstIndex# AND #lastIndex#
        	</isNotNull>
        </isNotNull>    
        	ORDER BY T2.ONUM DESC	
	</select>
	
	<!-- 세금계산서 발행 내역리스트  카운트 -->
	<select id="selectTaxPublishListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
                FROM  (
            	<isNotEqual property="searchTab" compareValue="2">
            	SELECT
                     X.ATTR02 AS ORDER_ID,
                     X.SUPREGNUM,
                     NVL(C.STATE,'00') REQ_FLAG,
                     X.ITEMDATE1,
                     to_number(substr(X.ITEMDATE1,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) close_date,
                     substr(X.ITEMDATE1,5,4) APPR_DATE,
                     to_number(to_char(sysdate,'YYYYMMDDHH24MISS')) to_date1 ,
                     X.INVTYPE2 TAXT_DIV_CD,
                     CASE  X.INVTYPE2 WHEN  '1' THEN '과세' WHEN  '2' THEN '영세' ELSE '면세' END TAXT_DIV_NM  ,
                     C.REG_DATE as REG_DATE,
                     (
                         SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                         FROM PIEMT0160 
                         WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                         AND   HOLDAYYN = 'N'
                         AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                         AND   RCOCD = '00'
                     ) TAX_LAST_YMD,
                     C.ACCESS_NAME,
                     ME.NAME AS REQ_NAME,
                     X.SUPCMPNAME AS SUPCMPNAME,  
                     X.DEMCMPNAME AS DEMCMPNAME,  
                     X.AGNCMPNAME AS AGNCMPNAME,
                     X.ITEMAMT1,
                     X.ITEMSTAX1,
                     X.ITEM1,
                     C.ONOFFLINE,
                     X.INVTYPE3,
                     X.SEND_DATE,
                     X.INVDATE,
                     X.INVSEQ 
                FROM  X_INVOICE_REQ C , X_INVOICE_TBL X, MEMINFO ME
                WHERE 1=1  
                 AND C.ACCESS_NAME  = ME.ACCESS_NAME(+)
                 AND  C.ACCESS_NAME  = X.ATTR03
                 AND  C.PURCHASE_ID = X.ATTR02
                 AND  X.INVTYPE3 = '2'
           <isNotEmpty property="searchOrderDiv">
           		<isEqual property="searchOrderDiv" compareValue="10">
					AND C.ONOFFLINE = '1'
 				</isEqual>
				<isEqual property="searchOrderDiv" compareValue="40">
					AND C.ONOFFLINE = '2'
				</isEqual>																		
			</isNotEmpty>
			<isNotEmpty property="search_compregNo">
				AND  ( X.SUPREGNUM = replace( #search_compregNo#, '-','' ) OR X.DEMREGNUM 	= replace(  #search_compregNo#, '-','' ) )												
			</isNotEmpty>
		   <isNotEmpty property="searchFromDt">
		   		<isEqual property="search_ymd_type" compareValue="com_date">
					AND X.ITEMDATE1 BETWEEN #searchFromDt# AND #searchToDt#
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="req_date">
					AND C.REG_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="send_date">
					AND X.SEND_DATE BETWEEN #searchFromDt# AND #searchToDt#
				</isEqual>														
			</isNotEmpty>   
		    <isNotEmpty property="search_text">
				<isEqual property="searchType" compareValue="01">
					AND X.SUPCMPNAME LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="02">
					AND X.SUPOWNER LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="03">
					AND C.ACCESS_NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="04">
					AND ME.NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="05">
					AND X.ATTR02 LIKE '%'||#searchTxt#||'%' 
				</isEqual>												
			</isNotEmpty>
			</isNotEqual>
			<isEqual property="searchTab" compareValue="1">
				UNION
			</isEqual>
			<isNotEqual property="searchTab" compareValue="3">
				SELECT
                     X.ATTR02 AS ORDER_ID,
                     X.SUPREGNUM,
                     NVL(C.STATE,'00') REQ_FLAG,
                     X.ITEMDATE1,
                     to_number(substr(X.ITEMDATE1,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) close_date,
                     substr(X.ITEMDATE1,5,4) APPR_DATE,
                     to_number(to_char(sysdate,'YYYYMMDDHH24MISS')) to_date1 ,
                     X.INVTYPE2 TAXT_DIV_CD,
                     CASE  X.INVTYPE2 WHEN  '1' THEN '과세' WHEN  '2' THEN '영세' ELSE '면세' END TAXT_DIV_NM  ,
                     C.REG_DATE as REG_DATE,
                     (
                         SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                         FROM PIEMT0160 
                         WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                         AND   HOLDAYYN = 'N'
                         AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                         AND   RCOCD = '00'
                     ) TAX_LAST_YMD,
                     C.ACCESS_NAME,
                     ME.cmpname AS REQ_NAME,
                     X.SUPCMPNAME AS SUPCMPNAME,  
                     X.DEMCMPNAME AS DEMCMPNAME,  
                     X.AGNCMPNAME AS AGNCMPNAME,
                     X.ITEMAMT1,
                     X.ITEMSTAX1,
                     X.ITEM1,
                     C.ONOFFLINE,
                     X.INVTYPE3,
                     X.SEND_DATE,
                     X.INVDATE,
                     X.INVSEQ
                FROM  X_INVOICE_REQ C , X_INVOICE_TBL X, X_INVOICE_INFO ME
                WHERE 1=1  
                  AND C.ACCESS_NAME = ME.ACCESS_NAME(+)
                 AND  C.REGNUM = ME.REGNUM(+)
                 AND  C.ACCESS_NAME  = X.ATTR03
                 AND  C.PURCHASE_ID = X.ATTR02
                 AND  X.INVTYPE3 = '1'
           <isNotEmpty property="searchOrderDiv">
           		<isEqual property="searchOrderDiv" compareValue="10">
					AND C.ONOFFLINE = '1'
 				</isEqual>
				<isEqual property="searchOrderDiv" compareValue="40">
					AND C.ONOFFLINE = '2'
				</isEqual>																		
			</isNotEmpty>
			<isNotEmpty property="search_compregNo">
				AND  ( X.SUPREGNUM = replace( #search_compregNo#, '-','' ) OR X.DEMREGNUM 	= replace(  #search_compregNo#, '-','' ) )												
			</isNotEmpty>
		   <isNotEmpty property="searchFromDt">
		   		<isEqual property="search_ymd_type" compareValue="com_date">
					AND X.ITEMDATE1 BETWEEN #searchFromDt# AND #searchToDt#
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="req_date">
					AND C.REG_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
 				</isEqual>
				<isEqual property="search_ymd_type" compareValue="send_date">
					AND X.SEND_DATE BETWEEN #searchFromDt# AND #searchToDt#
				</isEqual>														
			</isNotEmpty>   
		    <isNotEmpty property="search_text">
				<isEqual property="searchType" compareValue="01">
					AND X.SUPCMPNAME LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="02">
					AND X.SUPOWNER LIKE '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="03">
					AND C.ACCESS_NAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="04">
					AND ME.CMPNAME '%'||#searchTxt#||'%' 
				</isEqual>
				<isEqual property="searchType" compareValue="05">
					AND X.ATTR02 LIKE '%'||#searchTxt#||'%' 
				</isEqual>												
			</isNotEmpty>
			</isNotEqual>
            )
	</select>
	
	<!-- 세금계산서 엑셀 다운로드 -->
	<select id="selectTaxMgrExcelList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<include refid="pagingHeader"/>			
			<!-- 수수료 세금계산서 -->
			<isEqual property="searchTab" compareValue="2">
       SELECT T.ORDER_ID
       			, T.BIZ_CODE
       			, T.BCNC_NM
       			, T.COMPREG_NO
                , T.PRSDT_NM    /* 대표자명 */
                , T.ENTRPS  /*업태 */
                , T.INDUTY  /* 업종 */
                , T.ADDRESS /*주소 */
                , T.TELNO    /*전화번호 */
                , T.EMAIL    /*이메일 */                             
                , T.SUPREGNUM       /*공급자 사업자등록번호 SUPREGNUM*/
                , T.ITEMDATE1
                , T.ITEMAMT1 + T.ITEMSTAX1 AS SUMATM 
                , T.ITEMAMT1
                , T.ITEMSTAX1
                , T.ITEM1
                , T.REQ_FLAG
                , (SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'TAX_STATE' AND T.REQ_FLAG = CM.COMN_CD_ID) AS REQ_FLAG_NM 
                , T.CLOSE_DATE
                , T.APPR_DATE
                , T.TO_DATE1
                , T.TAXT_DIV_CD 
                , T.TAXT_DIV_NM 
                , to_char(to_date(T.REG_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') REG_DATE
                , T.TAX_LAST_YMD
                , T.ACCESS_NAME
                , T.REQ_NAME
                , T.SUPCMPNAME
                , T.DEMCMPNAME
                , T.GOODS_AMT   /* 판매금액 */
                , T.GOODS_CNT   /* 판대수량 */
                , T.SUPTOTAMT   /* 공급가액 */
                , T.SURTAX          /* 부가세 */
                , T.SUMAMT          /* 판매수수료 (공급가액 + 부가세) */              
                , T.ONOFFLINE
                , T.INVTYPE3
                , to_char(T.SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE
                , T.INVDATE		/* 발행일 */
                , T.INVSEQ
				, T.SUM_GOODS_AMT
				, T.SUM_GOODS_CNT
				, T.SUM_SUPTOTAMT
				, T.SUM_SURTAX
				, T.SUM_SUMAMT
			FROM  
				(	                	
				<include refid="taxMgrListQry1"/> /* 수수료 리스트 쿼리 */
			</isEqual>			
			
			<!-- 위수탁 세금계산서 -->
			<isEqual property="searchTab" compareValue="3">
		SELECT T.ORDER_ID
                , T.SUPREGNUM
                , T.SUPCMPNAME
                , T.DEMREGNUM
                , T.DEMCMPNAME
                , T.ITEMDATE1
                , T.ITEMQTY1
                , T.ITEMPRC1
                , T.ITEMAMT1
                , T.ITEMSTAX1
                , T.ITEM1
                , T.INVDATE
                , T.REQ_FLAG
                , (SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'TAX_STATE' AND T.REQ_FLAG = CM.COMN_CD_ID) AS REQ_FLAG_NM 
                , TO_CHAR(to_date(T.REG_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') REG_DATE
                , TO_CHAR(T.SEND_DATE,'YYYY-MM-DD HH24:MI:SS') SEND_DATE
                , T.SUM_ITEMQTY1
                , T.SUM_ITEMPRC1
                , T.SUM_SUMAMT
                , T.SUM_ITEMSTAX1
			FROM  
				(	                	
				<include refid="taxMgrListQry2"/> /* 위수탁 리스트 쿼리 */
				<include refid="taxMgrListQry2Condition"/> /* 주문관리/세금계산서 관리 위수탁 검색 */	
			</isEqual>				
			ORDER BY REG_DATE DESC, SEND_DATE ASC
			) T
		<include refid="pagingFooter"/>			
	</select>	

	<!-- 현금영수증 발급/조회 검색조건 -->
	<sql id="cashPublishListQryCondition">
		<!-- 요청자 구분 -->
		<isNotEmpty property="searchReqDiv">
			AND OCR.GBN = #searchReqDiv#	/* 발급대상구분 1:개인(주민등록번호), 2:사업자, 3:개인(휴대폰) , 4:모바일(미사용)*/
		</isNotEmpty>
		
		<!-- 매장구분 -->
		<isNotEmpty property="searchPavlnDivCd">
			AND OOI.PAVLN_DIV_CD = #searchPavlnDivCd#	
		</isNotEmpty>		
		
		<!-- 기간검색 -->
		<isEqual property="search_ymd_type" compareValue="approval_time">
		AND OC.APPROVAL_TIME BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'999999'	/* 발행일 */
		</isEqual>
		<isEqual property="search_ymd_type" compareValue="order_date">
		AND OOM.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')	/* 주문일 */
		</isEqual>
		
		<!-- 처리상태 -->
		<isNotEmpty property="checkStateArr">
		AND NVL(OC.STATUS,'00') IN 
			<iterate property="checkStateArr" open="(" conjunction=","  close=")" >#checkStateArr[]#</iterate>
		</isNotEmpty> 		
		
		<!-- 조회조건  -->
		<isNotEmpty property="search_type">
			<isNotEmpty property="search_value">
				<isEqual property="search_type" compareValue="access_name">
				AND OOM.ACCESS_NAME = #search_value#
				</isEqual>
				<isEqual property="search_type" compareValue="sender_nm">
				AND OOI.SENDER_NM LIKE '%' || #search_value# || '%'
				</isEqual>						
				<isEqual property="search_type" compareValue="approval_no">
				AND OC.APPROVAL_NO = #search_value#
				</isEqual>
			</isNotEmpty>				
		</isNotEmpty>
		
		<!-- 공급업체 -->
		<isNotEmpty property="search_supp_comp_id">
		AND OC.SUPP_COMP_ID = #search_supp_comp_id#	/* 공급업체 */
		</isNotEmpty> 			
		
	</sql>	
	
	<!-- 현금영수증 발행 내역 리스트 쿼리 old -->
	<sql id="cashPublishListQry_old">
		SELECT /*+ LEADING(OC OOI OOM) USE_NL(OC OOI OOM) INDEX(OC OD_CASHINFO_IX02) INDEX(OOM OD_ORDER_MAST_PK ) INDEX(OOI OD_ORDER_ITM_IX17) PUSH_PRED */ 
				MAX(TO_CHAR(OOM.ORDER_DATE, 'YYYY-MM-DD HH24:MI') ) AS ORDER_DATE
				/* , TO_CHAR(TO_DATE(OC.APPROVAL_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') AS REG_DATE */
				/* , MAX(OC.APPROVAL_TIME) AS APPROVAL_TIME */
				, SUBSTR(OC.APPROVAL_TIME, 0,4)||'-'||SUBSTR(OC.APPROVAL_TIME, 5,2)||'-' ||SUBSTR(OC.APPROVAL_TIME, 7,2)
        		|| DECODE( SUBSTR(OC.APPROVAL_TIME, 9,2), '', '', ' '||SUBSTR(OC.APPROVAL_TIME, 9,2)||':' )  
        		|| DECODE( SUBSTR(OC.APPROVAL_TIME, 11,2), '', '', SUBSTR(OC.APPROVAL_TIME, 11,2) ) AS APPROVAL_TIME
				, MAX(OC.ORDER_ID) ORDER_ID
				, MAX(OC.PROCESS_ID) AS ACCESS_NAME
				, MAX(NVL(OC.AMOUNT, 0)) AS OK_AMT1
				, MAX(OOI.GOODS_NM) 
				|| ( CASE WHEN COUNT(OOM.ORDER_ID) OVER(PARTITION BY OOI.SUPP_COMP_ID)> 1 THEN ' 외' || (COUNT(OOM.ORDER_ID) OVER(PARTITION BY OOI.SUPP_COMP_ID)-1) ||'건'
					ELSE '' END) AS GOODS_NM	/*상품명*/
				, MAX(OC.SEQUENCE_NO) AS SEQUENCE_NO
				, DECODE(NVL(MAX(OC.STATUS),'00'),'D1','발급완료','D2','발급취소','P1','발급거절' ,'E1','발급실패', '발급요청' ) AS STATUS_NAME
				, OOM.ORDER_STUS_CD
        		, F_GET_ORDER_STUS_MAST_NM(OOM.ORDER_ID) AS ORDER_STUS_NM   /* 공급업체ID별로 SUM 이므로 MAST 상태 조회 */
        		, MAX('58'||OC.APPROVAL_NO) AS APPROVAL_NO		/* 승인번호 */
        		, MAX(TOT.SUM_AMT) AS SUM_AMT
			FROM OD_ORDER_MAST OOM
				, OD_ORDER_ITM OOI
				, OD_CASHINFO OC
				, OD_CASHREQ OCR
				,
				(
					SELECT SUM(AAA.AMOUNT) AS SUM_AMT
						FROM
							(
							SELECT MAX(NVL(OC.AMOUNT, 0))  AS AMOUNT
								FROM OD_ORDER_MAST OOM
									, OD_ORDER_ITM OOI
									, OD_CASHINFO OC
									, OD_CASHREQ OCR
								WHERE 1=1
									AND OOM.ORDER_ID = OOI.ORDER_ID
									AND OOI.ORDER_ID = OC.ORDER_ID
									AND OOI.SUPP_COMP_ID = OC.SUPP_COMP_ID
									AND OC.ORDER_ID = OCR.ORDER_ID
									<include refid="cashPublishListQryCondition"/> /* 현금영수증 발행 내역 관리 검색 */
							GROUP BY OOI.SUPP_COMP_ID, OOM.ORDER_ID, OOM.ORDER_STUS_CD, OC.APPROVAL_TIME     
							) AAA        				
				) TOT
			WHERE 1=1
				<include refid="cashPublishListQryCondition"/> /* 현금영수증 발행 내역 관리 검색 */
				AND OOM.ORDER_ID = OOI.ORDER_ID
				AND OOI.ORDER_ID = OC.ORDER_ID
				AND OOI.SUPP_COMP_ID = OC.SUPP_COMP_ID
				AND OC.ORDER_ID = OCR.ORDER_ID
			GROUP BY OOI.SUPP_COMP_ID, OOM.ORDER_ID, OOM.ORDER_STUS_CD, OC.APPROVAL_TIME /* OC.APPROVAL_TIME이행데이터확인 */
	</sql>	
	
	<!-- 현금영수증 발행 내역 리스트 쿼리 튜닝 -->
	<sql id="cashPublishListQry">
		SELECT 
		<isEqual property="search_ymd_type" compareValue="approval_time">
		/*+ LEADING(OC OOM OOI) INDEX(OC OD_CASHINFO_IX05) USE_NL(OOM) USE_NL(OOI) */
		</isEqual>		
		<isEqual property="search_ymd_type" compareValue="order_date">
		/*+ LEADING(OOM OC OOI) INDEX(OOM) USE_NL(OOM) USE_NL(OC) USE_NL(OOI) INDEX(OC OD_CASHINFO PK)*/
		</isEqual>				
				MAX(TO_CHAR(OC.ORDER_DATE, 'YYYY-MM-DD HH24:MI') ) ORDER_DATE,
				SUBSTR(OC.APPROVAL_TIME, 0, 4)||'-'||SUBSTR(OC.APPROVAL_TIME, 5, 2)||'-' ||
				SUBSTR(OC.APPROVAL_TIME, 7, 2) || DECODE( SUBSTR(OC.APPROVAL_TIME, 9, 2), '', '', ' '||
				SUBSTR(OC.APPROVAL_TIME, 9, 2)||':' ) || DECODE( SUBSTR(OC.APPROVAL_TIME, 11, 2), '', '', SUBSTR(OC.APPROVAL_TIME, 11, 2) ) AS APPROVAL_TIME,
				MAX(OC.ORDER_ID) AS ORDER_ID,
				MAX(OC.PROCESS_ID) AS ACCESS_NAME,
				MAX(NVL(OC.AMOUNT, 0)) AS OK_AMT1,
				MAX(OOI.GOODS_NM) 
				|| ( CASE WHEN COUNT(OOM.ORDER_ID) OVER(PARTITION BY OC.SUPP_COMP_ID)> 1 THEN ' 외' || (COUNT(OOM.ORDER_ID) OVER(PARTITION BY OC.SUPP_COMP_ID)-1) ||'건'
				             ELSE '' END) AS GOODS_NM,  /*상품명*/                   
				OC.SEQUENCE_NO ,
				DECODE(NVL(OC.STATUS, '00'), 'D1', '발급완료', 'D2', '발급취소', 'P1', '발급거절' , 'E1', '발급실패', '발급요청' ) AS STATUS_NAME,
				OOM.ORDER_STUS_CD ,
				F_GET_ORDER_STUS_MAST_NM(OOM.ORDER_ID) AS ORDER_STUS_NM,
				MAX('58'||OC.APPROVAL_NO) AS APPROVAL_NO /* 승인번호 */,
				SUM(MAX(NVL(OC.AMOUNT, 0))) OVER() SUM_AMT
				, OC.STATUS
			FROM OD_ORDER_MAST OOM
				, OD_ORDER_ITM OOI
				, OD_CASHINFO OC 
				<!-- 요청자 구분 -->
				<isNotEmpty property="searchReqDiv">
				, OD_CASHREQ OCR
				</isNotEmpty>				
		 WHERE 1=1
			AND OOM.ORDER_ID = OOI.ORDER_ID
			AND OOM.ORDER_ID = OC.ORDER_ID
			AND OOI.SUPP_COMP_ID = OC.SUPP_COMP_ID
			<isNotEmpty property="searchReqDiv">
			AND OC.ORDER_ID = OCR.ORDER_ID
			</isNotEmpty>				
			<include refid="cashPublishListQryCondition"/> /* 현금영수증 발행 내역 관리 검색 */   
		GROUP BY OOM.ORDER_ID, OC.APPROVAL_TIME ,  OC.PROCESS_ID , OC.SEQUENCE_NO , OC.STATUS , OOM.ORDER_STUS_CD , OC.APPROVAL_NO , OC.AMOUNT, OC.SUPP_COMP_ID             
	</sql>		
	
	
	<!-- 현금영수증 발행 내역리스트  카운트 -->
	<select id="selectCashPublishListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT COUNT(*) AS TOTCNT
                FROM  (
				<include refid="cashPublishListQry"/> /* 주문관리/세금계산서 관리 검색 */
            )
	</select>		
	
	<!-- 현금영수증 발행 내역 리스트 쿼리 -->	
	<select id="selectCashPublishList" parameterClass ="java.util.HashMap" resultClass="commMap">	
		<include refid="pagingHeader"/>
		SELECT T.ORDER_ID
				, T.ORDER_DATE
				, T.APPROVAL_TIME
				, T.ACCESS_NAME
				, T.OK_AMT1
				, T.GOODS_NM
				, T.SEQUENCE_NO
				, T.STATUS_NAME
				, T.ORDER_STUS_CD
				, T.ORDER_STUS_NM
				, T.APPROVAL_NO
				, T.SUM_AMT
				, T.STATUS
		FROM  
			(			
				<include refid="cashPublishListQry"/> /* 현금영수증 발행 내역 리스트 쿼리 */
			ORDER BY ORDER_DATE DESC, APPROVAL_TIME DESC
			) T			
		<include refid="pagingFooter"/>		
	</select>
	
	<!-- 현금영수증 엑셀 다운로드 -->
	<select id="selectCashMgrExcelList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<include refid="pagingHeader"/>			
		SELECT T.ORDER_ID
				, T.ORDER_DATE
				, T.APPROVAL_TIME
				, T.ACCESS_NAME
				, T.OK_AMT1
				, T.GOODS_NM
				, T.SEQUENCE_NO
				, T.STATUS_NAME
				, T.ORDER_STUS_CD
				, T.ORDER_STUS_NM
				, T.APPROVAL_NO
				, T.SUM_AMT
			FROM  
				(	                	
				<include refid="cashPublishListQry"/> /* 현금영수증 발행 내역 리스트 쿼리 */
			ORDER BY ORDER_DATE DESC, APPROVAL_TIME DESC
			) T
		<include refid="pagingFooter"/>			
	</select>		
	
	<!--  현금영수증 발행 내역리스트 조회 old -->	
	<select id="selectCashPublishList2" parameterClass ="java.util.HashMap" resultClass="commMap">
         SELECT T2.ONUM
		        ,T2.ORDER_ID
			    ,T2.ORDER_DATE
			    ,T2.ACCESS_NAME
			    ,T2.PEOPLENUM
			    ,T2.NAME
			    ,T2.PAYMETHOD
			    ,T2.OK_AMT
			    ,T2.CANCEL_AMT
			    ,T2.OK_AMT1
			    ,T2.CANCEL_AMT1
			    ,T2.OK_VAT1
			    ,T2.OK_PAMT1
			    ,T2.GBN
			    ,T2.JUMIN1
			    ,T2.JUMIN2
			    ,T2.JUMIN3
			    ,T2.jumin_seed_1
			    ,T2.jumin_seed_2
			    ,T2.jumin_seed_3
			    ,T2.jumin_seed_yn
			    ,T2.ORDER_STUS_CD
			    ,T2.ORDER_STUS_NM 
			    ,T2.STATUS
				,T2.STATUS_NAME
				,T2.APPROVAL_TIME
				,T2.TELNO
				,T2.EMAIL 
				,T2.SEQUENCE_NO     
        FROM(
            SELECT
		        <isEmpty property="sidx">
		        	ROW_NUMBER() OVER(ORDER BY T1.ORDER_ID DESC, T1.ORDER_DATE ASC ) AS ONUM	
		        </isEmpty>           
                ,T1.ORDER_ID
			    ,T1.ORDER_DATE
			    ,T1.ACCESS_NAME
			    ,T1.PEOPLENUM
			    ,T1.NAME
			    ,T1.PAYMETHOD
			    ,T1.OK_AMT
			    ,T1.CANCEL_AMT
			    ,T1.OK_AMT1
			    ,T1.CANCEL_AMT1
			    ,T1.OK_VAT1
			    ,T1.OK_PAMT1
			    ,T1.GBN
			    ,T1.JUMIN1
			    ,T1.JUMIN2
			    ,T1.JUMIN3
			    ,T1.jumin_seed_1
			    ,T1.jumin_seed_2
			    ,T1.jumin_seed_3
			    ,T1.jumin_seed_yn
			    ,T1.ORDER_STUS_CD
			    ,(SELECT CM.COMN_CD_NM FROM CM_COMN_CD CM WHERE CM.CD_GRP_ID = 'ORDER_DTAIL_STUS_CD' AND T1.ORDER_STUS_CD = CM.COMN_CD_ID) AS ORDER_STUS_NM 
			    ,T1.STATUS
				,T1.STATUS_NAME
				,T1.APPROVAL_TIME
				,T1.TELNO
				,T1.EMAIL
				,T1.SEQUENCE_NO
            FROM (
            
	            Select A.ORDER_ID,
					    to_char(A.ORDER_DATE,'YYYY-MM-DD HH24:MI:SS') ORDER_DATE,
					    A.ACCESS_NAME,
					    decode(A.PEOPLENUM, null, '', Substr(A.PEOPLENUM,1,6) || '-' || Substr(A.PEOPLENUM,7,1) || '*******') PEOPLENUM,
					    A.NAME,
					    A.PAYMETHOD,
					    nvl(A.OK_AMT     ,0) OK_AMT,
					    nvl(A.CANCEL_AMT ,0) CANCEL_AMT,
					    nvl(B.OK_AMT1    ,0) OK_AMT1,
					    decode(nvl(B.GBN,'4'),'4',0,( nvl(A.AMT,0) - ( nvl(B.OK_AMT1,0) + nvl(B.OK_PAMT1,0)) ))  CANCEL_AMT1,
					    nvl(B.OK_VAT1    ,0) OK_VAT1,
					    nvl(B.OK_PAMT1   ,0) OK_PAMT1,
					    B.GBN,
					    B.JUMIN1,
					    B.JUMIN2,
					    B.JUMIN3,
					    B.jumin_seed_1,
					    B.jumin_seed_2,
					    B.jumin_seed_3,
					    B.jumin_seed_yn,
					    A.ORDER_STUS_CD,
					   NVL(B.STATUS,'00') STATUS,
					     DECODE(NVL(B.STATUS,'00'),'D1','발급완료','D2','발급취소','P1','발급거절' ,'E1','발급실패', '발급요청' ) AS STATUS_NAME,
					    /*to_char(to_Date(B.APPROVAL_TIME,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') APPROVAL_TIME, REMOVE 2016.05.30*/
					    DECODE(LENGTH(B.APPROVAL_TIME), 8, TO_CHAR( TO_DATE(APPROVAL_TIME, 'YY/MM/DD'), 'YYYY-MM-DD')|| ' 00:00:00', TO_CHAR(TO_DATE(B.APPROVAL_TIME, 'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS')  ) AS APPROVAL_TIME,  
					    B.TELNO,
					    B.EMAIL,
					    B.SEQUENCE_NO
					    From (
					        SELECT 
					               A.ORDER_ID,
					               MAX(A.ORDER_DATE)  ORDER_DATE,
					               MAX(A.ACCESS_NAME) ACCESS_NAME,
					               MAX(A.ORDRR_NM)        NAME,
					               MAX(C.PEOPLENUM)   PEOPLENUM,
					               MAX(DECODE(A.SETL_MEAN_CD,'01','온라인','06','즉시이체','기타')) PAYMETHOD,
					               SUM(nvl(DC_APPLY_PRC ,0)) amt,
					               SUM(decode(B.GOODS_CANCEL_YN,'N',nvl(DC_APPLY_PRC ,0) ,0)) ok_amt,
					               SUM(decode(B.GOODS_CANCEL_YN ,'Y',nvl(DC_APPLY_PRC ,0) ,0)) cancel_amt,
					               MAX(B.ORDER_DTAIL_STUS_CD) AS ORDER_STUS_CD
					        FROM  OD_ORDER_MAST A ,   OD_ORDER_ITM  B,     MEMINFO C
					        where  A.ORDER_ID = B.ORDER_ID
					        and    A.ACCESS_NAME = C.ACCESS_NAME(+)
					        <isNotEmpty property="searchFromDt">
						   		<isEqual property="search_ymd_type" compareValue="com_date">
									AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
				 				</isEqual>
								<isEqual property="search_ymd_type" compareValue="req_date">
									AND A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
				 				</isEqual>												
							</isNotEmpty>
							/*
					        AND  B.ORDER_DTAIL_STUS_CD not in ('001','002','R28' )
					        AND A.SETL_MEAN_CD IN ('01','06')
					        */
					        AND A.SETL_MEAN_CD IN ('15', '05', '01', '02','03','04','06','08','10','12','13','20','22','21','23','24','25','26','27','17')
					    group by A.ORDER_ID
					    ) a,
					    ( Select A.ORDER_ID,
					    max(A.gbn   ) GBN,   
					    '000000'     JUMIN1,
					    '00000000' JUMIN2,
					    '0000'         JUMIN3,    
					    max(A.JUMIN_SEED_1)  jumin_seed_1,        
					    max(A.JUMIN_SEED_2)  jumin_seed_2,        
					    max(A.JUMIN_SEED_3)  jumin_seed_3, 
					    max(NVL(A.TELNO1,'') || NVL(A.TELNO2,'') || NVL(A.TELNO3,''))  TELNO,
					    max(NVL(A.EMAIL,''))  EMAIL,       
					    'Y'  jumin_seed_yn,       
					    sum(decode(STATUS,'D1',B.AMOUNT,0)) OK_AMT1,
					    sum(decode(STATUS,'D1',B.VAT,0))    OK_VAT1,
					    sum(decode(STATUS,'E1',1,0))        OK_ERR1,
					    sum(decode(STATUS,'P1',B.AMOUNT,0)) + sum(decode(STATUS,'P1',0,nvl(B.AMOUNT_5000,0))) OK_PAMT1,
					    max(STATUS) AS STATUS,
					    MAX(APPROVAL_TIME) AS APPROVAL_TIME,
					    MAX(SEQUENCE_NO) AS SEQUENCE_NO
					    From OD_CASHREQ A, OD_CASHINFO B
					    Where A.ORDER_ID = B.ORDER_ID(+)
					      AND EXISTS (SELECT 1 FROM (
					                   SELECT  TX.ORDER_ID  FROM OD_ORDER_MAST TX  ,   OD_ORDER_ITM  TI
					                   WHERE TX.ORDER_ID = TI.ORDER_ID          
					                   <isNotEmpty property="searchFromDt">
									   		<isEqual property="search_ymd_type" compareValue="com_date">
												AND TX.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
							 				</isEqual>
											<isEqual property="search_ymd_type" compareValue="req_date">
												AND TX.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
							 				</isEqual>													
										</isNotEmpty>
										/*
					                      AND TI.ORDER_DTAIL_STUS_CD not in ('001','002','R28' )
					                      AND TX.SETL_MEAN_CD IN ('01','06')
										*/
										AND TX.SETL_MEAN_CD IN ('15', '05', '01', '02','03','04','06','08','10','12','13','20','22','21','23','24','25','26','27','17
					                      ) X WHERE X.ORDER_ID = A.ORDER_ID
					                 )
					    <isNotEmpty property="searchFromDt">
					   		<isEqual property="search_ymd_type" compareValue="send_date">
								AND APPROVAL_TIME BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
			 				</isEqual>											
						</isNotEmpty>
					   <isNotEmpty property="checkState">
						AND NVL(B.STATUS,'00') IN 
							<iterate property="checkState" open="(" conjunction=","  close=")" >#checkState[]#</iterate>
						</isNotEmpty>
					    AND B.MSGTYPE IN ( '50','51')
					    GROUP BY A.ORDER_ID
					    ) b
					    Where a.ORDER_ID = b.ORDER_ID

            ) T1
            WHERE 1=1
             )T2
        WHERE 1=1
        <isNotNull property="firstIndex">
        	<isNotNull property="lastIndex">
        		AND T2.ONUM BETWEEN #firstIndex# AND #lastIndex#
        	</isNotNull>
        </isNotNull> 
        	ORDER BY T2.ONUM DESC	
	</select>
	
	
	
	<!-- 현금영수증 발행 내역리스트  카운트 old -->
	<select id="selectCashPublishListTotCnt2" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
                FROM  (
            	 Select A.ORDER_ID
					    From (
					        SELECT 
					               A.ORDER_ID
					        FROM  OD_ORDER_MAST A ,   OD_ORDER_ITM  B,     MEMINFO C
					        where  A.ORDER_ID = B.ORDER_ID
					        and    A.ACCESS_NAME = C.ACCESS_NAME(+)
					        <isNotEmpty property="searchFromDt">
						   		<isEqual property="search_ymd_type" compareValue="com_date">
									AND A.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
				 				</isEqual>
								<isEqual property="search_ymd_type" compareValue="req_date">
									AND A.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
				 				</isEqual>													
							</isNotEmpty>
							/*
					        AND  B.ORDER_DTAIL_STUS_CD not in ('001','002','R28' )
					        AND A.SETL_MEAN_CD IN ('01','06')
					        */
					        AND A.SETL_MEAN_CD IN ('15', '05', '01', '02','03','04','06','08','10','12','13','20','22','21','23','24','25','26','27','17')
					    group by A.ORDER_ID
					    ) a,
					    ( 
					    Select A.ORDER_ID,
					    max(A.gbn   ) GBN,   
					    '000000'     JUMIN1,
					    '00000000' JUMIN2,
					    '0000'         JUMIN3,    
					    max(A.JUMIN_SEED_1)  jumin_seed_1,        
					    max(A.JUMIN_SEED_2)  jumin_seed_2,        
					    max(A.JUMIN_SEED_3)  jumin_seed_3,     
					    max(NVL(A.TELNO1,'') || NVL(A.TELNO2,'') || NVL(A.TELNO3,''))  TELNO,
					    max(NVL(A.EMAIL,''))  EMAIL,      
					    'Y'  jumin_seed_yn,       
					    sum(decode(STATUS,'D1',B.AMOUNT,0)) OK_AMT1,
					    sum(decode(STATUS,'D1',B.VAT,0))    OK_VAT1,
					    sum(decode(STATUS,'E1',1,0))        OK_ERR1,
					    sum(decode(STATUS,'P1',B.AMOUNT,0)) + sum(decode(STATUS,'P1',0,nvl(B.AMOUNT_5000,0))) OK_PAMT1,
					    max(STATUS) AS STATUS,
					    MAX(APPROVAL_TIME) AS APPROVAL_TIME
					    From OD_CASHREQ A, OD_CASHINFO B
					    Where A.ORDER_ID = B.ORDER_ID(+)
					      AND EXISTS (SELECT 1 FROM (
					                   SELECT  TX.ORDER_ID  FROM OD_ORDER_MAST TX  ,   OD_ORDER_ITM  TI
					                   WHERE TX.ORDER_ID = TI.ORDER_ID          
					                   <isNotEmpty property="searchFromDt">
									   		<isEqual property="search_ymd_type" compareValue="com_date">
												AND TX.APPR_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
							 				</isEqual>
											<isEqual property="search_ymd_type" compareValue="req_date">
												AND TX.ORDER_DATE BETWEEN TO_DATE(#searchFromDt#||'000000','YYYYMMDDHH24MISS') AND TO_DATE(#searchToDt#||'235959','YYYYMMDDHH24MISS')
							 				</isEqual>													
										</isNotEmpty>
										/*
					                      AND TI.ORDER_DTAIL_STUS_CD not in ('001','002','R28' )
					                      AND TX.SETL_MEAN_CD IN ('01','06')
										*/
										AND TX.SETL_MEAN_CD IN ('15', '05', '01', '02','03','04','06','08','10','12','13','20','22','21','23','24','25','26','27','17')					                      
					                      ) X WHERE X.ORDER_ID = A.ORDER_ID
					                 )
					    <isNotEmpty property="searchFromDt">
					   		<isEqual property="search_ymd_type" compareValue="send_date">
								AND APPROVAL_TIME BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'235959'
			 				</isEqual>											
						</isNotEmpty> 
						<isNotEmpty property="checkState">
						AND NVL(B.STATUS,'00') IN 
							<iterate property="checkState" open="(" conjunction=","  close=")" >#checkState[]#</iterate>
						</isNotEmpty>
					    AND B.MSGTYPE IN ( '50','51')
					    GROUP BY A.ORDER_ID
					    ) b
					    Where a.ORDER_ID = b.ORDER_ID
            )
	</select>
	
	
	<select id="getInvoiceReq"  parameterClass="java.util.HashMap"   resultClass="commMap">
    
        SELECT /* QUERYID(B_adjust_getInvoiceReq) */
               /* 파일명[파일설명] : sqlmap-adjust.xml[세금계산서 신청 조회] SQL ID : getInvoiceReq */
               A.PURCHASE_ID            AS purchaseId   /* 주문번호 */
              ,A.ACCESS_NAME            AS accessName   /* 사용자 아이디 */
              ,A.REGNUM                 AS regnum       /* 사업자등록번호 */
              ,A.REG_DATE               AS regDate      /* 신청일자 */
              ,A.ONOFFLINE              AS onoffline    /* 온오픈라인 */
              ,A.STATE                  AS state        /* 상태 */
        FROM X_INVOICE_REQ A
        WHERE A.ACCESS_NAME = #accessName#
        AND   A.PURCHASE_ID = #orderId#
        AND   NVL(A.STATE,'00') NOT IN ('00','T0','60','90')
        
    </select>
    
    <select id="getInvoiceInfo"  parameterClass="java.util.HashMap"   resultClass="commMap">
        SELECT /* QUERYID(B_adjust_getInvoiceInfo) */
               /* 파일명[파일설명] : sqlmap-adjust.xml[세금계산서 신청 조회] SQL ID : getInvoiceInfo */
               ACCESS_NAME    AS accessName         /* 사용자 아이디 */
              ,REGNUM         AS regnum             /* 사업자등록번호 */
              ,CMPNAME        AS cmpname            /* 사업장명 */
              ,OWNER          AS owner              /* 대표자명 */
              ,BIZTYPE        AS biztype            /* 업태 */
              ,BIZKIND        AS bizkind            /* 종목 */
              ,ADDRESS        AS address            /* 주소 */
              ,REG_NAME       AS regName            /* 담당자명 */
              ,REG_EMAIL      AS regEmail           /* 담당자 메일 */
              ,REG_TEL        AS regTel             /* 담당자 연락처 */
              ,REG_DATE       AS regDate            /* 등록 일자 */
        FROM X_INVOICE_INFO
        WHERE 1=1
        <isNotEmpty property="csf">
        AND ACCESS_NAME = 'csf'
        </isNotEmpty>
        <isEmpty property="csf">
        AND ACCESS_NAME = #accessName#
        AND REG_DATE || REGNUM  = (SELECT MAX(REG_DATE||REGNUM)
                                   FROM X_INVOICE_INFO
                                   WHERE ACCESS_NAME = #accessName#)
        </isEmpty>
    </select>    
    
    <insert id="getInsertInvoiceReq"         parameterClass="java.util.HashMap">
    
        INSERT INTO X_INVOICE_REQ (
             /* 파일명[파일설명] : sqlmap-adjust.xml[세금계산서 신청] SQL ID : getInsertInvoiceReq */
             PURCHASE_ID       /*   주문번호 */
            ,ACCESS_NAME       /*   사용자 아이디 */
            ,REGNUM            /*   사업자등록번호 */
            ,REG_DATE          /*   신청일자 */
            ,ONOFFLINE         /*   온오픈라인 */
            ,STATE             /*   상태 */
        ) VALUES (
             #orderId#
            ,#accessName#
            ,#regnum#
            ,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
            ,#onoffline#
            ,#state#
        )
        
    </insert>    
    
    <update id="getMergeInvoiceInfo"      parameterClass="java.util.HashMap">
    
        MERGE INTO X_INVOICE_INFO
        USING DUAL 
           ON (ACCESS_NAME = #accessName# AND REGNUM = #regnum#)
        WHEN MATCHED THEN    
            UPDATE SET
                 CMPNAME    = #cmpname#
                ,OWNER      = #owner#
                ,BIZTYPE    = #biztype#
                ,BIZKIND    = #bizkind#
                ,ADDRESS    = #address#
                ,REG_NAME   = #regName#
                ,REG_EMAIL  = #regEmail#
                ,REG_TEL    = #regTel#
                ,REG_DATE   = TO_CHAR(SYSDATE,'YYYYMMDD')
        WHEN NOT MATCHED THEN
            INSERT (
                 ACCESS_NAME
                ,REGNUM
                ,CMPNAME
                ,OWNER
                ,BIZTYPE
                ,BIZKIND
                ,ADDRESS
                ,REG_NAME
                ,REG_EMAIL
                ,REG_TEL
                ,REG_DATE
            ) VALUES (
                 #accessName#
                ,#regnum#
                ,#cmpname#
                ,#owner#
                ,#biztype#
                ,#bizkind#
                ,#address#
                ,#regName#
                ,#regEmail#
                ,#regTel#
                ,TO_CHAR(SYSDATE,'YYYYMMDD')
            )
    </update>    
    
    <delete id="getDeleteInvoiceReq"     parameterClass="java.util.HashMap">
        /* 파일명[파일설명] : tax.xml[세금계산서 신청 정보 삭제] SQL ID : getDeleteInvoiceReq */
        DELETE FROM X_INVOICE_REQ
         WHERE PURCHASE_ID = #orderId#
           AND ACCESS_NAME = #accessName#
    </delete>
    
    <delete id="getDeleteInvoiceReqComp"     parameterClass="java.util.HashMap">
        /* 파일명[파일설명] : tax.xml[세금계산서 신청 정보 삭제] SQL ID : getDeleteInvoiceReqComp */
        DELETE FROM X_INVOICE_REQ
         WHERE PURCHASE_ID = #orderId#
           AND ACCESS_NAME = #accessName#
    </delete>
    
    <delete id="getDeleteInvoiceTbl"    parameterClass="java.util.HashMap">
        /* 파일명[파일설명] : tax.xml[세금계산서 신청 내역 삭제] SQL ID : getDeleteInvoiceTbl */
        DELETE FROM X_INVOICE_TBL
         WHERE ATTR02   = #orderId#
           AND PROCFLAG = 'T0'
    </delete>
    
    <delete id="getDeleteInvoiceTblComp"    parameterClass="java.util.HashMap">
        /* 파일명[파일설명] : tax.xml[세금계산서 신청 내역 삭제] SQL ID : getDeleteInvoiceTblComp1 */
        DELETE FROM X_INVOICE_TBL
         WHERE ATTR02   = #orderId#
           AND DEMREGNUM = #supregnum#
           AND PROCFLAG = 'T0'
    </delete>
    
    <delete id="getDeleteInvoiceTblComp2"    parameterClass="java.util.HashMap">
        /* 파일명[파일설명] : tax.xml[세금계산서 신청 내역 삭제] SQL ID : getDeleteInvoiceTblComp2 */
        DELETE FROM X_INVOICE_TBL
         WHERE ATTR02   = #orderId#
           AND PROCFLAG = 'T0'
    </delete>
    
    <insert id="insertInvoiceTbl" parameterClass="CommMap">
    	
        INSERT INTO X_INVOICE_TBL (
             /* 파일명[파일설명] : sqlmap-TaxMgr_SQL.xml[관리자세금계산서 수동신청] SQL ID : insertInvoiceTbl */
             INVDATE
            ,INVSEQ
            ,INVTYPE0
            ,INVTYPE1
            ,INVTYPE2
            ,INVTYPE3
            ,INVTYPE4
            ,SNDMSTID
            ,SNDUSRNAME
            ,SNDEMAIL
            ,SNDTEL
            ,ISPOSTING
            ,RCVMSTID
            ,RCVUSRNAME
            ,RCVEMAIL
            ,RCVTEL
            ,AGNMSTID
            ,AGNUSRNAME
            ,AGNEMAIL
            ,AGNTEL
            ,PROCFLAG	/* 21 */
            ,PROCDATE	/*22 */
            ,BPROCFLAG
            ,BPROCDATE
            ,ATTR01
            ,ATTR02
            ,ATTR03
            ,ATTR04
            ,ATTR05
            ,ATTR06
            ,ATTR07
            ,ATTR08
            ,ATTR09
            ,ATTR10
            ,ATTR11
            ,ATTR12
            ,ATTR13
            ,ATTR14
            ,ATTR15
            ,ATTR16
            ,ATTR17
            ,ATTR18
            ,ATTR19
            ,ATTR20
            ,INVHASH
            ,SUPREGNUM
            ,SUPCMPNAME
            ,SUPOWNER
            ,SUPBIZTYPE
            ,SUPBIZKIND
            ,SUPADDRESS
            ,DEMREGNUM
            ,DEMCMPNAME
            ,DEMOWNER
            ,DEMBIZTYPE
            ,DEMBIZKIND
            ,DEMADDRESS
            ,AGNREGNUM
            ,AGNCMPNAME
            ,AGNOWNER
            ,AGNBIZTYPE
            ,AGNBIZKIND
            ,AGNADDRESS
            ,ITEM1
            ,ITEMSTD1
            ,ITEMPRC1
            ,ITEMQTY1
            ,ITEMDATE1
            ,ITEMAMT1
            ,ITEMSTAX1
            ,ITEMMEMO1
            ,ITEM2
            ,ITEMSTD2
            ,ITEMPRC2
            ,ITEMQTY2
            ,ITEMDATE2
            ,ITEMAMT2
            ,ITEMSTAX2
            ,ITEMMEMO2
            ,ITEM3
            ,ITEMSTD3
            ,ITEMPRC3
            ,ITEMQTY3
            ,ITEMDATE3
            ,ITEMAMT3
            ,ITEMSTAX3
            ,ITEMMEMO3
            ,ITEM4
            ,ITEMSTD4
            ,ITEMPRC4
            ,ITEMQTY4
            ,ITEMDATE4
            ,ITEMAMT4
            ,ITEMSTAX4
            ,ITEMMEMO4
            ,PUBDATE
            ,AMTBLANK
            ,SUPTOTAMT
            ,SURTAX
            ,SUMAMT
            ,CASHAMT
            ,CHECKAMT
            ,BILLAMT
            ,CREDITAMT
            ,DEALTYPE
            ,BOOKNUM1
            ,BOOKNUM2
            ,BOOKNUM3
            ,REMARK
            , SEND_DATE
        ) VALUES (
            , #invdate#
            , #invseq#
            , #invtype0#
            ,#invtype1#
            ,#invtype2#
            ,#invtype3#
            ,#invtype4#
            ,#sndmstid#
            ,#sndusrname#
            , #sndemail#
            ,#sndtel#
            ,#isposting#
            ,#rcvmstid#
            ,#rcvusrname#
            ,#rcvemail#
            ,#rcvtel#
            ,#agnmstid#
            ,#agnusrname#
            ,#agnemail#
            ,#agntel#
            ,#procflag#
            , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') /* 22 */
            , NVL(#bprocflag#,'')
            , NVL(#bprocdate#,'')
            ,'2'
            ,#attr02#
            ,#attr03#
            ,#attr04#
            ,#attr05#
            ,#attr06#
            ,#attr07#
            ,#attr08#
            ,#attr09#
            ,#attr10#
            ,#attr11#
            ,#attr12#
            ,#attr13#
            ,#attr14#
            ,#attr15#
            ,#attr16#
            ,#attr17#
            ,#attr18#
            ,#attr19#
            ,#attr20#
            ,#invhash#
            ,#supregnum#
            , SUBSTRB(#supcmpname#, 0, 60)
            , SUBSTRB(#supowner#, 0, 60)
            , SUBSTRB(#supbiztype#, 0, 60)
            , SUBSTRB(#supbizkind#, 0, 60)
            , SUBSTRB(#supaddress#, 0, 100)
            ,#demregnum#
            , SUBSTRB(#demcmpname#, 0, 60)
            , SUBSTRB(#demowner#, 0, 60)
            , SUBSTRB(#dembiztype#, 0, 60)
            , SUBSTRB(#dembizkind#, 0, 60)
            , SUBSTRB(#demaddress#, 0, 100)
            ,#agnregnum#
            ,#agncmpname#
            ,#agnowner#
            , SUBSTRB(#agnbiztype#, 0, 60)
            , SUBSTRB(#agnbizkind#, 0, 60)
            , SUBSTRB(#agnaddress#, 0, 100)
            ,#item1#
            ,#itemstd1#
            ,#itemprc1#
            ,#itemqty1#
			, #itemdate1# 
            ,#itemamt1#
            ,#itemstax1#
            ,#itemmemo1#
            ,#item2#
            ,#itemstd2#
            ,#itemprc2#
            ,#itemqty2#
            ,#itemdate2#
            ,#itemamt2#
            ,#itemstax2#
            ,#itemmemo2#
            ,#item3#
            ,#itemstd3#
            ,#itemprc3#
            ,#itemqty3#
            ,#itemdate3#
            ,#itemamt3#
            ,#itemstax3#
            ,#itemmemo3#
            ,#item4#
            ,#itemstd4#
            ,#itemprc4#
            ,#itemqty4#
            ,#itemdate4#
            ,#itemamt4#
            ,#itemstax4#
            ,#itemmemo4#
<!--            ,#pubdate# -->
            ,TO_CHAR(LAST_DAY(SYSDATE),'YYYYMMDD')
            ,11-length(#amtblank#)
            ,#suptotamt#
            ,#surtax#
            ,#suptotamt# + #surtax#
            ,NVL(#cashamt#,0)
            ,NVL(#checkamt#,0)
            ,NVL(#billamt#,0)
            ,NVL(#creditamt#,0)
            ,#dealtype#
            ,#booknum1#
            ,#booknum2#
            ,#booknum3#
            , SUBSTRB(#remark#, 0, 60)
            , SYSDATE
        )

    </insert> 
    
    <!-- 수수료세금계산서 대상정보 조회 -->
	<select id="selectFeeTaxInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT '1' AS INVTYPE3 			/* 수수료 */
				, '1' AS INVTYPE2		/*과세 */
                , '1' AS TAXT_DIV_CD 
                , GOODS_CNT        /* 수량 */
                , SUPTOTAMT        /* 공급가액 합계 */
                , SURTAX            /*  세     액*/
                , SUMAMT                /* 단가(세액+공급가액 */
                <!-- 창구판매 분기 수수료에서 사용하지 않음 -->
                <isEqual property="jobidType2" compareValue="1100">
                , SUBSTR(#orderId#, 0,4)||'년'||SUBSTR(#orderId#,5,2)||'월' || '창구판매 진흥원 운영수수료(통합)' AS ITEM1
                </isEqual>
                <!-- 사용하지 않음 -->
				<isNotEqual property="jobidType2" compareValue="1100">
                , SUBSTR(#orderId#, 0,4)||'년'||SUBSTR(#orderId#,5,2)||'월' || '우체국쇼핑 운영수수료(통합)' AS ITEM1
                </isNotEqual>
                , A.COM_DATE AS ITEMDATE1		/* 발행일 */
                , '' AS ITEMSTD1        /*규격 */
                , '' AS ITEMQTY1        /* 수량 */
                , SUMAMT AS ITEMPRC1        /*  단가 */
                , SUPTOTAMT AS ITEMAMT1       /*공급가액 */
                , SURTAX AS ITEMSTAX1          /*세액 */
                , '매출/과세/일반발행::'||SUBSTR(#orderId#, 0,4)||'년'||SUBSTR(#orderId#,5,2)||'월' AS ITEMMEMO1
                , '판매수량 : '||GOODS_CNT AS ITEM2
                , '판매금액 : '||GOODS_AMT AS ITEM3 	
	            /* , TO_CHAR(SYSDATE,'YYYYMMDD') AS INVDATE */
	            , COM_DATE AS INVDATE		/* 발행시 쿼리는 해당월의 마지막일로 세팅 */
	            ,TRIM(TO_CHAR(INV_SEQ.NEXTVAL,'00000000'))  AS INVSEQ 
	            , SUPREGNUM
	            , SUPCMPNAME
	            , SUPOWNER
	            , SUPBIZTYPE
	            , SUPBIZKIND
	            , SUPADDRESS
	            , SNDUSRNAME
	            , SNDEMAIL
	            , SNDTEL
	            , DEMREGNUM		/* 공급받는자 사업자등록번호 */
	            , CORP_SSN		/* 개인 주민등록번호 */
	            , SUPP_COMP_DIV_CD	/* 공급업체구분 */
	            , DEMCMPNAME
	            , DEMOWNER
	            , DEMBIZTYPE
	            , DEMBIZKIND
	            , DEMADDRESS
	            , RCVUSRNAME
	            , NVL(RCVEMAIL, 'guest@epost.go.kr') AS RCVEMAIL	/* 임시 */
	            , '매출/과세/일반발행::'||SUBSTR(#orderId#, 0,4)||'년'||SUBSTR(#orderId#,5,2)||'월' AS REMARK
		    FROM
				(
				SELECT NVL(SUM(ITEMQTY),0) GOODS_CNT
						, NVL(SUM(OIT.ITEMPRC),0)    GOODS_AMT
						, NVL(SUM(SUPTOTAMT),0) SUPTOTAMT	/* 합계액 */
						, NVL(SUM(SURTAX),0)    SURTAX		/* 세액 */
						, NVL(SUM(SUMAMT),0)    SUMAMT    /*공급가액 */  	
						, MAX(B.COMPREG_NO) AS DEMREGNUM
						, MAX(B.CORP_SSN) AS CORP_SSN		/* 생활마트 개인으로 발행 */
						, MAX(B.CORP_SSN) AS SUPP_COMP_DIV_CD		/* 공급업체구분 */
						, MAX(TAX_CALDOC_COMP_NM) AS DEMCMPNAME                         /*세금계산서 업체명*/
						, MAX(B.PRSDT_NM) AS DEMOWNER                                   /*대표자명*/
						, MAX(INDUTY) AS DEMBIZTYPE       /* 업태명 CO_SUPP_COMP_MAST 컬럼설명 바뀌어 있음 */
						, MAX(ENTRPS) AS DEMBIZKIND      /* 종목명(업종) */
						, MAX(SEND_ADDR || SEND_DTAIL_ADDR) AS DEMADDRESS
						, MAX(PRSDT_NM) AS RCVUSRNAME /* 담당자명 값없음 */
						, MAX(EMAIL) AS RCVEMAIL            /*이메일 */
						, MAX( TO_CHAR(LAST_DAY(TO_DATE(SUBSTR(OIT.DAYS,1,6),'yyyymm')),'yyyymmdd') ) AS COM_DATE																           
					FROM OD_INVOICE_TAX OIT
						, CO_SUPP_COMP_MAST B    
				WHERE 1=1
						AND OIT.BIZ_CODE= B.SUPP_COMP_ID
						AND OIT.BIZ_CODE = #bizCode#
						AND OIT.DAYS BETWEEN SUBSTR(#orderId#, 0,6)||'01' AND SUBSTR(#orderId#, 0,6)||'31'	
				) A
				,
				(
				SELECT REGNUM AS SUPREGNUM                  /* 사업자등록번호 */
					, CMPNAME AS SUPCMPNAME           /* 사업장명 */
					, OWNER AS SUPOWNER            /* 대표자명 */
					, BIZTYPE AS SUPBIZTYPE            /* 업태 */
					, BIZKIND AS SUPBIZKIND          /* 종목 */
					, ADDRESS AS SUPADDRESS            /* 주소 */
					, REG_NAME AS SNDUSRNAME         /* 담당자명 */
					, REG_EMAIL AS SNDEMAIL      /* 담당자 메일 */
					, REG_TEL AS SNDTEL         /* 담당자 연락처 */
				FROM X_INVOICE_INFO
					WHERE 1=1
							AND ACCESS_NAME = 'csf' 				
				) XII
		    WHERE 1=1	
	   </select>
    
    <!--  세금계산서(위수탁) 대상정보 조회 -->	
	<select id="selectTaxInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		    SELECT
					INVDATE
					, INVSEQ				
		            ,INVTYPE0
		            ,INVTYPE1
		            ,INVTYPE2
		            ,INVTYPE3
		            ,INVTYPE4
		            ,SNDMSTID
		            ,SNDUSRNAME
		            ,SNDEMAIL
		            ,SNDTEL
		            ,ISPOSTING
		            ,RCVMSTID
		            ,RCVUSRNAME
		            ,RCVEMAIL
		            ,RCVTEL
		            ,AGNMSTID
		            ,AGNUSRNAME
		            ,AGNEMAIL
		            ,AGNTEL
		            ,PROCFLAG
		            ,PROCDATE
		            ,BPROCFLAG
		            ,BPROCDATE
		            ,ATTR01
		            ,ATTR02
		            ,ATTR03
		            ,ATTR04
		            ,ATTR05
		            ,ATTR06
		            ,ATTR07
		            ,ATTR08
		            ,ATTR09
		            ,ATTR10
		            ,ATTR11
		            ,ATTR12
		            ,ATTR13
		            ,ATTR14
		            ,ATTR15
		            ,ATTR16
		            ,ATTR17
		            ,ATTR18
		            ,ATTR19
		            ,ATTR20
		            ,INVHASH
		            ,SUPREGNUM
		            ,SUPCMPNAME
		            ,SUPOWNER
		            ,SUPBIZTYPE
		            ,SUPBIZKIND
		            ,SUPADDRESS
		            ,DEMREGNUM
		            ,DEMCMPNAME
		            ,DEMOWNER
		            ,DEMBIZTYPE
		            ,DEMBIZKIND
		            ,DEMADDRESS
		            ,AGNREGNUM
		            ,AGNCMPNAME
		            ,AGNOWNER
		            ,AGNBIZTYPE
		            ,AGNBIZKIND
		            ,AGNADDRESS
		            ,ITEM1
		            ,ITEMSTD1
		            ,ITEMPRC1
		            ,ITEMQTY1
		            ,ITEMDATE1
		            ,ITEMAMT1
		            , NVL(ITEMSTAX1, 0) AS ITEMSTAX1
		            ,ITEMMEMO1
		            ,ITEM2
		            ,ITEMSTD2
		            ,ITEMPRC2
		            ,ITEMQTY2
		            ,ITEMDATE2
		            ,ITEMAMT2
		            , NVL(ITEMSTAX2, 0) AS ITEMSTAX2
		            ,ITEMMEMO2
		            ,ITEM3
		            ,ITEMSTD3
		            ,ITEMPRC3
		            ,ITEMQTY3
		            ,ITEMDATE3
		            ,ITEMAMT3
		            ,ITEMSTAX3
		            ,ITEMMEMO3
		            ,ITEM4
		            ,ITEMSTD4
		            ,ITEMPRC4
		            ,ITEMQTY4
		            ,ITEMDATE4
		            ,ITEMAMT4
		            ,ITEMSTAX4
		            ,ITEMMEMO4
		            ,PUBDATE
		            ,AMTBLANK
		            ,SUPTOTAMT
		            ,SURTAX
		            ,SUMAMT
		            ,CASHAMT
		            ,CHECKAMT
		            ,BILLAMT
		            ,CREDITAMT
		            ,DEALTYPE
		            ,BOOKNUM1
		            ,BOOKNUM2
		            ,BOOKNUM3
		            , REMARK
		            , SEND_DATE
		            , TO_CHAR(SYSDATE, 'YYYYMMDD') AS MODIFY_DATE /* 세금계산서 수정시 작성일자 */
		            , ROWNUM AS RNUM
				FROM X_INVOICE_TBL 
					WHERE 1=1
						AND ATTR02   = #orderId#		/* ORDER_ID */
				<!-- 수수료 세금계산서 -->
		        <isEqual property="invtype3" compareValue="1">
				 		AND ATTR03 = 'csf'
				 		AND ATTR06 = #bizCode#			/* SUPP_COMP_ID */
				</isEqual>
				<!-- 위수탁 세금계산서 modify -->
				<isEqual property="invtype3" compareValue="2">
		 				AND ATTR06	  = #attr06#		/* suppCompId */
		 				<isEqual property="isModify" compareValue="Y">
		 				AND PROCFLAG = '80'				/* 발행상태인것만 */
		 				AND INVDATE = #invdate#
		 				AND INVSEQ = #invseq#
						</isEqual>	
				</isEqual>
	</select>
	
	
    <!--  세금계산서(위수탁) 관리자 수동 발행 -->	
	<select id="selectTaxInfoAdmin" parameterClass ="java.util.HashMap" resultClass="commMap">
	SELECT A.*
			/* 관리자 수동발행시 */
         	, TRIM(TO_CHAR(INV_SEQ.NEXTVAL,'00000000')) AS INVSEQ
         	, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') AS PROCDATE
		FROM
			(
		    SELECT
		            INVTYPE0
		            ,INVTYPE1
		            ,INVTYPE2
		            ,INVTYPE3
		            ,INVTYPE4
		            , ITEMDATE1 AS INVDATE        /* 위수탁 발행일자는 주문일자로 세팅 */    
		            ,SNDMSTID
		            ,SNDUSRNAME
		            ,SNDEMAIL
		            ,SNDTEL
		            ,ISPOSTING
		            ,RCVMSTID
		            ,RCVUSRNAME
		            ,RCVEMAIL
		            ,RCVTEL
		            ,AGNMSTID
		            ,AGNUSRNAME
		            ,AGNEMAIL
		            ,AGNTEL
		            ,PROCFLAG
		            ,PROCDATE
		            ,BPROCFLAG
		            ,BPROCDATE
		            ,ATTR01
		            ,ATTR02
		            ,ATTR03
		            ,ATTR04
		            ,ATTR05
		            ,ATTR06
		            ,ATTR07
		            ,ATTR08
		            ,ATTR09
		            ,ATTR10
		            ,ATTR11
		            ,ATTR12
		            ,ATTR13
		            ,ATTR14
		            ,ATTR15
		            ,ATTR16
		            ,ATTR17
		            ,ATTR18
		            ,ATTR19
		            ,ATTR20
		            ,INVHASH
		            ,SUPREGNUM
		            ,SUPCMPNAME
		            ,SUPOWNER
		            ,SUPBIZTYPE
		            ,SUPBIZKIND
		            ,SUPADDRESS
		            ,DEMREGNUM
		            ,DEMCMPNAME
		            ,DEMOWNER
		            ,DEMBIZTYPE
		            ,DEMBIZKIND
		            ,DEMADDRESS
		            ,AGNREGNUM
		            ,AGNCMPNAME
		            ,AGNOWNER
		            ,AGNBIZTYPE
		            ,AGNBIZKIND
		            ,AGNADDRESS
		            ,ITEM1
		            ,ITEMSTD1
		            , AA.SUMAMT AS ITEMPRC1
		            , AA.ordCnt AS ITEMQTY1
		            ,ITEMDATE1
		            , AA.SUPTOTAMT AS ITEMAMT1
		            , NVL(AA.SURTAX, 0) AS ITEMSTAX1
		            , FLOOR(AA.SUMAMT / AA.ordCnt) AS UNIT_COST			/*단가 */
		            ,ITEMMEMO1
		            ,ITEM2
		            ,ITEMSTD2
		            ,ITEMPRC2
		            ,ITEMQTY2
		            ,ITEMDATE2
		            ,ITEMAMT2
		            , NVL(ITEMSTAX2, 0) AS ITEMSTAX2
		            ,ITEMMEMO2
		            ,ITEM3
		            ,ITEMSTD3
		            ,ITEMPRC3
		            ,ITEMQTY3
		            ,ITEMDATE3
		            ,ITEMAMT3
		            ,ITEMSTAX3
		            ,ITEMMEMO3
		            ,ITEM4
		            ,ITEMSTD4
		            ,ITEMPRC4
		            ,ITEMQTY4
		            ,ITEMDATE4
		            ,ITEMAMT4
		            ,ITEMSTAX4
		            ,ITEMMEMO4
		            ,PUBDATE
		            ,AMTBLANK
		            , AA.SUPTOTAMT
		            , AA.SURTAX
		            , AA.SUMAMT
		            ,CASHAMT
		            ,CHECKAMT
		            ,BILLAMT
		            ,CREDITAMT
		            ,DEALTYPE
		            ,BOOKNUM1
		            ,BOOKNUM2
		            ,BOOKNUM3
		            , REMARK
		            , SEND_DATE
		            , TO_CHAR(SYSDATE, 'YYYYMMDD') AS MODIFY_DATE /* 세금계산서 수정시 작성일자 */
		            , ROWNUM AS RNUM
				FROM X_INVOICE_TBL 
                        ,
                        (
                        /* 결제금액만 다시 가져옴 */
                        SELECT INFO.*
                            FROM
                                (
                                SELECT ROW_NUMBER() OVER(PARTITION BY T4.SUPP_COMP_ID ORDER BY T2.ORDER_ITM_ID ASC) AS rowIdx
                                        , SUM(T2.DC_APPLY_PRC + T2.OPTN_GOODS_APPLY_PRC + T2.SEND_PRC - T2.CPN_DC_AMT) OVER(PARTITION BY T4.SUPP_COMP_ID) AS SUMAMT        /* 판매가(상품가+옵션가+배송비-쿠폰사용액)     */  
                                        , 
                                        SUM( DECODE(T3.VAT_YN, 'Y'
                                                    , ROUND( (T2.DC_APPLY_PRC + T2.OPTN_GOODS_APPLY_PRC + T2.SEND_PRC - T2.CPN_DC_AMT)/1.1 )
                                                    , (T2.DC_APPLY_PRC + T2.OPTN_GOODS_APPLY_PRC + T2.SEND_PRC - CPN_DC_AMT)) 
                                        ) OVER(PARTITION BY T4.SUPP_COMP_ID) AS SUPTOTAMT        /* 공급가액 (판매가/1.1) */
                                        , SUM( DECODE(T3.VAT_YN, 'Y'
                                                        , (T2.DC_APPLY_PRC + T2.OPTN_GOODS_APPLY_PRC + T2.SEND_PRC - T2.CPN_DC_AMT) - ROUND( (T2.DC_APPLY_PRC + T2.OPTN_GOODS_APPLY_PRC + T2.SEND_PRC - T2.CPN_DC_AMT)/1.1 )                         
                                                        , 0) 
                                        ) OVER(PARTITION BY T4.SUPP_COMP_ID) AS SURTAX  /* 판매가 - 공급가 : 부가세 */   
                                        ,  COUNT(T1.ORDER_ID) OVER(PARTITION BY T4.SUPP_COMP_ID) AS ordCnt  
                                FROM OD_ORDER_MAST T1
                                        ,  OD_ORDER_ITM T2
                                        ,  GD_GOODS_MAST T3
                                        ,  CO_SUPP_COMP_MAST T4
                                        ,  OD_ORDER_SETL T5
                                WHERE 1=1
                                        AND T1.ORDER_ID = T2.ORDER_ID
                                        AND T2.GOODS_CD = T3.GOODS_CD
                                        AND T3.SUPP_COMP_ID = T4.SUPP_COMP_ID
                                        AND T1.ORDER_ID = T5.ORDER_ID
                                        AND T2.ORDER_ID = #orderId#      
                                        AND T2.SUPP_COMP_ID = #attr06#        /* suppCompId */        
                                ) INFO
                                WHERE ROWIDX = '1'                                
                        ) AA				
					WHERE 1=1
						AND ATTR02   = #orderId#		/* ORDER_ID */
				<!-- 수수료 세금계산서 -->
		        <isEqual property="invtype3" compareValue="1">
				 		AND ATTR03 = 'csf'
				 		AND ATTR06 = #bizCode#			/* SUPP_COMP_ID */
				</isEqual>
				<!-- 위수탁 세금계산서 modify -->
				<isEqual property="invtype3" compareValue="2">
		 				AND ATTR06	  = #attr06#		/* suppCompId */
		 				<isEqual property="isModify" compareValue="Y">
		 				AND PROCFLAG = '80'				/* 발행상태인것만 */
						</isEqual>	
				</isEqual>
				ORDER BY ROWNUM DESC
			) A
			WHERE ROWNUM = 1				
	</select>	
	
	
	<!--  인터넷 수수료 세금계산서 대상 조회 -->	
	<select id="selectTaxOrderInfo11" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT 
                A.PURCHASE_ID AS ORDER_ID
	           , A.REGISTER_NO AS  SUPREGNUM
	           , A.TAX_STATE   AS TAX_STATE 
	           , A.COM_DATE AS ITEMDATE1 
	           , A.DAYS  
	           , TO_NUMBER(SUBSTR(A.COM_DATE,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) CLOSE_DATE
	           , SUBSTR(A.COM_DATE,5,4) APPR_DATE
	           , TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) AS TO_DATE1
	           , '1' TAXT_DIV_CD 
	           , '과세'  TAXT_DIV_NM
                 ,   (
                         SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                         FROM PIEMT0160 
                         WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                         AND   HOLDAYYN = 'N'
                         AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                         AND   RCOCD = '00'
                     ) TAX_LAST_YMD
                 , A.ACCESS_NAME
				 , A.REQ_NAME
				 , A.REQ_NAME AS SUPCMPNAME
				 , A.BIZ_NAME AS  DEMCMPNAME
				 , A.BOSS_NAME
				 , A.BUSINESS_COND
				 , A.BUSINESS_CATE
				 , A.ADDRESS
				 , A.TELEPHONE
				 , A.EMAIL
				 , A.SUPTOTAMT ITEMAMT1
				 , A.SURTAX ITEMSTAX1
				 , CASE  WHEN SUBSTR(A.PURCHASE_ID,6,8) = '02'  THEN  SUBSTR(A.PURCHASE_ID,4,6) || '월우체국쇼핑운영수수료(추가)' ELSE '우체국쇼핑 운영수수료(통합)' END  ITEM1
				 , '1' ONOFFLINE
				 ,'1' INVTYPE3 
				 , A.PROCDATE 
				 , A.GOODS_AMT
	             , A.GOODS_CNT
	             , A.SUPTOTAMT
	             , A.SURTAX
	             , A.SUMAMT
           		 , A.S_GOODS_AMT
           		 , A.S_GOODS_CNT
				 , A.S_SUMAMT
				 , A.BIZ_CODE
			 FROM (
			        SELECT 
				            SUBSTR(A.DAYS,1,6) DAYS,
				            SUBSTR(A.DAYS,1,6) || DECODE(A.JOBID,'01','01','02','01','03','01','04','01','02') PURCHASE_ID,
				            A.BIZ_CODE           BIZ_CODE,
				            min(decode(a.jobid,'01',to_char(last_day(to_date(substr(a.days,1,6),'yyyymm')),'yyyymmdd'),
                           '02',to_char(last_day(to_date(substr(a.days,1,6),'yyyymm')),'yyyymmdd'),
                           '03',to_char(last_day(to_date(substr(a.days,1,6),'yyyymm')),'yyyymmdd'),
                           '04',to_char(last_day(to_date(substr(a.days,1,6),'yyyymm')),'yyyymmdd'),
                              to_char(add_months(to_date(substr(a.days,1,6),'yyyymm'),1),'yyyymm') || '10' )) com_date,
				            '1'                   TAXGBN,
				            '1'                  SHOP_ID,
				            'csf'                   ACCESS_NAME,
				            (SELECT CMPNAME FROM  X_INVOICE_INFO INFO WHERE  ACCESS_NAME  = 'csf') REQ_NAME,
				            (SELECT REGNUM   FROM  X_INVOICE_INFO INFO WHERE  ACCESS_NAME  = 'csf') REQ_REGNUM,
				            MAX(B.COMPREG_NO)                 REGISTER_NO,
				            SUBSTRB(MAX(B.TAX_CALDOC_COMP_NM),1,60)      BIZ_NAME,
				            SUBSTRB(MAX(B.PRSDT_NM ),1,60)     BOSS_NAME,
				            SUBSTRB(MAX(B.INDUTY),1,60) BUSINESS_COND,
    						SUBSTRB(MAX(B.ENTRPS),1,60) BUSINESS_CATE,
    						SUBSTRB(MAX(CASE WHEN  TRIM(NVL(B.ROADNM_POST_ADDR,'')) = '' THEN B.ADDR1 || ' ' || B.ADDR2 ELSE B.ROADNM_POST_ADDR || ' ' || B.ROADNM_DTAIL_ADDR END),1,100) ADDRESS,
        					SUBSTRB(NVL(MAX(B.TELNO),' '),1,20) TELEPHONE,
        					SUBSTRB(NVL(MAX(B.EMAIL),' '),1,100) EMAIL,  
        					NVL(MAX(ITEMMEMO),' ')   TAX_STATE,
				            NVL(SUM(A.ITEMPRC),0)    GOODS_AMT,
				            NVL(SUM(A.ITEMQTY),0)    GOODS_CNT,
				            NVL(SUM(A.SUPTOTAMT),0) SUPTOTAMT,
				            NVL(SUM(A.SURTAX),0)    SURTAX,
				            NVL(SUM(A.SUMAMT),0)    SUMAMT,
			           		NVL(SUM(A.ITEMPRC),0) S_GOODS_AMT,
			           		NVL(SUM(A.ITEMQTY),0) S_GOODS_CNT,
			            	NVL(SUM(A.SUPTOTAMT),0) S_SUPTOTAMT,
			            	NVL(SUM(A.SURTAX),0) S_SURTAX,
			            	NVL(SUM(A.SUMAMT),0) S_SUMAMT,
			            	MAX(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) PROCDATE
			    	FROM    OD_INVOICE_TAX A , CO_SUPP_COMP_MAST B
			    	WHERE   A.BIZ_CODE    = B.SUPP_COMP_ID
			      	  AND   B.NATION_CD     = 'KO'
			      	  AND   SUBSTR(A.DAYS,1,6) || DECODE(A.JOBID,'01','01','02','01','03','01','04','01','02') = #orderId#
			      	  AND   B.COMPREG_NO = #supregnum#
			    	GROUP   BY SUBSTR(A.DAYS,1,6),
			                SUBSTR(A.DAYS,1,6) || DECODE(A.JOBID,'01','01','02','01','03','01','04','01','02'),
			                A.BIZ_CODE
			      ) A
	</select>
	
	<!--  창구 수수료 세금계산서 대상 조회-->	
	<select id="selectTaxOrderInfo21" parameterClass ="java.util.HashMap" resultClass="commMap">
	select 
                     A.PURCHASE_ID AS ORDER_ID
                   , A.REGISTER_NO AS  SUPREGNUM
                   , A.COM_DATE AS ITEMDATE1   
                   , TO_NUMBER(SUBSTR(A.COM_DATE,0,6)) - to_number(to_char(add_months(sysdate,-1),'yyyymm')) CLOSE_DATE
                   , SUBSTR(A.COM_DATE,5,4) APPR_DATE
                   , TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')) AS TO_DATE1
                   , '1' TAXT_DIV_CD 
                   , '과세'  TAXT_DIV_NM       
                   ,   (
                                 SELECT MIN(WORKCALEYMD) || '150000' AS TAX_LAST_YMD
                                 FROM PIEMT0160 
                                 WHERE WORKCALEYMD LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
                                 AND   HOLDAYYN = 'N'
                                 AND   SUBSTR(WORKCALEYMD,7,2) >= 10
                                 AND   RCOCD = '00'
                             ) TAX_LAST_YMD
                         , A.ACCESS_NAME
                     , A.REQ_NAME
                     , A.REQ_NAME AS SUPCMPNAME
                     , A.BIZ_NAME AS  DEMCMPNAME
                    , A.BOSS_NAME
					 , A.BUSINESS_COND
					 , A.BUSINESS_CATE
					 , A.ADDRESS
					 , A.TELEPHONE
					 , A.EMAIL
                     , A.SUPTOTAMT ITEMAMT1
                     , A.SURTAX ITEMSTAX1
                     , CASE  WHEN A.surtax > 0  THEN  '창구판매 진흥원 운영수수료(통합)' ELSE '창구판매 우본 운영수수료(통합)' END  ITEM1
                     , '2' ONOFFLINE
                     , '1' INVTYPE3 
                     , A.PROCDATE
                     , A.PROCDATE 
					 , A.GOODS_AMT
		             , A.GOODS_CNT
		             , A.SUPTOTAMT
		             , A.SURTAX
		             , A.SUMAMT
	           		 , A.S_GOODS_AMT
	           		 , A.S_GOODS_CNT
					 , A.S_SUMAMT
					 , A.S_EPOST_SUMAMT
             from (
                     SELECT     substr(a.SELLRECEVYMD,1,6) days
                              ,substr(a.SELLRECEVYMD,1,6) || '99' purchase_id 
                              ,d.SUPP_COMP_ID
                              ,'1' TAXGBN
                              ,'99' shop_id
                              ,'csf'                   access_name
                              ,(select cmpname from  X_INVOICE_INFO INFO where  ACCESS_NAME  = 'csf') req_name
                              ,(SELECT REGNUM   FROM  X_INVOICE_INFO INFO WHERE  ACCESS_NAME  = 'csf') REQ_REGNUM
                            ,max(D.COMPREG_NO)                 register_no
                            ,substrb(max(D.TAX_CALDOC_COMP_NM),1,60)      biz_name
                            ,substrb(max(D.PRSDT_NM ),1,60)     boss_name
                            ,SUBSTRB(MAX(D.INDUTY),1,60) BUSINESS_COND
    						,SUBSTRB(MAX(D.ENTRPS),1,60) BUSINESS_CATE
    						, /* SUBSTRB(MAX(CASE WHEN  TRIM(NVL(D.ROADNM_POST_ADDR,'')) = '' THEN D.ADDR1 || ' ' || D.ADDR2 ELSE D.ROADNM_POST_ADDR || ' ' || D.ROADNM_DTAIL_ADDR END),1,100)*/' ' ADDRESS
        					,SUBSTRB(NVL(MAX(D.TELNO),' '),1,20) TELEPHONE
        					,SUBSTRB(NVL(MAX(D.EMAIL),' '),1,100) EMAIL
                              ,' '   tax_state
                              ,sum(b.SELLAMT)  goods_amt
                              ,sum(b.SELLCNT)  goods_cnt
                              ,max(substr(b.CLPMYMD,1,8)) com_date
                              ,nvl(SUM(floor(((b.SELLAMT) * 0.0605)/10)*10 ) - sum(floor(((b.SELLAMT) * 0.0605)/10)*10  - round((  floor(((b.SELLAMT) * 0.0605)/10)*10  / 1.1),0)),0) suptotamt
                              ,nvl(sum(floor(((b.SELLAMT) * 0.0605)/10)*10  - round((  floor(((b.SELLAMT) * 0.0605)/10)*10  / 1.1),0)),0)    surtax
                              ,nvl(sum(floor(((b.SELLAMT) * 0.0605)/10)*10 ),0)    sumamt
                              ,nvl(sum(SELLTAXINAMT),0)    epost_sumamt
                              ,nvl(sum(b.SELLAMT),0) s_goods_amt
                              ,nvl(sum(b.SELLCNT),0) s_goods_cnt
                              ,nvl(SUM(floor(((b.SELLAMT) * 0.0605)/10)*10 ) - sum(floor(((b.SELLAMT) * 0.0605)/10)*10  - round((  floor(((b.SELLAMT) * 0.0605)/10)*10  / 1.1),0)),0) s_suptotamt
                              ,nvl(sum(floor(((b.SELLAMT) * 0.0605)/10)*10  - round((  floor(((b.SELLAMT) * 0.0605)/10)*10  / 1.1),0)),0) s_surtax
                              ,nvl(sum(floor(((b.SELLAMT) * 0.0605)/10)*10 ),0) s_sumamt
                              ,nvl(sum(SELLTAXINAMT),0) s_epost_sumamt
                              ,max(to_char(sysdate,'yyyymmddhh24miss')) procdate
                    FROM IFR_PBSAT0510 a
                       , IFR_PBSAT0520 b 
                       , IFR_PBSET0510 c 
                       ,  CO_SUPP_COMP_MAST d
                    WHERE  1=1
                      and a.SELLRECEVNO  = b.SELLRECEVNO
                      and b.TPPRMGOODSCD = c.TPPRMGOODSCD
                      and c.SUBCOMPCD    = d.SUPP_COMP_ID
                      and d.NATION_CD     = 'KO'
                      and a.activyn      = 'Y'
                      and b.activyn = 'Y'
                       AND  substr(a.SELLRECEVYMD,1,6) || '99' = #orderId#
			      	  AND   D.COMPREG_NO = #supregnum#
                    group by  substr(a.SELLRECEVYMD,1,6),d.SUPP_COMP_ID
                    ) A
      
	
	</select>
	
	
	<update id="updateTaxBizReq" parameterClass="java.util.HashMap">
		Update OD_INVOICE_TAX
		Set itemmemo = '10'
			, TX_ID = '80'		/* 상태값 컬럼이 없어 임시로 처리 */ 
	    Where SUBSTR(DAYS,1,6) || DECODE(JOBID,'01','01','02','01','03','01','04','01','02') = #orderId#
	      and biz_code = #bizCode#
	</update>
	
	<update id="updateInvoiceTbl" parameterClass="java.util.HashMap">
   UPDATE  X_INVOICE_TBL
      SET  PROCFLAG  = #state#  ,
           PROCDATE = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
           BPROCFLAG = PROCFLAG,
           BPROCDATE = PROCDATE,
           SEND_DATE = SYSDATE
    WHERE  INVDATE = #invdate#
      AND  INVSEQ  = #invseq#
	</update>
	
	<update id="updateInvoiceReq" parameterClass="java.util.HashMap">
		UPDATE X_INVOICE_REQ
           SET STATE  = ( CASE WHEN (SELECT COUNT(*) FROM X_INVOICE_TBL WHERE ATTR02 = #orderId# AND ATTR03 = #accessName# AND PROCFLAG = 'T0')  > 0
                               THEN 'T0' ELSE #state# END )   
         WHERE PURCHASE_ID = #orderId#
           AND ACCESS_NAME  = #accessName#
	</update>
	
	
	
	
	<!--  EDI파일 생성 내역리스트 조회 -->	
	<select id="selectEdiMgrList" parameterClass ="java.util.HashMap" resultClass="commMap">
         SELECT T2.ONUM
		        , T2.SETTLEYEAR
	            , T2.BUNGIGUBUN
	            , T2.FILENAME
	            , T2.T3
	            , T2.T4
	            , T2.T5
	            , T2.T6
	            , DECODE(T2.SHOP_GUBUN, 'A', '전체', 'S', '쇼핑', 'B', 'BTOB', 'C', '창구') AS SHOP_GUBUN     
        FROM(
            SELECT ROW_NUMBER() OVER(ORDER BY T1.SETTLEYEAR DESC, T1.BUNGIGUBUN DESC ) AS ONUM
                , T1.SETTLEYEAR
	            , T1.BUNGIGUBUN
	            , T1.FILENAME
	            , T1.T3
	            , T1.T4
	            , T1.T5
	            , T1.T6
	            , T1.SHOP_GUBUN
            FROM (

            	SELECT    SETTLEYEAR            AS settleyear
			            , BUNGI_GUBUN           AS bungiGubun
			            , FILENAME              AS filename
			            , NVL(TGIVENCOUNT,0)    AS T3
			            , NVL(TSETTLECOUNT,0)   AS T4
			            , NVL(TSETTLEAMOUNT,0)  AS T5
			            , NVL(TSUPPLYCOUNT,0)   AS T6
			            , SHOP_GUBUN			/* A:전체, S:쇼핑, B:BTOB, C:창구 */
			       FROM CM_EDITAXHEAD CA   
			      WHERE RECORDGUBUN = 'HD'
			        AND SETTLEYEAR  = #regYear#
			        AND BUNGI_GUBUN = #regBungi#
			    <isNotNull property="searchShopDiv">
			     	<isNotEqual property="searchShopDiv" compareValue="A">
			        AND SHOP_GUBUN  = #searchShopDiv#
			        </isNotEqual>
			    </isNotNull>
              ) T1
            WHERE 1=1  
             )T2
        WHERE 1=1
        <isNotNull property="firstIndex">
        	<isNotNull property="lastIndex">
        		AND T2.ONUM BETWEEN #firstIndex# AND #lastIndex#
        	</isNotNull>
        </isNotNull>
        	ORDER BY T2.ONUM DESC	
        
	</select>
	
	<!-- EDI파일 생성 내역리스트  카운트 -->
	<select id="selectEdiMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
                FROM CM_EDITAXHEAD CA   
		       WHERE RECORDGUBUN = 'HD'
		         AND SETTLEYEAR  = #regYear#
		         AND BUNGI_GUBUN = #regBungi#
		        <isNotNull property="searchShopDiv">
			     	<isNotEqual property="searchShopDiv" compareValue="A">
			        AND SHOP_GUBUN  = #searchShopDiv#
			        </isNotEqual>
			    </isNotNull>
	</select>
	
	<!-- EDI파일 생성 헤더 조회-->	
	<select id="selectEdiHead" parameterClass ="java.util.HashMap" resultClass="commMap">
	SELECT RECORDGUBUN
         , SETTLEYEAR
         , BUNGI_GUBUN
         , TAXOFF_CODE
         , SEND_DATE_YMD
         , REGISTERNO
         , BSSNAME
         , SETTLE_START_DATE
         , SETTLE_END_DATE 
     FROM CM_EDITAXHEAD  
    WHERE SETTLEYEAR  = #regYear#
      AND BUNGI_GUBUN = #regBungi#
      AND SHOP_GUBUN  = #searchShopDiv#
	</select>
	
	<!-- edi_new 헤더파일 등록 -->
  <insert id="registEdiHead"   parameterClass="java.util.HashMap">
    <![CDATA[
    INSERT INTO CM_EDITAXHEAD    
              ( RECORDGUBUN
              , SETTLEYEAR
              , BUNGI_GUBUN
              , SHOP_GUBUN
              , TAXOFF_CODE
              , SEND_DATE_YMD
              , REGISTERNO
              , BSSNAME
              , SETTLE_START_DATE
              , SETTLE_END_DATE
              )
       VALUES (  'HD'
               , #regYear#
               , #regBungi#
               , #searchShopDiv#
               , '107'
               , TO_CHAR(SYSDATE,'YYYYMMDD')
               , '1138202144'
               , '재단법인 한국우편사업진흥원'
               , #startDate#
               , #endDate#
              )
    ]]>
	</insert>
	
	<!-- EDIT 파일 생성 쇼핑-카드금액 쿼리 -->
	<sql id="selectEdiTaxListS">
		SELECT /*+ USE_NL( A B ) INDEX( A PK_X_INVOICE_TAX) */
				MAX(REPLACE(B.COMPREG_NO, '-', ''))  AS REGISTER_NO
				, MAX(OIT.BIZ_CODE) AS BIZ_CODE
				, MAX(REPLACE(B.CORP_SSN ,'-','')) AS CORPS_SEED_SN
				, MAX(B.TAX_CALDOC_COMP_NM)     BIZ_NAME
				, MAX(B.PRSDT_NM)     BOSS_NAME
				, REPLACE(REPLACE(REPLACE(REPLACE(MAX(B.TELNO),' ',''),'(',''),')',''),'-','')   AS TELEPHONE
				, REPLACE(MAX(NVL(B.PRSDT_MOBILE_NO,'')),' ','')   AS CELLPHONE
				, NVL(MAX(B.EMAIL),'test@epost.kr')          AS EMAIL
				, NVL(SUM(OIT.ITEMQTY),0)          AS ITEMQTY
				, NVL(SUM(OIT.CARD_ITEMQTY),0)     AS CARD_ITEMQTY
				, NVL(SUM(OIT.ITEMPRC),0)          AS ITEMPRC
				, NVL(SUM(OIT.CARD_ITEMPRC),0)     AS CARD_ITEMPRC
				, MAX(OIT.REG_DATE) AS REG_DATE
				, 1 AS TT
				, 'C' AS GUBUN		/* 구분코드 C:카드 */
			FROM OD_INVOICE_TAX OIT
				, CO_SUPP_COMP_MAST B 
		WHERE OIT.BIZ_CODE = B.SUPP_COMP_ID
				AND OIT.DAYS BETWEEN #startDate# AND #endDate# 
				AND OIT.JOBID IN ( '02' )           /* '02' 인터넷주문건 '*/
				AND B.NATION_CD = 'KO'
		GROUP BY /* SUBSTR(OIT.DAYS,1,6)
				, SUBSTR(OIT.DAYS,1,6) || DECODE(OIT.JOBID,'01','01','02','01','03','01','04','01','02')
				, OIT.BIZ_CODE
				*/
				REPLACE(B.COMPREG_NO, '-', '')
	</sql>
	
	<!-- EDIT 파일 생성 창구-카드  -->
	<sql id="selectEdiTaxListC">	
		SELECT REGISTER_NO, MAX(SUPP_COMP_ID) BIZ_CODE
				, MAX(CORPS_SEED_SN) CORPS_SEED_SN 
				, MAX(BOSS_NAME) BOSS_NAME
				, MAX(TELEPHONE) TELEPHONE
				, MAX(CELLPHONE) CELLPHONE
				, MAX(EMAIL) EMAIL
				, SUM(ITEMQTY) ITEMQTY 
				, SUM(ITEMPRC) ITEMPRC 
				, SUM(CARD_ITEMQTY) CARD_ITEMQTY 
				, SUM(CARD_ITEMPRC)CARD_ITEMPRC
				, 'C' AS GUBUN        /* 구분코드 C:카드 */
                FROM 
					(   
					SELECT A.SELLRECEVNO
					       , MAX(REPLACE(D.COMPREG_NO,'-',''))  AS REGISTER_NO
					       , D.SUPP_COMP_ID
					       , MAX(REPLACE(D.CORP_SSN,'-','')) AS CORPS_SEED_SN
					       , MAX(D.PRSDT_NM) AS BOSS_NAME 
					       , REPLACE(REPLACE(REPLACE(REPLACE(MAX(D.TELNO),' ',''),'(',''),')',''),'-','') AS TELEPHONE
					       /* , REPLACE(MAX(NVL(E.MOBILE_NO,'')),' ','') AS CELLPHONE */
					       , REPLACE(MAX(NVL(D.PRSDT_MOBILE_NO,'')),' ','')   AS CELLPHONE
					       , NVL(MAX(D.EMAIL),'test@epost.kr')          AS EMAIL
					       , SUM(B.SELLCNT)  ITEMQTY
					       , SUM(B.SELLAMT)  ITEMPRC
					       , NVL(SUM(DECODE(NVL(A.TOTCREDITCARDAMT,0),0, B.SELLCNT)),0) CARD_ITEMQTY 
					       , NVL(MAX(A.TOTCREDITCARDAMT),0) CARD_ITEMPRC
						FROM IFR_PBSAT0510 A
					            , IFR_PBSAT0520 B 
					            , IFR_PBSET0510 C 
					            , CO_SUPP_COMP_MAST D
					            /* , (SELECT   SUPP_COMP_ID , MOBILE_NO   FROM ( SELECT SUPP_COMP_ID, NVL(MOBILE_NO,'')  MOBILE_NO, ROW_NUMBER() OVER(PARTITION BY SUPP_COMP_ID ORDER BY  NVL(MAIN_ID_YN,'N') DESC)  SUNBUN   FROM MB_SUPP_COMP_MEM_MAST   ) WHERE SUNBUN =1 ) E */
						WHERE  1=1
					            AND A.SELLRECEVNO = B.SELLRECEVNO
					            AND B.TPPRMGOODSCD = C.TPPRMGOODSCD
					            AND C.SUBCOMPCD = D.SUPP_COMP_ID
					            /* AND C.SUBCOMPCD = E.SUPP_COMP_ID(+) */
					            AND A.SELLRECEVYMD <![CDATA[>=]]> #startDate# 
								AND A.SELLRECEVYMD <![CDATA[<=]]> #endDate# 
								/* AND D.NATION_CD = 'KO' */     
								AND A.ACTIVYN      = 'Y'
								AND B.ACTIVYN      = 'Y'
					GROUP BY A.SELLRECEVNO
							, D.SUPP_COMP_ID
					)
		GROUP BY REGISTER_NO        
	</sql>	
	
	
	<!--  EDI파일 생성 내역리스트 조회 -->	
	<select id="selectEdiBody" parameterClass ="java.util.HashMap" resultClass="commMap">
         SELECT 'RD'                                    A1
         , #regYear#                                       A2
         , #regBungi#                                       A3
         , '1138202144'                            A4
         , CASE WHEN LENGTH(NVL(REGISTER_NO, ' ')) <![CDATA[<>]]> 10 THEN '**********'
                ELSE REGISTER_NO
           END                                     A5 
         , CASE WHEN LENGTH(NVL(REGISTER_NO, ' ')) <![CDATA[<>]]> 10 THEN REGISTER_NO
                ELSE CORPS_SEED_SN
           END                                     A6
         , SUBSTRB(BOSS_NAME,1,20)                 A61  
         , ROWNUM                                  A7
         , ITEMQTY                                 A9
         , '0'                                     A10
         , '0'                                     A11
         , '0'                                     A12
         , '0'                                     A13
         , CASE WHEN ITEMPRC <![CDATA[<]]> 0 THEN 1 ELSE 0 END A14
         , ITEMPRC                                 A15
         , BIZ_CODE                                A16
         , '1'                                     A17
         , CASE WHEN VSIZE(TELEPHONE) > 11 THEN '' ELSE TELEPHONE END A18
         , CASE WHEN VSIZE(CELLPHONE) > 11 THEN '' ELSE CELLPHONE END A19
         , CASE WHEN VSIZE(EMAIL)     > 40 THEN '' ELSE EMAIL     END A20
         , GUBUN     A21
         , CASE WHEN LENGTH(NVL(REGISTER_NO, ' ')) <![CDATA[<>]]> 10 THEN 'C'
                ELSE 'P'
           END                                     A22
      FROM (
      		
            SELECT REGISTER_NO
                 , GUBUN
                 , MAX(BIZ_CODE)   AS BIZ_CODE
                 , MAX(CORPS_SEED_SN) AS CORPS_SEED_SN
                 , MAX(BOSS_NAME)  AS BOSS_NAME
                 , MAX(TELEPHONE)  AS TELEPHONE
                 , MAX(CELLPHONE)  AS CELLPHONE
                 , MAX(EMAIL)      AS EMAIL
                 /* , SUM(DECODE(GUBUN, '6', 0, 'R', 0, ITEMQTY))    AS ITEMQTY */
                 /* , SUM(DECODE(GUBUN, '6', 0, 'R', 0, ITEMPRC))    AS ITEMPRC */
                 , SUM(ITEMQTY)    AS ITEMQTY
                 , SUM(ITEMPRC)    AS ITEMPRC
              FROM ( 
              		<isEqual property="searchShopDiv" compareValue="A">
              		/* 전체검색 */
                      SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY - NVL(CASH_ITEMQTY, 0) - NVL(DANAL_ITEMQTY, 0) - NVL(ETC_ITEM_QTY, 0)	/* TO-BE 추가됨 */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN NVL(DANAL_ITEMQTY, 0)		/*휴대폰 */
                                 WHEN GUBUN = 'R' THEN NVL(ETC_ITEM_QTY, 0) /* 카카오페이,네이버페이등 기타 TO-BE 추가됨 */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC - NVL(CASH_ITEMPRC, 0) - NVL(DANAL_ITEMPRC, 0) - NVL(ETC_ITEMPRC, 0) /* TO-BE 추가됨 */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN NVL(DANAL_ITEMPRC, 0)
                                 WHEN GUBUN = 'R' THEN NVL(ETC_ITEMPRC, 0) /* 카카오페이,네이버페이등 기타 TO-BE 추가됨 */
                            END  AS ITEMPRC
                          /* , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN */
                          , GUBUN
                FROM (
                	<include refid="selectEdiTaxListS"/>		/* 쇼핑 결제액(카드)  */
                            ) A
					/* 우체국 B2B */
                    UNION ALL
                SELECT REGISTER_NO
                         , BIZ_CODE
                         , ' ' AS CORPS_SEED_SN
                         , BOSS_NAME
                         , TELEPHONE
                         , CELLPHONE
                         , EMAIL
                         , CASE WHEN GUBUN = 'A' THEN CASH_QTY 
                                WHEN GUBUN = 'C' THEN CARD_QTY
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_QTY
                           END  AS ITEMQTY
                         , CASE WHEN GUBUN = 'A' THEN CASH_AMT 
                                WHEN GUBUN = 'C' THEN CARD_AMT
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_AMT
                           END AS ITEMPRC
                         , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN
                      FROM ( SELECT M.COMPANY_REG_NO  AS REGISTER_NO
                                  , MAX(A.SELLER_ID)  AS BIZ_CODE
                                  , MAX(M.RPRSNTTV_NM)  AS BOSS_NAME
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','')
                                                      AS TELEPHONE
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','')
                                                      AS CELLPHONE
                                  , MAX(NVL(MEMINFO.EMAIL,'test@epost.kr'))
                                                      AS EMAIL
                                  , SUM(A.CASH_QTY)   AS CASH_QTY  
                                  , SUM(A.CASH_AMT)   AS CASH_AMT  
                                  , SUM(A.CARD_QTY)   AS CARD_QTY  
                                  , SUM(A.CARD_AMT)   AS CARD_AMT  
                                  , SUM(A.TAX_QTY)    AS TAX_QTY   
                                  , SUM(A.TAX_AMT)    AS TAX_AMT   
                                  , 1                 AS TT
                               FROM ( SELECT ADJ_MONTH
                                           , SELLER_ID
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS CASH_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS CASH_AMT
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS CARD_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS CARD_AMT
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_QTY, 0)) AS TAX_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_AMT, 0)) AS TAX_AMT
                                        FROM ( SELECT O.SELLER_ID
                                                    , TO_CHAR(A.ADJ_DT, 'YYYYMM')  AS ADJ_MONTH
                                                    , O.ORD_AMT
                                                    , O.ORD_QTY
                                                    ,(CASE WHEN (SELECT COUNT(1) CNT FROM X_INVOICE_TBL Y 
                                                                  WHERE Y.ATTR02 = O.ORD_NO AND O.SETTLE_METHOD_TP NOT IN('CD') AND Y.ATTR03 = O.BUYER_ID AND Y.ATTR04 = '4' ) > 0 
                                                               THEN 'TAX'
                                                           ELSE SETTLE_METHOD_TP
                                                      END) SETTLE_METHOD_TP
                                                 FROM BTOB_ORDER_ADJUSTMENT A
                                                     , BTOB_ORDER           O
                                                WHERE A.ORD_NO       = O.ORD_NO
                                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD')
                                                               BETWEEN #startDate# AND #endDate#
                                                  AND A.ADJ_STAT_TP  = 'DF'
                                                  AND A.ADJ_TRGT_TP IN ('MP')
                                             ) A
                                      GROUP BY ADJ_MONTH
                                          , SELLER_ID
                                    ) A
                                  , BTOB_SELLER       S
                                  , BTOB_MEMBER_BASIC M
                                  , MEMINFO  MEMINFO
                              WHERE A.SELLER_ID = S.SELLER_ID
                                AND A.SELLER_ID = M.MEMBER_ID
                                AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                              GROUP BY M.COMPANY_REG_NO
                           ) A
                         , ( SELECT 1                                              AS TT
                                  , ROWNUM
                                  , DECODE(ROWNUM, 1, 'A', 2, 'C', 3, 'N', 4, 'R') AS GUBUN
                              FROM DUAL
                             WHERE ROWNUM <![CDATA[<=]]> 4
                           ) C
                     WHERE A.TT = C.TT
                     
                     UNION ALL
					/* 창구 주문건 */
                   SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
                            END  AS ITEMPRC
							, 'C' AS GUBUN		/* 구분코드 C:카드 */
                FROM ( 
						<include refid="selectEdiTaxListC"/>		/* 창구-카드결제액 */
					) A
                  </isEqual>
                  
                  
                  <isEqual property="searchShopDiv" compareValue="S">
                  /* 인터넷 주문건 */
                   SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
                            END  AS ITEMPRC
							, 'C' AS GUBUN		/* 구분코드 C:카드 */
                FROM ( 
						<include refid="selectEdiTaxListS"/>		/* 쇼핑-카드결제액 */
                            ) A
                  </isEqual>
                  
                  <isEqual property="searchShopDiv" compareValue="B">
                  /* 우체국 BTOB */
                  SELECT REGISTER_NO
                         , BIZ_CODE
                         , CORPS_SEED_SN
                         , BOSS_NAME 
                         , TELEPHONE
                         , CELLPHONE
                         , EMAIL
                         , CASE WHEN GUBUN = 'A' THEN ITEMQTY - CARD_QTY - TAX_QTY 
                                WHEN GUBUN = 'C' THEN CARD_QTY
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_QTY 
                           END  AS ITEMQTY
                         , CASE WHEN GUBUN = 'A' THEN TRN_AMT - CARD_PAY_AMT - TAX_PAY_AMT
                                WHEN GUBUN = 'C' THEN CARD_PAY_AMT
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_PAY_AMT
                           END  AS ITEMPRC
                         , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN
                      FROM ( SELECT DECODE(M.COMP_REG_NO, NULL, M.RR_NO, M.COMP_REG_NO)
                                                                AS REGISTER_NO
                                  , MAX(A.SELL_ID)              AS BIZ_CODE
                                  , MAX(REPLACE(CORP_REG_NO, '-', '')) AS CORPS_SEED_SN
                                  , MAX(M.PRSDT_NM)                    AS BOSS_NAME
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','')
                                                                AS TELEPHONE
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','')
                                                                AS CELLPHONE
                                  , MAX(NVL(MEMINFO.EMAIL,'test@epost.kr')) AS EMAIL
                                  , NVL(SUM(A.QTY),0)           AS ITEMQTY       
                                  , NVL(SUM(A.CARD_QTY),0)      AS CARD_QTY      
                                  , NVL(SUM(A.TAX_QTY),0)       AS TAX_QTY       
                                  , NVL(SUM(A.TRN_AMT),0)       AS TRN_AMT       
                                  , NVL(SUM(A.CARD_PAY_AMT),0)  AS CARD_PAY_AMT  
                                  , NVL(SUM(A.TAX_PAY_AMT),0)   AS TAX_PAY_AMT   
                                  , 1 AS TT
                              FROM ( 
                              /* 우체국 BTOB */
					                SELECT REGISTER_NO
					                         , BIZ_CODE
					                         , ' ' AS CORPS_SEED_SN
					                         , BOSS_NAME
					                         , TELEPHONE
					                         , CELLPHONE
					                         , EMAIL
					                         , CASE WHEN GUBUN = 'A' THEN CASH_QTY 
					                                WHEN GUBUN = 'C' THEN CARD_QTY
					                                WHEN GUBUN = 'N' THEN 0
					                                WHEN GUBUN = 'R' THEN TAX_QTY
					                           END  AS ITEMQTY
					                         , CASE WHEN GUBUN = 'A' THEN CASH_AMT 
					                                WHEN GUBUN = 'C' THEN CARD_AMT
					                                WHEN GUBUN = 'N' THEN 0
					                                WHEN GUBUN = 'R' THEN TAX_AMT
					                           END AS ITEMPRC
					                         , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN
					                      FROM ( SELECT M.COMPANY_REG_NO  AS REGISTER_NO
					                                  , MAX(A.SELLER_ID)  AS BIZ_CODE
					                                  , MAX(M.RPRSNTTV_NM)  AS BOSS_NAME
					                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','')
					                                                      AS TELEPHONE
					                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','')
					                                                      AS CELLPHONE
					                                  , MAX(NVL(MEMINFO.EMAIL,'test@epost.kr'))
					                                                      AS EMAIL
					                                  , SUM(A.CASH_QTY)   AS CASH_QTY  
					                                  , SUM(A.CASH_AMT)   AS CASH_AMT  
					                                  , SUM(A.CARD_QTY)   AS CARD_QTY  
					                                  , SUM(A.CARD_AMT)   AS CARD_AMT  
					                                  , SUM(A.TAX_QTY)    AS TAX_QTY   
					                                  , SUM(A.TAX_AMT)    AS TAX_AMT   
					                                  , 1                 AS TT
					                               FROM ( SELECT ADJ_MONTH
					                                           , SELLER_ID
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS CASH_QTY
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS CASH_AMT
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS CARD_QTY
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS CARD_AMT
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_QTY, 0)) AS TAX_QTY
					                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_AMT, 0)) AS TAX_AMT
					                                        FROM ( SELECT O.SELLER_ID
					                                                    , TO_CHAR(A.ADJ_DT, 'YYYYMM')  AS ADJ_MONTH
					                                                    , O.ORD_AMT
					                                                    , O.ORD_QTY
					                                                    ,(CASE WHEN (SELECT COUNT(1) CNT FROM X_INVOICE_TBL Y 
					                                                                  WHERE Y.ATTR02 = O.ORD_NO AND O.SETTLE_METHOD_TP NOT IN('CD') AND Y.ATTR03 = O.BUYER_ID AND Y.ATTR04 = '4' ) > 0 
					                                                               THEN 'TAX'
					                                                           ELSE SETTLE_METHOD_TP
					                                                      END) SETTLE_METHOD_TP
					                                                 FROM BTOB_ORDER_ADJUSTMENT A
					                                                     , BTOB_ORDER           O
					                                                WHERE A.ORD_NO       = O.ORD_NO
					                                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD')
					                                                               BETWEEN #startDate# AND #endDate#
					                                                  AND A.ADJ_STAT_TP  = 'DF'
					                                                  AND A.ADJ_TRGT_TP IN ('MP')
					                                             ) A
					                                      GROUP BY ADJ_MONTH
					                                          , SELLER_ID
					                                    ) A
					                                  , BTOB_SELLER       S
					                                  , BTOB_MEMBER_BASIC M
					                                  , MEMINFO  MEMINFO
					                              WHERE A.SELLER_ID = S.SELLER_ID
					                                AND A.SELLER_ID = M.MEMBER_ID
					                                AND A.SELLER_ID = MEMINFO.ACCESS_NAME
					                              GROUP BY M.COMPANY_REG_NO
					                           ) A
					                         , ( SELECT 1                                              AS TT
					                                  , ROWNUM
					                                  , DECODE(ROWNUM, 1, 'A', 2, 'C', 3, 'N', 4, 'R') AS GUBUN
					                              FROM DUAL
					                             WHERE ROWNUM <![CDATA[<=]]> 4
					                           ) C
					                     WHERE A.TT = C.TT
                  </isEqual>
                  
                  <isEqual property="searchShopDiv" compareValue="C">
                  /* 창구 주문건 */
                   SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
                            END  AS ITEMPRC
							, 'C' AS GUBUN		/* 구분코드 C:카드 */
                FROM ( 
						<include refid="selectEdiTaxListC"/>		/* 창구-카드결제액 */
					) A
                  </isEqual>                    
                   )
            GROUP BY REGISTER_NO, GUBUN
           )
	</select>
	
	
	
	<!--  EDI파일 생성 내역리스트 조회(테일) -->	
	<select id="selectEdiTail" parameterClass ="java.util.HashMap" resultClass="commMap">
          SELECT 'TD'         A0
         , #regYear#                                       A1
         , #regBungi#                                       A2
         , '1138202144' A3
         , SUM(ITEMQTY) A4
         , SUM(ITEMQTY) A5
         , 0            A6
         , 0            A7 
         , 0            A8
         , 0            A9
         , 0            A10
         , SUM(ITEMPRC) A11
         , COUNT(DISTINCT REGISTER_NO) A12
      FROM (
            SELECT REGISTER_NO
                 , GUBUN
                 , MAX(BIZ_CODE)   AS BIZ_CODE
                 , MAX(TELEPHONE)  AS TELEPHONE
                 , MAX(CELLPHONE)  AS CELLPHONE
                 , MAX(EMAIL)      AS EMAIL
                 , SUM(DECODE(GUBUN, '6', 0, 'R', 0, ITEMQTY))    AS ITEMQTY
                 , SUM(DECODE(GUBUN, '6', 0, 'R', 0, ITEMPRC))    AS ITEMPRC
              FROM ( 
              <isEqual property="searchShopDiv" compareValue="A">
              /* 전체 */
                      SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY - NVL(BB.money_itemqty,0)
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN NVL(BB.money_itemqty,0)
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC - NVL(BB.money_itemprc,0)
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN NVL(BB.money_itemprc,0)
                            END  AS ITEMPRC
                          , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN
                FROM ( 
                	/* 인터넷 주문 */
					<include refid="selectEdiTaxListS"/>        /* 쇼핑카드금액 금액 */
                            ) A
                    /* 우체국 B2B */        
                    UNION ALL
                SELECT REGISTER_NO
                         , BIZ_CODE
                         , ' ' AS CORPS_SEED_SN
                         , BOSS_NAME
                         , TELEPHONE
                         , CELLPHONE
                         , EMAIL
                         , CASE WHEN GUBUN = 'A' THEN CASH_QTY 
                                WHEN GUBUN = 'C' THEN CARD_QTY
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_QTY
                           END  AS ITEMQTY
                         , CASE WHEN GUBUN = 'A' THEN CASH_AMT 
                                WHEN GUBUN = 'C' THEN CARD_AMT
                                WHEN GUBUN = 'N' THEN 0
                                WHEN GUBUN = 'R' THEN TAX_AMT
                           END AS ITEMPRC
                         , DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN
                      FROM ( SELECT M.COMPANY_REG_NO  AS REGISTER_NO
                                  , MAX(A.SELLER_ID)  AS BIZ_CODE
                                  , MAX(M.RPRSNTTV_NM)  AS BOSS_NAME
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','')
                                                      AS TELEPHONE
                                  , REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','')
                                                      AS CELLPHONE
                                  , MAX(NVL(MEMINFO.EMAIL,'test@epost.kr'))
                                                      AS EMAIL
                                  , SUM(A.CASH_QTY)   AS CASH_QTY  
                                  , SUM(A.CASH_AMT)   AS CASH_AMT  
                                  , SUM(A.CARD_QTY)   AS CARD_QTY  
                                  , SUM(A.CARD_AMT)   AS CARD_AMT  
                                  , SUM(A.TAX_QTY)    AS TAX_QTY   
                                  , SUM(A.TAX_AMT)    AS TAX_AMT   
                                  , 1                 AS TT
                               FROM ( SELECT ADJ_MONTH
                                           , SELLER_ID
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS CASH_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS CASH_AMT
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS CARD_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS CARD_AMT
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_QTY, 0)) AS TAX_QTY
                                           , SUM(DECODE(A.SETTLE_METHOD_TP, 'TAX', A.ORD_AMT, 0)) AS TAX_AMT
                                        FROM ( SELECT O.SELLER_ID
                                                    , TO_CHAR(A.ADJ_DT, 'YYYYMM')  AS ADJ_MONTH
                                                    , O.ORD_AMT
                                                    , O.ORD_QTY
                                                    ,(CASE WHEN (SELECT COUNT(1) CNT FROM X_INVOICE_TBL Y 
                                                                  WHERE Y.ATTR02 = O.ORD_NO AND O.SETTLE_METHOD_TP NOT IN('CD') AND Y.ATTR03 = O.BUYER_ID AND Y.ATTR04 = '4' ) > 0 
                                                               THEN 'TAX'
                                                           ELSE SETTLE_METHOD_TP
                                                      END) SETTLE_METHOD_TP
                                                 FROM btob.BTOB_ORDER_ADJUSTMENT A
                                                     , btob.BTOB_ORDER           O
                                                WHERE A.ORD_NO       = O.ORD_NO
                                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD')
                                                               BETWEEN #startDate# AND #endDate#
                                                  AND A.ADJ_STAT_TP  = 'DF'
                                                  AND A.ADJ_TRGT_TP IN ('MP')
                                             ) A
                                      GROUP BY ADJ_MONTH
                                          , SELLER_ID
                                    ) A
                                  , btob.BTOB_SELLER       S
                                  , btob.BTOB_MEMBER_BASIC M
                                  , MEMINFO  MEMINFO
                              WHERE A.SELLER_ID = S.SELLER_ID
                                AND A.SELLER_ID = M.MEMBER_ID
                                AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                              GROUP BY M.COMPANY_REG_NO
                           ) A
                         , ( SELECT 1                                              AS TT
                                  , ROWNUM
                                  , DECODE(ROWNUM, 1, 'A', 2, 'C', 3, 'N', 4, 'R') AS GUBUN
                              FROM DUAL
                             WHERE ROWNUM <![CDATA[<=]]> 4
                           ) C
                     WHERE A.TT = C.TT
                     UNION ALL
/* 창구 주문건 */
                   SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
                            END  AS ITEMPRC
							, 'C' AS GUBUN		/* 구분코드 C:카드 */
                FROM ( 
						<include refid="selectEdiTaxListC"/>		/* 창구-카드결제액 */
					) A
                  </isEqual>
                  
                  <isEqual property="searchShopDiv" compareValue="S">
			SELECT A.REGISTER_NO
					, A.BIZ_CODE
					, A.CORPS_SEED_SN
					, A.BOSS_NAME
					, TELEPHONE
					, CELLPHONE
					, EMAIL
					, CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
					       WHEN GUBUN = 'C' THEN CARD_ITEMQTY
					       WHEN GUBUN = 'N' THEN 0
					       WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
					  END  AS ITEMQTY
					, CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
					       WHEN GUBUN = 'C' THEN CARD_ITEMPRC
					       WHEN GUBUN = 'N' THEN 0
					       WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
					  END  AS ITEMPRC
					, DECODE(GUBUN, 'A', '6', 'C', 8, GUBUN) AS GUBUN                                                            
                FROM ( 
                	<include refid="selectEdiTaxListS"/>		/* 쇼핑카드 금액 */                
                            ) A
                  </isEqual>

                  <isEqual property="searchShopDiv" compareValue="C">
					/* 창구 주문건 */
                   SELECT A.REGISTER_NO
                          , A.BIZ_CODE
                          , A.CORPS_SEED_SN
                          , A.BOSS_NAME
                          , TELEPHONE
                          , CELLPHONE
                          , EMAIL
                          , CASE WHEN GUBUN = 'A' THEN ITEMQTY   - CARD_ITEMQTY /* 현금영수증대행사용안함 - NVL(BB.money_itemqty,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMQTY
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemqty,0) */
                            END  AS ITEMQTY
                          , CASE WHEN GUBUN = 'A' THEN ITEMPRC  - CARD_ITEMPRC /* 현금영수증대행사용안함 - NVL(BB.money_itemprc,0) */
                                 WHEN GUBUN = 'C' THEN CARD_ITEMPRC
                                 WHEN GUBUN = 'N' THEN 0
                                 WHEN GUBUN = 'R' THEN 0 /* NVL(BB.money_itemprc,0) */
                            END  AS ITEMPRC
							, 'C' AS GUBUN		/* 구분코드 C:카드 */
                FROM ( 
						<include refid="selectEdiTaxListC"/>		/* 창구-카드결제액 */
					) A
                  </isEqual>  
                   )
            GROUP BY REGISTER_NO, GUBUN
           )
	</select>
	
	
	
	<update id="modifyEdiNewHead" parameterClass="java.util.HashMap">
		UPDATE CM_EDITAXHEAD  
	       SET FILENAME      = #fileName#
	         , TGIVENCOUNT   = #tg#
	         , TSETTLECOUNT  = #tsc#
	         , TSETTLEAMOUNT = #tsat#
	         , TSUPPLYCOUNT  = #tsupc#
	    WHERE SETTLEYEAR  = #regYear#
          AND BUNGI_GUBUN = #regBungi#
          AND SHOP_GUBUN  = #searchShopDiv#
	</update>
	
	
	
	<!--  EDI파일 생성 내역리스트 조회 -->	
	<select id="selectEdiEtcMgrList" parameterClass ="java.util.HashMap" resultClass="commMap">
         SELECT T2.ONUM
		        , T2.SETTLEYEAR
	            , T2.BUNGIGUBUN
	            , T2.FILENAME
	            , T2.T3
	            , T2.T4
	            , T2.T5
	            , T2.T6     
        FROM(
            SELECT
		         ROW_NUMBER() OVER(ORDER BY T1.SETTLEYEAR DESC, T1.BUNGIGUBUN DESC ) AS ONUM
                , T1.SETTLEYEAR
	            , T1.BUNGIGUBUN
	            , T1.FILENAME
	            , T1.T3
	            , T1.T4
	            , T1.T5
	            , T1.T6
            FROM (

            	SELECT 
              #regYear# AS settleyear
            , #regBungi# AS bungiGubun
            , #regYear# || #regBungi# || 'P' ||'1138202.144' AS filename
            , MAX(A7) AS T3  
            , SUM(A9) AS T4
            , SUM(A15) AS T5
            , COUNT(DISTINCT A16) T6
         FROM (
             SELECT 
                      ROWNUM A7
                    , ITEMQTY A9
                    , ITEMPRC A15
                    , BIZ_CODE A16
                    FROM (
                            SELECT   MEMINFO.PEOPLENUM REGISTER_NO
                                   , MAX(A.SELL_ID) BIZ_CODE
                                   , SUM(A.QTY) AS ITEMQTY  
                                   , SUM(A.AMT) AS ITEMPRC  
                                   , GUBUN            
                            FROM
                            (
                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                                           ,SELL_ID
                                           ,SUM(A.QTY) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                                           ,SUM(A.TRN_AMT) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                                           ,'A' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELL_ID
                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                                   ,O.ORD_AMT AS TRN_AMT
                                                   ,O.PAY_AMT
                                                   ,O.QTY
                                                   ,M.STL_TP_CODE
                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                            WHERE A.TRN_NO = O.TRN_NO
                                              AND M.ORD_NO = O.ORD_NO
                                              AND A.ADJ_TGT_TP = 'AA'
                                              AND A.ADJ_PAY_TP = 'SA'
                                              AND A.ADJ_PAY_DATE BETWEEN '20110101' || '000000' AND '20110331' || '999999'
                                    )A
                                    GROUP BY ADJ_PAY_DATE, SELL_ID
                                    UNION ALL
                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                                           ,SELL_ID
                                           ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                                           ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                                           ,'C' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELL_ID
                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                                   ,O.PAY_AMT
                                                   ,O.QTY
                                                   ,M.STL_TP_CODE
                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                            WHERE A.TRN_NO = O.TRN_NO
                                              AND M.ORD_NO = O.ORD_NO
                                              AND A.ADJ_TGT_TP = 'AA'
                                              AND A.ADJ_PAY_TP = 'SA'
                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                                    )A
                                    GROUP BY ADJ_PAY_DATE, SELL_ID
                                    UNION ALL
                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                                           ,SELL_ID
                                           ,0 AS QTY
                                           ,0 AS AMT
                                           ,'N' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELL_ID
                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                                   ,O.PAY_AMT
                                                   ,O.QTY
                                                   ,M.STL_TP_CODE
                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                            WHERE A.TRN_NO = O.TRN_NO
                                              AND M.ORD_NO = O.ORD_NO
                                              AND A.ADJ_TGT_TP = 'AA'
                                              AND A.ADJ_PAY_TP = 'SA'
                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                                    )A
                                    GROUP BY ADJ_PAY_DATE, SELL_ID
                                    UNION ALL
                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                                           ,SELL_ID
                                           ,0 AS QTY
                                           ,0 AS AMT
                                           ,'R' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELL_ID
                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                                   ,O.PAY_AMT
                                                   ,O.QTY
                                                   ,M.STL_TP_CODE
                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                            WHERE A.TRN_NO = O.TRN_NO
                                              AND M.ORD_NO = O.ORD_NO
                                              AND A.ADJ_TGT_TP = 'AA'
                                              AND A.ADJ_PAY_TP = 'SA'
                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                                    )A
                                    GROUP BY ADJ_PAY_DATE, SELL_ID
                            )A, ESC_MBR_ESC_LDG_TBL M, ESC_MBR_BAS_LDG_TBL MB, MEMINFO MEMINFO
                            WHERE A.SELL_ID = M.MBR_ID
                              AND A.SELL_ID = MB.MBR_ID
                              AND A.SELL_ID = MEMINFO.ACCESS_NAME
                              AND M.SELL_TP IN ('PS', 'PC', 'BC')
                            GROUP BY MEMINFO.PEOPLENUM, GUBUN
                                            UNION ALL
                            SELECT  MEMINFO.PEOPLENUM REGISTER_NO
                                       ,MAX(A.SELLER_ID) BIZ_CODE
                                   ,SUM(A.QTY) AS ITEMQTY  
                                   ,SUM(A.AMT) AS ITEMPRC  
                                   ,GUBUN    
                            FROM
                            (
                           
                                    SELECT  ADJ_MONTH
                                           ,SELLER_ID
                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS QTY
                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS AMT
                                               ,'A' GUBUN
                                    FROM
                                    (
                                            SELECT  O.SELLER_ID
                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                                   ,O.ORD_AMT
                                                   ,O.ORD_QTY
                                                   ,O.SETTLE_METHOD_TP
                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                            WHERE A.ORD_NO = O.ORD_NO
                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                              AND A.ADJ_STAT_TP = 'DF'
                                              AND A.ADJ_TRGT_TP IN ('MP')
                                    )A
                                    GROUP BY ADJ_MONTH, SELLER_ID
                                    UNION ALL
                                    SELECT  ADJ_MONTH
                                           ,SELLER_ID
                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS QTY
                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS AMT
                                               ,'C' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELLER_ID
                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                                   ,O.ORD_AMT
                                                   ,O.ORD_QTY
                                                   ,O.SETTLE_METHOD_TP
                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                            WHERE A.ORD_NO = O.ORD_NO
                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                              AND A.ADJ_STAT_TP = 'DF'
                                              AND A.ADJ_TRGT_TP IN ('MP')
                                    )A
                                    GROUP BY ADJ_MONTH, SELLER_ID
                                    UNION ALL
                                    SELECT  ADJ_MONTH
                                           ,SELLER_ID
                                           ,0 AS QTY
                                           ,0 AS AMT
                                               ,'N' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELLER_ID
                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                                   ,O.ORD_AMT
                                                   ,O.ORD_QTY
                                                   ,O.SETTLE_METHOD_TP
                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                            WHERE A.ORD_NO = O.ORD_NO
                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                              AND A.ADJ_STAT_TP = 'DF'
                                              AND A.ADJ_TRGT_TP IN ('MP')
                                    )A
                                    GROUP BY ADJ_MONTH, SELLER_ID
                                    UNION ALL
                                    SELECT  ADJ_MONTH
                                           ,SELLER_ID
                                           ,0 AS QTY
                                           ,0 AS AMT
                                               ,'R' GUBUN     
                                    FROM
                                    (
                                            SELECT  O.SELLER_ID
                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                                   ,O.ORD_AMT
                                                   ,O.ORD_QTY
                                                   ,O.SETTLE_METHOD_TP
                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                            WHERE A.ORD_NO = O.ORD_NO
                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                              AND A.ADJ_STAT_TP = 'DF'
                                              AND A.ADJ_TRGT_TP IN ('MP')
                                    )A
                                    GROUP BY ADJ_MONTH, SELLER_ID
                            )A, BTOB_SELLER S, BTOB_MEMBER_BASIC M, MEMINFO MEMINFO
                            WHERE A.SELLER_ID = S.SELLER_ID
                              AND A.SELLER_ID = M.MEMBER_ID
                              AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                            GROUP BY MEMINFO.PEOPLENUM, GUBUN  
                    )
                )
              ) T1
            WHERE 1=1  
             )T2
        WHERE 1=1
        <isNotNull property="firstIndex">
        	<isNotNull property="lastIndex">
        		AND T2.ONUM BETWEEN #firstIndex# AND #lastIndex#
        	</isNotNull>
        </isNotNull> 
        	ORDER BY T2.ONUM DESC	
	</select>
	
	<!-- EDI파일 생성 내역리스트  카운트 -->
	<select id="selectEdiEtcMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
                FROM (SELECT 
	              #regYear# AS settleyear
	            , #regBungi# AS bungiGubun
	            , #regYear# || #regBungi# || 'P' ||'1138202.144' AS filename
	            , MAX(A7) AS T3  
	            , SUM(A9) AS T4
	            , SUM(A15) AS T5
	            , COUNT(DISTINCT A16) T6
	         FROM (
	             SELECT 
	                      ROWNUM A7
	                    , ITEMQTY A9
	                    , ITEMPRC A15
	                    , BIZ_CODE A16
	                    FROM (
	                            SELECT   MEMINFO.PEOPLENUM REGISTER_NO
	                                   , MAX(A.SELL_ID) BIZ_CODE
	                                   , SUM(A.QTY) AS ITEMQTY  
	                                   , SUM(A.AMT) AS ITEMPRC  
	                                   , GUBUN            
	                            FROM
	                            (
	                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
	                                           ,SELL_ID
	                                           ,SUM(A.QTY) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
	                                           ,SUM(A.TRN_AMT) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
	                                           ,'A' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELL_ID
	                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
	                                                   ,O.ORD_AMT AS TRN_AMT
	                                                   ,O.PAY_AMT
	                                                   ,O.QTY
	                                                   ,M.STL_TP_CODE
	                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
	                                            WHERE A.TRN_NO = O.TRN_NO
	                                              AND M.ORD_NO = O.ORD_NO
	                                              AND A.ADJ_TGT_TP = 'AA'
	                                              AND A.ADJ_PAY_TP = 'SA'
	                                              AND A.ADJ_PAY_DATE BETWEEN '20110101' || '000000' AND '20110331' || '999999'
	                                    )A
	                                    GROUP BY ADJ_PAY_DATE, SELL_ID
	                                    UNION ALL
	                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
	                                           ,SELL_ID
	                                           ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
	                                           ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
	                                           ,'C' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELL_ID
	                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
	                                                   ,O.PAY_AMT
	                                                   ,O.QTY
	                                                   ,M.STL_TP_CODE
	                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
	                                            WHERE A.TRN_NO = O.TRN_NO
	                                              AND M.ORD_NO = O.ORD_NO
	                                              AND A.ADJ_TGT_TP = 'AA'
	                                              AND A.ADJ_PAY_TP = 'SA'
	                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
	                                    )A
	                                    GROUP BY ADJ_PAY_DATE, SELL_ID
	                                    UNION ALL
	                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
	                                           ,SELL_ID
	                                           ,0 AS QTY
	                                           ,0 AS AMT
	                                           ,'N' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELL_ID
	                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
	                                                   ,O.PAY_AMT
	                                                   ,O.QTY
	                                                   ,M.STL_TP_CODE
	                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
	                                            WHERE A.TRN_NO = O.TRN_NO
	                                              AND M.ORD_NO = O.ORD_NO
	                                              AND A.ADJ_TGT_TP = 'AA'
	                                              AND A.ADJ_PAY_TP = 'SA'
	                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
	                                    )A
	                                    GROUP BY ADJ_PAY_DATE, SELL_ID
	                                    UNION ALL
	                                    SELECT  ADJ_PAY_DATE AS ADJ_MONTH
	                                           ,SELL_ID
	                                           ,0 AS QTY
	                                           ,0 AS AMT
	                                           ,'R' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELL_ID
	                                                   ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
	                                                   ,O.PAY_AMT
	                                                   ,O.QTY
	                                                   ,M.STL_TP_CODE
	                                            FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
	                                            WHERE A.TRN_NO = O.TRN_NO
	                                              AND M.ORD_NO = O.ORD_NO
	                                              AND A.ADJ_TGT_TP = 'AA'
	                                              AND A.ADJ_PAY_TP = 'SA'
	                                              AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
	                                    )A
	                                    GROUP BY ADJ_PAY_DATE, SELL_ID
	                            )A, ESC_MBR_ESC_LDG_TBL M, ESC_MBR_BAS_LDG_TBL MB, MEMINFO MEMINFO
	                            WHERE A.SELL_ID = M.MBR_ID
	                              AND A.SELL_ID = MB.MBR_ID
	                              AND A.SELL_ID = MEMINFO.ACCESS_NAME
	                              AND M.SELL_TP IN ('PS', 'PC', 'BC')
	                            GROUP BY MEMINFO.PEOPLENUM, GUBUN
	                                            UNION ALL
	                            SELECT  MEMINFO.PEOPLENUM REGISTER_NO
	                                       ,MAX(A.SELLER_ID) BIZ_CODE
	                                   ,SUM(A.QTY) AS ITEMQTY  
	                                   ,SUM(A.AMT) AS ITEMPRC  
	                                   ,GUBUN    
	                            FROM
	                            (
	                           
	                                    SELECT  ADJ_MONTH
	                                           ,SELLER_ID
	                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS QTY
	                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS AMT
	                                               ,'A' GUBUN
	                                    FROM
	                                    (
	                                            SELECT  O.SELLER_ID
	                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
	                                                   ,O.ORD_AMT
	                                                   ,O.ORD_QTY
	                                                   ,O.SETTLE_METHOD_TP
	                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
	                                            WHERE A.ORD_NO = O.ORD_NO
	                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
	                                              AND A.ADJ_STAT_TP = 'DF'
	                                              AND A.ADJ_TRGT_TP IN ('MP')
	                                    )A
	                                    GROUP BY ADJ_MONTH, SELLER_ID
	                                    UNION ALL
	                                    SELECT  ADJ_MONTH
	                                           ,SELLER_ID
	                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS QTY
	                                           ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS AMT
	                                               ,'C' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELLER_ID
	                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
	                                                   ,O.ORD_AMT
	                                                   ,O.ORD_QTY
	                                                   ,O.SETTLE_METHOD_TP
	                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
	                                            WHERE A.ORD_NO = O.ORD_NO
	                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
	                                              AND A.ADJ_STAT_TP = 'DF'
	                                              AND A.ADJ_TRGT_TP IN ('MP')
	                                    )A
	                                    GROUP BY ADJ_MONTH, SELLER_ID
	                                    UNION ALL
	                                    SELECT  ADJ_MONTH
	                                           ,SELLER_ID
	                                           ,0 AS QTY
	                                           ,0 AS AMT
	                                               ,'N' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELLER_ID
	                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
	                                                   ,O.ORD_AMT
	                                                   ,O.ORD_QTY
	                                                   ,O.SETTLE_METHOD_TP
	                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
	                                            WHERE A.ORD_NO = O.ORD_NO
	                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
	                                              AND A.ADJ_STAT_TP = 'DF'
	                                              AND A.ADJ_TRGT_TP IN ('MP')
	                                    )A
	                                    GROUP BY ADJ_MONTH, SELLER_ID
	                                    UNION ALL
	                                    SELECT  ADJ_MONTH
	                                           ,SELLER_ID
	                                           ,0 AS QTY
	                                           ,0 AS AMT
	                                               ,'R' GUBUN     
	                                    FROM
	                                    (
	                                            SELECT  O.SELLER_ID
	                                                   ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
	                                                   ,O.ORD_AMT
	                                                   ,O.ORD_QTY
	                                                   ,O.SETTLE_METHOD_TP
	                                            FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
	                                            WHERE A.ORD_NO = O.ORD_NO
	                                              AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
	                                              AND A.ADJ_STAT_TP = 'DF'
	                                              AND A.ADJ_TRGT_TP IN ('MP')
	                                    )A
	                                    GROUP BY ADJ_MONTH, SELLER_ID
	                            )A, BTOB_SELLER S, BTOB_MEMBER_BASIC M, MEMINFO MEMINFO
	                            WHERE A.SELLER_ID = S.SELLER_ID
	                              AND A.SELLER_ID = M.MEMBER_ID
	                              AND A.SELLER_ID = MEMINFO.ACCESS_NAME
	                            GROUP BY MEMINFO.PEOPLENUM, GUBUN  
	                    )
                   )
                   )
	</select>

  
  <!-- edi_new 헤더파일 등록 -->
  <insert id="registEdiEtcHead"   parameterClass="java.util.HashMap">
    <![CDATA[
    INSERT INTO EDIETCHEAD( 
             RECORDGUBUN
            ,SETTLEYEAR
            ,BUNGI_GUBUN
            ,TAXOFF_CODE
            ,SEND_DATE_YMD
            ,REGISTERNO
            ,BSSNAME
            ,SETTLE_START_DATE
            ,SETTLE_END_DATE
            )
   VALUES(
             'HD'
            ,#regYear#
	        ,#regBungi#
            ,'107'
            ,TO_CHAR(SYSDATE,'YYYYMMDD')
            ,'1138202144'
            ,'재단법인 한국우편사업진흥원'
            ,#startDate#
            ,#endDate#
         )
    ]]>
  </insert> 
  
  <!-- 판매대행 파일생성(헤더조회) -->
  <select id="selectEdiEtcHead" parameterClass ="java.util.HashMap" resultClass="commMap">
    <![CDATA[  
    SELECT  RECORDGUBUN
           ,SETTLEYEAR
           ,BUNGI_GUBUN
           ,TAXOFF_CODE
           ,SEND_DATE_YMD
           ,REGISTERNO
           ,BSSNAME
           ,SETTLE_START_DATE
           ,SETTLE_END_DATE 
    FROM EDIETCHEAD 
    WHERE SETTLEYEAR = #regYear#
    AND   BUNGI_GUBUN = #regBungi#
    ]]>
  </select>
  
  <!-- 판매대행 파일생성(본문조회) -->
  <select id="selectEdiEtcBody" parameterClass ="java.util.HashMap" resultClass="commMap">
    <![CDATA[ 
    SELECT 'RD' A1
          ,#regYear# A2
          ,#regBungi# A3
          ,'1138202144' A4
          ,REGISTER_NO A5
          ,'0000000000000' A6
          ,ROWNUM A7
          ,ITEMQTY A9
          ,'0' A10
          ,'0' A11
          ,'0' A12
          ,'0' A13
          ,CASE WHEN ITEMPRC < 0 THEN 1 ELSE 0 END A14
          ,ITEMPRC A15
          ,BIZ_CODE A16
          ,'1' A17
          ,CASE WHEN VSIZE(TELEPHONE) > 11 THEN '' ELSE TELEPHONE END A18
          ,CASE WHEN VSIZE(CELLPHONE) > 11 THEN '' ELSE CELLPHONE END A19
          ,CASE WHEN VSIZE(EMAIL) > 40 THEN '' ELSE EMAIL END A20
          ,GUBUN A21
    FROM (
                SELECT  MEMINFO.PEOPLENUM REGISTER_NO
                       ,MAX(A.SELL_ID) BIZ_CODE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','') TELEPHONE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','') CELLPHONE
                       ,MAX(NVL(MEMINFO.EMAIL,'test@epost.kr')) EMAIL
                       ,SUM(A.QTY) AS ITEMQTY  
                       ,SUM(A.AMT) AS ITEMPRC  
                       ,GUBUN            
                FROM
                (
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,SUM(A.QTY) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                               ,SUM(A.TRN_AMT) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                               ,'A' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.ORD_AMT AS TRN_AMT
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                               ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                               ,'C' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'N' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'R' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                )A, ESC_MBR_ESC_LDG_TBL M, ESC_MBR_BAS_LDG_TBL MB, MEMINFO MEMINFO
                WHERE A.SELL_ID = M.MBR_ID
                  AND A.SELL_ID = MB.MBR_ID
                  AND A.SELL_ID = MEMINFO.ACCESS_NAME
                  AND M.SELL_TP IN ('PS', 'PC', 'BC')
                GROUP BY MEMINFO.PEOPLENUM, GUBUN
                UNION ALL
                SELECT  MEMINFO.PEOPLENUM REGISTER_NO
                       ,MAX(A.SELLER_ID) BIZ_CODE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','') TELEPHONE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','') CELLPHONE
                       ,MAX(NVL(MEMINFO.EMAIL,'test@epost.kr')) EMAIL
                       ,SUM(A.QTY) AS ITEMQTY  
                       ,SUM(A.AMT) AS ITEMPRC  
                       ,GUBUN    
                FROM
                (
               
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS QTY
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS AMT
                               ,'A' GUBUN
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS QTY
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS AMT
                               ,'C' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'N' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'R' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                )A, BTOB_SELLER S, BTOB_MEMBER_BASIC M, MEMINFO MEMINFO
                WHERE A.SELLER_ID = S.SELLER_ID
                  AND A.SELLER_ID = M.MEMBER_ID
                  AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                GROUP BY MEMINFO.PEOPLENUM, GUBUN  
    )
    ]]>
  </select>
    
  <!-- 판매대행 파일생성(테일조회) -->
   <select id="selectEdiEtcTail" parameterClass ="java.util.HashMap" resultClass="commMap">
    <![CDATA[  
    
    SELECT 'TD' A0
           ,#regYear# A1
           ,#regBungi# A2
           ,'1138202144' A3
           ,SUM(ITEMQTY) A4
           ,SUM(ITEMQTY) A5
           ,0 A6
           ,0 A7 
           ,0 A8
           ,0 A9
           ,0 A10
           ,SUM(ITEMPRC) A11  
    FROM (
                SELECT  MEMINFO.PEOPLENUM REGISTER_NO
                       ,MAX(A.SELL_ID) BIZ_CODE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','') TELEPHONE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','') CELLPHONE
                       ,MAX(NVL(MEMINFO.EMAIL,'test@epost.kr')) EMAIL
                       ,SUM(A.QTY) AS ITEMQTY  
                       ,SUM(A.AMT) AS ITEMPRC  
                       ,GUBUN            
                FROM
                (
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,SUM(A.QTY) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                               ,SUM(A.TRN_AMT) - SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                               ,'A' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.ORD_AMT AS TRN_AMT
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.QTY, 0)) AS QTY
                               ,SUM(DECODE(A.STL_TP_CODE, 'SCC1', A.PAY_AMT, 0)) AS AMT
                               ,'C' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'N' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                        UNION ALL
                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                               ,SELL_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'R' GUBUN     
                        FROM
                        (
                                SELECT  O.SELL_ID
                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                       ,O.PAY_AMT
                                       ,O.QTY
                                       ,M.STL_TP_CODE
                                FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                WHERE A.TRN_NO = O.TRN_NO
                                  AND M.ORD_NO = O.ORD_NO
                                  AND A.ADJ_TGT_TP = 'AA'
                                  AND A.ADJ_PAY_TP = 'SA'
                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                        )A
                        GROUP BY ADJ_PAY_DATE, SELL_ID
                )A, ESC_MBR_ESC_LDG_TBL M, ESC_MBR_BAS_LDG_TBL MB, MEMINFO MEMINFO
                WHERE A.SELL_ID = M.MBR_ID
                  AND A.SELL_ID = MB.MBR_ID
                  AND A.SELL_ID = MEMINFO.ACCESS_NAME
                  AND M.SELL_TP IN ('PS', 'PC', 'BC')
                GROUP BY MEMINFO.PEOPLENUM, GUBUN
                UNION ALL
                SELECT  MEMINFO.PEOPLENUM REGISTER_NO
                       ,MAX(A.SELLER_ID) BIZ_CODE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.TELEPHONE),' ',''),'(',''),')',''),'-','') TELEPHONE
                       ,REPLACE(REPLACE(REPLACE(REPLACE(MAX(MEMINFO.MOBILE),' ',''),'(',''),')',''),'-','') CELLPHONE
                       ,MAX(NVL(MEMINFO.EMAIL,'test@epost.kr')) EMAIL
                       ,SUM(A.QTY) AS ITEMQTY 
                       ,SUM(A.AMT) AS ITEMPRC  
                       ,GUBUN    
                FROM
                (
               
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS QTY
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS AMT
                               ,'A' GUBUN
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_QTY, 0)) AS QTY
                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CD', A.ORD_AMT, 0)) AS AMT
                               ,'C' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'N' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                        UNION ALL
                        SELECT  ADJ_MONTH
                               ,SELLER_ID
                               ,0 AS QTY
                               ,0 AS AMT
                               ,'R' GUBUN     
                        FROM
                        (
                                SELECT  O.SELLER_ID
                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                       ,O.ORD_AMT
                                       ,O.ORD_QTY
                                       ,O.SETTLE_METHOD_TP
                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                WHERE A.ORD_NO = O.ORD_NO
                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                  AND A.ADJ_STAT_TP = 'DF'
                                  AND A.ADJ_TRGT_TP IN ('MP')
                        )A
                        GROUP BY ADJ_MONTH, SELLER_ID
                )A, BTOB_SELLER S, BTOB_MEMBER_BASIC M, MEMINFO MEMINFO
                WHERE A.SELLER_ID = S.SELLER_ID
                  AND A.SELLER_ID = M.MEMBER_ID
                  AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                GROUP BY MEMINFO.PEOPLENUM, GUBUN  
    )
    ]]>
  </select> 
    
  <!-- 판매대행 파일생성 수정 -->
  <update id="modifyEdiEtcHead"      parameterClass="java.util.HashMap">
    <![CDATA[  
    UPDATE EDIETCHEAD 
    SET FILENAME = #fileName#
       ,TGIVENCOUNT = #tg#
       ,TSETTLEAMOUNT = #tsat#
       ,TSETTLECOUNT = #tsc#
       ,TSUPPLYCOUNT = ( 
                            SELECT SUM(CC)
                            FROM 
                            (
                                SELECT  COUNT(*) CC
                                FROM
                                (
                                        SELECT  ADJ_PAY_DATE AS ADJ_MONTH
                                               ,SELL_ID
                                               ,SUM(DECODE(A.STL_TP_CODE, 'SAC1', A.QTY, 'SCH1', A.QTY, 0)) AS QTY
                                               ,SUM(DECODE(A.STL_TP_CODE, 'SAC1', A.PAY_AMT, 'SCH1', A.PAY_AMT, 0)) AS AMT
                                               ,'A' GUBUN     
                                        FROM
                                        (
                                                SELECT  O.SELL_ID
                                                       ,SUBSTR(ADJ_PAY_DATE, 1, 6) AS ADJ_PAY_DATE
                                                       ,O.PAY_AMT
                                                       ,O.QTY
                                                       ,M.STL_TP_CODE
                                              FROM ESC_ADJ_LDG A, ESC_ORDER_DET O, ESC_ORDER M
                                                WHERE A.TRN_NO = O.TRN_NO
                                                  AND M.ORD_NO = O.ORD_NO
                                                  AND A.ADJ_TGT_TP = 'AA'
                                                  AND A.ADJ_PAY_TP = 'SA'
                                                  AND A.ADJ_PAY_DATE BETWEEN #startDate# || '000000' AND #endDate# || '999999'
                                        )A
                                        GROUP BY ADJ_PAY_DATE, SELL_ID
                                )A, ESC_MBR_ESC_LDG_TBL M, ESC_MBR_BAS_LDG_TBL MB, MEMINFO MEMINFO
                                WHERE A.SELL_ID = M.MBR_ID
                                  AND A.SELL_ID = MB.MBR_ID
                                  AND A.SELL_ID = MEMINFO.ACCESS_NAME
                                  AND M.SELL_TP IN ('PS', 'PC', 'BC')
                                GROUP BY MEMINFO.PEOPLENUM, GUBUN
                                UNION ALL
                                SELECT  COUNT(*)
                                FROM
                                (
                               
                                        SELECT  ADJ_MONTH
                                               ,SELLER_ID
                                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_QTY, 0)) AS QTY
                                               ,SUM(DECODE(A.SETTLE_METHOD_TP, 'CS', A.ORD_AMT, 0)) AS AMT
                                               ,'A' GUBUN
                                        FROM
                                        (
                                                SELECT  O.SELLER_ID
                                                       ,TO_CHAR(A.ADJ_DT, 'YYYYMM') AS ADJ_MONTH
                                                       ,O.ORD_AMT
                                                       ,O.ORD_QTY
                                                       ,O.SETTLE_METHOD_TP
                                                FROM BTOB_ORDER_ADJUSTMENT A, BTOB_ORDER O
                                                WHERE A.ORD_NO = O.ORD_NO
                                                  AND TO_CHAR(A.ADJ_DT, 'YYYYMMDD') BETWEEN #startDate# AND #endDate#
                                                  AND A.ADJ_STAT_TP = 'DF'
                                                  AND A.ADJ_TRGT_TP IN ('MP')
                                        )A
                                        GROUP BY ADJ_MONTH, SELLER_ID
                                )A, BTOB_SELLER S, BTOB_MEMBER_BASIC M, MEMINFO MEMINFO
                                WHERE A.SELLER_ID = S.SELLER_ID
                                  AND A.SELLER_ID = M.MEMBER_ID
                                  AND A.SELLER_ID = MEMINFO.ACCESS_NAME
                                GROUP BY MEMINFO.PEOPLENUM, GUBUN  
                            )
                        )
    WHERE SETTLEYEAR = #regYear#
    AND   BUNGI_GUBUN = #regBungi#
    ]]>
  </update>  
  
	
	<!-- 현금영수증 내역 조회 -->	
  <select id="selectCashDetail" parameterClass ="java.util.HashMap" resultClass="commMap">
    SELECT 
			A.ORDER_ID     ,
			A.NAME         ,
			A.gbn          ,
			NVL(A.TELNO1,'') || NVL(A.TELNO2,'') || NVL(A.TELNO3,'')  TELNO     ,
			NVL(A.EMAIL,'')  EMAI ,
			A.SEND_CHK            ,
			B.SUPP_COMP_ID        ,
			B.TERMINAL_ID         ,
			B.ORDER_DATE          ,
			B.SEQUENCE_NO         ,
			B.VAT                 ,
			B.TIPS                ,
			B.AMOUNT              ,
			B.AMOUNT_5000         ,
			B.PRTGBN              ,
			B.REGISTER_NO         ,
			B.MSGTYPE             ,
			B.AUTH_TYPE           ,
			B.AUTH_DATA           ,
			B.APPROVAL_NO         ,
			B.APPROVAL_TIME       ,
			B.REPLY_CODE          ,
			B.SCREEN_MSG          ,
			B.STATUS              ,
			B.KICC_CHK            ,
			B.KICC_DATE           ,
			B.NEW_SUPP_COMP_ID    ,
			B.RESERVED1           ,
			B.RESERVED2           ,
			B.RESERVED3           ,
			B.RESERVED4           ,
			B.RESERVED5           ,
			B.PROCESS_ID          ,
			B.AUTH_SEED_DATA      ,
			B.SUPP_COMP_NM        ,
			B.SUPP_COMP_PRSDT_NM  ,
			B.SUPP_COMP_ADDR      ,
			B.SUPP_COMP_TELNO
	from OD_CASHREQ A, OD_CASHINFO B
	where A.ORDER_ID = B.ORDER_ID
	AND A.ORDER_ID = #orderId#
	</select>

	<update id="updateCashPrint" parameterClass="java.util.HashMap">
		UPDATE  OD_CASHINFO
		   SET  PRTGBN   = 'Y'
		 WHERE  ORDER_ID = #orderId#
	</update>
	
	<!-- 현금영수증 발행위한 주문정보 불러오기 -->
	<select id="selectCashInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT /* 파일명[파일설명] : TaxMgr_SQL.xml[현금영수증 발행위한 주문정보 불러오기] SQL ID : selectCashInfo */
			   A.ORDER_ID
			 , B.SUPP_COMP_ID
			 , OC.GBN AS GBN
			/* 현금영수증은 공급업체가 아닌 진흥원 사업자번호로 하여야 정상발급됨(개발완료후 POPBILL가입정보) */
			<isEqual property="tempDesc" compareValue="1">
			 , MAX(XII.REGNUM) AS REGISTER_NO                /* 발급자사업자등록번호 */
			 , MAX(XII.CMPNAME) AS BIZ_NAME                  /* 발급 업체명 */
			 , MAX(XII.OWNER) AS BOSS_NAME                   /* 발급 대표자 */
			 , MAX(XII.ADDRESS) AS ADDRESS                   /* 발급 주소 */
			 , MAX(XII.REG_TEL) AS TELNO                     /* 발급  전화번호 */
			</isEqual>
			/* , MAX(XII.REGNUM) AS REGISTER_NO */          /* 발급자사업자등록번호 */
			 , MAX(REPLACE(C.COMPREG_NO,'-','')) REGISTER_NO     /*공급업체사업자등록번호 */
			 , MAX(XII.CMPNAME) AS BIZ_NAME                  /* 발급 업체명 */
			 , MAX(XII.OWNER) AS BOSS_NAME                   /* 발급 대표자 */
			 , MAX(XII.ADDRESS) AS ADDRESS                   /* 발급 주소 */
			 , MAX(XII.REG_TEL) AS TELNO                     /* 발급  전화번호 */
			/*, MAX(REPLACE(C.COMPREG_NO,'-','')) SUPP_COMP_ID  */  /*공급업체사업자등록번호 */
			 , MAX(C.SUPP_COMP_ID) AS SUPP_COMP_ID  			/*공급업체 ID */
			 , MAX(C.TAX_CALDOC_COMP_NM) AS SUPP_COMP_NM		/* 공급업체명 */
			 , MAX(C.PRSDT_NM ) AS SUPP_COMP_PRSDT_NM                        /* 공급업체 대표자 */
			 , MIN(C.SEND_ADDR||C.SEND_DTAIL_ADDR) SUPP_COMP_ADDR        /*공급업체 주소 */
			 , MIN(C.TELNO) AS SUPP_COMP_TELNO                               /* 공급업체 전화번호 */
			 , NVL(MAX(OC.TELNO1||OC.TELNO2||OC.TELNO3),' ') HP          /*개인의 경우 휴대폰번호 */
			 , NVL(MAX(OC.JUMIN_SEED_1),' ') JUMIN1              /* 지출증빙용(사업자)의 경우 사업자등록번호 소득증빙은 휴대폰1 */
			 , NVL(MAX(OC.JUMIN_SEED_2),' ') JUMIN2              /* 지출증빙용(사업자)의 경우 사업자등록번호 소득증빙은 휴대폰2 */
			 , NVL(MAX(OC.JUMIN_SEED_3),' ') JUMIN3              /* 지출증빙용(사업자)의 경우 사업자등록번호 소득증빙은 휴대폰3 */
			 , NVL(MAX(OC.EMAIL),' ') EMAIL                  /* 공급받는자 EMAIL */
			/*, MAX(B.GOODS_CD) AS GOODS_CD */
			 , NVL(MAX(OC.NAME), ' ') AS NAME                /* 발급자 이름 */
			 , SUM(DECODE(F.VAT_YN,'Y', B.DC_APPLY_PRC  - ROUND(B.DC_APPLY_PRC/ 1.1),0)) AS VAT      /* 부가세 */
			 , SUM(B.CASH_BILL_AMT) - SUM(DECODE(F.VAT_YN,'Y',B.DC_APPLY_PRC  - ROUND(B.DC_APPLY_PRC/ 1.1),0)) AMOUNT        /* 공급가액 (상품가-부가세)*/
			 , SUM(B.CASH_BILL_AMT) /*+ SUM(DECODE(F.VAT_YN,'Y',B.DC_APPLY_PRC  - ROUND(B.DC_APPLY_PRC/ 1.1),0)) */ TAMOUNT
			/* , MAX(A.ORDER_DATE) AS ORDER_DATE */
			 , TO_CHAR(MAX(A.ORDER_DATE), 'YYYYMMDDHH24MISS') AS ORDER_DATE
			 , MAX(OOS.IP_ADDR) AS IP_ADDR
		  FROM OD_ORDER_MAST A
			 , OD_ORDER_ITM B
			 , CO_SUPP_COMP_MAST C
			 , OD_ORDER_SETL OOS
			 , GD_GOODS_MAST F
			 , OD_CASHREQ OC
			 , X_INVOICE_INFO XII
		 WHERE 1=1
		   AND A.ORDER_ID = B.ORDER_ID
		   AND B.SUPP_COMP_ID = C.SUPP_COMP_ID
		   AND A.ORDER_ID = OOS.ORDER_ID
		   AND B.GOODS_CD = F.GOODS_CD
		   AND A.ORDER_ID = OC.ORDER_ID(+)
		   AND A.ORDER_ID = #orderId#
		<isNotEmpty property="attr06">
		   AND B.SUPP_COMP_ID = #attr06#
		</isNotEmpty>
		   AND B.CASH_BILL_AMT > 0
		   AND C.NATION_CD = 'KO'
		   AND XII.ACCESS_NAME = 'csf'
		/* GROUP BY A.ORDER_ID, B.SUPP_COMP_ID, B.SEND_SEQ, OC.GBN */
		 GROUP BY A.ORDER_ID, B.SUPP_COMP_ID, OC.GBN
		/* orderId 단위 supp_comp_id 로 통합 발행 */
	</select>

	<!-- 현금영수증 관리번호 채번 -->
	<select id="retrieveCashSeq" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT /* 파일명[파일설명] : TaxMgr_SQL.xml[현금영수증 관리번호 채번] SQL ID : retrieveCashSeq */
			   TO_CHAR(SYSDATE,'YYYYMMDD') || '-' || SEQ_OD_CASHINFO.NEXTVAL  /* LPAD(TO_CHAR(SEQ_OD_CASHINFO.NEXTVAL),6,'0') */ INFO
		  FROM DUAL
	</select>
	
	<!-- 현금영수증 정보 등록 -->
	<insert id="registCashInfo"   parameterClass="java.util.HashMap">
		/* 파일명[파일설명] : TaxMgr_SQL.xml[현금영수증 정보 등록] SQL ID : registCashInfo */
		<![CDATA[
		INSERT INTO OD_CASHINFO(
				ORDER_ID,
				SUPP_COMP_ID,
				TERMINAL_ID,
				ORDER_DATE,
				SEQUENCE_NO,
				VAT,
				TIPS,
				AMOUNT,
				PRTGBN,
				REGISTER_NO,
				MSGTYPE,
				AUTH_TYPE,       /* 02:개인주민등록번호, 03:개인휴대폰번호, 04:법인사업자등록번호 */
				AUTH_DATA,
				APPROVAL_NO,
				APPROVAL_TIME,
				REPLY_CODE,
				SCREEN_MSG,
				STATUS,
				RESERVED1,
				RESERVED2,
				PROCESS_ID,
				AUTH_SEED_DATA,
				SUPP_COMP_NM,
				SUPP_COMP_PRSDT_NM,
				SUPP_COMP_ADDR,
				SUPP_COMP_TELNO
			) VALUES
			(
				#orderId#
				, #suppCompId#
				, #terminalId#
				, TO_DATE(#orderDate#, 'YYYYMMDDHH24MISS')
				, #sequenceNo#
				, #vat#
				, #tips#
				, #amount#
				, 'N'
				, #registerNo#
				, #msgtype#
				, #authType#
				, #authData#
				, #approvalNo#   /* kicc 승인번호 */
				, #approvalTime#  /* TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') */
				, #replyCode#
				, #screenMsg#
				, #status#
				, #reserved1#
				, #reserved2#
				, #processId#
				, #authSeedData#
				, #suppCompNm#
				, #suppCompPrsdtNm#
				, #suppCompAddr#
				, #suppCompTelno#
			)
		]]>
	</insert>
	
	<!-- 신청정보 update -->
	<update id="updateCashReq" parameterClass="java.util.HashMap">
	/* 파일명[파일설명] : TaxMgr_SQL.xml[신청정보 update] SQL ID : updateCashReq */
		UPDATE  OD_CASHREQ
		   SET  SEND_CHK   = '01'
		 WHERE  ORDER_ID = #orderId#
	</update>

	<!-- 현금영수증 발급정보 카운트 -->
	<select id="selectOdCashinfoCnt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT /* 파일명[파일설명] : TaxMgr_SQL.xml[발급정보 카운트] SQL ID : selectOdCashinfoCnt */
			   COUNT(*) AS CNT
		  FROM OD_CASHINFO
		 WHERE ORDER_ID = #orderId#
		   AND SUPP_COMP_ID = #suppCompId#
		<isEqual property="sMsgType" compareValue="51">
		   AND STATUS = 'D1'
		</isEqual>
	</select>

	<!-- 현금영수증 신청리스트 - KICC 취소-->
	<select id="selectCashInfoList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT /* 파일명[파일설명] : TaxMgr_SQL.xml[현금영수증 신청리스트 KICC] SQL ID : selectCashInfoList */
			   TO_CHAR(TO_DATE(T2.APPROVAL_TIME, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') AS REG_DATE
			 , T2.REGISTER_NO
			 , NVL(T2.VAT, 0) + NVL(T2.AMOUNT, 0) AS AMOUNT
			 , T2.SEQUENCE_NO
			 , NVL(T2.APPROVAL_NO,'99999999999999') AS APPROVAL_NO
			 , T2.APPROVAL_TIME
			 , T2.ORDER_ID
			 , T2.AUTH_SEED_DATA
			 , T1.SETL_MEAN_CD
			 , TO_CHAR(T2.ORDER_DATE,'yyyymmdd') ORDER_DATE
			 , T2.AUTH_DATA
			 , T2.AUTH_TYPE
			 , T2.RESERVED2
		  FROM OD_ORDER_MAST T1
			 , OD_CASHINFO T2
		 WHERE T1.ORDER_ID = T2.ORDER_ID
		   AND T2.STATUS = 'D1'
		   AND T1.ORDER_ID = #orderId#
		   AND T1.ACCESS_NAME = #searchAccessName#
		   /* 현금영수증 취소시 사용 */
		<isNotEmpty property="suppCompId">
		   AND T2.SUPP_COMP_ID = #suppCompId#
		</isNotEmpty>
	</select>

	<!-- 현금영수증 취소처리 -->
	<update id="updateCashState" parameterClass="java.util.HashMap">
		/* 파일명[파일설명] : TaxMgr_SQL.xml[현금영수증 취소처리] SQL ID : updateCashState */
		UPDATE OD_CASHINFO
		   SET REPLY_CODE = #replyCode#
			 , MSGTYPE = #msgtype#
			 , SCREEN_MSG = #screenMsg#
			 , STATUS     = #status#
			 , ORDER_DATE    = SYSDATE
			 , PRTGBN        = 'Y'
			 , APPROVAL_NO = #approvalNo#
			 , APPROVAL_TIME = #approvalTime#
			 , AMOUNT = #amount#
			 , PROCESS_ID = #searchAccessName#
			 , RESERVED3  = #reserved3#
			 , KICC_CHK      = NULL
		 WHERE ORDER_ID = #orderId#
		<isNotEmpty property="sequenceNo">
		   AND SEQUENCE_NO = #sequenceNo#
		</isNotEmpty>
			<isNotEmpty property="suppCompId">
		   AND SUPP_COMP_ID = #suppCompId#
		</isNotEmpty>
	</update>

</sqlMap>