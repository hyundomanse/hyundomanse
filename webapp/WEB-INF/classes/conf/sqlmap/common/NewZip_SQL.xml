<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="BO.NewZip">
	<typeAlias  alias="commMap" type="com.devwork.common.map.CommonMap"/>

	<!-- 시군구목록조회 -->
	<select id="newSiSggList" parameterClass="java.util.HashMap" resultClass="commMap" >
        SELECT AREADIVCD,SEQCD,AREASHORTNM,AREAFULLNM,EXTCD FROM PICMT0889
            WHERE AREADIVCD = #gbType# AND USEYN='Y'
	</select>

	<!-- 행정동법정동조회 -->
	<select id="adminToLedgDongName" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT LEDG_DONG_NAME FROM (
		SELECT COUNT(DISTINCT LEDG_DONG_NAME) as dongCnt, MAX(LEDG_DONG_NAME) as ledg_Dong_Name  
            FROM POST_CONT_MIX
            WHERE ADMIN_EUB_DONG NOT LIKE '%읍'
            AND ADMIN_EUB_DONG NOT LIKE '%면'
            AND LEDG_DONG_NAME NOT LIKE '%리'
            AND (LEDG_DONG_NAME=#srchEmdNm# OR ADMIN_EUB_DONG=#srchEmdNm#)
            <isNotEmpty prepend="AND" property="srchSido">
                ADMIN_SI_DO = #srchSido#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="srchSgg">
                ADMIN_GUN_GU = #srchSgg#
            </isNotEmpty>
            ) WHERE dongCnt = 1
	</select>
	
	<!-- retrieveExtYn -->
    <select id="retrieveExtYn" parameterClass="java.util.HashMap" resultClass="int">
        select sum(EXT_CNT) as EXT_CNT from (
            SELECT COUNT(1) as EXT_CNT  
            FROM POST_CONT_MIX
            WHERE ADMIN_SI_DO LIKE #srchSido#||'%'
            AND ADMIN_GUN_GU LIKE #srchSgg#||'%'
            AND LEDG_DONG_NAME = #srchEmdNm#
            UNION ALL
            SELECT COUNT(1) as EXT_CNT  
            FROM POST_CONT_MIX
            WHERE ADMIN_SI_DO LIKE #srchSido#||'%'
            AND ADMIN_GUN_GU LIKE #srchSgg#||'%'
            AND LEDG_DONG_NAME = #srchRiNm#
         )
    </select>

    <!-- 동체크 -->
    <select id="retrieveEmdChk" parameterClass="java.lang.String" resultClass="int">
            SELECT NVL(SUM(CASE WHEN EMD_NM LIKE '%리' THEN 1000 ELSE 1 END),0) as CHK_NUM FROM (
                select ADMIN_EUB_DONG AS EMD_NM from post_cont_mix
                where ADMIN_GUN_GU != LEDG_DONG_NAME
                UNION
                select LEDG_DONG_NAME AS EMD_NM from post_cont_mix
                where ADMIN_GUN_GU != LEDG_DONG_NAME
            ) WHERE EMD_NM LIKE #dongNm#||'%'
    </select>
	
	<select id="retrieveNewZipCdList_Case1_Count" parameterClass="java.util.HashMap" resultClass="int">
	   SELECT COUNT(1) AS CNT FROM (
        SELECT x.*
                 , 20 AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')'
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_ENG_nm ELSE a.emd_ENG_nm END AS engEmdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_ENG_nm || ' ' || a.rd_ENG_nm ELSE a.rd_ENG_nm END AS engRdNm
                         , CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                            FROM   picmt0885 c
                            WHERE  C.USEYN = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_1" compareValue="1">
		            AND    a.area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="2">
		            AND    a.zip_cl = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT '' AS rdNmCd
                         , '' AS emdSeq
                         , area_cd AS areaCd
                         , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                         , '' AS rangeKind
                         , '사서함' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                         , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                     || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                     || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                     || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                     || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                           ) AS dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
                    FROM   picmt0830
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_2" compareValue="1">
		            AND    area_cd =  #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="2">
		            AND    zip_cd =  #srchZipCd#;
		</isEqual>
		<isEqual property="query_2" compareValue="3">
		            AND 1!=1
		</isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
        )
	</select>
	
	<!--  우편번호 검색  -->  
	<select id="retrieveNewZipCdList_Case1_1_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case1_1
    SELECT COUNT(1) AS CNT FROM (
        SELECT x.*
                 , 20 AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT
                           a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_1" compareValue="1">
		            AND    a.area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="2">
		            AND    a.zip_cl = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_2" compareValue="1">
		            AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="2">
		            AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '범위지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_3" compareValue="1">
					AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_3" compareValue="2">
					AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_3" compareValue="3">
					AND 1!=1
		</isEqual>

                    UNION ALL
            SELECT '' AS rdNmCd
                 , '' AS emdSeq
                 , area_cd AS areaCd
                 , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                 , si_nm || ' ' || sgg_nm AS sidoSggNm
                 , '' AS emdNm
                 , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                 , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                 , '전체' AS rangeKind
                 , '사서함' AS type
                 , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                 , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                 , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                 , '' AS engEmdNm
                 , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                 , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                             || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                             || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                  || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                  || ' ' || RD_NM
                                  || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                  || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                  || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                         ) as dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
            FROM   picmt0830
            WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_4" compareValue="1">
		            AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_4" compareValue="2">
		            AND    zip_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_4" compareValue="3">
		            AND 1!=1
		</isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
    )
    </select>
	
	<!-- 도로명+건물명 -->
	<select id="retrieveNewZipCdList_Case2_1_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case2_1_Count
    SELECT COUNT(1) AS CNT FROM (
        SELECT /*+ leading(x) no_merge(x) */ x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT $query_hintIns1$
                           a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '0주소' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                AND    a.si_nm = #srchSido#
        </isEqual>

        <isEqual property="query_2" compareValue="1">
                AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="4">
            <![CDATA[
                AND (
                    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="5">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="6">
        	<![CDATA[
                AND (
                     a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_3" compareValue="2">
                    AND    a.emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>

        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_7" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                     UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_8" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>

        <isEqual property="query_9" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_9" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_9" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>

        </isEqual>

        <isEqual property="query_10" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>

        <isEqual property="query_11" compareValue="1">
                    AND    1 != 1
        </isEqual>

        <isEqual property="query_12" compareValue="1">
                    AND    a.ri_nm = #srchRiNm#
        </isEqual>

        <isEqual property="query_13" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN

        </isEqual>
        <isEqual property="query_13" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_13" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_13" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_13" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>

        <isEqual property="query_14" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_14" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_14" compareValue="3">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND    si_nm = #srchSido#"
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>

        <isEqual property="query_23" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>

        <isEqual property="query_25" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>

        <isEqual property="query_26" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_27" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_27" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_28" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>

        <isEqual property="query_29" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>

        <isEqual property="query_30" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>

        <isEqual property="query_32" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_32" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_32" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>

        <isEqual property="query_33" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
              AND NVL(Y.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
    )
	</select>
	
	<!-- 읍면동 + 지번, 건물검색 -->
	<select id="retrieveNewZipCdList_Case2_3_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case2_3_Count
    SELECT COUNT(1) AS CNT FROM (
        SELECT x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="4">
            <![CDATA[
                AND (
                    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="5">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="6">
        	<![CDATA[
                AND (
                     a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    (a.emd_nm = #srchEmdNm# OR a.rd_nm LIKE UPPER(#srchRdNm#)||'%')
        </isEqual>
        <isEqual property="query_3" compareValue="2">
                    AND    a.emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_7" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>
        <isEqual property="query_23" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_25" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_26" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_27" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_27" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_28" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>

        <isEqual property="query_29" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_30" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_32" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_32" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_32" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>

        <isEqual property="query_33" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
			]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
              AND NVL(Y.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.mtYn, x.LNDN_MA_SN, x.LNDN_SB_SN, x.rdNmA, x.underYn, x.BD_MA_SN, x.BD_SB_SN
	)
	</select>
	
	<!-- 동 없이 리로만 검색시 건물명이 없는 경우 도로명범위 + 지번범위 검색 -->
    <!-- 동 또는 리로 검색시 지번 범위검색 -->
	<select id="retrieveNewZipCdList_Case3_1_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case3_1_Count
    SELECT COUNT(1) AS CNT FROM (
        SELECT x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_1" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||'
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="4">
                    AND (
                        sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )

        </isEqual>
        <isEqual property="query_2" compareValue="5">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm like #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="6">
                    AND (
                        sgg_nm like #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_5" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_5" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_5" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_5" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_6" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
        	]]>
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_7" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_8" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_8" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_8" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                    AND (
                        sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )

            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm like #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (
                        sgg_nm like #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_9" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_10" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_11" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_12" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_12" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_12" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_12" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_12" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_13" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
        	]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.bd_ma_sn, x.bd_sb_sn, x.lndnMaSnSt, x.lndnSbSnSt
    )
    </select>
    
    <!-- 동 없이 리로만 검색시 건물명이 있는 경우 도로명(건물명) + 도로명범위 + 지번범위 검색 -->
    <select id="retrieveNewZipCdList_Case3_2_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case3_2
    SELECT COUNT(1) AS CNT FROM (
        SELECT /*+ leading(x) no_merge(x) */ x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT /*+ leading(b) no_push_pred(b) no_merge(b) use_nl(b a) */ a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물명' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL) END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
--
        <isEqual property="query_51" compareValue="1">
                    AND    1!=1
        </isEqual>
        <isEqual property="query_51" compareValue="2">
                    AND    c.search_word LIKE #srchEtcNm#||'%'
        </isEqual>
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    a.sgg_nm LIKE #srchSggTmp#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="3">
                    AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    a.ri_nm LIKE #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_7" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_8" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_8" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END AS engRdNm
                         , CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 A
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_9" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_9" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_10" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_10" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_10" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_11" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchEtcNm#||#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="2">
                    AND    rd_nm LIKE UPPER(#srchEtcNm#)||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="3">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_13" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_13" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_13" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_13" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_13" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_14" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT $query_hintIns14$
                         rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 A
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_15" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_15" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_16" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_16" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_16" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_17" compareValue="1">
                    AND    emd_nm like #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_17" compareValue="2">
                    AND    emd_nm like #srchEtcNm#||'%'
        </isEqual>
        <isEqual property="query_18" compareValue="1">
                    AND    ri_nm like #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_18" compareValue="2">
                    AND    ri_nm like #srchEtcNm#||'%'
        </isEqual>
        <isEqual property="query_19" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_19" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_19" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_19" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_19" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_20" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '0건물명' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL) END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn(+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_23" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_23" compareValue="2">
                    AND    a.emd_nm = #aStr#
        </isEqual>
        <isEqual property="query_23" compareValue="3">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    a.rd_nm = UPPER(#aStr#)
        </isEqual>
        <isEqual property="query_24" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_24" compareValue="3">
                    AND    a.rd_nm = UPPER(#srchRdNm#)
        </isEqual>
        <isEqual property="query_25" compareValue="1">
                    AND    TO_NUMBER(#cStr#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND a.UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND a.UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_26" compareValue="1">
                    AND    TO_NUMBER(#dStr#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_26" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_27" compareValue="1">
                    AND    b.DISPLAY_WORD is null
        </isEqual>
                    UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.LNDN_MA_SN as BD_MA_SN
                         , a.LNDN_SB_SN as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_28" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_29" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_29" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_29" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_30" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_30" compareValue="2">
                    AND    a.emd_nm = #aStr#
        </isEqual>
        <isEqual property="query_30" compareValue="3">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    a.ri_nm = #aStr#
        </isEqual>
        <isEqual property="query_31" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_31" compareValue="3">
                    AND    a.ri_nm like #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_31" compareValue="4">
                    AND    a.ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_32" compareValue="1">
                    AND    TO_NUMBER(#cStr#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_33" compareValue="1">
                    AND    TO_NUMBER(#dStr#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_33" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '1도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_101" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_101" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_102" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_102" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_102" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_103" compareValue="1">
                    AND    emd_nm LIKE #srchTmpEmdNm#||'%'
        </isEqual>
        <isEqual property="query_104" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_105" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_105" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_105" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_105" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_105" compareValue="7">
                    AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="8">
                    AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_106" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#dStr#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#dStr#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '1지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_121" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_121" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_122" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_122" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_122" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_123" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_124" compareValue="1">
                    AND    emd_nm LIKE #srchTmpEmdNm#||'%'
        </isEqual>
        <isEqual property="query_124" compareValue="2">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_125" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_125" compareValue="2">
                    AND    ri_nm = #srchTmpRiNm#
        </isEqual>
        <isEqual property="query_126" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_126" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_126" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_126" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_126" compareValue="5">
                    AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_127" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#dStr#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#dStr#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.underYn, x.BD_MA_SN, x.BD_SB_SN, x.LNDN_MA_SN, x.LNDN_SB_SN, x.buildNm
    )
    </select>
    
    <!--  사서함 검색  -->
    <select id="retrieveNewZipCdList_Case6_Count" parameterClass="java.util.HashMap" resultClass="int">
-- NewZipCd.retrieveNewZipCdList_Case6_Count
    SELECT COUNT(1) AS CNT FROM (
        SELECT x.*
         , 20 as orderSeq
         , y.delivRegiPoCd
         , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
    FROM   (SELECT '' AS rdNmCd
                 , '' AS emdSeq
                 , area_cd AS areaCd
                 , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                 , si_nm || ' ' || sgg_nm AS sidoSggNm
                 , '' AS emdNm
                 , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                 , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                 , '전체' AS rangeKind
                 , '사서함' AS type
                 , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                 , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                 , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                 , '' AS engEmdNm
                 , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                 , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                             || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                             || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                  || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                  || ' ' || RD_NM
                                  || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                  || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                  || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                         ) as dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
            FROM   picmt0830
            WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    rd_nm LIKE '%' || #srchPoBoxNm#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    sgg_nm = #srchSgg#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN st_jBunji AND NVL(ed_jBunji, st_jBunji)
        </isEqual>
        <isEqual property="query_6" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = st_jBunji THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(ST_BBUNJI,0)
        	]]>
        </isEqual>
        <isEqual property="query_7" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(ed_jBunji,st_jBunji) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END <= NVL(ed_bBunji,DECODE(ED_JBUNJI, NULL, NVL(ST_BBUNJI,0),99999))
        	]]>
        </isEqual>
            ) x
         ,  picmt0884 y
    WHERE x.areaCd = y.area_cd
    ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
    )
    </select>
    
    <select id="retrieveNewZipCdList_Case1" parameterClass="java.util.HashMap" resultClass="commMap">
       SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT x.*
                 , 20 AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')'
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_ENG_nm ELSE a.emd_ENG_nm END AS engEmdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_ENG_nm || ' ' || a.rd_ENG_nm ELSE a.rd_ENG_nm END AS engRdNm
                         , CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                            FROM   picmt0885 c
                            WHERE  C.USEYN = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_1" compareValue="1">
		            AND    a.area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="2">
		            AND    a.zip_cl = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT '' AS rdNmCd
                         , '' AS emdSeq
                         , area_cd AS areaCd
                         , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                         , '' AS rangeKind
                         , '사서함' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                         , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                     || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                     || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                     || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                     || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                           ) AS dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
                    FROM   picmt0830
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_2" compareValue="1">
		            AND    area_cd =  #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="2">
		            AND    zip_cd =  #srchZipCd#;
		</isEqual>
		<isEqual property="query_2" compareValue="3">
		            AND 1!=1
		</isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
    ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!--  우편번호 검색  -->  
    <select id="retrieveNewZipCdList_Case1_1" parameterClass="java.util.HashMap" resultClass="commMap">
--NewZipCd.retrieveNewZipCdList_Case1_1
    SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT x.*
                 , 20 AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT
                           a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_1" compareValue="1">
		            AND    a.area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="2">
		            AND    a.zip_cl = #srchZipCd#
		</isEqual>
		<isEqual property="query_1" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
		<isEqual property="query_2" compareValue="1">
		            AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="2">
		            AND    area_cd = #srchZipCd#
		</isEqual>
		<isEqual property="query_2" compareValue="3">
		            AND 1!=1
		</isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '범위지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_3" compareValue="1">
                    AND    area_cd = #srchZipCd#
        </isEqual>
        <isEqual property="query_3" compareValue="2">
                    AND    area_cd = #srchZipCd#
        </isEqual>
        <isEqual property="query_3" compareValue="3">
                    AND 1!=1
        </isEqual>
                    UNION ALL
            SELECT '' AS rdNmCd
                 , '' AS emdSeq
                 , area_cd AS areaCd
                 , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                 , si_nm || ' ' || sgg_nm AS sidoSggNm
                 , '' AS emdNm
                 , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                 , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                 , '전체' AS rangeKind
                 , '사서함' AS type
                 , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                 , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                 , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                 , '' AS engEmdNm
                 , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                 , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                             || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                             || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                  || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                  || ' ' || RD_NM
                                  || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                  || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                  || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                         ) as dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
            FROM   picmt0830
            WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_4" compareValue="1">
                    AND    area_cd = #srchZipCd#
        </isEqual>
        <isEqual property="query_4" compareValue="2">
                    AND    zip_cd = #srchZipCd#
        </isEqual>
        <isEqual property="query_4" compareValue="3">
                    AND 1!=1
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
          ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!-- 도로명+건물명 -->
    <select id="retrieveNewZipCdList_Case2_1" parameterClass="java.util.HashMap" resultClass="commMap">
-- NewZipCd.retrieveNewZipCdList_Case2_1
    SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT /*+ leading(x) no_merge(x) */ x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT $query_hintIns1$
                           a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '0주소' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                AND    a.si_nm = #srchSido#
        </isEqual>

        <isEqual property="query_2" compareValue="1">
                AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="4">
            <![CDATA[
                AND (
                    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="5">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="6">
        	<![CDATA[
                AND (
                     a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_3" compareValue="2">
                    AND    a.emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>

        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>

        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>

        <isEqual property="query_7" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                     UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_8" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>

        <isEqual property="query_9" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_9" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_9" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>

        </isEqual>

        <isEqual property="query_10" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>

        <isEqual property="query_11" compareValue="1">
                    AND    1 != 1
        </isEqual>

        <isEqual property="query_12" compareValue="1">
                    AND    a.ri_nm = #srchRiNm#
        </isEqual>

        <isEqual property="query_13" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN

        </isEqual>
        <isEqual property="query_13" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_13" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_13" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_13" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>

        <isEqual property="query_14" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_14" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_14" compareValue="3">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND    si_nm = #srchSido#"
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>
        <isEqual property="query_23" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>

        <isEqual property="query_25" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>

        <isEqual property="query_26" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_27" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_27" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_28" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>

        <isEqual property="query_29" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>

        <isEqual property="query_30" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>

        <isEqual property="query_32" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_32" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_32" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>

        <isEqual property="query_33" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
              AND NVL(Y.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
       ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!-- 읍면동 + 지번, 건물검색 -->
    <select id="retrieveNewZipCdList_Case2_3" parameterClass="java.util.HashMap" resultClass="commMap">
-- NewZipCd.retrieveNewZipCdList_Case2_3
       SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="4">
            <![CDATA[
                AND (
                    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="5">
            <![CDATA[
                AND (a.si_nm = #srchSido#
                    OR a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_2" compareValue="6">
        	<![CDATA[
                AND (
                     a.sgg_nm like #srchSgg#||'%'
                )
			]]>
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    (a.emd_nm = #srchEmdNm# OR a.rd_nm LIKE UPPER(#srchRdNm#)||'%')
        </isEqual>
        <isEqual property="query_3" compareValue="2">
                    AND    a.emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>

        <isEqual property="query_7" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>
        <isEqual property="query_23" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_25" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_25" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>

        <isEqual property="query_26" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_27" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_27" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_28" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                <![CDATA[
                    AND (
                        a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                <![CDATA[
                    AND (a.si_nm = #srchSido#
                        OR a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
            <isEqual property="query_2" compareValue="6">
            	<![CDATA[
                    AND (
                         a.sgg_nm like #srchSgg#||'%'
                    )
    			]]>
            </isEqual>
        </isEqual>
        <isEqual property="query_29" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_30" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_32" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_32" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_32" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_32" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_33" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                           <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
			]]>
        </isEqual>

                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
              AND NVL(Y.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.mtYn, x.LNDN_MA_SN, x.LNDN_SB_SN, x.rdNmA, x.underYn, x.BD_MA_SN, x.BD_SB_SN
    ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!-- 동 없이 리로만 검색시 건물명이 없는 경우 도로명범위 + 지번범위 검색 -->
    <!-- 동 또는 리로 검색시 지번 범위검색 -->
    <select id="retrieveNewZipCdList_Case3_1" parameterClass="java.util.HashMap" resultClass="commMap">
-- NewZipCd.retrieveNewZipCdList_Case3_1
    SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_1" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||'
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="3">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="4">
                    AND (
                        sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )

        </isEqual>
        <isEqual property="query_2" compareValue="5">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm like #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="6">
                    AND (
                        sgg_nm like #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_5" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_5" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_5" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_5" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_5" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_6" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
			]]>
        </isEqual>

                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_7" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_8" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_8" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_8" compareValue="3">
            <isEqual property="query_2" compareValue="3">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="4">
                    AND (
                        sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )

            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (si_nm = #srchSido#
                        OR  sgg_nm like #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (
                        sgg_nm like #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_9" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_10" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_11" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_12" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_12" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_12" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_12" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_12" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_13" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
        	]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.bd_ma_sn, x.bd_sb_sn, x.lndnMaSnSt, x.lndnSbSnSt
        ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!-- 동 없이 리로만 검색시 건물명이 있는 경우 도로명(건물명) + 도로명범위 + 지번범위 검색 -->
    <select id="retrieveNewZipCdList_Case3_2" parameterClass="java.util.HashMap" resultClass="commMap">
-- NewZipCd.retrieveNewZipCdList_Case3_2
    SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT /*+ leading(x) no_merge(x) */ x.*
                 , (CASE WHEN x.rdNmA = NVL(#srchRdNm#,'xxx') THEN 10 ELSE 20 END) AS orderSeq
                 , y.delivRegiPoCd
                 , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
            FROM   (SELECT /*+ leading(b) no_push_pred(b) no_merge(b) use_nl(b a) */ a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '건물명' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL) END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
--
        <isEqual property="query_51" compareValue="1">
                    		AND    1!=1
        </isEqual>
        <isEqual property="query_51" compareValue="2">
                    		AND    c.search_word LIKE #srchEtcNm#||'%'
        </isEqual>
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    a.sgg_nm LIKE #srchSggTmp#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="2">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_2" compareValue="3">
                    AND    a.sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    a.rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    a.ri_nm LIKE #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_6" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_6" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_7" compareValue="1">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_7" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_8" compareValue="1">
                    AND    a.MT_YN = '1'
        </isEqual>
        <isEqual property="query_8" compareValue="2">
                    AND    a.UDRGRND_YN = '1'
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END AS engRdNm
                         , CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 A
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_9" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_9" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_10" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_10" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_10" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_11" compareValue="1">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchEtcNm#||#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="2">
                    AND    rd_nm LIKE UPPER(#srchEtcNm#)||'%'
        </isEqual>
        <isEqual property="query_12" compareValue="3">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_13" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_13" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_13" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_13" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_13" compareValue="7">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_13" compareValue="8">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_14" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT $query_hintIns14$
                         rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 A
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_15" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_15" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_16" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_16" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_16" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_17" compareValue="1">
                    AND    emd_nm like #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_17" compareValue="2">
                    AND    emd_nm like #srchEtcNm#||'%'
        </isEqual>
        <isEqual property="query_18" compareValue="1">
                    AND    ri_nm like #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_18" compareValue="2">
                    AND    ri_nm like #srchEtcNm#||'%'
        </isEqual>
        <isEqual property="query_19" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_19" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_19" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_19" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_19" compareValue="5">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_20" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , '(' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' AS emdNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_nm || ' ' || a.rd_nm ELSE a.rd_nm END AS rdNm
                         , a.udrgrnd_yn AS udrGrndYn
                         , CASE WHEN a.UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS bdSn
                         , '' AS rangeKind
                         , '0건물명' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                             ||', '|| a.rd_eng_nm
                             || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.BD_MA_SN
                         , a.BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , ( a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                             || ' ' || a.EMD_NM
                             || CASE WHEN a.RI_NM IS NULL THEN '' ELSE ' ' || a.RI_NM END
                             || CASE WHEN a.MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || CASE WHEN A.LNDN_MA_SN IS NULL THEN '' ELSE ''|| TO_CHAR(A.LNDN_MA_SN)
                                                                              || CASE WHEN TO_CHAR(A.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(A.LNDN_SB_SN) END
                                END
                             || CASE WHEN B.DISPLAY_WORD IS NULL THEN '' ELSE ' ' || B.DISPLAY_WORD || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL) END
                           ) AS dualaddr
                         , '도로명' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn(+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_21" compareValue="1">
                    AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_21" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_22" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_22" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_22" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_23" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_23" compareValue="2">
                    AND    a.emd_nm = #aStr#
        </isEqual>
        <isEqual property="query_23" compareValue="3">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_24" compareValue="1">
                    AND    a.rd_nm = UPPER(#aStr#)
        </isEqual>
        <isEqual property="query_24" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_24" compareValue="3">
                    AND    a.rd_nm = UPPER(#srchRdNm#)
        </isEqual>
        <isEqual property="query_25" compareValue="1">
                    AND    TO_NUMBER(#cStr#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="2">
                    AND a.UDRGRND_YN = '1' AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="3">
                    AND a.UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_25" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_25" compareValue="5">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_25" compareValue="6">
                    AND    TO_NUMBER(#srchMaSn#) = a.BD_MA_SN
        </isEqual>
        <isEqual property="query_26" compareValue="1">
                    AND    TO_NUMBER(#dStr#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_26" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.BD_SB_SN
        </isEqual>
        <isEqual property="query_27" compareValue="1">
                    AND    b.DISPLAY_WORD is null
        </isEqual>
                    UNION ALL
                    SELECT a.rd_nm_cd AS rdNmCd
                         , a.emd_seq AS emdSeq
                         , a.area_cd AS areaCd
                         , SUBSTR(a.zip_cl, 1, 3) || '-' || SUBSTR(a.zip_cl, 4) AS zipCd
                         , a.si_nm
                           || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' END
                           || a.sgg_nm AS sidoSggNm
                         , CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN '(' || b.DISPLAY_WORD || ')' ELSE '' END  AS emdNm
                         , a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END AS rdNm
                         , a.mt_yn AS udrGrndYn
                         , CASE WHEN a.mt_yn = '1' THEN '산' ELSE '' END || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END AS bdSn
                         , '' AS rangeKind
                         , '0지번' AS type
                         , b.DISPLAY_WORD AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN a.ri_nm IS NULL THEN a.emd_nm ELSE NULL END AS adminEubDong  --동명 추가 2014.12.31
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || ' ' || a.emd_nm || CASE WHEN a.ri_nm IS NULL THEN '' ELSE ' ' || a.ri_nm END
                                || CASE WHEN a.mt_yn = '1' THEN ' 산' ELSE ' ' END
                                || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                                || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ' (' || b.DISPLAY_WORD || ', ' ELSE ' (' END
                                || a.rd_nm || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS addr
                         , ( CASE WHEN a.mt_yn = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(a.LNDN_MA_SN) || CASE WHEN TO_CHAR(a.LNDN_SB_SN) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.LNDN_SB_SN) END
                             || CASE WHEN a.RI_ENG_NM IS NULL THEN '' ELSE ', ' || a.RI_ENG_NM END
                             || ', ' || a.emd_eng_nm
                             || CASE WHEN a.sgg_eng_nm IS NULL THEN ''  ELSE ', '|| a.sgg_eng_nm END
                             ||', '|| a.si_eng_nm
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.emd_eng_nm ELSE '' END AS engEmdNm
                         , RD_ENG_NM || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ', ' || a.emd_eng_nm ELSE '' END  AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END AS engBdSn
                         , a.area_cd as areaCdA
                         , a.si_nm as si_nm
                         , a.sgg_nm as sgg_nm
                         , a.emd_nm as emd_nm
                         , a.ri_nm as riNm
                         , b.DISPLAY_WORD as buildNm
                         , '' as bd_eng_nm
                         , a.mt_yn as mtYn
                         , a.LNDN_MA_SN as lndnMaSnSt
                         , a.LNDN_SB_SN as lndnSbSnSt
                         , a.LNDN_MA_SN as LNDN_MA_SN
                         , a.LNDN_SB_SN as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , a.RD_NM as rd_nm
                         , a.udrgrnd_yn as underYn
                         , TO_CHAR(a.BD_MA_SN) as bdMaSnSt
                         , TO_CHAR(a.BD_SB_SN) as bdSbSnSt
                         , a.LNDN_MA_SN as BD_MA_SN
                         , a.LNDN_SB_SN as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , a.sidiv_bd_nm as bd_nm
                         , a.emd_eng_nm
                         , a.rd_eng_nm
                         , a.sgg_eng_nm
                         , a.si_eng_nm
                         , '' AS ADDRESS2
                         , a.ADM_CD
                         , a.ADM_NM
                         , a.BD_MA_SN AS BD_MA_SN_ORG
                         , a.LNDN_MA_SN AS LNDN_MA_SN_ORG
                         , a.LEG_CD
                         , DECODE(a.MT_YN, 1, '산', '') AS MT_YN
                         , DECODE(a.UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , a.RD_MGT_SN
                         , a.RI_NM
                         , a.RI_ENG_NM
                         , a.area_cd as zip_cl
                         , a.area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (a.si_nm || CASE WHEN a.sgg_nm IS NULL THEN '' ELSE ' ' || a.sgg_nm END
                                || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN ' ' || a.emd_nm ELSE '' END
                                || ' ' || a.rd_nm
                                || CASE WHEN a.UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                                || ' ' || TO_CHAR(a.bd_ma_sn) || CASE WHEN TO_CHAR(a.bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(a.bd_sb_sn) END
                                || ' (' || CASE WHEN a.emd_nm LIKE '%읍' OR a.emd_nm LIKE '%면' THEN a.ri_nm ELSE a.emd_nm END || CASE WHEN b.DISPLAY_WORD IS NOT NULL THEN ', ' || b.DISPLAY_WORD ELSE '' END || ')' || DECODE(b.DISPLAY_WORD_DTAIL, null, '', ' '|| b.DISPLAY_WORD_DTAIL)
                           ) AS dualaddr
                         , '지번' as addr_type
                         , a.RD_NM as rdNmA
                    FROM   picmt0880 a
                         , (SELECT DISTINCT c.bd_mgt_sn
                                 , c.DISPLAY_WORD
                                 , c.DISPLAY_WORD_DTAIL
                            FROM   picmt0885 c
                            WHERE  c.useyn = 'Y'
                            ) b
                    WHERE  a.bd_mgt_sn = b.bd_mgt_sn (+)
                      AND NVL(A.USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_28" compareValue="1">
                            AND    a.si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_28" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_29" compareValue="1">
                    AND    a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_29" compareValue="2">
                    AND    a.sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_29" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_30" compareValue="1">
                    AND    a.emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_30" compareValue="2">
                    AND    a.emd_nm = #aStr#
        </isEqual>
        <isEqual property="query_30" compareValue="3">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_31" compareValue="1">
                    AND    a.ri_nm = #aStr#
        </isEqual>
        <isEqual property="query_31" compareValue="2">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_31" compareValue="3">
                    AND    a.ri_nm like #srchRiNm#||'%'
        </isEqual>
        <isEqual property="query_31" compareValue="4">
                    AND    a.ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_32" compareValue="1">
                    AND    TO_NUMBER(#cStr#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_32" compareValue="2">
                    AND    TO_NUMBER(#srchMaSn#) = a.LNDN_MA_SN
        </isEqual>
        <isEqual property="query_33" compareValue="1">
                    AND    TO_NUMBER(#dStr#) = a.LNDN_SB_SN
        </isEqual>
        <isEqual property="query_33" compareValue="2">
                    AND    TO_NUMBER(#srchSbSn#) = a.LNDN_SB_SN
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN emd_nm IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                         , udrgrnd_yn AS udrGrndYn
                         , CASE WHEN UDRGRND_YN = '1' THEN '지하 ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS bdSn
                         , CASE WHEN range_kind = 'ALL'  THEN '전체'
                                WHEN range_kind = 'EVEN' THEN '짝수'
                                WHEN range_kind = 'ODD'  THEN '홀수'
                            END AS rangeKind
                         , '1도로명' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                             || CASE WHEN emd_nm IS NULL THEN '' ELSE ' '||emd_nm END
                             || ' ' || rd_nm
                             || CASE WHEN UDRGRND_YN = '1' THEN ' 지하' ELSE '' END
                             || ' ' || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN UDRGRND_YN = '1' THEN 'B ' ELSE '' END
                             || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                             || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END
                             || ', '|| RD_ENG_NM
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', '|| SGG_ENG_NM END ||', '|| SI_ENG_NM
                           ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RD_ENG_NM || CASE WHEN RD_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || EMD_ENG_NM AS engRdNm
                         , CASE WHEN udrgrnd_yn = 1 THEN 'B ' ELSE '' END
                           || TO_CHAR(strt_bd_ma_sn) || CASE WHEN TO_CHAR(strt_bd_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_bd_sb_sn) END
                                                  || CASE WHEN end_bd_ma_sn IS NULL THEN '' ELSE '~' || end_bd_ma_sn || CASE WHEN end_bd_sb_sn IN ('', '0') THEN '' ELSE '-' || end_bd_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , RD_NM as rd_nm
                         , udrgrnd_yn as underYn
                         , STRT_BD_MA_SN as bdMaSnSt
                         , STRT_BD_SB_SN as bdSbSnSt
                         , TO_NUMBER(STRT_BD_MA_SN) as BD_MA_SN
                         , TO_NUMBER(STRT_BD_SB_SN) as BD_SB_SN
                         , END_BD_MA_SN as bdMaSnEd
                         , END_BD_SB_SN as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 as BD_MA_SN_ORG
                         , 0 as LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' as MT_YN
                         , DECODE(UDRGRND_YN, 1, '지하', '') AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '도로명' as addr_type
                         , RD_NM as rdNmA
                    FROM   picmt0882 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_101" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_101" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_102" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_102" compareValue="2">
                    AND    sgg_nm like #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_102" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_103" compareValue="1">
                    AND    emd_nm LIKE #srchTmpEmdNm#||'%'
        </isEqual>
        <isEqual property="query_104" compareValue="1">
                    AND    rd_nm LIKE UPPER(#srchRdNm#)||'%'
        </isEqual>
        <isEqual property="query_105" compareValue="1">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="2">
                    AND UDRGRND_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_105" compareValue="3">
                    AND UDRGRND_YN = '1'
        </isEqual>
        <isEqual property="query_105" compareValue="4">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="5">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_105" compareValue="6">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_105" compareValue="7">
                    AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'ODD'
        </isEqual>
        <isEqual property="query_105" compareValue="8">
                    AND    TO_NUMBER(#cStr#) BETWEEN strt_bd_ma_sn AND NVL(end_bd_ma_sn, strt_bd_ma_sn) AND range_kind != 'EVEN'
        </isEqual>
        <isEqual property="query_106" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = STRT_BD_MA_SN THEN TO_NUMBER(#dStr#) ELSE 99999 END >= NVL(STRT_BD_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = NVL(END_BD_MA_SN,STRT_BD_MA_SN) THEN TO_NUMBER(#dStr#) ELSE -1 END
                            <= NVL(DECODE(END_BD_SB_SN,0,NVL(DECODE(END_BD_MA_SN,0,NVL(STRT_BD_SB_SN,0),99999),0),END_BD_SB_SN), DECODE(END_BD_MA_SN, NULL, NVL(DECODE(STRT_BD_SB_SN,0,0,STRT_BD_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    UNION ALL
                    SELECT rd_nm_cd AS rdNmCd
                         , emd_seq AS emdSeq
                         , area_cd AS areaCd
                         , '' AS zipCd
                         , si_nm
                           || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' END
                           || sgg_nm AS sidoSggNm
                         , '' AS emdNm
                         , CASE WHEN ri_nm IS NULL THEN emd_nm ELSE emd_nm || ' ' || ri_nm END AS rdNm
                         , mt_yn AS udrGrndYn
                         , '' AS bdSn
                         , '전체' AS rangeKind
                         , '1지번' AS type
                         , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                         , CASE WHEN RI_NM IS NOT NULL THEN NULL ELSE EMD_NM END AS adminEubDong  --동명 추가 2014.12.31
                         , ( SI_NM || CASE WHEN SGG_NM IS NULL THEN '' ELSE ' ' || SGG_NM END
                             || ' ' || EMD_NM
                             || CASE WHEN RI_NM IS NULL THEN '' ELSE ' ' || RI_NM END
                             || CASE WHEN MT_YN = '1' THEN ' 산' ELSE ' ' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                           ) AS addr
                         , ( CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                             || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END
                             || CASE WHEN RI_ENG_NM IS NULL THEN '' ELSE ', ' || RI_ENG_NM END
                             || CASE WHEN EMD_ENG_NM IS NULL THEN '' ELSE ', ' || EMD_ENG_NM END
                             || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END
                             || ', ' || SI_ENG_NM
                            ) AS engAddr
                         , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                         , '' AS engEmdNm
                         , RI_ENG_NM
                         || CASE WHEN RI_ENG_NM IS NOT NULL AND EMD_ENG_NM IS NOT NULL THEN ', ' ELSE '' END
                         || EMD_ENG_NM AS engRdNm
                         , CASE WHEN MT_YN = '1' THEN 'San ' ELSE '' END
                           || TO_CHAR(strt_lndn_ma_sn) || CASE WHEN TO_CHAR(strt_lndn_sb_sn) IN ('', '0') THEN '' ELSE '-' || TO_CHAR(strt_lndn_sb_sn) END
                                                    || CASE WHEN end_lndn_ma_sn IS NULL THEN '' ELSE '~' || end_lndn_ma_sn || CASE WHEN end_lndn_sb_sn IN ('', '0') THEN '' ELSE '-' || end_lndn_sb_sn END END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , RI_NM as riNm
                         , '' as buildNm
                         , '' as bd_eng_nm
                         , MT_YN as mtYn
                         , STRT_LNDN_MA_SN as lndnMaSnSt
                         , STRT_LNDN_SB_SN as lndnSbSnSt
                         , STRT_LNDN_MA_SN as LNDN_MA_SN
                         , STRT_LNDN_SB_SN as LNDN_SB_SN
                         , END_LNDN_MA_SN as lndnMaSnEd
                         , END_LNDN_SB_SN as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , '' as bdMaSnSt
                         , '' as bdSbSnSt
                         , 0 as BD_MA_SN
                         , 0 as BD_SB_SN
                         , '' as bdMaSnEd
                         , '' as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , '' as rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , ADM_CD
                         , ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , LEG_CD
                         , DECODE(MT_YN, 1, '산', '') AS MT_YN
                         , '' as UDRGRND_YN
                         , '' as RD_MGT_SN
                         , RI_NM
                         , RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , '' as dualaddr
                         , '지번' as addr_type
                         , '' as rdNmA
                    FROM   picmt0883 a
                    WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_121" compareValue="1">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_121" compareValue="2">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_122" compareValue="1">
                    AND    sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
        </isEqual>
        <isEqual property="query_122" compareValue="2">
                    AND    sgg_nm LIKE #srchSgg#||'%'
        </isEqual>
        <isEqual property="query_122" compareValue="3">
            <isEqual property="query_2" compareValue="4">
                    AND ( a.si_nm = #srchSido#
                        OR  a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="5">
                    AND (
                         a.sgg_nm IN (SELECT X.AREAFULLNM FROM PICMT0889 X WHERE X.AREADIVCD='002' AND X.USEYN='Y' AND (X.AREAFULLNM LIKE '% '||#srchSgg#||'%' OR X.AREAFULLNM LIKE #srchSgg#||'%'))
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="6">
                    AND (a.si_nm = #srchSido#
                        OR  a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
            <isEqual property="query_2" compareValue="7">
                    AND (
                         a.sgg_nm LIKE #srchSgg#||'%'
                    )
            </isEqual>
        </isEqual>
        <isEqual property="query_123" compareValue="1">
                    AND    1 != 1
        </isEqual>
        <isEqual property="query_124" compareValue="1">
                    AND    emd_nm LIKE #srchTmpEmdNm#||'%'
        </isEqual>
        <isEqual property="query_124" compareValue="2">
                    AND    emd_nm LIKE #srchEmdNm#||'%'
        </isEqual>
        <isEqual property="query_125" compareValue="1">
                    AND    ri_nm = #srchRiNm#
        </isEqual>
        <isEqual property="query_125" compareValue="2">
                    AND    ri_nm = #srchTmpRiNm#
        </isEqual>
        <isEqual property="query_126" compareValue="1">
                    AND MT_YN = '1' AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_126" compareValue="2">
                    AND MT_YN = '1'
        </isEqual>
        <isEqual property="query_126" compareValue="3">
                    AND 1!=1 AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_126" compareValue="4">
                    AND 1!=1
        </isEqual>
        <isEqual property="query_126" compareValue="5">
                    AND    TO_NUMBER(#cStr#) BETWEEN NVL(STRT_LNDN_MA_SN,0) AND NVL(END_LNDN_MA_SN, NVL(STRT_LNDN_MA_SN,99999))
        </isEqual>
        <isEqual property="query_127" compareValue="1">
            <![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = STRT_LNDN_MA_SN THEN TO_NUMBER(#dStr#) ELSE 99999 END >= NVL(STRT_LNDN_SB_SN,0)
                    AND    CASE WHEN TO_NUMBER(NVL(#cStr#,0)) = NVL(END_LNDN_MA_SN,STRT_LNDN_MA_SN) THEN TO_NUMBER(#dStr#) ELSE -1 END
                            <= NVL(DECODE(END_LNDN_SB_SN,0,NVL(DECODE(END_LNDN_MA_SN,0,NVL(STRT_LNDN_SB_SN,0),99999),0),END_LNDN_SB_SN), DECODE(END_LNDN_MA_SN, NULL, NVL(DECODE(STRT_LNDN_SB_SN,0,0,STRT_LNDN_SB_SN),99999),99999) )
            ]]>
        </isEqual>
                    ) x
                 ,  picmt0884 y
            WHERE x.areaCd = y.area_cd
            ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.underYn, x.BD_MA_SN, x.BD_SB_SN, x.LNDN_MA_SN, x.LNDN_SB_SN, x.buildNm
        ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
    
    <!--  사서함 검색  -->
    <select id="retrieveNewZipCdList_Case6" parameterClass="java.util.HashMap" resultClass="commMap">
-- NewZipCd.retrieveNewZipCdList_Case6
SELECT * FROM (
       SELECT ROWNUM AS rnum, DATA.* FROM (
        SELECT x.*
         , 20 as orderSeq
         , y.delivRegiPoCd
         , (SELECT z.poNm FROM picmt0060 z WHERE z.regiPoCd = y.delivRegiPoCd AND z.useYn = 'Y' AND z.dscdPoYn = 'N' AND ROWNUM = 1) AS delivPoNm
    FROM   (SELECT '' AS rdNmCd
                 , '' AS emdSeq
                 , area_cd AS areaCd
                 , SUBSTR(zip_cd, 1, 3) || '-' || SUBSTR(zip_cd, 4) AS zipCd
                 , si_nm || ' ' || sgg_nm AS sidoSggNm
                 , '' AS emdNm
                 , CASE WHEN TRIM(emd_nm) IS NULL THEN rd_nm ELSE emd_nm || ' ' || rd_nm END AS rdNm
                 , '' AS udrGrndYn
                         , TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                              || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END AS bdSn
                 , '전체' AS rangeKind
                 , '사서함' AS type
                 , '' AS sidivBdNm --아파트명(건물명) 추가 2014.12.24
                 , '' AS adminEubDong  --동명 추가 2014.12.31
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                || ' ' || RD_NM
                                || ' ' || TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                           ) as addr
                         , (TO_CHAR(st_jBunji) || CASE WHEN TO_CHAR(st_bBunji) IS NOT NULL THEN '-' || TO_CHAR(st_bBunji) ELSE '' END
                                || CASE WHEN TO_CHAR(ed_jBunji) IS NOT NULL THEN '~' || TO_CHAR(ed_jBunji) || CASE WHEN TO_CHAR(ed_bBunji) IS NOT NULL THEN '-' || TO_CHAR(ed_bBunji) ELSE '' END ELSE '' END
                                || ', ' || RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END
                                || CASE WHEN SGG_ENG_NM IS NULL THEN '' ELSE ', ' || SGG_ENG_NM END || ', ' || SI_ENG_NM
                           ) as engAddr
                 , SGG_ENG_NM || CASE WHEN SGG_ENG_NM IS NOT NULL AND SI_ENG_NM IS NOT NULL THEN ', ' ELSE '' END || SI_ENG_NM AS engSidoSggNm
                 , '' AS engEmdNm
                 , RD_ENG_NM || CASE WHEN TRIM(EMD_ENG_NM) IS NOT NULL THEN ', ' || EMD_ENG_NM ELSE '' END AS engRdNm
                 , ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                             || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                             || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END AS engBdSn
                         , area_cd as areaCdA
                         , si_nm as si_nm
                         , sgg_nm as sgg_nm
                         , emd_nm as emd_nm
                         , '' as riNm
                         , RD_NM as buildNm
                         , RD_ENG_NM as bd_eng_nm
                         , '' as mtYn
                         , 0 as lndnMaSnSt
                         , 0 as lndnSbSnSt
                         , 0 as LNDN_MA_SN
                         , 0 as LNDN_SB_SN
                         , 0 as lndnMaSnEd
                         , 0 as lndnSbSnEd
                         , '' as rd_nm
                         , '' as underYn
                         , TO_CHAR(ST_JBUNJI) as bdMaSnSt
                         , TO_CHAR(ST_BBUNJI) as bdSbSnSt
                         , ST_JBUNJI as BD_MA_SN
                         , ST_BBUNJI as BD_SB_SN
                         , TO_CHAR(ED_JBUNJI) as bdMaSnEd
                         , TO_CHAR(ED_BBUNJI) as bdSbSnEd
                         , '서비스가능' as service_yn_nm
                         , 'Y' as service_yn
                         , '' as bd_nm
                         , emd_eng_nm
                         , rd_eng_nm
                         , sgg_eng_nm
                         , si_eng_nm
                         , '' AS ADDRESS2
                         , '' as ADM_CD
                         , '' as ADM_NM
                         , 0 AS BD_MA_SN_ORG
                         , 0 AS LNDN_MA_SN_ORG
                         , '' as LEG_CD
                         , '' AS MT_YN
                         , '' AS UDRGRND_YN
                         , '' as RD_MGT_SN
                         , '' as RI_NM
                         , '' as RI_ENG_NM
                         , area_cd as zip_cl
                         , area_cd||' Rep. of KOREA' as zip_cl_nm
                         , (si_nm || CASE WHEN sgg_nm IS NULL THEN '' ELSE ' ' || sgg_nm END
                                  || CASE WHEN TRIM(emd_nm) IS NOT NULL THEN ' ' || emd_nm ELSE '' END
                                  || ' ' || RD_NM
                                  || ' ' || ST_JBUNJI || CASE WHEN ST_BBUNJI IS NULL THEN '' ELSE '-' || ST_BBUNJI END
                                  || CASE WHEN ED_JBUNJI IS NULL AND ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN '~' ELSE '~' || ED_JBUNJI END
                                  || CASE WHEN ED_BBUNJI IS NULL THEN '' WHEN NVL(ED_JBUNJI, ST_JBUNJI) = ST_JBUNJI THEN ''|| ED_BBUNJI ELSE '-' || ED_BBUNJI END
                         ) as dualaddr
                         , '사서함' as addr_type
                         , '' as rdNmA
            FROM   picmt0830
            WHERE  1 = 1
                      AND NVL(USEYN, 'Y') = 'Y' /* 2015.01.16 통합DB USEYN추가 */
--
        <isEqual property="query_1" compareValue="1">
                    AND    rd_nm LIKE '%' || #srchPoBoxNm#
        </isEqual>
        <isEqual property="query_2" compareValue="1">
                    AND    si_nm = #srchSido#
        </isEqual>
        <isEqual property="query_3" compareValue="1">
                    AND    sgg_nm = #srchSgg#
        </isEqual>
        <isEqual property="query_4" compareValue="1">
                    AND    emd_nm = #srchEmdNm#
        </isEqual>
        <isEqual property="query_5" compareValue="1">
                    AND    TO_NUMBER(#srchMaSn#) BETWEEN st_jBunji AND NVL(ed_jBunji, st_jBunji)
        </isEqual>
        <isEqual property="query_6" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = st_jBunji THEN TO_NUMBER(#srchSbSn#) ELSE 99999 END >= NVL(ST_BBUNJI,0)
        	]]>
        </isEqual>
        <isEqual property="query_7" compareValue="1">
        	<![CDATA[
                    AND    CASE WHEN TO_NUMBER(NVL(#srchMaSn#,0)) = NVL(ed_jBunji,st_jBunji) THEN TO_NUMBER(#srchSbSn#) ELSE -1 END <= NVL(ed_bBunji,DECODE(ED_JBUNJI, NULL, NVL(ST_BBUNJI,0),99999))
        	]]>
        </isEqual>
            ) x
         ,  picmt0884 y
    WHERE x.areaCd = y.area_cd
    ORDER BY orderSeq, x.type, x.sidoSggNm, x.rdNm, x.udrGrndYn, x.BD_MA_SN, x.BD_SB_SN
    ) DATA WHERE ROWNUM <![CDATA[<]]> #eIdx#
    ) WHERE RNUM <![CDATA[>]]>= #sIdx#
    </select>
</sqlMap>