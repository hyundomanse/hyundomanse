<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BO.Operate">
	<typeAlias  alias="commMap" type="com.devwork.common.map.CommonMap"/>

	<resultMap id="boardMap" class="commMap" >
		<result	property="COMN_CD_NM"       column="COMN_CD_NM" />
		<result	property="NTT_SEQ"         column="NTT_SEQ" />
		<result	property="NTT_DIV"         column="NTT_DIV" />
		<result	property="EDU_TRGT"        column="EDU_TRGT" />
		<result	property="TTL"            column="TTL" />
		<result	property="CONT"           column="CONT" javaType="java.lang.String" jdbcType="CLOB"/>
		<result	property="REGER_ID"        column="REGER_ID" />
		<result	property="REG_DATE"        column="REG_DATE" />
		<result	property="CHGER_ID"        column="CHGER_ID" />
		<result	property="CHG_DATE"        column="CHG_DATE" />
		<result	property="NOTIC_YN"        column="NOTIC_YN" />
	</resultMap>

<!-- 페이징 Header -->
	<sql id="pagingHeader">
		<![CDATA[
		SELECT *
		  FROM (
				SELECT A.*
				     , ROWNUM  AS RNUM
				  FROM (
		]]>
	</sql>

	<!-- 페이징 Footer -->
	<sql id="pagingFooter">
		<![CDATA[
                       ) A	WHERE ROWNUM <= #lastIndex#
		       ) WHERE RNUM >= #firstIndex#
		]]>
	</sql>


	<insert id="insertEdu" parameterClass="java.util.HashMap">

		<![CDATA[
		INSERT INTO CM_SELLER_EDU_DATA(
                NTT_SEQ,
                NTT_DIV,
                EDU_TRGT,
                TTL,
                CONT,
                REGER_ID,
                REG_DATE,
                CHGER_ID,
                CHG_DATE,
                NOTIC_YN
            ) VALUES (
                SEQ_CM_SELLER_EDU_DATA_NTT.nextval,
                #nttDiv#,
                #eduTrgt#,
                #ttl#,
                #cont#,
                #userId#,
                SYSDATE,
                #userId#,
                SYSDATE,
                #noticYn#
            )
            ]]>
            <selectKey resultClass="int" keyProperty="new_seq" >
			select SEQ_CM_SELLER_EDU_DATA_NTT.currval as new_seq from dual
			</selectKey>
	</insert>

	<!-- 교육센터 글 상세 조회 -->
	<select id="selectEduDtl" parameterClass="java.util.HashMap" resultMap="boardMap">
	SELECT  C.COMN_CD_NM,
            E.NTT_SEQ,
            E.NTT_DIV,
            E.EDU_TRGT,
            E.TTL,
            E.CONT,
            E.REGER_ID,
            E.REG_DATE,
            E.CHGER_ID,
            E.CHG_DATE,
            E.NOTIC_YN
    FROM
            CM_SELLER_EDU_DATA E,
            CM_COMN_CD C
    WHERE   E.NTT_DIV   = C.COMN_CD_ID
    AND     C.CD_GRP_ID = 'NTT_DIV'
		<isNotEmpty property="nttSeq">
	AND     E.NTT_SEQ = #nttSeq#
		</isNotEmpty>
	</select>

	<!-- 교육센터 글 수정 -->
	<update id="updateEdu" parameterClass="java.util.HashMap">
	<![CDATA[
	UPDATE CM_SELLER_EDU_DATA
	SET    TTL	     = #ttl#,
	       CONT      = #cont#,
	       EDU_TRGT  = #eduTrgt#,
	       CHGER_ID  = #userId#,
	       CHG_DATE  = SYSDATE,
	       NTT_DIV   = #nttDiv#,
	       NOTIC_YN  = #noticYn#
	WHERE  NTT_SEQ   = #nttSeq#
	]]>
	</update>

	<!-- 교육센터 글 삭제 -->
	<update id="deleteEdu" parameterClass="java.util.HashMap">
	DELETE
	  FROM CM_SELLER_EDU_DATA
	 WHERE NTT_SEQ   = #nttSeq#
	</update>

	<!-- 교육센터 글 목록 조회 -->
	<select id="selectEduList" parameterClass ="java.util.HashMap" resultClass="commMap">
        SELECT  TNUM
               ,T2.COMN_CD_NM
	           ,T2.NTT_SEQ
	           ,T2.TTL
	           ,T2.EDU_TRGT
	           ,T2.CHGER_ID
	           ,T2.CHG_DATE
	           ,T2.NOTIC_YN
        FROM(
	        SELECT ROWNUM AS TNUM
                   ,T.COMN_CD_NM
		           ,T.NTT_SEQ
		           ,T.TTL
		           ,T.EDU_TRGT
		           ,T.CHGER_ID
		           ,T.CHG_DATE
		           ,T.NOTIC_YN
	        FROM(
		         SELECT C.COMN_CD_NM,
			            E.NTT_SEQ,
			            E.TTL,
			            E.EDU_TRGT,
			            E.CHGER_ID,
			            E.CHG_DATE,
			            E.NOTIC_YN
			     FROM
			            CM_SELLER_EDU_DATA E,
			            CM_COMN_CD C
			     WHERE
			        	E.NTT_DIV = C.COMN_CD_ID
			     AND	C.CD_GRP_ID = 'NTT_DIV'
			     <isNotEmpty property="searchNttDiv">
				 AND    E.NTT_DIV = #searchNttDiv#
			     </isNotEmpty>
			     <isNotEmpty property="searchTtl">
				 AND    E.TTL LIKE '%'||#searchTtl#||'%'
			     </isNotEmpty>
			     <!-- 조회기간 -->
				<isNotEmpty property="searchFromDt">
					<isNotEmpty property="searchToDt">
						AND TO_CHAR(E.REG_DATE, 'YYYYMMDD') BETWEEN #searchFromDt# AND #searchToDt#
				    </isNotEmpty>
				</isNotEmpty>
					<isEmpty property="sidx">
			        	ORDER BY NTT_SEQ DESC
			        </isEmpty>
			) T

	    ) T2
        WHERE TNUM BETWEEN #firstIndex# AND #lastIndex#
	</select>

	<!-- 교육센터 글 목록 카운트 -->
	<select id="selectEduListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
         FROM
	            CM_SELLER_EDU_DATA E,
	            CM_COMN_CD C
	     WHERE
		        E.NTT_DIV = C.COMN_CD_ID
		 AND	C.CD_GRP_ID = 'NTT_DIV'
		 <isNotEmpty property="searchNttDiv">
		 AND    E.NTT_DIV = #searchNttDiv#
	     </isNotEmpty>
	     <isNotEmpty property="searchTtl">
		 AND    E.TTL LIKE '%'||#searchTtl#||'%'
	     </isNotEmpty>
	     <!-- 조회기간 -->
		<isNotEmpty property="searchFromDt">
			<isNotEmpty property="searchToDt">
				AND TO_CHAR(E.REG_DATE, 'YYYYMMDD') BETWEEN #searchFromDt# AND #searchToDt#
		    </isNotEmpty>
		</isNotEmpty>
	</select>


	<!-- 전시관별 운영자 정보 관리 조회 -->
	<select id="selectExhibMngList" parameterClass ="java.util.HashMap" resultClass="commMap">
       	SELECT T.TNUM
               ,T.ADMIN_ID
	           ,T.ADMIN_NM
	           ,T.SHOP_DIV_NM
	           ,T.SHOP_DIV_CD
	           ,T.EXHABIT_DIV_NM
	           ,T.EXHABIT_DIV_CD
	           ,T.TELNO
	           ,T.MOBILENO
	           ,T.EMAIL_ADDR
	           ,T.REGER_ID
	           ,T.REG_DATE
	           ,T.CHGER_ID
	           ,T.CHG_DATE
		FROM(
        SELECT ROW_NUMBER() OVER(ORDER BY A.ADMIN_ID DESC) AS TNUM,
                A.ADMIN_ID,
                A.ADMIN_NM,
                (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID='EC_P555' AND COMN_CD_ID=E.SHOP_DIV_CD) AS SHOP_DIV_NM,
                E.SHOP_DIV_CD,
                (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID='EC_P213' AND COMN_CD_ID=E.EXHABIT_DIV_CD) AS EXHABIT_DIV_NM,
                E.EXHABIT_DIV_CD,
                A.TELNO ,
                A.MOBILENO,
                A.EMAIL_ADDR,
	            E.REGER_ID,
	            E.REG_DATE,
	            E.CHGER_ID,
	            E.CHG_DATE
        FROM CM_ADMIN_MAST A LEFT JOIN TEMP_EXHIB_MGT E ON (A.ADMIN_ID   = E.ADMIN_ID)
        WHERE 1=1
        )T
        WHERE T.TNUM BETWEEN #firstIndex# AND #lastIndex#
        <isEmpty property="sidx">
        	ORDER BY T.TNUM DESC
        </isEmpty>
	</select>
	<!-- 전시관별 운영자 정보 관리 리스트 카운트 -->
	<select id="selectExhibMngListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
         SELECT DISTINCT COUNT(*) OVER() TOTCNT
           FROM CM_ADMIN_MAST A ,TEMP_EXHIB_MGT E
          WHERE  A.ADMIN_ID   = E.ADMIN_ID
          GROUP BY A.ADMIN_ID
	</select>

	<!-- 전시관별 운영자 정보 등록 -->

	<insert id="insertExhibMng" parameterClass="java.util.HashMap">

		<![CDATA[
		INSERT INTO TEMP_EXHIB_MGT(
                ADMIN_ID,
                SHOP_DIV_CD,
                EXHABIT_DIV_CD,
                REG_DATE,
                CHG_DATE,
                REGER_ID,
                CHGER_ID
            ) VALUES (
                #adminId#,
                #shopDivCd#,
                #exhabitDivCd#,
                SYSDATE,
                SYSDATE,
                #userId#,
                #userId#
            )
            ]]>

	</insert>

	<!-- 전시관별 운영자 상세 조회 -->
	<select id="selectExhibMngDtl" parameterClass="java.util.HashMap" resultClass="commMap">
     SELECT ROW_NUMBER() OVER(ORDER BY A.ADMIN_ID DESC) AS TNUM,
                A.ADMIN_ID,
                A.ADMIN_NM,
                (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID='EC_P555' AND COMN_CD_ID=E.SHOP_DIV_CD) AS SHOP_DIV_NM,
                E.SHOP_DIV_CD,
                (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID='EC_P213' AND COMN_CD_ID=E.EXHABIT_DIV_CD) AS EXHABIT_DIV_NM,
                E.EXHABIT_DIV_CD,
                A.TELNO ,
                A.MOBILENO,
                A.EMAIL_ADDR,
	            E.REGER_ID,
	            E.REG_DATE,
	            E.CHGER_ID,
	            E.CHG_DATE
        FROM CM_ADMIN_MAST A LEFT JOIN TEMP_EXHIB_MGT E ON (A.ADMIN_ID   = E.ADMIN_ID)
        WHERE 1=1
     	<isNotEmpty property="adminId">
	        AND     A.ADMIN_ID = #adminId#
		</isNotEmpty>
     	<isNotEmpty property="shopDivCd">
	        AND     E.SHOP_DIV_CD = #shopDivCd#
		</isNotEmpty>
     	<isNotEmpty property="exhabitDivCd">
	        AND     E.EXHABIT_DIV_CD = #exhabitDivCd#
		</isNotEmpty>
	</select>

	<!-- 전시관별 운영자 수정 -->
	<update id="updateExhibMng" parameterClass="java.util.HashMap">
	<![CDATA[
	UPDATE TEMP_EXHIB_MGT
	SET    SHOP_DIV_CD      = #shopDivCd#,
	       EXHABIT_DIV_CD  = #exhabitDivCd#,
	       CHGER_ID  = #chgerId#,
	       CHG_DATE  = #chgDate#
	WHERE  ADMIN_ID   = #adminId#
	]]>
	</update>

	<!-- 전시관별 운영자 삭제 -->
	<update id="deleteExhibMng" parameterClass="java.util.HashMap">
	DELETE FROM TEMP_EXHIB_MGT
	WHERE ADMIN_ID   = #adminId#
	</update>
		<!-- 우체국정보 리스트 -->
	<select id="selectPostInfoMgrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT *
			FROM(
					SELECT	ROW_NUMBER() OVER(ORDER BY ECODE DESC) AS RNUM
							,RCODE
							,ECODE
							,PCODE
							,NAME
							,POSTAL_CODE
							,ADDRESS1
							,ADDRESS2
							,TELEPHONE
							,FAX
							,P_LEVEL
							,SERVER_NAME
							,SERVER_ECODE
							,SERVER_PCODE
							,CHUNG_CODE
							,DECODE(NVL(CHUNG_CODE,''),'01','서울지방우정청','02','강원지방우정청','03','충청지방우정청','04','전북지방우정청'
								,'05','전남지방우정청','06','부산지방우정청','07','경북지방우정청','08','제주지방우정청'
								,'10','서울지방우정청','15','경인지방우정청','70','강원지방우정청','30','충청지방우정청','60','전북지방우정청'
								,'40','전남지방우정청','20','부산지방우정청','50','경북지방우정청','80','제주지방우정청', '')CHUNG_NAME
							,PODIVCD
							,TO_CHAR(TO_DATE(CREATE_DATE),'YYYY-MM-DD') CREATE_DATE
							,TO_CHAR(TO_DATE(MODIFY_DATE,'YYYY-MM-DD')) MODIFY_DATE
					FROM	POSTOFFICE_MASTER
					WHERE	1=1
					AND 	P_LEVEL NOT IN ('p','e')
					<isNotEmpty property="chungCode" prepend="AND">
						CHUNG_CODE = #chungCode#
					</isNotEmpty>
					<isNotEmpty property="server_ecode" prepend="AND">
						SERVER_ECODE = #server_ecode#
					</isNotEmpty>
					<isNotEmpty property="pLevel" prepend="AND">
						P_LEVEL = #pLevel#
					</isNotEmpty>
					<isEqual property="searchIndex" compareValue="00">
						<isNotNull property="searchWord">
						AND (PCODE	LIKE  '%'|| #searchWord# || '%' OR REGIPOCD LIKE  '%'|| #searchWord# || '%' OR NAME	 LIKE '%'|| #searchWord# || '%')
						</isNotNull>
					</isEqual>
					<!--우체국코드-->
					<isEqual property="searchIndex" compareValue="01">
						AND PCODE			LIKE  '%'|| #searchWord# || '%'
					</isEqual>
					<!--등기용국기호-->
					<isEqual property="searchIndex" compareValue="02">
						AND REGIPOCD		LIKE  '%'|| #searchWord# || '%'
					</isEqual>
					<!--우체국-->
					<isEqual property="searchIndex" compareValue="03">
						AND NAME			LIKE '%'|| #searchWord# || '%'
					</isEqual>
					<!--삭제우체국전체-->
					<isEqual property="searchIndex" compareValue="04">
						AND (DELETE_DATE IS NOT NULL OR CLOSE_DATE IS NOT NULL)
					</isEqual>
				)C
			<isNotNull property="firstIndex">
				<isNotNull property="lastIndex">
					WHERE C.RNUM BETWEEN #firstIndex# AND #lastIndex#
				</isNotNull>
			</isNotNull>
	</select>


	<!-- 우체국정보 리스트 카운트 -->
	<select id="selectPostInfoMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
				SELECT  COUNT(*)
				FROM	POSTOFFICE_MASTER
				WHERE	1=1
				AND 	P_LEVEL NOT IN ('p','e')
				<isNotEmpty property="chungCode" prepend="AND">
					CHUNG_CODE = #chungCode#
				</isNotEmpty>
				<isNotEmpty property="server_ecode" prepend="AND">
					SERVER_ECODE = #server_ecode#
				</isNotEmpty>
				<isNotEmpty property="pLevel" prepend="AND">
					P_LEVEL = #pLevel#
				</isNotEmpty>
				<isEqual property="searchIndex" compareValue="00">
				<isNotNull property="searchWord">
				AND (PCODE	LIKE  '%'|| #searchWord# || '%' OR REGIPOCD LIKE  '%'|| #searchWord# || '%' OR NAME	 LIKE '%'|| #searchWord# || '%')
				</isNotNull>
				</isEqual>
				<!--우체국코드-->
				<isEqual property="searchIndex" compareValue="01">
					AND PCODE			LIKE  '%'|| #searchWord# || '%'
				</isEqual>
				<!--등기용국기호-->
				<isEqual property="searchIndex" compareValue="02">
					AND REGIPOCD		LIKE  '%'|| #searchWord# || '%'
				</isEqual>
				<!--우체국-->
				<isEqual property="searchIndex" compareValue="03">
					AND NAME			LIKE '%'|| #searchWord# || '%'
				</isEqual>
				<!--삭제우체국전체-->
				<isEqual property="searchIndex" compareValue="04">
					AND (DELETE_DATE IS NOT NULL OR CLOSE_DATE IS NOT NULL)
				</isEqual>
	</select>
	<!-- 우체국 정보 상세정보 조회 -->
	<select id="selectPostInfo" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT	ECODE	/*EDPSCD*/
				,PCODE	/*우체국 코드*/
				,RCODE	/*등기용국기호*/
				,SERVER_NAME /**/
				,SERVER_ECODE
				,SERVER_PCODE
				,NAME
				,SHORT_NAME
				,ACCESS_NAME
				,POSTAL_CODE
				,CASE WHEN LENGTH(POSTAL_CODE) = 5 THEN POSTAL_CODE
				WHEN LENGTH(POSTAL_CODE) = 6 THEN SUBSTR(POSTAL_CODE,1,3) || '-' || SUBSTR(POSTAL_CODE,4)
				ELSE POSTAL_CODE END AS ZIPCD
				,ADDRESS1
				,ADDRESS2
				,TELEPHONE
				,FAX
				,EMAIL
				,ACCOUNT
		FROM	POSTOFFICE_MASTER
		WHERE	PCODE = #postcdPop#
		AND		ECODE = #edpscdPop#
	</select>
	<!-- 우체국 정보 리스트 폐국여부 수정 -->
	<update id="updatePostInfoChg" parameterClass="java.util.HashMap">
		UPDATE POSTOFFICE_MASTER
		SET
		<isNotNull property="rcode">
			<isNotEqual property="rcode" compareValue="">
			RCODE =		#rcode#
			</isNotEqual>
		</isNotNull>
		<isNotNull property="serverName">
			<isNotEqual property="serverName" compareValue="">
			,SERVER_NAME =	#serverName#
			</isNotEqual>
		</isNotNull>
		<isNotNull property="serverEcode">
			,SERVER_ECODE=	#serverEcode#
		</isNotNull>
		<isNotNull property="serverPcode">
			,SERVER_PCODE=	#serverPcode#
		</isNotNull>
		<isNotNull property="name">
			,NAME = 		#name#
		</isNotNull>
		<isNotNull property="shortName">
			,SHORT_NAME =	#shortName#
		</isNotNull>
		<isNotNull property="accessName">
			,ACCESS_NAME=	#accessName#
		</isNotNull>
		<isNotNull property="postalCode">
			,POSTAL_CODE=	#postalCode#
		</isNotNull>
		<isNotNull property="address1">
			,ADDRESS1 = 	#address1#
		</isNotNull>
		<isNotNull property="address2">
			,ADDRESS2 = 	#address2#
		</isNotNull>
		<isNotNull property="telephone">
			,TELEPHONE= 	#telephone#
		</isNotNull>
		<isNotNull property="fax">
			,FAX =			#fax#
		</isNotNull>
		<isNotNull property="email">
			,EMAIL =		#email#
		</isNotNull>
		<isNotNull property="account">
			,ACCOUNT =		#account#
		</isNotNull>
		WHERE ECODE = #ecode#
		AND	  PCODE	= #pcode#
	</update>
			<!-- 우체국 정보 리스트 폐국여부 수정 -->
	<update id="updatePostInfoList" parameterClass="java.util.HashMap">
		UPDATE PICMT0060
		SET    DSCDPOYN	     = #flag#,
				LTUPDYMD		= TO_CHAR(SYSDATE,'YYYYMMDD')
		WHERE REGIPOCD = #regipocd#
		AND POCHGSEQ = #pochgseq#
	</update>


	<!-- 우체국정보 리스트 목록-->
	<select id="selectPostInfoHistList" parameterClass="java.util.HashMap" resultClass="commMap">
	<![CDATA[
		SELECT *
		FROM (
				SELECT  ROW_NUMBER() OVER(ORDER BY ECODE DESC) AS RNUM,
						SUBSTR(CREATE_DATE,1,4)||'-'||SUBSTR(CREATE_DATE,5,2)||'-'||SUBSTR(CREATE_DATE,7,2) CREATEDATE,
						ECODE,
						SEQ,
						PCODE,
						NAME,
						POSTAL_CODE AS POSTALCODE,
						CASE WHEN LENGTH(POSTAL_CODE) = 5 THEN POSTAL_CODE
						WHEN LENGTH(POSTAL_CODE) = 6 THEN SUBSTR(POSTAL_CODE,1,3) || '-' || SUBSTR(POSTAL_CODE,4)
						ELSE POSTAL_CODE END AS ZIPCD,
						ADDRESS1,
						ADDRESS2,
						TELEPHONE,
						FAX,
						P_LEVEL AS PLEVEL,
						SERVER_NAME  AS SERVERNAME,
						SERVER_ECODE AS SERVERECODE,
						SERVER_PCODE AS SERVERPCODE,
						RCODE,
						CHUNG_CODE AS CHUNGCODE,
						DECODE(NVL(CHUNG_CODE,''),'01','서울지방우정청','02','강원지방우정청','03','충청지방우정청','04','전북지방우정청'
								,'05','전남지방우정청','06','부산지방우정청','07','경북지방우정청','08','제주지방우정청'
								,'10','서울지방우정청','15','경인지방우정청','70','강원지방우정청','30','충청지방우정청','60','전북지방우정청'
								,'40','전남지방우정청','20','부산지방우정청','50','경북지방우정청','80','제주지방우정청', '')CHUNG_NAME,
						PODIVCD,
						decode(STATE,'I','신규','S','수정','E','에러','기타')AS DSTATE ,
						ERR_MSG AS ERRMSG,
						STATE
	]]>
				FROM POSTOFFICE_MASTER_HISTORY
				<dynamic prepend="WHERE">
					<isNotEmpty property="chungCode" prepend="AND">
						CHUNG_CODE = #chungCode#
					</isNotEmpty>
					<isNotEmpty property="server_ecode" prepend="AND">
						SERVER_ECODE = #server_ecode#
					</isNotEmpty>
					<isNotEmpty property="pLevel" prepend="AND">
						P_LEVEL = #pLevel#
					</isNotEmpty>
					<isEqual property="searchIndex2" compareValue="02" prepend="AND">
						STATE = 'I'
					</isEqual>
					<isEqual property="searchIndex2" compareValue="03" prepend="AND">
						STATE = 'S'
					</isEqual>
					<isEqual property="searchIndex2" compareValue="04" prepend="AND">
						STATE = 'E'
					</isEqual>
					<isNotEmpty property="searchWord">
					<isEqual property="searchIndex" compareValue="01" prepend="AND">
						(NAME LIKE  '%'|| #searchWord# || '%' OR ECODE LIKE  '%'|| #searchWord# || '%')
					</isEqual>
					<isEqual property="searchIndex" compareValue="02" prepend="AND">
						NAME LIKE  '%'|| #searchWord# || '%'
					</isEqual>
					<isEqual property="searchIndex" compareValue="03" prepend="AND">
						ECODE LIKE  '%'|| #searchWord# || '%'
					</isEqual>
					</isNotEmpty>
					<isNotEmpty property="searchFromDt">
					<isNotEmpty property="searchToDt" prepend="AND">
						CREATE_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'23595999'
					</isNotEmpty>
					</isNotEmpty>
				</dynamic>
		)
		<dynamic prepend="WHERE">
		<isNotNull property="firstIndex">
		<isNotNull property="lastIndex" >
			RNUM BETWEEN #firstIndex# AND #lastIndex#
		</isNotNull>
		</isNotNull>
		</dynamic>
	</select>
	<!-- 우체국정보 리스트 카운트-->
	<select id="selectPostInfoHistListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)
		FROM POSTOFFICE_MASTER_HISTORY
		<dynamic prepend="WHERE">
			<isNotEmpty property="chungCode" prepend="AND">
				CHUNG_CODE = #chungCode#
			</isNotEmpty>
			<isNotEmpty property="server_ecode" prepend="AND">
				SERVER_ECODE = #server_ecode#
			</isNotEmpty>
			<isNotEmpty property="pLevel" prepend="AND">
				P_LEVEL = #pLevel#
			</isNotEmpty>
			<isEqual property="searchIndex2" compareValue="02" prepend="AND">
				STATE = 'I'
			</isEqual>
			<isEqual property="searchIndex2" compareValue="03" prepend="AND">
				STATE = 'S'
			</isEqual>
			<isEqual property="searchIndex2" compareValue="04" prepend="AND">
				STATE = 'E'
			</isEqual>
			<isNotEmpty property="searchIndex">
			<isEqual property="searchIndex" compareValue="01" prepend="AND">
				(NAME LIKE  '%'|| #searchWord# || '%' OR ECODE LIKE  '%'|| #searchWord# || '%')
			</isEqual>
			<isEqual property="searchIndex" compareValue="02" prepend="AND">
				NAME LIKE  '%'|| #searchWord# || '%'
			</isEqual>
			<isEqual property="searchIndex" compareValue="03" prepend="AND">
				ECODE LIKE  '%'|| #searchWord# || '%'
			</isEqual>
			</isNotEmpty>
			<isNotEmpty property="searchFromDt">
			<isNotEmpty property="searchToDt" prepend="AND">
				CREATE_DATE BETWEEN #searchFromDt#||'000000' AND #searchToDt#||'23595999'
			</isNotEmpty>
			</isNotEmpty>
		</dynamic>
	</select>

	<insert id="insertExcelUpload" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO TEMP_SAMPLE(
                COL1,
                COL2,
                COL3,
                COL4,
                COL5,
                COL6,
                COL7,
                COL8,
                COL9,
                COL10,
                COL11,
                USE_YN,
                REG_DATE,
                REGER_ID,
                CHG_DATE,
                CHGER_ID
            ) VALUES (
				#0#,
				#1#,
				#2#,
				#3#,
				#4#,
				#5#,
				#6#,
				#7#,
				#8#,
				#9#,
				#10#,
				#11#,
				SYSDATE,
				'SAMPLE',
				SYSDATE,
				'SAMPLE'
            )
            ]]>
	</insert>


	<!-- 기본정보 상세 조회 -->
	<select id="selectBasInfo" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT  SITE_NM,
  			PRSDT_NM,
			PRSNL_INFO_ADMIN,
			ADMIN_EMAIL,
			ADMIN_HTELNO,
			RUN_CHRGER,
			RUNER_EMAIL,
			RUNER_HTELNO,
			COMP_NM,
			ZIPCD,
			ADDR1,
			ADDR2,
			REPRSNT_TELNO,
			FAXNO,
			BIZER_REGNO,
			COMM_SELL_RPRT_NO,
			ENTRPS,
			INDUTY,
			DEPOT_BANK_CD,
			DEPOT_DPSTR,
			DEPOT_ACCNO,
			WTDW_BANK_CD,
			WTDW_DPSTR,
			WTDW_ACCNO,
			WEB_BRWSR_TTL,
			FAVCN_FILE_NM,
			FAVCN_PATH_NM,
			STAMP_FILE_NM,
			STAMP_PATH_NM,
			USE_YN
    FROM
            CM_SITE_BASIC_INFO
    WHERE   SITE_SEQ   = 1


	</select>

	<!-- 기본정보 수정 -->
	<update id="updateBasInfo" parameterClass="java.util.HashMap">
	<![CDATA[
	UPDATE CM_SITE_BASIC_INFO
	SET     SITE_NM= #siteNm#,
  			PRSDT_NM= #prsdtNm#,
			PRSNL_INFO_ADMIN= #prsnlInfoAdmin#,
			ADMIN_EMAIL= #adminEmail#,
			ADMIN_HTELNO= #adminHtelno#,
			RUN_CHRGER= #runChrger#,
			RUNER_EMAIL= #runerEmail#,
			RUNER_HTELNO= #runerHtelno#,
			COMP_NM= #compNm#,
			ZIPCD= #zipcd#,
			ADDR1= #addr1#,
			ADDR2= #addr2#,
			REPRSNT_TELNO= #reprsntTelno#,
			FAXNO= #faxno#,
			BIZER_REGNO= #bizerRegno#,
			COMM_SELL_RPRT_NO= #commSellRprtNo#,
			ENTRPS= #entrps#,
			INDUTY= #induty#,
			DEPOT_BANK_CD= #depotBankCd#,
			DEPOT_DPSTR= #depotDpstr#,
			DEPOT_ACCNO= #depotAccno#,
			WTDW_BANK_CD= #wtdwBankCd#,
			WTDW_DPSTR= #wtdwDpstr#,
			WTDW_ACCNO= #wtdwAccno#,
			WEB_BRWSR_TTL= #webBrwsrTtl#,
			FAVCN_FILE_NM= #favcnFileNm#,
			FAVCN_PATH_NM= #favcnPathNm#,
			STAMP_FILE_NM= #stampFileNm#,
			STAMP_PATH_NM= #stampPathNm#,
			USE_YN= #useYn#
	WHERE  SITE_SEQ   = 1
	]]>
	</update>

	<sql id="template_list">
		SELECT A.TEMPL_MGT_NO
			 , A.ORDER_STUS_DIV
			 , A.TX_TYP
			 , A.MGT_NM
			 , A.EMAIL_SEND_TTL
			 , A.SEND_CONT
			 , A.USE_YN
			 , A.DEL_YN
			 , A.REG_DATE
			 , A.REGER_ID
			 , A.CHG_DATE
			 , A.CHGER_ID
			 , ORDER_STUS_DIV.COMN_CD_NM AS ORDER_STUS_DIV_NM
			 , TX_TYP.COMN_CD_NM AS TX_TYP_NM
			 , USE_YN.COMN_CD_NM AS USE_YN_NM
		  FROM CM_SMS_EMAIL_TEMPL_MGT A
			 , ( SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'LC_P044' ) USE_YN
			 , ( SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'LC_P018' ) TX_TYP
			 , ( SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'LC_P042' ) ORDER_STUS_DIV
		 WHERE A.USE_YN = USE_YN.COMN_CD_ID(+)
		   AND A.TX_TYP = TX_TYP.COMN_CD_ID(+)
		   AND A.ORDER_STUS_DIV = ORDER_STUS_DIV.COMN_CD_ID(+)
		   AND A.DEL_YN = 'N'
		   <isNotEmpty property="search_text">
				<isNotEmpty property="search_tx_typ" prepend="AND">
					A.TX_TYP = #search_tx_typ#
				</isNotEmpty>
				<isNotEmpty property="search_order_stus_div" prepend="AND">
					A.ORDER_STUS_DIV = #search_order_stus_div#
				</isNotEmpty>
				<isNotEmpty property="search_type" prepend="AND">
					<isEqual property="search_type" compareValue="01">
						MGT_NM LIKE '%'||#search_text#||'%'
					</isEqual>
					<isEqual property="search_type" compareValue="02">
						SEND_CONT LIKE '%'||#search_text#||'%'
					</isEqual>
				</isNotEmpty>
				<isEmpty property="search_type" prepend="AND">
					(MGT_NM LIKE '%'||#search_text#||'%' OR SEND_CONT LIKE '%'||#search_text#||'%')
				</isEmpty>
		   </isNotEmpty>
	</sql>

	<select id="selectTemplateList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT *
				FROM ( SELECT
					<isEmpty property="sidx">
						ROW_NUMBER () OVER (ORDER BY TEMPL_MGT_NO DESC) RNUM
					</isEmpty>
					, A.*
					FROM (
						SELECT *
							FROM(
							<include refid="template_list" />
							)
						) A
					) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectTemplateCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="template_list" />)
	</select>

	<insert id="insertTemplateInfo" parameterClass="java.util.HashMap">
		INSERT INTO CM_SMS_EMAIL_TEMPL_MGT
				  ( TEMPL_MGT_NO
				  , ORDER_STUS_DIV
				  , TX_TYP
				  , MGT_NM
				  , EMAIL_SEND_TTL
				  , SEND_CONT
				  , USE_YN
				  , DEL_YN
				  , REG_DATE
				  , REGER_ID
				  , CHG_DATE
				  , CHGER_ID )
			VALUES
				 ( (SELECT TO_CHAR(TO_CHAR(SYSDATE,'YYMMDDHH24MI')||NVL(DECODE(MAX(SUBSTR(TEMPL_MGT_NO,11,4)),'9999', '1000',MAX(SUBSTR(TEMPL_MGT_NO,11,4))+1),'1000'))
   					   FROM CM_SMS_EMAIL_TEMPL_MGT)
				  , #order_stus_div#
				  , #tx_typ#
				  , #mgt_nm#
				  , #email_send_ttl#
				  , #send_cont#
				  , #use_yn#
				  , 'N'
				  , SYSDATE
				  , #reger_id#
				  , SYSDATE
				  , #chger_id# )
	</insert>

	<update id="updateTemplateInfo" parameterClass="java.util.HashMap">
		UPDATE CM_SMS_EMAIL_TEMPL_MGT
		   SET MGT_NM = #mgt_nm#
		   <isNotEmpty property="order_stus_div" prepend=",">
				ORDER_STUS_DIV = #order_stus_div#
		   </isNotEmpty>
		   <isNotEmpty property="tx_typ" prepend=",">
		   		TX_TYP = #tx_typ#
		   </isNotEmpty>
		   <isNotEmpty property="email_send_ttl" prepend=",">
			 	EMAIL_SEND_TTL = #email_send_ttl#
		   </isNotEmpty>
		   <isNotEmpty property="send_cont" prepend=",">
			 	SEND_CONT = #send_cont#
		   </isNotEmpty>
		   <isNotEmpty property="use_yn" prepend=",">
			 	USE_YN = #use_yn#
		   </isNotEmpty>
		   <isNotEmpty property="del_yn" prepend=",">
			 	DEL_YN = #del_yn#
		   </isNotEmpty>
			 , CHG_DATE = SYSDATE
			 , CHGER_ID = #chger_id#
		 WHERE TEMPL_MGT_NO = #templ_mgt_no#
	</update>

	<insert id="insertGoodsCert" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO SC_GOODS_CRTFC_MAST(
				CRTFCT_ID,
				CRTFCT_NM,
				CRTFC_OR_NM,
				ISSUE_OR_NM,
				CRTFC_PRDLST_CD	,
				USE_YN,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID
            ) VALUES (
				#certId#,
				#certName#,
				#certOrgName#,
				#issueCertOrgName#,
				#certCodeList#,
				#useYn#,
				SYSDATE,
				SYSDATE,
				#userId#,
				#userId#
            )
            ]]>
	</insert>


	<!-- 삼품 인증 마스타 리스트 -->
	<select id="selectGoodsCertList" parameterClass="java.util.HashMap" resultClass="commMap">
	 <![CDATA[

	 SELECT T.ONUM,
	        T.crtfctid,
	        T.crtfctnm,
	        T.crtfcornm,
	        T.issueornm,
	        T.certcode,
	        T.useyn,
	        T.regdate,
	        T.chgdate,
	        T.regerid,
   	        T.chgerid
	 		FROM (
	 		    SELECT
	 		    ROW_NUMBER() OVER(ORDER BY CHG_DATE DESC) AS ONUM,
                CRTFCT_ID as crtfctid,
                CRTFCT_NM as crtfctnm,
                CRTFC_OR_NM as crtfcornm,
                ISSUE_OR_NM as issueornm,
                DECODE(CRTFC_PRDLST_CD,'01','농산물','02','축산물','03','수산물','04','가공식품' ) AS certcode,
                USE_YN as useyn,
                REG_DATE as regdate,
                CHG_DATE as chgdate,
                REGER_ID as regerid,
                CHGER_ID as chgerid
                FROM  SC_GOODS_CRTFC_MAST
                WHERE 1=1

    ]]>
          <isNotEmpty property="certCodeList">
				<isEqual property="certCodeList" compareValue="01">
					AND CRTFC_PRDLST_CD = '01'
				</isEqual>
				<isEqual property="certCodeList" compareValue="02">
					AND CRTFC_PRDLST_CD = '02'
				</isEqual>
				<isEqual property="certCodeList" compareValue="03">
					AND CRTFC_PRDLST_CD = '03'
				</isEqual>
				<isEqual property="certCodeList" compareValue="04">
					AND CRTFC_PRDLST_CD = '04'
				</isEqual>
		  </isNotEmpty>
		 <isNotEmpty property="useYn">
			 <isEqual property="useYn" compareValue="Y">
				AND USE_YN = 'Y'
			</isEqual>
			<isEqual property="useYn" compareValue="N">
				AND USE_YN = 'N'
			</isEqual>
		 </isNotEmpty>
                 ) T
                WHERE T.ONUM BETWEEN #firstIndex# AND #lastIndex#

	</select>

	<!-- 삼품 인증 마스타 리스트 카운트 -->
	<select id="selectGoodsCertListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
	 <![CDATA[
	 SELECT DISTINCT COUNT(*) OVER() TOTCNT
      FROM SC_GOODS_CRTFC_MAST
      WHERE 1=1
	 ]]>
			<isNotEmpty property="certCodeList">
				<isEqual property="certCodeList" compareValue="01">
					AND CRTFC_PRDLST_CD = '01'
				</isEqual>
				<isEqual property="certCodeList" compareValue="02">
					AND CRTFC_PRDLST_CD = '02'
				</isEqual>
				<isEqual property="certCodeList" compareValue="03">
					AND CRTFC_PRDLST_CD = '03'
				</isEqual>
				<isEqual property="certCodeList" compareValue="04">
					AND CRTFC_PRDLST_CD = '04'
				</isEqual>
		  </isNotEmpty>
		  <isNotEmpty property="useYn">
			 <isEqual property="useYn" compareValue="Y">
				AND USE_YN = 'Y'
			</isEqual>
			<isEqual property="useYn" compareValue="N">
				AND USE_YN = 'N'
			</isEqual>
		 </isNotEmpty>
	</select>


	<select id="selectCheckCertId" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 <![CDATA[
		 SELECT MAX(TO_NUMBER(CRTFCT_ID)) + 1  as idseq from SC_GOODS_CRTFC_MAST
    ]]>
	</select>

	<!-- 상품인증 마스타 삭제 -->
	<update id="deleteGoodsCert" parameterClass="java.util.HashMap">
	DELETE
	  FROM SC_GOODS_CRTFC_MAST
	 WHERE CRTFCT_ID   = #crtfctid#
	</update>

	<!-- 상품인증 마스타 상세보기 -->
	<select id="selectGoodsCertDtl" parameterClass="java.util.HashMap" resultClass="commMap">
	SELECT  crtfct_id,
	        crtfct_nm,
	        crtfc_or_nm,
	        issue_or_nm,
	        crtfc_prdlst_cd,
	        use_yn,
	        reg_date,
	        chg_date,
	        reger_id,
   	        chger_id
      FROM   SC_GOODS_CRTFC_MAST
      WHERE  1=1
		<isNotEmpty property="crtfctid">
	  AND    CRTFCT_ID = #crtfctid#
		</isNotEmpty>
	</select>

		<!-- 상품인증정보수정 -->
	<update id="updateGoodsCert" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE SC_GOODS_CRTFC_MAST
	      SET   CRTFCT_NM         = #certName#,
				CRTFC_OR_NM       = #certOrgName#,
				ISSUE_OR_NM       = #issueCertOrgName#,
				CRTFC_PRDLST_CD   = #certCodeList#,
				USE_YN			  = #useYn#,
				CHG_DATE          = SYSDATE,
				CHGER_ID    	  = #userId#
	      WHERE  CRTFCT_ID        = #certId#
	]]>
	</update>


	<!-- 메뉴 리스트 -->
	<select id="selectMenuMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		SELECT LPAD('  ', (LEVEL-1)*5, '  ')||C.MENU_NM MENU_NM,
       		LEVEL MENU_LEVEL,
       		C.SORT_ORDER,
       		C.MENU_ID,
       		C.HRNK_MENU_ID,
       		C.HRNK_MENU_NM,
      		C.MENU_URL,
      		C.MENU_DESC,
      		C.USE_YN
     	FROM
     		( SELECT A.MENU_NM,
       			A.MENU_LEVEL,
       			A.SORT_ORDER,
       			A.MENU_ID,
       			A.HRNK_MENU_ID,
		(SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID=A.HRNK_MENU_ID  ) AS  HRNK_MENU_NM,
       			A.MENU_URL,
       			A.MENU_DESC,
       			A.USE_YN
        	FROM   CM_ADMIN_MENU_MAST A
        	WHERE 1=1
		 <isNotEmpty property="searchNm" >
        	AND MENU_NM LIKE '%'||#searchNm#||'%'
		 </isNotEmpty>
		 <isNotEmpty property="menuGb">
        	START WITH A.MENU_ID = #menuGb#
		 </isNotEmpty>
		 <isEmpty property="menuGb">
        	START WITH A.MENU_ID = 1
		 </isEmpty>
        	CONNECT BY PRIOR A.MENU_ID = A.HRNK_MENU_ID
         	ORDER SIBLINGS BY A.SORT_ORDER
    		) C
		START WITH C.MENU_ID IN (
				SELECT MENU_ID
				FROM CM_ADMIN_MENU_MAST
	       	WHERE
		 <isNotEmpty property="menuGb">
        	MENU_LEVEL= 1
		 </isNotEmpty>
		 <isEmpty property="menuGb">
        	MENU_LEVEL= 0
		 </isEmpty>


	       	 )
		CONNECT BY PRIOR C.MENU_ID = C.HRNK_MENU_ID
		ORDER SIBLINGS BY C.SORT_ORDER
	</select>

	<select id="selectMenuMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
      SELECT DISTINCT COUNT(*) OVER() TOTCNT FROM
        (SELECT LPAD('  ', (LEVEL-1)*5, '  ')||C.MENU_NM MENU_NM,
               LEVEL MENU_LEVEL,
               C.SORT_ORDER,
               C.MENU_ID,
               C.HRNK_MENU_ID,
              C.MENU_URL,
              C.USE_YN
         FROM
             ( SELECT A.MENU_NM,
                   A.MENU_LEVEL,
                   A.SORT_ORDER,
                   A.MENU_ID,
                   A.HRNK_MENU_ID,
                   A.MENU_URL,
                   A.USE_YN
            FROM   CM_ADMIN_MENU_MAST A
            WHERE 1=1
		 <isNotEmpty property="searchNm" >
        	AND MENU_NM LIKE '%'||#searchNm#||'%'
		 </isNotEmpty>
		 <isNotEmpty property="menuGb">
        	START WITH A.MENU_ID = #menuGb#
		 </isNotEmpty>
		 <isEmpty property="menuGb">
        	START WITH A.MENU_ID = 1
		 </isEmpty>
            CONNECT BY PRIOR A.MENU_ID = A.HRNK_MENU_ID
             ORDER SIBLINGS BY A.SORT_ORDER
            ) C
        START WITH C.MENU_ID IN (
                SELECT MENU_ID
                FROM CM_ADMIN_MENU_MAST
        	WHERE
		 <isNotEmpty property="menuGb">
        	MENU_LEVEL= 1
		 </isNotEmpty>
		 <isEmpty property="menuGb">
        	MENU_LEVEL= 0
		 </isEmpty>
  		)
        CONNECT BY PRIOR C.MENU_ID = C.HRNK_MENU_ID
        ORDER SIBLINGS BY C.SORT_ORDER
       )
	</select>


	<!-- 메뉴정보 등록 -->
	<insert id="insertMenuMgr" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO CM_ADMIN_MENU_MAST(
				MENU_ID,
				MENU_NM,
				MENU_LEVEL,
				SORT_ORDER,
				HRNK_MENU_ID	,
				MENU_URL,
				MENU_DESC,
				USE_YN,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID
            ) VALUES (
				(SELECT NVL(MAX(CAST(MENU_ID AS NUMBER(5))),0)+1 FROM CM_ADMIN_MENU_MAST) 	,
				#menuNm#,
				#menuLevel#,
				#sortOrder#,
				#hrnkMenuId#,
				#menuUrl#,
				#menuDesc#,
				#useYn#,
				SYSDATE,
				SYSDATE,
				#userId#,
				#userId#            )
            ]]>
	</insert>

	<!-- 메뉴정보 수정 -->
	<update id="updateMenuMgr" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE CM_ADMIN_MENU_MAST
	      SET   MENU_NM         = #menuNm#,
				MENU_LEVEL      = #menuLevel#,
				SORT_ORDER      = #sortOrder#,
				HRNK_MENU_ID    = #hrnkMenuId#,
				MENU_URL		= #menuUrl#,
				MENU_DESC       = #menuDesc#,
				USE_YN          = #useYn#,
				CHG_DATE        = SYSDATE,
				CHGER_ID    	= #userId#
	      WHERE  MENU_ID        = #menuId#
	]]>
	</update>
		<!-- 메뉴정보 삭제 -->
	<update id="deleteMenuMgr" parameterClass="java.util.HashMap">
	DELETE
	  FROM CM_ADMIN_MENU_MAST
	 WHERE MENU_ID   = #menuId#
	</update>


	<!-- 권한그룹 리스트 -->
	<select id="selectGrpAdmList" parameterClass="java.util.HashMap" resultClass="commMap">
	 <![CDATA[
	SELECT  PERM_ID,
			PERM_NM,
			USE_YN,
			PERM_DESC
    FROM
            CM_PERM_GRP
    WHERE   1  = 1
    ]]>

		 <isNotEmpty property="UseYn">
			 <isEqual property="UseYn" compareValue="Y">
				AND USE_YN = 'Y'
			</isEqual>
			<isEqual property="UseYn" compareValue="N">
				AND USE_YN = 'N'
			</isEqual>
		 </isNotEmpty>


	</select>

	<!-- 권한그룹별 메뉴 리스트 -->
	<select id="selectGrpAdmMgrList_BACK" parameterClass="java.util.HashMap" resultClass="commMap">

		SELECT ROWNUM AS RNUM,LPAD('  ', (LEVEL-1)*5, '  ')||C.MENU_NM MENU_NM,
       		LEVEL MENU_LEVEL,
       		C.SORT_ORDER,
       		C.MENU_ID,
       		C.HRNK_MENU_ID,
       		C.HRNK_MENU_NM,
      		C.MENU_URL,
      		C.USE_YN
     	FROM
     		( SELECT A.MENU_NM,
       			A.MENU_LEVEL,
       			A.SORT_ORDER,
       			A.MENU_ID,
       			A.HRNK_MENU_ID,
       			(SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID=A.HRNK_MENU_ID  ) AS  HRNK_MENU_NM,
       			A.MENU_URL,
       			A.USE_YN
            FROM   CM_ADMIN_MENU_MAST A  INNER JOIN CM_ADMIN_PERM P ON (A.MENU_ID=P.MENU_ID)
        	WHERE P.PERM_ID = #permId#
        	START WITH A.MENU_ID = #menuId#
        	CONNECT BY PRIOR A.MENU_ID = A.HRNK_MENU_ID
         	ORDER SIBLINGS BY A.SORT_ORDER
    		) C
		START WITH C.MENU_ID IN (
				SELECT MENU_ID
				FROM CM_ADMIN_MENU_MAST
                WHERE MENU_LEVEL= #menuLevel#   )
		CONNECT BY PRIOR C.MENU_ID = C.HRNK_MENU_ID
		ORDER SIBLINGS BY C.SORT_ORDER
	</select>

	<!-- 권한그룹별 메뉴 리스트 -->
	<select id="selectGrpAdmMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT *
		FROM(
				SELECT ROWNUM AS RNUM,  LPAD('  ', (A.MENU_LEVEL-1)*5, '  ')|| A.MENU_NAME AS MENU_NM
		                  , A.*
		          FROM (
		                 SELECT *
		                   FROM (
		                          SELECT T2.HRNK_MENU_ID
		                               , (SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID=T2.HRNK_MENU_ID  ) AS  HRNK_MENU_NM
		                               , T1.MENU_ID
		                               , T2.MENU_URL
		                               , T2.MENU_NM AS MENU_NAME
		                               , T2.MENU_LEVEL
		                               , T2.SORT_ORDER
		                               , T2.USE_YN
		                            FROM  CM_ADMIN_PERM T1,  CM_ADMIN_MENU_MAST T2
		                           WHERE T1.MENU_ID = T2.MENU_ID
		                             AND T1.PERM_ID = #permId#
		                             AND T2.USE_YN = 'Y'
		                         ) START WITH MENU_ID = #menuId#
		                           CONNECT BY PRIOR MENU_ID = HRNK_MENU_ID
		             ORDER SIBLINGS BY SORT_ORDER
		             ) A  WHERE MENU_ID  <> 1
			)MN
			]]>
		<isNotEmpty property="firstIndex">
		<isNotEmpty property="lastIndex">
			WHERE MN.RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
		</isNotEmpty>
	</select>

	<!-- 권한그룹별 메뉴 리스트 카운트 -->
	<select id="selectGrpAdmMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		<![CDATA[
		SELECT COUNT(*)
		FROM(
					SELECT *
					FROM (
							SELECT T2.HRNK_MENU_ID
								, (SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID=T2.HRNK_MENU_ID  ) AS  HRNK_MENU_NM
								, T1.MENU_ID
								, T2.MENU_URL
								, T2.MENU_NM
								, T2.MENU_LEVEL
								, T2.SORT_ORDER
								, T2.USE_YN
							FROM  CM_ADMIN_PERM T1,  CM_ADMIN_MENU_MAST T2
							WHERE T1.MENU_ID = T2.MENU_ID
							AND T1.PERM_ID = #permId#
							AND T2.USE_YN = 'Y'
						) START WITH MENU_ID = #menuId#
						CONNECT BY PRIOR MENU_ID = HRNK_MENU_ID
			)A
		WHERE MENU_ID  <> 1
		]]>
	</select>

	<!-- 권한그룹별 메뉴 리스트 삭제 -->
	<update id="deleteGrpAdm" parameterClass="java.util.HashMap">
		DELETE
	  		FROM CM_ADMIN_PERM
	 	WHERE 1=1
 	     	AND PERM_ID = #permId#
			AND MENU_ID IN <iterate property="menuId" open="("  close=")" conjunction=",">#menuId[]#</iterate>
	</update>


	<insert id="insertGrpAdm" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO CM_ADMIN_PERM(
				MENU_ID,
				PERM_ID,
				USE_YN,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID
            ) VALUES (
				#menuId#,
				#permId#,
				#useYn#,
				SYSDATE,
				SYSDATE,
				#userId#,
				#userId#            )
            ]]>
	</insert>

	<insert id="insertGrpAdmRootMenu" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO CM_ADMIN_PERM(
				MENU_ID,
				PERM_ID,
				USE_YN,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID
            ) select DISTINCT
                     MENU_ID
                   , #permId#
                   , 'Y'
                   , SYSDATE
                   , SYSDATE
                   , #loginId#
                   , #loginId#
               from CM_ADMIN_MENU_MAST
              where menu_ID = '1'
            ]]>
	</insert>

	<select id="selectKeyPermGrp" parameterClass="java.util.HashMap" resultClass="String">
		SELECT CM_PERM_GRP_SEQ.NEXTVAL AS NEW_KEY
		  FROM DUAL
	</select>

	<select id="checkRootMenu" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS CNT
		  FROM CM_ADMIN_PERM
		 WHERE MENU_ID = '1'
		   AND PERM_ID = #permId#
	</select>

	<!-- 권한그룹 리스트 목록 -->
	<sql id="perm_grp_list">
		SELECT
				LEVEL,
				DECODE(LEVEL,1,P.PERM_NM,'') AS FST_PERM_NM,
				DECODE(SIGN(LEVEL-1),1,LTRIM (SYS_CONNECT_BY_PATH (P.PERM_NM, ' * '), ' * '),'') AS PERM_NM_PRESNT,
				P.PERM_ID,
				P.USE_YN,
				(DECODE(P.USE_YN,'Y','예','아니오' )) USE_YN_NM,
				P.SUPP_COMP_YN,
				(DECODE(P.SUPP_COMP_YN,'Y','예','아니오' )) SUPP_COMP_YN_NM,
				(SELECT PAVLN_DIV_CD FROM CO_PAVLN_MAST WHERE   PAVLN_DIV_CD = P.PAVLN_DIV_CD AND HRNK_PAVLN_ID IS NULL) PAVLN_DIV_CD,
				(SELECT PAVLN_NM FROM CO_PAVLN_MAST WHERE   PAVLN_DIV_CD = P.PAVLN_DIV_CD AND HRNK_PAVLN_ID IS NULL) PAVLN_NM,
				P.PERM_DESC,
				TO_CHAR(P.REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS REG_DATE,
				(SELECT COUNT(PERM_ID) FROM CM_ADMIN_PERM_GRP WHERE PERM_ID=P.PERM_ID ) ADMIN_CNT,
				P.CHG_DATE,
				P.REGER_ID,
				P.CHGER_ID,
				P.HRNK_PERM_ID,
				P.PERM_LEVEL
		FROM	CM_PERM_GRP P
		WHERE 1=1
		<isEqual property="searchIndex" compareValue="01">
			AND P.PERM_NM			LIKE #searchWord#||'%'/*권한그룹명*/
		</isEqual>
		<isEqual property="searchIndex" compareValue="02">
			AND P.PERM_ID		LIKE #searchWord#||'%' /*권한그룹ID*/
		</isEqual>
		 <isNotEmpty property="searchUseYn">
			 <isEqual property="searchUseYn" compareValue="Y">
				AND P.USE_YN = 'Y'
			</isEqual>
			<isEqual property="searchUseYn" compareValue="N">
				AND P.USE_YN = 'N'
			</isEqual>
		 </isNotEmpty>
		START WITH HRNK_PERM_ID IS NULL
		CONNECT BY PRIOR PERM_ID = HRNK_PERM_ID
		ORDER SIBLINGS BY PERM_NM ASC
	</sql>

		<!-- 권한그룹 리스트  -->
	<select id="selectPermGrpMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		/* selectPermGrpMgrList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY PERM_ID ASC) RNUM
				, C.*
				FROM (
					SELECT *
						FROM(
						<include refid="perm_grp_list" />
						)
					) C
				) C
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectPermGrpListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		/* selectPermGrpListTotCnt */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="perm_grp_list" />)
	</select>

	<!-- 권한그룹 INFO -->
	<select id="selectPermMgrInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	A.PERM_ID
				,A.PERM_NM
				,A.USE_YN
				,A.PERM_DESC
				,A.PAVLN_DIV_CD
				,(SELECT PAVLN_NM FROM CO_PAVLN_MAST WHERE PAVLN_DIV_CD = A.PAVLN_DIV_CD AND HRNK_PAVLN_ID IS NULL)AS PAVLN_NM
				,A.SUPP_COMP_YN
				,A.REG_DATE
				,A.CHG_DATE
				,A.REGER_ID
				,A.CHGER_ID
				,A.HRNK_PERM_ID
				,(SELECT PERM_NM FROM CM_PERM_GRP WHERE PERM_ID = A.HRNK_PERM_ID) AS HRNK_PERM_NM
				,A.PERM_LEVEL
		FROM	CM_PERM_GRP A
		WHERE	A.PERM_ID = #permId#
	</select>
	<!-- 상위 권한그룹 조회 COUNT -->
	<select id="selectCmPermGrpListTotcnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(PERM_ID)
		FROM	CM_PERM_GRP
		WHERE PERM_LEVEL = 1
		AND HRNK_PERM_ID IS NULL
		<isNotEmpty property="search_text" prepend="AND">
			PERM_NM LIKE #search_text#||'%'
		</isNotEmpty>
	</select>
	<!-- 상위 권한그룹 조회 LIST -->
	<select id="selectCmPermGrpList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<include refid="pagingHeader"/>
		SELECT	PERM_ID
				,PERM_NM
		FROM	CM_PERM_GRP
		WHERE	PERM_LEVEL = 1
		AND 	HRNK_PERM_ID IS NULL
		<isNotEmpty property="search_text" prepend="AND">
			PERM_NM LIKE #search_text#||'%'
		</isNotEmpty>
		<include refid="pagingFooter"/>
	</select>

	<!-- 권한그룹 등록 -->
	<insert id="registerPermGrp" parameterClass="java.util.HashMap">
		/* registerPermGrp */
		INSERT INTO CM_PERM_GRP(
				PERM_ID,
		      	PERM_NM,
				USE_YN,
				PERM_DESC,
				SUPP_COMP_YN,
				PAVLN_DIV_CD,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID,
				HRNK_PERM_ID,
				PERM_LEVEL
		) VALUES (
				#permId# 	,
				#permNm#,
				#useYn#,
				#permDesc#,
				#suppCompYn#,
				#pavlnDivCd#,
				SYSDATE,
				SYSDATE,
				#loginId#,
				#loginId#,
				#hrnkPermId#,
				<isNotEmpty property="hrnkPermId">2</isNotEmpty><isEmpty property="hrnkPermId">1</isEmpty>
				)
	</insert>

	<!-- 권한그룹 수정 -->
	<update id="updatePermGrp" parameterClass="java.util.HashMap">
		/* updatePermGrp */
		UPDATE	CM_PERM_GRP
		  SET	PERM_NM         = #permNm#,
				PERM_DESC       = #permDesc#,
				USE_YN          = #useYn#,
				CHG_DATE        = SYSDATE,
				CHGER_ID    	= #loginId#,
				SUPP_COMP_YN	= #suppCompYn#,
				PAVLN_DIV_CD = #pavlnDivCd#,
				HRNK_PERM_ID = #hrnkPermId#,
				PERM_LEVEL = <isNotEmpty property="hrnkPermId">2</isNotEmpty><isEmpty property="hrnkPermId">1</isEmpty>
		WHERE	PERM_ID        = #permId#
	</update>
		<!-- 권한그룹 삭제 -->
	<update id="deletePermGrp" parameterClass="java.util.HashMap">
	DELETE
	FROM CM_PERM_GRP
	WHERE PERM_ID = #permId#
	</update>
		<!-- 권한그룹 삭제 -->
	<update id="deleteAdminPermGrp" parameterClass="java.util.HashMap">
	DELETE
	FROM CM_ADMIN_PERM_GRP
	WHERE PERM_ID = #permId#
	</update>

	<!-- 권한별 관리자 리스트 목록 -->
	<sql id="admin_perm_grp_list">
        SELECT P.PERM_ID,
               P.ADMIN_ID,
               A.ADMIN_NM,
               A.BELONG_OR_CD,
               A.PO_CD,
               (SELECT PONM FROM PICMT0060 WHERE EDPSCD = A.PO_CD AND USEYN='Y' and DSCDPOYN = 'N'  and rownum = 1  ) AS PO_CD_NM,
               (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'ORG01' AND COMN_CD_ID= A.BELONG_OR_CD) AS BELONG_OR_CD_NM
        FROM CM_ADMIN_PERM_GRP P ,CM_ADMIN_MAST A
        WHERE P.ADMIN_ID=A.ADMIN_ID
   		AND PERM_ID = #permId#
	</sql>

		<!-- 권한별 관리자 리스트  -->
	<select id="selectAdmPermGrpMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		/* selectPermGrpMgrList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY PERM_ID ASC) RNUM
				, C.*
				FROM (
					SELECT *
						FROM(
						<include refid="admin_perm_grp_list" />
						)
					) C
				) C
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectAdmPermGrpListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		/* selectPartnerOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="admin_perm_grp_list" />)
	</select>


	<!-- 권한별 관리자 등록 -->
	<insert id="registerAdmPermGrp" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO CM_ADMIN_PERM_GRP(
				PERM_ID,
		      	ADMIN_ID,
				REG_DATE,
				CHG_DATE,
				REGER_ID,
				CHGER_ID
			) VALUES (
				#permId#,
				#adminId#,
				SYSDATE,
				SYSDATE,
				#loginId#,
				#loginId#)
            ]]>
	</insert>


	<!-- 권한별 관리자 삭제 -->
	<update id="deleteAdmPermGrp" parameterClass="java.util.HashMap">
	 DELETE
	 FROM CM_ADMIN_PERM_GRP
	 WHERE PERM_ID = #permId#
     AND ADMIN_ID IN <iterate property="adminId" open="("  close=")" conjunction=",">#adminId[]#</iterate>
	</update>

	<!-- 관리자 리스트 목록 -->
	<sql id="admin_list">
        SELECT A.ADMIN_ID,
               A.ADMIN_NM,
               A.BELONG_OR_CD,
               A.PO_CD,
               (SELECT PONM FROM PICMT0060 WHERE EDPSCD = A.PO_CD AND USEYN='Y' and DSCDPOYN = 'N'  and rownum = 1  ) AS PO_CD_NM,
               (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'ORG01' AND COMN_CD_ID= A.BELONG_OR_CD) AS BELONG_OR_CD_NM
        FROM CM_ADMIN_MAST A
        WHERE 1=1
 		<isEqual property="searchIndex" compareValue="00">
	        <isNotEmpty property="searchWord" >
				AND (	ADMIN_ID LIKE  '%'|| #searchWord# || '%' OR ADMIN_NM LIKE '%'|| #searchWord# || '%')
			</isNotEmpty>
		</isEqual>
		<!--권한그룹명-->
		<isEqual property="searchIndex" compareValue="01">
			AND ADMIN_ID			LIKE  '%'|| #searchWord# || '%'
		</isEqual>
		<!--관리자아이디-->
		<isEqual property="searchIndex" compareValue="02">
			AND ADMIN_NM		LIKE  '%'|| #searchWord# || '%'
		</isEqual>


	</sql>

		<!-- 관리자 리스트  -->
	<select id="selectAdminList" parameterClass="java.util.HashMap" resultClass="commMap">
		/* selectAdminList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ADMIN_ID ASC) RNUM
				, C.*
				FROM (
					SELECT *
						FROM(
						<include refid="admin_list" />
						)
					) C
				) C
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectAdminListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		/* selectAdminListCount */
		SELECT COUNT(*) AS CNT
		  FROM (
				<include refid="admin_list" />
		  )
	</select>












	<!-- 제휴사 조회 -->
	<select id="selectPartnerList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
	SELECT PARTNR_ID AS VALUE
			, NAME
	  FROM PT_PARTNER
	 WHERE PARTNER_TYPE = #search_partnr_div#
	</select>

	<!-- 제휴사 편의점 주문내역 목록 -->
	<sql id="partner_order_list_query1">
		SELECT /*+ INDEX (A  TXORDER_IX10) */ substr(a.order_date,1,8) order_date,
				  substr(a.complete_date,1,8) complete_date,
			   a.purchase_id,
			   a.goods_code,
			   a.goods_name,
			   1 quantity,
			   a.amount,
			   decode(a.shop_id, 8, 'ePOST마트', 2, '꽃배달', '우체국쇼핑') shop,
			   a.access_name,
			   decode(a.cancel_state, 'Y','주문취소', decode(a.status, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) status
		 from TXORDER a, MEMINFO c
		where a.access_name = c.access_name
		 and a.access_name like #searchAccessName# || '%'
		 and c.member_type= '8'
		 and a.amount  <![CDATA[>]]> 0
		 and a.order_date <![CDATA[>]]> #search_strt_ymd#
		 and a.order_date <![CDATA[<]]> #search_end_ymd#
		 <isEqual property="shop_id" compareValue="1">
    		and a.shop_id in ('1','5','6','7')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		and a.shop_id = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		and a.shop_id = '8'
		 </isEqual>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
	</sql>

	<!-- 제휴사 편의점 주문내역 목록 총개수 -->
	<select id="selectPartnerOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query1" />)
	</select>

	<!-- 제휴사 편의점 주문내역 목록 -->
	<select id="selectPartnerOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query1" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 기프티콘 주문내역 목록 -->
	<sql id="partner_order_list_query2">
		SELECT  SUBSTR(A.ORDER_DATE,1,8) ORDER_DATE
			   , SUBSTR(A.COMPLETE_DATE,1,8) COMPLETE_DATE
			   , A.PURCHASE_ID
			   , B.GOODS_CODE
			   , B.GOODS_NAME
			   , B.QUANTITY
			   , A.AMOUNT
			   , DECODE(A.SHOP_ID, 8, 'EPOST마트', 2, '꽃배달', '우체국쇼핑') SHOP
			   , DECODE(A.CANCEL_STATE, 'Y','주문취소', DECODE(A.STATUS, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) STATUS
               , NVL(A.AMOUNT,0) - DECODE(F.TAXGBN,'Y',NVL(A.AMOUNT,0) - ROUND(NVL(A.AMOUNT,0)/ 1.1,0), 0) SUPPLY
               , DECODE(F.TAXGBN,'Y', NVL(A.AMOUNT,0) - ROUND(NVL(A.AMOUNT,0)/ 1.1,0), 0) VAT
		   FROM TXORDER A, TXORDER_ITEM B, GOODS_MASTER F
		  WHERE A.TXORDER_ID  = B.TXORDER_ID
            AND B.GOODS_IDN   = F.GOODS_IDN
			AND B.PRICE  <![CDATA[>]]> 0
			AND A.ORDER_DATE <![CDATA[>]]> #search_strt_ymd#
			AND A.ORDER_DATE <![CDATA[<]]> #search_end_ymd#
			AND NVL(A.GIFTICON_YN, 'N') = 'Y'
		 <isEqual property="shop_id" compareValue="1">
    		AND A.SHOP_ID IN ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		AND A.SHOP_ID = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		AND A.SHOP_ID IN ('0','8')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="9">
    		AND A.SHOP_ID ='99'
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND F.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
	     ORDER BY A.ORDER_DATE
	</sql>

	<!-- 제휴사 기프티콘 주문내역 목록 총개수 -->
	<select id="selectPartnerGifticonOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerGifticonOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query2" />)
	</select>

	<!-- 제휴사 기프티콘 주문내역 목록 -->
	<select id="selectPartnerGifticonOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerGifticonOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query2" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 OK 캐쉬백 주문내역 목록 -->
	<sql id="partner_order_list_query3">
		SELECT  SUBSTR(A.ORDER_DATE,1,8) ORDER_DATE
			   , SUBSTR(A.COMPLETE_DATE,1,8) COMPLETE_DATE
			   , A.PURCHASE_ID
			   , A.GOODS_CODE
			   , A.GOODS_NAME
			   , 1 QUANTITY
			   , A.AMOUNT
			   , DECODE(A.SHOP_ID, 8, 'EPOST마트', 2, '꽃배달', '우체국쇼핑') SHOP
			   , DECODE(A.CANCEL_STATE, 'Y','주문취소', DECODE(A.STATUS, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) STATUS
               , NVL(A.AMOUNT,0) - DECODE(F.TAXGBN,'Y',NVL(A.AMOUNT,0) - ROUND(NVL(A.AMOUNT,0)/ 1.1,0), 0) SUPPLY
               , DECODE(F.TAXGBN,'Y', NVL(A.AMOUNT,0) - ROUND(NVL(A.AMOUNT,0)/ 1.1,0), 0) VAT
		   FROM TXORDER A, GOODS_MASTER F
		  WHERE A.RECEV_PO_REGIPOCD = '89903'
            AND A.GOODS_IDN   = F.GOODS_IDN
			AND A.AMOUNT  <![CDATA[>]]> 0
			AND A.ORDER_DATE <![CDATA[>]]> #search_strt_ymd#
			AND A.ORDER_DATE <![CDATA[<]]> #search_end_ymd#
			AND NVL(A.AMOUNT_OKCASH, 0) <![CDATA[<>]]> 0
		 <isEqual property="shop_id" compareValue="1">
    		AND A.SHOP_ID IN ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		AND A.SHOP_ID = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		AND A.SHOP_ID IN ('0','8')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="9">
    		AND A.SHOP_ID ='99'
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND F.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
	     ORDER BY A.ORDER_DATE
	</sql>

	<!-- 제휴사 OK 캐쉬백 주문내역 목록 총개수 -->
	<select id="selectPartnerOkCashBagOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerOkCashBagOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query3" />)
	</select>

	<!-- 제휴사 OK 캐쉬백 주문내역 목록 -->
	<select id="selectPartnerOkCashBagOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerOkCashBagOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query3" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 나머지(LP) 주문내역 목록 -->
	<sql id="partner_order_list_query4">
		SELECT substr(a.order_date,1,8) order_date,
			   substr(a.complete_date,1,8) complete_date,
			   a.purchase_id,
			   b.goods_code,
			   b.goods_name,
			   b.quantity,
			   a.amount,
			   decode(a.shop_id, 8, 'ePOST마트', 2, '꽃배달', '우체국쇼핑') shop,
			   decode(a.cancel_state, 'Y','주문취소', decode(a.status, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) status  ,
               nvl(A.AMOUNT,0) - decode(f.TAXGBN,'Y',nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) supply,
               decode(f.TAXGBN,'Y', nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) vat
		   from TXORDER a, TXORDER_ITEM b, LinkPrice_Sale c ,goods_master f
		  where a.purchase_id  = c.purchase_id
			and a.txorder_id   = b.txorder_id
            and b.goods_idn    = f.goods_idn
			 and b.price <![CDATA[>]]> 0
			 and a.order_date <![CDATA[>=]]> #search_strt_ymd#
			 and a.order_date <![CDATA[<=]]> #search_end_ymd#
		 <isEqual property="shop_id" compareValue="1">
    		and a.shop_id in ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		and a.shop_id = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		and a.shop_id in ('0', '8')
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND f.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
		order by a.order_date
	</sql>

	<!-- 제휴사 나머지(LP) 주문내역 목록 총개수 -->
	<select id="selectPartnerLpOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerLpOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query4" />)
	</select>

	<!-- 제휴사 나머지(LP) 주문내역 목록 -->
	<select id="selectPartnerLpOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerLpOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query4" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 나머지(IC) 주문내역 목록 -->
	<sql id="partner_order_list_query5">
		SELECT substr(a.order_date,1,8) order_date,
			   substr(a.complete_date,1,8) complete_date,
			   a.purchase_id,
			   b.goods_code,
			   b.goods_name,
			   b.quantity,
			   a.amount,
			   decode(a.shop_id, 8, 'ePOST마트', 2, '꽃배달', '우체국쇼핑') shop,
			   decode(a.cancel_state, 'Y','주문취소', decode(a.status, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) status  ,
               nvl(A.AMOUNT,0) - decode(f.TAXGBN,'Y',nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) supply,
               decode(f.TAXGBN,'Y', nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) vat
		   from TXORDER a, TXORDER_ITEM b, ilikeclick_sale c ,goods_master f
		  where a.purchase_id  = c.purchase_id
			and a.txorder_id   = b.txorder_id
            and b.goods_idn    = f.goods_idn
			and b.price <![CDATA[>]]> 0
			and a.order_date <![CDATA[>=]]> #search_strt_ymd#
			and a.order_date <![CDATA[<=]]> #search_end_ymd#
		 <isEqual property="shop_id" compareValue="1">
    		and a.shop_id in ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		and a.shop_id = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		and a.shop_id in ('0', '8')
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND f.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
			order by a.order_date
	</sql>

	<!-- 제휴사 나머지(IC) 주문내역 목록 총개수 -->
	<select id="selectPartnerIcOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerIcOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query5" />)
	</select>

	<!-- 제휴사 나머지(IC) 주문내역 목록 -->
	<select id="selectPartnerIcOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerIcOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query5" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 나머지(PL) 주문내역 목록 -->
	<sql id="partner_order_list_query6">
		SELECT substr(a.order_date,1,8) order_date,
			   substr(a.complete_date,1,8) complete_date,
			   a.purchase_id,
			   b.goods_code,
			   b.goods_name,
			   b.quantity,
			   a.amount,
			   decode(a.shop_id, 8, 'ePOST마트', 2, '꽃배달', '우체국쇼핑') shop,
			   decode(a.cancel_state, 'Y','주문취소', decode(a.status, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) status  ,
               nvl(A.AMOUNT,0) - decode(f.TAXGBN,'Y',nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) supply,
               decode(f.TAXGBN,'Y', nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) vat
		   from TXORDER a, TXORDER_ITEM b, banner_order_sale c ,goods_master f
		  where a.purchase_id  = c.purchase_id
			and a.txorder_id   = b.txorder_id
            and b.goods_idn    = f.goods_idn
			and c.gubun        = '01'
			and b.price <![CDATA[>]]> 0
			and a.order_date <![CDATA[>=]]> #search_strt_ymd#
			and a.order_date <![CDATA[<=]]> #search_end_ymd#
		 <isEqual property="shop_id" compareValue="1">
    		and a.shop_id in ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		and a.shop_id = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		and a.shop_id in ('0', '8')
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND f.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
			order by a.order_date
	</sql>

	<!-- 제휴사 나머지(PL) 주문내역 목록 총개수 -->
	<select id="selectPartnerPlOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerPlOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query6" />)
	</select>

	<!-- 제휴사 나머지(PL) 주문내역 목록 -->
	<select id="selectPartnerPlOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerPlOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query6" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사 나머지 주문내역 목록 -->
	<sql id="partner_order_list_query7">
		SELECT /*+ leading(d c) index(c PARTNER_ORDER_IX03) */ substr(a.order_date,1,8) order_date,
				 substr(a.complete_date,1,8) complete_date,
			   a.purchase_id,
			   b.goods_code,
			   b.goods_name,
			   b.quantity,
			   a.amount,
			   decode(a.shop_id, 8, 'ePOST마트', 2, '꽃배달', '우체국쇼핑') shop,
			   decode(a.cancel_state, 'Y','주문취소', decode(a.status, 1, '상품대금송금전', 2, '결제완료', 3, '주문확인', 5, '배송완료', '배송중')) status  ,
         nvl(A.AMOUNT,0) - decode(f.TAXGBN,'Y',nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) supply,
         decode(f.TAXGBN,'Y', nvl(A.AMOUNT,0) - round(nvl(A.AMOUNT,0)/ 1.1,0), 0) vat
		  from TXORDER a, TXORDER_ITEM b, PARTNER_ORDER c, PARTNER d  ,goods_master f
		  where d.partner_id = decode(?, 'ALL',d.partner_id, ?)
			and d.partner_type = ?
			and d.partner_id = c.partner_id
			and a.purchase_id = c.purchase_id
			and a.txorder_id  = b.txorder_id
            and b.goods_idn   = f.goods_idn
			and b.price <![CDATA[>]]> 0
			and c.order_date <![CDATA[>]]> #search_strt_ymd#
			and c.order_date <![CDATA[<]]> #search_end_ymd#
		 <isEqual property="shop_id" compareValue="1">
    		and a.shop_id in ('1','5','6','7','10')
		 </isEqual>
		 <isEqual property="shop_id" compareValue="2">
    		and a.shop_id = '2'
		 </isEqual>
		 <isEqual property="shop_id" compareValue="8">
    		and a.shop_id in ('0', '8')
		 </isEqual>
		 <isNotEmpty property="search_ctgry_cd">
		 	AND f.CATEGORY_CODE = #search_ctgry_cd#
		 </isNotEmpty>
		 <isEqual property="status" compareValue="9">
    		AND A.CANCEL_STATE = 'Y'
		 </isEqual>
		 <isEqual property="status" compareValue="1">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '1'
		 </isEqual>
		 <isEqual property="status" compareValue="2">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '2'
		 </isEqual>
		 <isEqual property="status" compareValue="3">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '3'
		 </isEqual>
		 <isEqual property="status" compareValue="4">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '4'
		 </isEqual>
		 <isEqual property="status" compareValue="5">
    		AND A.CANCEL_STATE = 'N' AND A.STATUS = '5'
		 </isEqual>
			order by a.order_date
	</sql>

	<!-- 제휴사 나머지 주문내역 목록 총개수 -->
	<select id="selectPartnerPartyOrderListCount" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.lang.Integer">
		/* selectPartnerPartyOrderListCount */
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="partner_order_list_query7" />)
	</select>

	<!-- 제휴사 나머지 주문내역 목록 -->
	<select id="selectPartnerPartyOrderList" parameterClass="com.devwork.common.util.CommandMap" resultClass="java.util.HashMap">
		/* selectPartnerPartyOrderList */
		SELECT *
			FROM ( SELECT
					ROW_NUMBER () OVER (ORDER BY ORDER_ID ASC) RNUM
				, A.*
				FROM (
					SELECT *
						FROM(
						<include refid="partner_order_list_query7" />
						)
					) A
				) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<!-- 제휴사실적_제휴사명 조회 -->
	<select id="selectPartnerIdList" parameterClass ="java.util.HashMap" resultClass="commMap">
     SELECT PARTNR_ID, NAME
      FROM PT_PARTNER
     WHERE PARTNER_TYPE= #searchPartnerType#
       AND DELETE_DATE IS NULL
	</select>

	<!-- 제휴사실적_회원가입 월별 리스트 조회 -->
	<select id="selectPartnerMemberMMList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerMemberMMList **/

	<![CDATA[
		  SELECT
		            A.DAYS
		            ,A.CNT
		            ,ROWNUM AS RNUM
		    FROM (
					 SELECT
					          TO_CHAR(TO_DATE(A.DAYS,'YYYYMM'),'YYYY-MM') AS DAYS
					          ,COUNT(A.ACCESS_NAME) AS CNT
					    FROM  (
					        SELECT PTMEM.PARTNR_ID
					               ,MEM.ACCESS_NAME
					               ,MEM.CREATE_DATE
					               ,SUBSTR(MEM.CREATE_DATE, 1, 6) AS DAYS
					        FROM PT_PARTNER_MEMINFO PTMEM
					        INNER JOIN MEMINFO MEM ON PTMEM.ACCESS_NAME = MEM.ACCESS_NAME
					        WHERE PARTNR_ID = #searchPartnerId#
						        AND MEM.STATUS IN ('1', '2')
						        AND MEM.CREATE_DATE >= #searchFromDt#||'00'   AND MEM.CREATE_DATE <= #searchToDt#||'99'
					    ) A
					    GROUP BY ROLLUP(A.DAYS)
			    ) A
	]]>
	</select>

	<!-- 제휴사실적_회원가입 월별 카운트조회 -->
	<select id="selectPartnerMemberMMListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
	<![CDATA[
	SELECT DISTINCT COUNT(*) OVER() TOTCNT
	  FROM PARTNER_MEMINFO A
	   	 , MEMINFO B
	WHERE A.ACCESS_NAME = B.ACCESS_NAME
	  AND A.PARTNER_ID = #searchPartnerId#
	  AND B.CREATE_DATE >= #searchFromDt# AND B.CREATE_DATE <= #searchToDt#
	  AND B.STATUS IN ('1', '2')
	GROUP BY SUBSTR(B.CREATE_DATE, 1, 6)
	]]>
	</select>

	<!-- 제휴사실적_회원가입 일별 리스트 조회 -->
	<select id="selectPartnerMemberDDList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerMemberDDList **/

	<![CDATA[
		SELECT
		      A.*
		FROM(
			  SELECT
			        A.*
			        ,ROWNUM AS RNUM
			  FROM (
				 SELECT PTMEM.PARTNR_ID
				         ,MEM.ACCESS_NAME
				         ,TO_CHAR(TO_DATE(MEM.CREATE_DATE,'YYYYMMDDHH24'),'YYYY-MM-DD') AS DAYS
				         ,DECODE(MEM.MEMBER_TYPE, '2', '법인', '개인') AS MEMTYPE
				         ,DECODE(MEM.POSTOFFICE, NULL, '없음', '있음') POSTGB
				         ,DECODE(MEM.IPIN_USERSEX,'1','남성','2','여성') AS SEX_NM
				         ,NVL(MEM.IPIN_USERAGE,0) AS AGE_GROUP
				         ,COUNT(MEM.ACCESS_NAME) OVER() AS TOT_CNT
				  FROM PT_PARTNER_MEMINFO PTMEM
				  INNER JOIN MEMINFO MEM ON PTMEM.ACCESS_NAME = MEM.ACCESS_NAME
				  WHERE MEM.STATUS IN ('1', '2')
					  AND PTMEM.PARTNR_ID = #searchPartnerId#
					  AND MEM.CREATE_DATE >= #searchFromDt#||'00'   AND MEM.CREATE_DATE <= #searchToDt#||'99'
				  ORDER BY MEM.CREATE_DATE, MEM.ACCESS_NAME
			 ) A WHERE ROWNUM <= #lastIndex#
		) A WHERE A.RNUM >= #firstIndex#
	]]>
	</select>

	<!-- 제휴사ID 카운트조회 -->
	<select id="selectPartnerIdValid" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*)
		FROM PT_PARTNER
		WHERE PARTNR_ID = #searchPartnerId#
	</select>

	<!-- 제휴사실적_회원가입 일별 카운트조회 -->
	<select id="selectPartnerMemberDDListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
	<![CDATA[
			SELECT COUNT(*)
			  FROM PT_PARTNER_MEMINFO PTMEM
			  INNER JOIN MEMINFO MEM ON PTMEM.ACCESS_NAME = MEM.ACCESS_NAME
			  WHERE MEM.STATUS IN ('1', '2')
				  AND PTMEM.PARTNR_ID = #searchPartnerId#
				  AND MEM.CREATE_DATE >= #searchFromDt#||'00'   AND MEM.CREATE_DATE <= #searchToDt#||'99'
 	]]>
	</select>

	<!-- 제휴사실적 편의점 실적조회 월별 /일별 리스트 조회 -->
	<select id="selectPartnerShopList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerShopList **/

		SELECT
		        A.ORDER_DATE AS GUBUN
		        ,COUNT(DISTINCT A.ORDER_ID) AS ORDERCNT
		        ,MAX(A.PARTNR_ID) AS PARTNR_ID
		        ,SUM(A.REQ_CNT) AS QUANTITY
		        ,SUM(A.PRICE) AS PRICE
		        ,(SUM(A.PRICE)*NVL(MAX(COMMISSION),0))/100 AS COMMISSION /**(가격 *수수료)/100*/
		        ,ROW_NUMBER() OVER(ORDER BY A.ORDER_DATE) AS RNUM
		  FROM
		  (
		         SELECT OOM.ORDER_ID
		        		 <isEqual property="searchType" compareValue="03">
	       					/* 제휴사실적_실적조회 편의점 월별 리스트 조회 */
							,TO_CHAR(OOM.ORDER_DATE,'YYYYMM') AS ORDER_DATE
						</isEqual>
	       				<isEqual property="searchType" compareValue="04">
	       					/* 제휴사실적_실적조회 편의점 일별 리스트 조회 */
							,TO_CHAR(OOM.ORDER_DATE,'YYYYMMDD') AS ORDER_DATE
						</isEqual>
		               ,OOM.PARTNR_ID
		               ,(OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC) AS PRICE
		               ,OOI.REQ_CNT
		               ,(SELECT PT.COMMISSION FROM PT_PARTNER PT WHERE PT.PARTNR_ID = OOM.PARTNR_ID) AS COMMISSION
		        FROM OD_ORDER_MAST OOM INNER JOIN OD_ORDER_ITM OOI ON OOM.ORDER_ID = OOI.ORDER_ID
		        WHERE OOM.ORDER_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.ORDER_DATE <![CDATA[<=]]>TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
		        AND NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
		        <isNotEmpty property="orderMdaDivCd">
					AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
				</isNotEmpty>
		        /**결제완료 ,주문확인, 배송준비중 ~주문완료 까지의 상태*/
		        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
		        AND OOM.PARTNR_ID =  #searchPartnerId#
		  ) A
		  GROUP BY ROLLUP(A.ORDER_DATE)
	</select>

	<!-- 제휴사실적 기프티콘 월별/일별 리스트 조회 -->
	<select id="selectPartnerGifticonList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerGifticonList **/

		SELECT
			      A.* /*AS-IS : (COUNT(DISTINCT B.PURCHASE_ID) * MAX(A.COMMISSION)) COMMISSION*/
			      ,A.ORDERCNT*NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = A.PARTNR_ID),0) AS COMMISSION /*파트너 수수료*/
			      ,ROW_NUMBER() OVER(ORDER BY A.APPR_DATE) AS RNUM
			FROM(
			  SELECT
			        A.APPR_DATE
			        ,COUNT(DISTINCT A.ORDER_ID) AS ORDERCNT    /*주문 건수 */
			        ,MAX(A.PARTNR_ID) AS PARTNR_ID    /*파트너 아이디*/
			        ,SUM(A.REQ_CNT) AS QUANTITY       /*주문 상품 총 수량*/
			        ,SUM(A.DC_APPLY_PRC+A.OPTN_GOODS_APPLY_PRC) AS PRICE   /*주문금액*/
			        ,SUM(A.SEND_PRC) AS SEND_PRC    /*배송비*/
			  FROM (
			      SELECT
			             A.ORDER_ID
			            <isEqual property="searchType" compareValue="03">
	       					/* 제휴사실적_실적조회 기프티콘 월별 리스트 조회 */
							,TO_CHAR(A.APPR_DATE,'YYYYMM') AS APPR_DATE
						</isEqual>
	       				<isEqual property="searchType" compareValue="04">
	       					/* 제휴사실적_실적조회 기프티콘 일별 리스트 조회 */
							,TO_CHAR(A.APPR_DATE,'YYYYMMDD') AS APPR_DATE
						</isEqual>
			             ,OOI.DC_APPLY_PRC
			             ,OOI.REQ_CNT
			             ,A.PARTNR_ID
			             ,OOI.OPTN_GOODS_APPLY_PRC
			             ,OOI.SEND_PRC
			      FROM (
			        SELECT
			               PPO.ORDER_ID
			               ,OOM.ORDER_DATE
			               ,OOM.APPR_DATE
			               ,OOM.PARTNR_ID
			        FROM PT_PARTNER_ORDER PPO INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID
			        WHERE OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[ <= ]]>TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			         AND OOM.PARTNR_ID = #searchPartnerId#
			         <isNotEmpty property="orderMdaDivCd">
							AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
			      ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			      WHERE  NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			      AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			      AND OOI.GIFT_ORDER_YN = 'Y'
			  ) A GROUP BY ROLLUP (A.APPR_DATE)
			) A
	</select>

	<!-- 제휴사실적 OK캐쉬백 월별/일별 리스트 조회 -->
	<select id="selectPartnerOkCashBagList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerOkCashBagList **/

			SELECT
					A.*
					,ROW_NUMBER() OVER(ORDER BY A.COMPLETE_DATE) AS RNUM
			FROM
			(
					SELECT
					       SUM(B.ORDERCNT) AS ORDERCNT
					       ,SUM(B.PRICE) AS PRICE
					       ,SUM(A.AMOUNT) AS AMOUNT
					       ,SUM(A.COMMISSION) AS COMMISSION
					       ,SUM(A.OKCASH_POINT_AMOUNT) AS OKCASH_POINT_AMOUNT
					       ,COUNT(DISTINCT B.ACCESS_NAME) AS VISITCNT
					       <isEqual property="searchType" compareValue="03">
			      				/* 제휴사실적_실적조회 OK캐쉬백 월별 리스트 조회 */
								,A.JUNG_MM AS COMPLETE_DATE
							</isEqual>
			      			<isEqual property="searchType" compareValue="04">
			      				/* 제휴사실적_실적조회 OK캐쉬백 일별 리스트 조회 */
								,A.JUNG_DATE AS COMPLETE_DATE
							</isEqual>
					  FROM (
					      SELECT OOF.ORDER_ID
					             ,OOF.AMOUNT
					             ,OOF.OKCASH_POINT_AMOUNT
					             ,OOF.OKCASH_POINT_CSF_AMOUNT AS COMMISSION
					             ,OOF.JUNG_DATE
					             ,SUBSTR(OOF.JUNG_DATE,1,6) JUNG_MM
					             ,OOF.OKCASH_POINT_SENDDATE
					        FROM OD_OKCASH_FUND OOF
					      WHERE OOF.JUNG_DATE <![CDATA[>=]]> #searchFromDt# AND OOF.JUNG_DATE <![CDATA[<=]]> #searchToDt#
					        AND OOF.SMODE = 'N011' /*N010 : 사용, N011 : 적립*/
					        AND OOF.OKCASH_POINT_AMOUNT > 0
					        AND OOF.STATUS = 'D1' /*00 : 승인완료, 01, D1 : 정산요청, D2 : 환불완료 S1 : 정산완료*/
					        AND OOF.CANCEL_YN = 'N'
					  ) A INNER JOIN (
					    SELECT OOI.ORDER_ID
					         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
					         ,1 AS ORDERCNT
					         ,MAX(OOM.ACCESS_NAME) AS ACCESS_NAME
					    FROM OD_ORDER_MAST OOM
					    INNER JOIN OD_ORDER_ITM OOI ON OOM.ORDER_ID = OOI.ORDER_ID
					    WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
					      AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
					      AND OOI.DC_APPLY_PRC >0
					      AND OOM.PARTNR_ID = #searchPartnerId#
					      	<isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 						</isNotEmpty>
					      GROUP BY OOI.ORDER_ID
					  ) B ON A.ORDER_ID = B.ORDER_ID
					  <isEqual property="searchType" compareValue="03">
		      			/* 제휴사실적_실적조회 OK캐쉬백 월별 리스트 조회 */
							GROUP BY ROLLUP(A.JUNG_MM)
						</isEqual>
		      			<isEqual property="searchType" compareValue="04">
		      			/* 제휴사실적_실적조회 OK캐쉬백 일별 리스트 조회 */
							GROUP BY ROLLUP(A.JUNG_DATE)
						</isEqual>
			) A
	</select>

	<!-- 제휴사실적_실적조회 월별 리스트 조회 우체국장터 RIS -->
	<select id="selectPartnerPartyRisList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerPartyRisList **/

			SELECT
			      B.COMPLETE_DATE	AS GUBUN
			      ,NVL(A.ORDER_CNT,0)  AS ORDERCNT    	/*주문 건수*/
			      ,NVL(A.PRICE,0)  AS PRICE         						/*판매액*/
			      ,NVL(A.GOODS_PRICE,0)    AS GOODS_PRICE
			      ,NVL(B.ACCESS_CNT,0) AS VISITCNT
			      ,0 AS FREE_PRICE
			      ,NVL(A.COMMISSION,0) AS COMMISSION
			      ,ROW_NUMBER() OVER(ORDER BY B.COMPLETE_DATE) AS RNUM
			FROM (SELECT
						    <isEqual property="searchType" compareValue="03">
				    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
								SUBSTR(CON_YMD,'1','6') AS COMPLETE_DATE
							</isEqual>
				     		<isEqual property="searchType" compareValue="04">
					     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
					     		CON_YMD AS COMPLETE_DATE
							</isEqual>
					         ,SUM(ACCESS_CNT) AS ACCESS_CNT
					         ,MAX(PARTNR_ID) AS PARTNR_ID
			        FROM PT_PARTNER_ACCESS
			        WHERE PARTNR_ID = #searchPartnerId#
			          AND CON_YMD <![CDATA[<=]]> #searchToDt#
			          AND CON_YMD >= #searchFromDt#
			        <isEqual property="searchType" compareValue="03">
		    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
						GROUP BY SUBSTR(CON_YMD,'1','6')
					</isEqual>
		     		<isEqual property="searchType" compareValue="04">
			     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
			     		GROUP BY CON_YMD
					</isEqual>
			  ) B LEFT OUTER JOIN  (
			  SELECT
			         A.COMPLETE_DATE
			        ,COUNT(DISTINCT A.ORDER_ID) ORDER_CNT      /*주문 건수*/
			        ,SUM(A.PRICE) AS PRICE           	/*판매액*/
			        ,SUM(A.PRICE) AS GOODS_PRICE     /*상품대금*/
			        ,0 AS FREE_PRICE						/**/
			        ,(SUM(A.PRICE)*MAX(COMMISSION))/100 AS COMMISSION
			        ,MAX(A.PARTNR_ID) AS PARTNR_ID
			  FROM
			  (
			      SELECT
			             A.ORDER_ID
			             ,OOI.DC_APPLY_PRC
			             ,OOI.REQ_CNT
			             ,A.PARTNR_ID
			             ,OOI.OPTN_GOODS_APPLY_PRC
			             ,OOI.SEND_PRC
			             <isEqual property="searchType" compareValue="03">
			    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
			    			<isEqual property="dateTp" compareValue="stlDate">
								,TO_CHAR(A.APPR_DATE,'YYYYMM') AS COMPLETE_DATE
							</isEqual>
							<isEqual property="dateTp" compareValue="trnDate">
								,TO_CHAR(A.ORDER_DATE,'YYYYMM') AS COMPLETE_DATE
							</isEqual>
						</isEqual>
						<isEqual property="searchType" compareValue="04">
				     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
				     		<isEqual property="dateTp" compareValue="stlDate">
								,TO_CHAR(A.APPR_DATE,'YYYYMMDD') AS COMPLETE_DATE
							</isEqual>
							<isEqual property="dateTp" compareValue="trnDate">
								,TO_CHAR(A.ORDER_DATE,'YYYYMMDD') AS COMPLETE_DATE
							</isEqual>
						</isEqual>
			             ,A.APPR_DATE
			             ,(OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC) AS PRICE
			             ,NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = A.PARTNR_ID),0) AS COMMISSION
			      FROM (
			        SELECT
			               OOM.ORDER_ID
			               ,OOM.ORDER_DATE
			               ,OOM.APPR_DATE
			               ,OOM.PARTNR_ID
			        FROM PT_PARTNER_ORDER PPO INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID
			        WHERE 1=1
			        <isEqual property="dateTp" compareValue="stlDate">
						AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
					</isEqual>
					<isEqual property="dateTp" compareValue="trnDate">
						AND OOM.ORDER_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.ORDER_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
					</isEqual>
			         AND OOM.PARTNR_ID = #searchPartnerId#
		         	<isNotEmpty property="orderMdaDivCd">
						AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
 					</isNotEmpty>
			      ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			      WHERE  OOI.GOODS_CANCEL_YN = 'N' /**상품취소여부가 N*/
			      AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			  ) A /*ON A.PARTNR_ID = B.PARTNR_ID AND A.COMPLETE_DATE = B.COMPLETE_DATE*/
			  GROUP BY A.COMPLETE_DATE
			 ) A ON A.PARTNR_ID = B.PARTNR_ID AND A.COMPLETE_DATE = B.COMPLETE_DATE
	</select>

	<!-- 제휴사실적_실적조회 LINKPRICE/ILIKECLICK/BANNER 월별,일별 전체 리스트 조회  -->
	<select id="selectPartnerEtcAllList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerEtcAllList **/

			SELECT
			      A.*
			      ,ROW_NUMBER() OVER(ORDER BY GUBUN) AS RNUM
			FROM
			(
			    SELECT
			          A.COMPLETE_DATE AS GUBUN
			          ,0 AS VISITCNT
			          ,SUM(A.PRICE) AS PRICE
			          ,SUM(A.PRICE) AS GOODS_PRICE
			          ,SUM(A.ORDERCNT) AS ORDERCNT
			          ,0 AS FREE_PRICE
			          ,SUM(A.COMMISSION) AS COMMISSION
			    FROM
			    (
			        SELECT
			              SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			              ,COUNT(*) AS ORDERCNT
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			              ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) *MAX(NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0))/100)  AS COMMISSION
			        FROM OD_LINKPRICE_SALE OLS
			          INNER JOIN OD_ORDER_MAST OOM ON OLS.PURCHASE_ID = OOM.ORDER_ID
			          INNER JOIN OD_ORDER_ITM OOI ON OOM.ORDER_ID = OOI.ORDER_ID
			         WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			           AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			           AND OOI.DC_APPLY_PRC >0
			           AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			           <isNotEmpty property="orderMdaDivCd">
							AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
			        GROUP BY OOM.ORDER_ID
			        UNION ALL
			        SELECT
			              SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			              ,COUNT(*) AS ORDERCNT
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			              ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) *MAX(NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0))/100)  AS COMMISSION
			        FROM OD_ILIKECLICK_SALE OIS
			          INNER JOIN OD_ORDER_MAST OOM ON OIS.PURCHASE_ID = OOM.ORDER_ID
			          INNER JOIN OD_ORDER_ITM OOI ON OOM.ORDER_ID = OOI.ORDER_ID
			         WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			           AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			           AND OOI.DC_APPLY_PRC >0
			           AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			          	<isNotEmpty property="orderMdaDivCd">
							AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
			        GROUP BY OOM.ORDER_ID
			        UNION ALL
			        SELECT
			              SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			              ,COUNT(*) AS ORDERCNT
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			              ,TO_DATE(MAX(OOM.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			              ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) *MAX(NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0))/100)  AS COMMISSION
			        FROM OD_BANNER_ORDER_SALE OBOS
			          INNER JOIN OD_ORDER_MAST OOM ON OBOS.PURCHASE_ID = OOM.ORDER_ID
			          INNER JOIN OD_ORDER_ITM OOI ON OOM.ORDER_ID = OOI.ORDER_ID
			         WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			           AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			           AND OOI.DC_APPLY_PRC >0
			           AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			           <isNotEmpty property="orderMdaDivCd">
							AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
			        GROUP BY OOM.ORDER_ID
			    ) A
			    <isEqual property="searchType" compareValue="03">
    			/* 제휴사실적_실적조회 월별 리스트 조회 */
				GROUP BY ROLLUP(COMPLETE_DATE)
				</isEqual>
	     		<isEqual property="searchType" compareValue="04">
	     		/* 제휴사실적_실적조회 일별 리스트 조회 */
	     		GROUP BY ROLLUP(COMPLETE_MM)
				</isEqual>
			) A
	</select>

	<!-- 제휴사실적_실적조회 우체국장터 RIS 전체 월별/일별 리스트 조회  -->
	<select id="selectPartnerRisAllList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerRisAllList **/

			SELECT
			      B.COMPLETE_DATE	AS GUBUN
			      ,NVL(A.ORDER_CNT,0)  AS ORDERCNT    	/*주문 건수*/
			      ,NVL(A.PRICE,0)  AS PRICE         						/*판매액*/
			      ,NVL(A.GOODS_PRICE,0)    AS GOODS_PRICE
			      ,NVL(B.ACCESS_CNT,0) AS VISITCNT
			      ,0 AS FREE_PRICE
			      ,NVL(A.COMMISSION,0) AS COMMISSION
			      ,ROW_NUMBER() OVER(ORDER BY B.COMPLETE_DATE) AS RNUM
			FROM (SELECT
						    <isEqual property="searchType" compareValue="03">
				    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
								SUBSTR(CON_YMD,'1','6') AS COMPLETE_DATE
							</isEqual>
				     		<isEqual property="searchType" compareValue="04">
					     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
					     		CON_YMD AS COMPLETE_DATE
							</isEqual>
					         ,SUM(ACCESS_CNT) AS ACCESS_CNT
					         ,MAX(PARTNR_ID) AS PARTNR_ID
			        FROM PT_PARTNER_ACCESS
			        WHERE PARTNR_ID = #searchPartnerType#
			          AND CON_YMD <![CDATA[<=]]> #searchToDt#
			          AND CON_YMD >= #searchFromDt#
			        <isEqual property="searchType" compareValue="03">
		    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
						GROUP BY SUBSTR(CON_YMD,'1','6')
					</isEqual>
		     		<isEqual property="searchType" compareValue="04">
			     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
			     		GROUP BY CON_YMD
					</isEqual>
			  ) B LEFT OUTER JOIN  (
			  SELECT
			         A.COMPLETE_DATE
			        ,COUNT(DISTINCT A.ORDER_ID) ORDER_CNT      /*주문 건수*/
			        ,SUM(A.PRICE) AS PRICE           	/*판매액*/
			        ,SUM(A.PRICE) AS GOODS_PRICE     /*상품대금*/
			        ,0 AS FREE_PRICE						/**/
			        ,(SUM(A.PRICE)*MAX(COMMISSION))/100 AS COMMISSION
			        ,MAX(A.PARTNR_ID) AS PARTNR_ID
			  FROM
			  (
			      SELECT
			             A.ORDER_ID
			             ,OOI.DC_APPLY_PRC
			             ,OOI.REQ_CNT
			             ,A.PARTNR_ID
			             ,OOI.OPTN_GOODS_APPLY_PRC
			             ,OOI.SEND_PRC
			             <isEqual property="searchType" compareValue="03">
			    			/* 제휴사실적_실적조회 우체국장터 RIS 월별 리스트 조회 */
			    			<isEqual property="dateTp" compareValue="stlDate">
								,TO_CHAR(A.APPR_DATE,'YYYYMM') AS COMPLETE_DATE
							</isEqual>
							<isEqual property="dateTp" compareValue="trnDate">
								,TO_CHAR(A.ORDER_DATE,'YYYYMM') AS COMPLETE_DATE
							</isEqual>
						</isEqual>
						<isEqual property="searchType" compareValue="04">
				     		/* 제휴사실적_실적조회 우체국장터 RIS 일별 리스트 조회 */
				     		<isEqual property="dateTp" compareValue="stlDate">
								,TO_CHAR(A.APPR_DATE,'YYYYMMDD') AS COMPLETE_DATE
							</isEqual>
							<isEqual property="dateTp" compareValue="trnDate">
								,TO_CHAR(A.ORDER_DATE,'YYYYMMDD') AS COMPLETE_DATE
							</isEqual>
						</isEqual>
			             ,A.APPR_DATE
			             ,(OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC) AS PRICE
			             ,NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = A.PARTNR_ID),0) AS COMMISSION
			      FROM (
			        SELECT
			               OOM.ORDER_ID
			               ,OOM.ORDER_DATE
			               ,OOM.APPR_DATE
			               ,OOM.PARTNR_ID
			        FROM PT_PARTNER_ORDER PPO INNER JOIN PT_PARTNER PP ON PPO.PARTNR_ID = PP.PARTNR_ID
			        INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID
			        WHERE 1=1
			        <isEqual property="dateTp" compareValue="stlDate">
						AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
					</isEqual>
					<isEqual property="dateTp" compareValue="trnDate">
						AND OOM.ORDER_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.ORDER_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
					</isEqual>
					<isNotEmpty property="orderMdaDivCd">
						AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
 					</isNotEmpty>
			         AND PP.PARTNER_TYPE = #searchPartnerType#
			      ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			      WHERE  OOI.GOODS_CANCEL_YN = 'N' /**상품취소여부가 N*/
			      AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			  ) A /*ON A.PARTNR_ID = B.PARTNR_ID AND A.COMPLETE_DATE = B.COMPLETE_DATE*/
			  GROUP BY A.COMPLETE_DATE
			 ) A ON A.PARTNR_ID = B.PARTNR_ID AND A.COMPLETE_DATE = B.COMPLETE_DATE
	</select>

	<!-- 제휴사실적_실적조회 월별,일별 리스트 조회 / 제휴사 전체 / 우체국장터 RIS 제외 -->
	<select id="selectPartnerAllList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerAllList **/

				SELECT
				        B.COMPLETE_DATE  AS GUBUN
				      ,NVL(A.ORDERCNT,0)  AS ORDERCNT     /*주문 건수*/
				      ,NVL(A.PRICE,0)  AS PRICE                     /*판매액*/
				      ,NVL(A.GOODS_PRICE,0)    AS GOODS_PRICE
				      ,NVL(B.ACCESS_CNT,0) AS VISITCNT
				      ,0 AS FREE_PRICE
				      ,NVL(A.COMMISSION,0) AS COMMISSION
				      ,ROW_NUMBER() OVER(ORDER BY B.COMPLETE_DATE) AS RNUM
				FROM
				(SELECT
							<isEqual property="searchType" compareValue="03">
				    			/* 제휴사실적_실적조회 제휴사 전체 월별 리스트 조회 */
								SUBSTR(CON_YMD,'1','6') AS COMPLETE_DATE
							</isEqual>
				     		<isEqual property="searchType" compareValue="04">
					     		/* 제휴사실적_실적조회 제휴사 전체 일별 리스트 조회 */
					     		CON_YMD AS COMPLETE_DATE
							</isEqual>
				         ,SUM(A.ACCESS_CNT) AS ACCESS_CNT
				         ,MAX(A.PARTNR_ID) AS PARTNR_ID
				        FROM PT_PARTNER_ACCESS A INNER JOIN PT_PARTNER B ON A.PARTNR_ID = B.PARTNR_ID
				        WHERE B.PARTNER_TYPE = #searchPartnerType#
				          AND CON_YMD <![CDATA[<=]]> #searchToDt#
				          AND CON_YMD <![CDATA[>=]]> #searchFromDt#
				        <isEqual property="searchType" compareValue="03">
			    			/* 제휴사실적_실적조회 제휴사 전체 월별 리스트 조회 */
							 GROUP BY (CON_YMD,'1','6')
						</isEqual>
			     		<isEqual property="searchType" compareValue="04">
				     		/* 제휴사실적_실적조회 제휴사 전체 일별 리스트 조회 */
				     		 GROUP BY CON_YMD
						</isEqual>
				  ) B LEFT OUTER JOIN (
				    SELECT
				            A.COMPLETE_DATE
				            ,COUNT(DISTINCT A.ORDER_ID) ORDERCNT      /*주문 건수*/
				            ,SUM(A.PRICE) AS PRICE            /*판매액*/
				            ,SUM(A.PRICE) AS GOODS_PRICE     /*상품대금*/
				            ,0 AS FREE_PRICE            /**/
				            ,FLOOR((SUM(A.PRICE)*MAX(NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = A.PARTNR_ID),0)))/100) AS COMMISSION
				            ,MAX(A.PARTNR_ID) AS PARTNR_ID
				    FROM
				    (
				        SELECT
				            A.ORDER_ID
				             ,OOI.DC_APPLY_PRC
				             ,OOI.REQ_CNT
				             ,A.PARTNR_ID
				             ,OOI.OPTN_GOODS_APPLY_PRC
				             ,OOI.SEND_PRC
				             ,A.COMPLETE_DATE
				             ,A.APPR_DATE
				             ,(OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC) AS PRICE
				        FROM
				        (
				            SELECT
				                   PPO.ORDER_ID
				                   ,PP.PARTNR_ID
				                   ,TO_CHAR(OOM.ORDER_DATE,'YYYYMM') AS COMPLETE_MM
				                   ,TO_CHAR(OOM.ORDER_DATE,'YYYYMMDD') AS COMPLETE_DATE
				                   ,OOM.APPR_DATE
				            FROM PT_PARTNER_ORDER PPO
				            INNER JOIN PT_PARTNER PP ON PPO.PARTNR_ID = PP.PARTNR_ID
				            INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID
				            WHERE OOM.ORDER_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD')-15 AND OOM.ORDER_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS') +50
				             AND PP.PARTNER_TYPE = #searchPartnerType#
				             AND OOM.APPR_DATE >=  TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]>TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			             	<isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
		 					</isNotEmpty>
				        ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
				        WHERE  NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
				        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
				    ) A GROUP BY A.COMPLETE_DATE
				) A ON B.COMPLETE_DATE = A.COMPLETE_DATE
	</select>

	<!-- 제휴사실적_실적조회 월별 리스트 조회 searchPartnerId = ic -->
	<select id="selectPartnerIlikeClickList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerIlikeClickList **/

			WITH DATA_TB AS (
			  SELECT
			        OOM.ORDER_ID
			        ,OOM.APPR_DATE
			        ,TO_CHAR(OOM.APPR_DATE, 'YYYY-MM') AS APPR_MM
			        ,OIS.BIGO3
			        ,NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0) AS COMMISSION
			  FROM OD_ILIKECLICK_SALE OIS
			  INNER JOIN OD_ORDER_MAST OOM ON OIS.PURCHASE_ID = OOM.ORDER_ID
			  WHERE 1=1
			    AND OOM.PARTNR_ID = #searchPartnerId#
			    <isNotEmpty property="orderMdaDivCd">
					AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
				</isNotEmpty>
			)
			SELECT
			        MAX(A.GBN) AS GBN
			        ,SUM(A.PRICE) AS PRICE
			        ,SUM(A.PRICE) AS GOODS_PRICE
			        ,SUM(A.ORDERCNT) AS ORDERCNT
			        <isEqual property="searchType" compareValue="03">
			   			/* 제휴사실적_실적조회 ILIKECLICK 월별 리스트 조회 */
						,A.COMPLETE_MM
						,ROW_NUMBER() OVER(ORDER BY A.COMPLETE_MM) AS RNUM
					</isEqual>
			   		<isEqual property="searchType" compareValue="04">
			     		/* 제휴사실적_실적조회 ILIKECLICK 일별 리스트 조회 */
			     		,A.COMPLETE_DATE
			     		,ROW_NUMBER() OVER(ORDER BY A.COMPLETE_DATE) AS RNUM
					</isEqual>
			        ,SUM(A.COMMISSION) AS COMMISSION
			        ,0 AS VISITCNT
			        ,0 AS FREE_PRICE
			FROM
			(
			  SELECT  'A' AS GBN /**정상적인 주문*/
			          ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			          ,COUNT(*) AS ORDERCNT
			          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			          ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			        AND OOI.DC_APPLY_PRC >0
			        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]>  TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			  GROUP BY A.ORDER_ID
			UNION ALL
			  SELECT 'B' AS GBN
			         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			         ,COUNT(*) AS ORDERCNT
			         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			        AND OOI.DC_APPLY_PRC >0
			        AND A.APPR_DATE <![CDATA[<=]]> (SELECT DECODE(MAX(CONFIRM_DAY), NULL, '', LAST_DAY(TO_CHAR(TO_DATE(MAX(CONFIRM_DAY)||'01'), 'YYYY-MM-DD')))  AS CONFIRM_DAY  /*AS-IS : 주문 승인일시 <![CDATA[<=]]> 제휴파트너 최근 정산확정월의 마지막일자 */
			                            FROM PT_PARTNER_ADJUST
			                            WHERE PARTNR_ID = #searchPartnerId#)
			        AND OOI.GOODS_CANCEL_DATE > LAST_DAY(TO_CHAR(A.APPR_DATE, 'YYYY-MM-DD')) /*AS-IS : 주문 상품 취소일자 > 주문승인월의 마지막일자 */
			        AND NVL(A.BIGO3,'N') = 'N'
			        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			  GROUP BY A.ORDER_ID
			UNION ALL
			  SELECT 'C' AS GBN
			         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*-1 AS PRICE
			         ,COUNT(*)*-1 AS ORDERCNT
			         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM') AS COMPLETE_MM
			         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100)*-1 AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'Y' /**상품취소여부가 Y */
			        /*상품취소여부가 Y 인데 주문건은 정상적인 주문 상태 건을 조회*/
			    AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			    AND OOI.DC_APPLY_PRC >0
			    AND OOI.GOODS_CANCEL_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOI.GOODS_CANCEL_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			    AND A.APPR_DATE  <![CDATA[<]]>  TO_CHAR(TRUNC(OOI.GOODS_CANCEL_DATE,'MM'),'YYYY-MM-DD') /*주문 승인일시  <![CDATA[<]]> 취소일시*/
			    AND NVL(A.BIGO3,'N') = 'N'
			    GROUP BY A.ORDER_ID
			) A
			<isEqual property="searchType" compareValue="03">
	   			/* 제휴사실적_실적조회 ILIKECLICK 월별 리스트 조회 */
				GROUP BY ROLLUP(A.COMPLETE_MM)
			</isEqual>
	   		<isEqual property="searchType" compareValue="04">
	     		/* 제휴사실적_실적조회 ILIKECLICK 일별 리스트 조회 */
	     		GROUP BY ROLLUP(A.COMPLETE_DATE)
			</isEqual>
	</select>

	<!-- 제휴사실적_실적조회 월별 리스트 조회 searchPartnerId = pl -->
	<select id="selectPartnerPlusLinkList" parameterClass ="java.util.HashMap" resultClass="commMap">
				WITH DATA_TB AS (
				  SELECT
				        OOM.ORDER_ID
				        ,OOM.APPR_DATE
				        ,TO_CHAR(OOM.APPR_DATE, 'YYYY-MM') AS APPR_MM
				        ,OBOS.BIGO3
				        ,NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0) AS COMMISSION
				  FROM OD_BANNER_ORDER_SALE OBOS
				  INNER JOIN OD_ORDER_MAST OOM ON OBOS.PURCHASE_ID = OOM.ORDER_ID
				  WHERE 1=1
				    AND OOM.PARTNR_ID = #searchPartnerId#
				    AND OBOS.GUBUN = '01'
				    <isNotEmpty property="orderMdaDivCd">
						AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
					</isNotEmpty>
				)
				SELECT
				        MAX(A.GBN) AS GBN
				        ,SUM(A.PRICE) AS PRICE
				        ,SUM(A.PRICE) AS GOODS_PRICE
				        ,SUM(A.ORDERCNT) AS ORDERCNT
				        <isEqual property="searchType" compareValue="03">
				   			/* 제휴사실적_실적조회 PLUSLINK 월별 리스트 조회 */
							,A.COMPLETE_MM
							,ROW_NUMBER() OVER(ORDER BY A.COMPLETE_MM) AS RNUM
						</isEqual>
				   		<isEqual property="searchType" compareValue="04">
				     		/* 제휴사실적_실적조회 PLUSLINK 일별 리스트 조회 */
				     		,A.COMPLETE_DATE
				     		,ROW_NUMBER() OVER(ORDER BY A.COMPLETE_DATE) AS RNUM
						</isEqual>
				        ,SUM(A.COMMISSION) AS COMMISSION
				        ,0 AS VISITCNT
				        ,0 AS FREE_PRICE
				FROM
				(
				  SELECT  'A' AS GBN /**정상적인 주문*/
				          ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
				          ,COUNT(*) AS ORDERCNT
				          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
				          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
				          ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
				  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
				  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
				        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
				        AND OOI.DC_APPLY_PRC >0
				        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]>  TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
				  GROUP BY A.ORDER_ID
				UNION ALL
				  SELECT 'B' AS GBN
				         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
				         ,COUNT(*) AS ORDERCNT
				         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
				         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
				         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
				  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
				  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
				        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
				        AND OOI.DC_APPLY_PRC >0
				        AND A.APPR_DATE <![CDATA[<=]]> (SELECT DECODE(MAX(CONFIRM_DAY), NULL, '', LAST_DAY(TO_CHAR(TO_DATE(MAX(CONFIRM_DAY)||'01'), 'YYYY-MM-DD')))  AS CONFIRM_DAY  /*AS-IS : 주문 승인일시 <![CDATA[<=]]> 제휴파트너 최근 정산확정월의 마지막일자 */
			                            FROM PT_PARTNER_ADJUST
			                            WHERE PARTNR_ID = #searchPartnerId#)
				        AND OOI.GOODS_CANCEL_DATE > LAST_DAY(TO_CHAR(A.APPR_DATE, 'YYYY-MM-DD')) /*AS-IS : 주문 상품 취소일자 > 주문승인월의 마지막일자 */
				        AND NVL(A.BIGO3,'N') = 'N'
				        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]>  TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
				  GROUP BY A.ORDER_ID
				UNION ALL
				  SELECT 'C' AS GBN
				         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*-1 AS PRICE
				         ,COUNT(*)*-1 AS ORDERCNT
				         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
				         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM') AS COMPLETE_MM
				         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100)*-1 AS COMMISSION
				  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
				  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'Y' /**상품취소여부가 Y */
				        /*상품취소여부가 Y 인데 주문건은 정상적인 주문 상태 건을 조회*/
				    AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
				    AND OOI.DC_APPLY_PRC >0
				    AND OOI.GOODS_CANCEL_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOI.GOODS_CANCEL_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			    	AND A.APPR_DATE  <![CDATA[<]]>  TO_CHAR(TRUNC(OOI.GOODS_CANCEL_DATE,'MM'),'YYYY-MM-DD') /*주문 승인일시  <![CDATA[<]]> 취소일시*/
				    AND NVL(A.BIGO3,'N') = 'N'
				    GROUP BY A.ORDER_ID
				) A
				<isEqual property="searchType" compareValue="03">
		   			/* 제휴사실적_실적조회 PLUSLINK 월별 리스트 조회 */
					GROUP BY ROLLUP(A.COMPLETE_MM)
				</isEqual>
		   		<isEqual property="searchType" compareValue="04">
		     		/* 제휴사실적_실적조회 PLUSLINK 일별 리스트 조회 */
		     		GROUP BY ROLLUP(A.COMPLETE_DATE)
				</isEqual>
	</select>

	<!-- 제휴사실적_실적조회 월별 리스트 조회 - 지방자치단체 외 다수 -->
	<select id="selectPartnerPartyMMList" parameterClass ="java.util.HashMap" resultClass="commMap">
			/** SQL_ID : selectPartnerPartyMMList **/

			SELECT
			       TO_CHAR(TO_DATE(B.COMPLETE_DATE,'YYYY-MM'),'YYYY-MM')	AS GUBUN
			      ,NVL(A.ORDERCNT,0)  AS ORDERCNT    	/*주문 건수*/
			      ,NVL(A.PRICE,0)  AS PRICE         						/*판매액*/
			      ,NVL(A.GOODS_PRICE,0)    AS GOODS_PRICE
			      ,NVL(B.ACCESS_CNT,0) AS VISITCNT
			      ,0 AS FREE_PRICE
			      ,NVL(A.COMMISSION,0) AS COMMISSION
			      ,ROW_NUMBER() OVER(ORDER BY B.COMPLETE_DATE) AS RNUM
			FROM (SELECT SUBSTR(CON_YMD,'1','6') AS COMPLETE_DATE
			         ,SUM(ACCESS_CNT) AS ACCESS_CNT
			         ,MAX(PARTNR_ID) AS PARTNR_ID
			  FROM PT_PARTNER_ACCESS
			  WHERE PARTNR_ID = #searchPartnerId#
			    AND CON_YMD <![CDATA[<=]]> #searchToDt#
			    AND CON_YMD >= #searchFromDt#
			    GROUP BY SUBSTR(CON_YMD,'1','6')) B LEFT OUTER JOIN (
			        SELECT
			               SUM(A.ORDERCNT) AS ORDERCNT
			               ,A.COMPLETE_DATE
			               ,SUM(A.PRICE) AS PRICE
			               ,SUM(A.GOODS_PRICE) AS GOODS_PRICE
			               ,FLOOR(SUM((A.PRICE*NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = #searchPartnerId#),0))/100)) AS COMMISSION
			        FROM
			            (SELECT
			                    '1' AS GBN
			                    ,COUNT(*) AS ORDERCNT
			                    ,MAX(A.APPR_DATE) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMM') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               <isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			             GROUP BY A.ORDER_ID
			            UNION ALL
			             SELECT
			                    '2' AS GBN
			                    ,COUNT(*) AS ORDERCNT
			                    ,MAX(A.APPR_DATE) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMM') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE <![CDATA[<=]]>
			               						 (SELECT DECODE(MAX(CONFIRM_DAY), NULL, '', LAST_DAY(TO_CHAR(TO_DATE(MAX(CONFIRM_DAY)||'01'), 'YYYY-MM-DD')))  AS CONFIRM_DAY /*AS-IS : 주문 승인일시 <![CDATA[<=]]> 제휴파트너 최근 정산확정월의 마지막일자 */
			                                        FROM PT_PARTNER_ADJUST
			                                        WHERE PARTNR_ID = #searchPartnerId#)
			                AND NVL(PPO.P_JUNG_CHK,'N') =  'N'
			                <isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  OOI.GOODS_CANCEL_YN = 'Y' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			               AND OOI.GOODS_CANCEL_DATE > LAST_DAY(TO_CHAR(A.APPR_DATE, 'YYYY-MM-DD')) /*AS-IS : 주문 상품 취소일자 > 주문승인월의 마지막일자 */
			             GROUP BY A.ORDER_ID
			            UNION ALL
			              SELECT
			                    '3' AS GBN
			                    ,COUNT(*)*-1 AS ORDERCNT
			                    ,MAX(TO_CHAR(OOI.GOODS_CANCEL_DATE,'YYYYMM')) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC))*-1 AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC))*-1 AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMM') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			                AND NVL(PPO.P_JUNG_CHK,'N') =  'N'
			                <isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  OOI.GOODS_CANCEL_YN = 'Y' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			               AND OOI.GOODS_CANCEL_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOI.GOODS_CANCEL_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               AND A.APPR_DATE <![CDATA[<]]> TO_CHAR(TRUNC(OOI.GOODS_CANCEL_DATE,'MM'),'YYYY-MM-DD') /*주문 승인일시 <![CDATA[<]]> 취소일시*/
			             GROUP BY A.ORDER_ID
			        ) A
			        GROUP BY A.COMPLETE_DATE
			   ) A ON A.COMPLETE_DATE = B.COMPLETE_DATE

	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 - 지방자치단체 -->
	<select id="selectPartnerPartyDDList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerPartyDDList **/
			SELECT
				       TO_DATE(B.COMPLETE_DATE,'YYYY-MM-DD')	AS GUBUN
				      ,NVL(A.ORDERCNT,0)  AS ORDERCNT    	/*주문 건수*/
				      ,NVL(A.PRICE,0)  AS PRICE         						/*판매액*/
				      ,NVL(A.GOODS_PRICE,0)    AS GOODS_PRICE
				      ,NVL(B.ACCESS_CNT,0) AS VISITCNT
				      ,0 AS FREE_PRICE
				      ,NVL(A.COMMISSION,0) AS COMMISSION
				      ,ROW_NUMBER() OVER(ORDER BY B.COMPLETE_DATE) AS RNUM
			FROM (SELECT CON_YMD AS COMPLETE_DATE
			         ,SUM(ACCESS_CNT) AS ACCESS_CNT
			         ,MAX(PARTNR_ID) AS PARTNR_ID
			  FROM PT_PARTNER_ACCESS
			  WHERE PARTNR_ID = #searchPartnerId#
			    AND CON_YMD <![CDATA[<=]]> #searchToDt#
			    AND CON_YMD >= #searchFromDt#
			    GROUP BY CON_YMD) B LEFT OUTER JOIN (
			        SELECT
			               SUM(A.ORDERCNT) AS ORDERCNT
			               ,A.COMPLETE_DATE
			               ,SUM(A.PRICE) AS PRICE
			               ,SUM(A.GOODS_PRICE) AS GOODS_PRICE
			               ,FLOOR(SUM((A.PRICE*NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = #searchPartnerId#),0))/100)) AS COMMISSION
			        FROM
			            (SELECT
			                    '1' AS GBN
			                    ,COUNT(*) AS ORDERCNT
			                    ,MAX(A.APPR_DATE) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMMDD') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               	<isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			             GROUP BY A.ORDER_ID
			            UNION ALL
			             SELECT
			                    '2' AS GBN
			                    ,COUNT(*) AS ORDERCNT
			                    ,MAX(A.APPR_DATE) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC)) AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMMDD') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOM.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               AND OOM.APPR_DATE <![CDATA[<=]]> (SELECT DECODE(MAX(CONFIRM_DAY), NULL, '', LAST_DAY(TO_CHAR(TO_DATE(MAX(CONFIRM_DAY)||'01'), 'YYYY-MM-DD')))  AS CONFIRM_DAY /*AS-IS : 주문 승인일시 <![CDATA[<=]]> 제휴파트너 최근 정산확정월의 마지막일자 */
			                                        FROM PT_PARTNER_ADJUST
			                                        WHERE PARTNR_ID = #searchPartnerId#)
			                AND NVL(PPO.P_JUNG_CHK,'N') =  'N'
			                <isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  OOI.GOODS_CANCEL_YN = 'Y' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			               AND OOI.GOODS_CANCEL_DATE > LAST_DAY(TO_CHAR(A.APPR_DATE, 'YYYY-MM-DD')) /*AS-IS : 주문 상품 취소일자 > 주문승인월의 마지막일자 */
			             GROUP BY A.ORDER_ID
			            UNION ALL
			              SELECT
			                    '3' AS GBN
			                    ,COUNT(*)*-1 AS ORDERCNT
			                    ,MAX(TO_CHAR(OOI.GOODS_CANCEL_DATE,'YYYYMMDD')) AS COMPLETE_DATE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC))*-1 AS PRICE
			                    ,SUM((OOI.DC_APPLY_PRC+OOI.OPTN_GOODS_APPLY_PRC))*-1 AS GOODS_PRICE
			             FROM
			             (SELECT
			                    OOM.ORDER_ID
			                    ,PPO.PARTNR_ID
			                    ,TO_CHAR(OOM.APPR_DATE,'YYYYMMDD') AS APPR_DATE
			             FROM PT_PARTNER_ORDER PPO
			             INNER JOIN OD_ORDER_MAST OOM ON PPO.ORDER_ID = OOM.ORDER_ID AND PPO.PARTNR_ID = OOM.PARTNR_ID
			             WHERE PPO.PARTNR_ID = #searchPartnerId#
			               AND PPO.ORDER_DATE >= TO_CHAR(TO_DATE(#searchFromDt#, 'YYYYMMDD')-15,'YYYYMMDDHH24MISS')
			               AND PPO.ORDER_DATE <![CDATA[<=]]> TO_CHAR(TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')+50,'YYYYMMDDHH24MISS')
			                AND NVL(PPO.P_JUNG_CHK,'N') =  'N'
			                <isNotEmpty property="orderMdaDivCd">
								AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
							</isNotEmpty>
			               ) A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			             WHERE  OOI.GOODS_CANCEL_YN = 'Y' /**상품취소여부가 N*/
			               AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			               AND OOI.GOODS_CANCEL_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOI.GOODS_CANCEL_DATE <![CDATA[<=]]> TO_DATE(#searchToDt#||'235959' ,'YYYYMMDDHH24MISS')
			               AND A.APPR_DATE <![CDATA[<]]> TO_CHAR(TRUNC(OOI.GOODS_CANCEL_DATE,'MM'),'YYYY-MM-DD') /*주문 승인일시 <![CDATA[<]]> 취소일시*/
			             GROUP BY A.ORDER_ID
			        ) A
			        GROUP BY A.COMPLETE_DATE
			   ) A ON A.COMPLETE_DATE = B.COMPLETE_DATE
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 62 - 지방자치단체 -->
	<select id="selectPartnerPartyDDList62" parameterClass ="java.util.HashMap" resultClass="commMap">
		select nvl(max(a.commission),0) GUBUN
	              ,NVL(MAX(b.visitcnt), 0)     VISITCNT
	              ,NVL(SUM(c.ORD_NO), 0)  AS ORDERCNT
	              ,NVL(SUM(c.TRN_AMT), 0) AS PRICE
	              ,NVL(SUM(c.TRN_AMT), 0) AS GOODS_PRICE
	              ,0 AS FREE_PRICE
	              ,nvl(SUM(c.commission),0)   commission
	    From (select max(commission) commission
	          from PARTNER
	          where partner_id   = NVL(#searchPartnerId#, partner_id)
	            and partner_type = #searchPartnerType#
	         ) a,
	         (select sum(access_cnt) visitcnt
	          from esc_partner_access a, PARTNER b
	          where b.partner_id   = NVL(#searchPartnerId#, b.partner_id)
	                and b.partner_type = #searchPartnerType#
	                and a.catgr_tp = 'GC'
	                and a.partner_id   = b.partner_id
	                and a.access_date <![CDATA[>=]]> #searchFromDt#
	                and a.access_date <![CDATA[<=]]> #searchToDt#
	         ) b,
	         (
              select sum(ORD_NO)   ORD_NO,
                    nvl(sum(TRN_AMT),0) TRN_AMT,
                    nvl(SUM(commission),0)   commission
             from (
	            SELECT to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') TRN_DATE      /* 주문일자 */
	                                  ,to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') STL_DATE      /* 결제일자 */
	                                  ,B.PARTNER_ID AS SUB_CODE                         /* 파트너ID */
	                                  ,B.NAME                                 /* 파트너명 */
	                                  ,COUNT(C.TRN_NO) ORD_NO  /* 주문건수 */
	                                  ,SUM(C.ORD_AMT) TRN_AMT  /* 판매액 */
	                                 /*  ,nvl(max(b.commission),0) GUBUN */
	                                  ,nvl(SUM(C.ORD_AMT),0)*nvl(max(b.commission),0)/100 as commission
	    			FROM ESC_ORDER A, ESC_ORDER_DET C, PARTNER B
	    			WHERE   A.PARTNER_ID = B.PARTNER_ID
	    			AND     A.ORD_NO = C.ORD_NO
	    			AND     B.PARTNER_TYPE = #searchPartnerType#
	    			AND     C.STS_CODE NOT IN ('SCR1','SCR2','SSB8','SFB8','SAB8','SFB2','SAB1','SAB2','SFB1')	/* 취소제외 */
			        <isEqual property="searchPartnerType" compareValue="09">
		      			<isEqual property="dateTp" compareValue="stlDate">
							AND A.STL_DATE BETWEEN #searchFromDt# AND #searchToDt#
							AND A.STL_FG IN ('S','P')
						</isEqual>
						<isEqual property="dateTp" compareValue="trnDate">
							AND A.TRN_DATE BETWEEN #searchFromDt# AND #searchToDt#
							AND A.STL_FG  NOT IN ('C')
						</isEqual>
					</isEqual>
					<isNotEmpty property="searchPartnerId">
						AND B.PARTNER_ID = #searchPartnerId#
					</isNotEmpty>
	    			GROUP BY to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD'),
	    							 to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD'),
	    							 B.NAME, B.PARTNER_ID
	    			)
	    		) c
        union all
		select to_number(a.access_date) GUBUN
		              ,nvl(max(a.visitcnt),0)   VISITCNT
		              ,NVL(SUM(b.ORD_NO), 0)  AS ORDERCNT
		              ,NVL(SUM(b.TRN_AMT), 0) AS PRICE
		              ,NVL(SUM(b.TRN_AMT), 0) AS GOODS_PRICE
		              ,0 AS FREE_PRICE
		              ,nvl(SUM(b.commission),0)   commission
		    from (select substr(aa.access_date,1,8) access_date,
		                 sum(aa.access_cnt) visitcnt
		              from esc_partner_access aa, PARTNER bb
		              where bb.partner_id = NVL(#searchPartnerId#, bb.partner_id)
		                    and bb.partner_type = #searchPartnerType#
		                    and aa.catgr_tp = 'GC'
		                    and aa.partner_id = bb.partner_id
		                    and aa.access_date <![CDATA[>=]]> #searchFromDt#
		                    and aa.access_date <![CDATA[<=]]> #searchToDt#
		              group by substr(aa.access_date,1,8)
		             ) a,
		        (
		        SELECT to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD') TRN_DATE      /* 주문일자 */
		              ,to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD') STL_DATE      /* 결제일자 */
		              ,B.PARTNER_ID AS PARTNER_ID                         /* 파트너ID */
		              ,B.NAME                                 /* 파트너명 */
		              ,COUNT(C.TRN_NO) ORD_NO  /* 주문건수 */
		              ,SUM(C.ORD_AMT) TRN_AMT  /* 판매액 */
		              ,nvl(max(b.commission),0) GUBUN
		              ,nvl(SUM(C.ORD_AMT),0)*nvl(max(b.commission),0)/100 as commission
		        FROM ESC_ORDER A, ESC_ORDER_DET C, PARTNER B
		        WHERE   A.PARTNER_ID = B.PARTNER_ID
		        AND     A.ORD_NO = C.ORD_NO
		        AND     B.PARTNER_TYPE = #searchPartnerType#
		        AND     C.STS_CODE NOT IN ('SCR1','SCR2','SSB8','SFB8','SAB8','SFB2','SAB1','SAB2','SFB1')	/* 취소제외 */
		        <isEqual property="searchPartnerType" compareValue="09">
	      			<isEqual property="dateTp" compareValue="stlDate">
						AND A.STL_DATE BETWEEN #searchFromDt# AND #searchToDt#
						AND A.STL_FG IN ('S','P')
					</isEqual>
					<isEqual property="dateTp" compareValue="trnDate">
						AND A.TRN_DATE BETWEEN #searchFromDt# AND #searchToDt#
						AND A.STL_FG  NOT IN ('C')
					</isEqual>
				</isEqual>
				<isNotEmpty property="searchPartnerId">
					AND B.PARTNER_ID = #searchPartnerId#
				</isNotEmpty>
		        GROUP BY to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD'),
		                                         to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD'),
		                                         B.NAME, B.PARTNER_ID
		        ) b
		        <isEqual property="searchPartnerType" compareValue="09">
	      			<isEqual property="dateTp" compareValue="stlDate">
						where a.access_date = b.STL_DATE(+)
					</isEqual>
	      			<isEqual property="dateTp" compareValue="trnDate">
	      				where a.access_date = b.TRN_DATE(+)
					</isEqual>
				</isEqual>
				<isNotEmpty property="searchPartnerId">
					AND B.PARTNER_ID = #searchPartnerId#
				</isNotEmpty>
		        group by a.access_date
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 62 - 지방자치단체 카운트조회-->
	<select id="selectPartnerPartyDDList62TotCnt" parameterClass ="java.util.HashMap" resultClass="int">
			SELECT
					COUNT(*) TOTCNT
			FROM
			(
					select nvl(max(a.commission),0) GUBUN
				              ,NVL(MAX(b.visitcnt), 0)     VISITCNT
				              ,NVL(SUM(c.ORD_NO), 0)  AS ORDERCNT
				              ,NVL(SUM(c.TRN_AMT), 0) AS PRICE
				              ,NVL(SUM(c.TRN_AMT), 0) AS GOODS_PRICE
				              ,0 AS FREE_PRICE
				              ,nvl(SUM(c.commission),0)   commission
				    From (select max(commission) commission
				          from PARTNER
				          where partner_id   = NVL(#searchPartnerId#, partner_id)
				            and partner_type = #searchPartnerType#
				         ) a,
				         (select sum(access_cnt) visitcnt
				          from esc_partner_access a, PARTNER b
				          where b.partner_id   = NVL(#searchPartnerId#, b.partner_id)
				                and b.partner_type = #searchPartnerType#
				                and a.catgr_tp = 'GC'
				                and a.partner_id   = b.partner_id
				                and a.access_date <![CDATA[>=]]> #searchFromDt#
				                and a.access_date <![CDATA[<=]]> #searchToDt#
				         ) b,
				         (
			              select sum(ORD_NO)   ORD_NO,
			                    nvl(sum(TRN_AMT),0) TRN_AMT,
			                    nvl(SUM(commission),0)   commission
			             from (
				            SELECT to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') TRN_DATE      /* 주문일자 */
				                                  ,to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') STL_DATE      /* 결제일자 */
				                                  ,B.PARTNER_ID AS SUB_CODE                         /* 파트너ID */
				                                  ,B.NAME                                 /* 파트너명 */
				                                  ,COUNT(C.TRN_NO) ORD_NO  /* 주문건수 */
				                                  ,SUM(C.ORD_AMT) TRN_AMT  /* 판매액 */
				                                 /*  ,nvl(max(b.commission),0) GUBUN */
				                                  ,nvl(SUM(C.ORD_AMT),0)*nvl(max(b.commission),0)/100 as commission
				    			FROM ESC_ORDER A, ESC_ORDER_DET C, PARTNER B
				    			WHERE   A.PARTNER_ID = B.PARTNER_ID
				    			AND     A.ORD_NO = C.ORD_NO
				    			AND     B.PARTNER_TYPE = #searchPartnerType#
				    			AND     C.STS_CODE NOT IN ('SCR1','SCR2','SSB8','SFB8','SAB8','SFB2','SAB1','SAB2','SFB1')	/* 취소제외 */
						        <isEqual property="searchPartnerType" compareValue="09">
					      			<isEqual property="dateTp" compareValue="stlDate">
										AND A.STL_DATE BETWEEN #searchFromDt# AND #searchToDt#
										AND A.STL_FG IN ('S','P')
									</isEqual>
									<isEqual property="dateTp" compareValue="trnDate">
										AND A.TRN_DATE BETWEEN #searchFromDt# AND #searchToDt#
										AND A.STL_FG  NOT IN ('C')
									</isEqual>
								</isEqual>
								<isNotEmpty property="searchPartnerId">
									AND B.PARTNER_ID = #searchPartnerId#
								</isNotEmpty>
				    			GROUP BY to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD'),
				    							 to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYY-MM-DD'),
				    							 B.NAME, B.PARTNER_ID
				    			)
				    		) c
			        union all
					select to_number(a.access_date) GUBUN
					              ,nvl(max(a.visitcnt),0)   VISITCNT
					              ,NVL(SUM(b.ORD_NO), 0)  AS ORDERCNT
					              ,NVL(SUM(b.TRN_AMT), 0) AS PRICE
					              ,NVL(SUM(b.TRN_AMT), 0) AS GOODS_PRICE
					              ,0 AS FREE_PRICE
					              ,nvl(SUM(b.commission),0)   commission
					    from (select substr(aa.access_date,1,8) access_date,
					                 sum(aa.access_cnt) visitcnt
					              from esc_partner_access aa, PARTNER bb
					              where bb.partner_id = NVL(#searchPartnerId#, bb.partner_id)
					                    and bb.partner_type = #searchPartnerType#
					                    and aa.catgr_tp = 'GC'
					                    and aa.partner_id = bb.partner_id
					                    and aa.access_date <![CDATA[>=]]> #searchFromDt#
					                    and aa.access_date <![CDATA[<=]]> #searchToDt#
					              group by substr(aa.access_date,1,8)
					             ) a,
					        (
					        SELECT to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD') TRN_DATE      /* 주문일자 */
					              ,to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD') STL_DATE      /* 결제일자 */
					              ,B.PARTNER_ID AS PARTNER_ID                         /* 파트너ID */
					              ,B.NAME                                 /* 파트너명 */
					              ,COUNT(C.TRN_NO) ORD_NO  /* 주문건수 */
					              ,SUM(C.ORD_AMT) TRN_AMT  /* 판매액 */
					              ,nvl(max(b.commission),0) GUBUN
					              ,nvl(SUM(C.ORD_AMT),0)*nvl(max(b.commission),0)/100 as commission
					        FROM ESC_ORDER A, ESC_ORDER_DET C, PARTNER B
					        WHERE   A.PARTNER_ID = B.PARTNER_ID
					        AND     A.ORD_NO = C.ORD_NO
					        AND     B.PARTNER_TYPE = #searchPartnerType#
					        AND     C.STS_CODE NOT IN ('SCR1','SCR2','SSB8','SFB8','SAB8','SFB2','SAB1','SAB2','SFB1')	/* 취소제외 */
					        <isEqual property="searchPartnerType" compareValue="09">
				      			<isEqual property="dateTp" compareValue="stlDate">
									AND A.STL_DATE BETWEEN #searchFromDt# AND #searchToDt#
									AND A.STL_FG IN ('S','P')
								</isEqual>
								<isEqual property="dateTp" compareValue="trnDate">
									AND A.TRN_DATE BETWEEN #searchFromDt# AND #searchToDt#
									AND A.STL_FG  NOT IN ('C')
								</isEqual>
							</isEqual>
							<isNotEmpty property="searchPartnerId">
								AND B.PARTNER_ID = #searchPartnerId#
							</isNotEmpty>
					        GROUP BY to_char(to_date(A.TRN_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD'),
					                                         to_char(to_date(A.STL_DATE,'YYYYMMDDHH24MISS'),'YYYYMMDD'),
					                                         B.NAME, B.PARTNER_ID
					        ) b
					        <isEqual property="searchPartnerType" compareValue="09">
				      			<isEqual property="dateTp" compareValue="stlDate">
									where a.access_date = b.STL_DATE(+)
								</isEqual>
				      			<isEqual property="dateTp" compareValue="trnDate">
				      				where a.access_date = b.TRN_DATE(+)
								</isEqual>
							</isEqual>
							<isNotEmpty property="searchPartnerId">
								AND B.PARTNER_ID = #searchPartnerId#
							</isNotEmpty>
					        group by a.access_date
		        ) A
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 21 - 지방자치단체 -->
	<select id="selectPartnerPartyDDList21" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT  nvl(a.commission,0) GUBUN,
				nvl(b.visitcnt,0)     VISITCNT,
				nvl(c.ordercnt,0)     ORDERCNT,
				nvl(c.price,0)        PRICE,
				nvl(c.goods_price,0) GOODS_PRICE,
				nvl(c.price,0) -  nvl(c.goods_price,0) FREE_PRICE,
				nvl(c.commission,0)   commission
		From (select max(commission) commission
		      from PARTNER
		      where partner_id   = NVL(#searchPartnerId#, partner_id)
		        and partner_type = #searchPartnerType#
		     ) a,
			 (select sum(access_cnt) visitcnt
			  from PARTNER_ACCESS a, PARTNER b
			  where b.partner_id   = NVL(#searchPartnerId#, b.partner_id)
				and b.partner_type = #searchPartnerType#
				and a.partner_id   = b.partner_id
				and a.access_date <![CDATA[>=]]> #searchFromDt#
				and a.access_date <![CDATA[<=]]> #searchToDt#
			 ) b,
			 (
			   select sum(ordercnt)   ordercnt,
			          sum(price)      price,
								nvl(sum(goods_price),0) GOODS_PRICE,
			          sum(commission) commission
			   from (
			          Select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
			                a.partner_id,
				              substr(b.complete_date,1,8) complete_date,
			                count(distinct a.PURCHASE_ID) ORDERCNT,
					            sum(b.amount) PRICE,
			                sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
				                                   '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount)) goods_price,
			                floor(sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
				                                         '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount))*max(c.commission)/100) COMMISSION
					  from TXORDER b, PARTNER_ORDER a ,PARTNER c
					  where a.partner_id   = NVL(#searchPartnerId#, a.partner_id)
						and c.partner_type = #searchPartnerType#
					    and a.partner_id   = c.partner_id
					    and a.purchase_id  = b.purchase_id
						and b.status in ('2','3','4','5')
						and b.cancel_state = 'N'
						and b.complete_date <![CDATA[>]]> #searchFromDt#
						and b.complete_date <![CDATA[<]]> #searchToDt#
					  group by a.partner_id,substr(b.complete_date,1,8)
			   )
			 ) c
		UNION ALL
		SELECT to_number(a.access_date) GUBUN,
			   nvl(max(a.visitcnt),0)   VISITCNT,
			   nvl(sum(b.ordercnt),0)   ORDERCNT,
			   nvl(sum(b.price),0)      PRICE,
  			 nvl(sum(b.goods_price),0) GOODS_PRICE,
  			 nvl(sum(b.price),0) - nvl(sum(b.goods_price),0) FREE_PRICE,
			   nvl(sum(b.commission),0) COMMISSION
		from (select substr(aa.access_date,1,8) access_date,
		             sum(aa.access_cnt) visitcnt
			  from PARTNER_ACCESS aa, PARTNER bb
			  where bb.partner_id = NVL(#searchPartnerId#, bb.partner_id)
				and bb.partner_type = #searchPartnerType#
				and aa.partner_id = bb.partner_id
				and aa.access_date <![CDATA[>=]]> #searchFromDt#
				and aa.access_date <![CDATA[<=]]> #searchToDt#
			  group by substr(aa.access_date,1,8)
			 ) a,
			(
			  select complete_date,
			         sum(ordercnt)   ordercnt,
			         sum(price)      price,
			 				 nvl(sum(goods_price),0) GOODS_PRICE,
			         sum(commission) commission
			  from (
				  select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				        c.partner_id,
				        substr(b.complete_date,1,8) complete_date,
				        count(distinct a.PURCHASE_ID) ORDERCNT,
				        sum(b.amount) PRICE,
			          sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
				                            '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount)) goods_price,
			          floor(sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
				                                  '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount))*max(c.commission)/100) COMMISSION
				 from TXORDER b, PARTNER_ORDER a, PARTNER c
				 where c.partner_id = NVL(#searchPartnerId#, c.partner_id)
				   and c.partner_type = #searchPartnerType#
				   and c.partner_id = a.partner_id
				   and a.purchase_id = b.purchase_id
				   and b.status in ('2','3','4','5')
				   and b.cancel_state = 'N'
				   and b.complete_date <![CDATA[>]]> #searchFromDt#
				   and b.complete_date <![CDATA[<]]> #searchToDt#
				 group by c.partner_id, substr(b.complete_date,1,8)
			 )
			 group by complete_date
			) b
		  where a.access_date = b.complete_date(+)
		  group by a.access_date
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 21 - 지방자치단체 카운트조회-->
	<select id="selectPartnerPartyDDList21TotCnt" parameterClass ="java.util.HashMap" resultClass="int">
			SELECT
					COUNT(*) TOTCNT
			FROM
			(
					SELECT  nvl(a.commission,0) GUBUN,
							nvl(b.visitcnt,0)     VISITCNT,
							nvl(c.ordercnt,0)     ORDERCNT,
							nvl(c.price,0)        PRICE,
							nvl(c.goods_price,0) GOODS_PRICE,
							nvl(c.price,0) -  nvl(c.goods_price,0) FREE_PRICE,
							nvl(c.commission,0)   commission
					From (select max(commission) commission
					      from PARTNER
					      where partner_id   = NVL(#searchPartnerId#, partner_id)
					        and partner_type = #searchPartnerType#
					     ) a,
						 (select sum(access_cnt) visitcnt
						  from PARTNER_ACCESS a, PARTNER b
						  where b.partner_id   = NVL(#searchPartnerId#, b.partner_id)
							and b.partner_type = #searchPartnerType#
							and a.partner_id   = b.partner_id
							and a.access_date <![CDATA[>=]]> #searchFromDt#
							and a.access_date <![CDATA[<=]]> #searchToDt#
						 ) b,
						 (
						   select sum(ordercnt)   ordercnt,
						          sum(price)      price,
											nvl(sum(goods_price),0) GOODS_PRICE,
						          sum(commission) commission
						   from (
						          Select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						                a.partner_id,
							              substr(b.complete_date,1,8) complete_date,
						                count(distinct a.PURCHASE_ID) ORDERCNT,
								            sum(b.amount) PRICE,
						                sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
							                                   '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount)) goods_price,
						                floor(sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
							                                         '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount))*max(c.commission)/100) COMMISSION
								  from TXORDER b, PARTNER_ORDER a ,PARTNER c
								  where a.partner_id   = NVL(#searchPartnerId#, a.partner_id)
									and c.partner_type = #searchPartnerType#
								    and a.partner_id   = c.partner_id
								    and a.purchase_id  = b.purchase_id
									and b.status in ('2','3','4','5')
									and b.cancel_state = 'N'
									and b.complete_date <![CDATA[>=]]> #searchFromDt#
									and b.complete_date <![CDATA[<=]]> #searchToDt#
								  group by a.partner_id,substr(b.complete_date,1,8)
						   )
						 ) c
					UNION ALL
					SELECT to_number(a.access_date) GUBUN,
						   nvl(max(a.visitcnt),0)   VISITCNT,
						   nvl(sum(b.ordercnt),0)   ORDERCNT,
						   nvl(sum(b.price),0)      PRICE,
			  			 nvl(sum(b.goods_price),0) GOODS_PRICE,
			  			 nvl(sum(b.price),0) - nvl(sum(b.goods_price),0) FREE_PRICE,
						   nvl(sum(b.commission),0) COMMISSION
					from (select substr(aa.access_date,1,8) access_date,
					             sum(aa.access_cnt) visitcnt
						  from PARTNER_ACCESS aa, PARTNER bb
						  where bb.partner_id = NVL(#searchPartnerId#, bb.partner_id)
							and bb.partner_type = #searchPartnerType#
							and aa.partner_id = bb.partner_id
							and aa.access_date <![CDATA[>=]]> #searchFromDt#
							and aa.access_date <![CDATA[<=]]> #searchToDt#
						  group by substr(aa.access_date,1,8)
						 ) a,
						(
						  select complete_date,
						         sum(ordercnt)   ordercnt,
						         sum(price)      price,
						 				 nvl(sum(goods_price),0) GOODS_PRICE,
						         sum(commission) commission
						  from (
							  select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							        c.partner_id,
							        substr(b.complete_date,1,8) complete_date,
							        count(distinct a.PURCHASE_ID) ORDERCNT,
							        sum(b.amount) PRICE,
						          sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
							                            '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount)) goods_price,
						          floor(sum(decode(b.shop_id,'5',nvl(b.oversea_amount,0),'6' ,nvl(b.oversea_amount,0),
							                                  '7',nvl(b.oversea_amount,0),'10',nvl(b.oversea_amount,0),b.amount))*max(c.commission)/100) COMMISSION
							 from TXORDER b, PARTNER_ORDER a, PARTNER c
							 where c.partner_id = NVL(#searchPartnerId#, c.partner_id)
							   and c.partner_type = #searchPartnerType#
							   and c.partner_id = a.partner_id
							   and a.purchase_id = b.purchase_id
							   and b.status in ('2','3','4','5')
							   and b.cancel_state = 'N'
							   and b.complete_date <![CDATA[>]]> #searchFromDt#
							   and b.complete_date <![CDATA[<]]> #searchToDt#
							 group by c.partner_id, substr(b.complete_date,1,8)
						 )
						 group by complete_date
						) b
					  where a.access_date = b.complete_date(+)
					  group by a.access_date
			  ) A
	</select>

	<!-- 제휴사실적_실적조회 월별/일별 리스트 조회 31 - linkprice -->
	<select id="selectPartnerLinkPriceList" parameterClass ="java.util.HashMap" resultClass="commMap">
		/** SQL_ID : selectPartnerLinkPriceList **/

		WITH DATA_TB AS (
			  SELECT
			        OOM.ORDER_ID
			        ,OOM.APPR_DATE
			        ,TO_CHAR(OOM.APPR_DATE, 'YYYY-MM') AS APPR_MM
			        ,OLS.BIGO3
			        ,NVL((SELECT COMMISSION FROM PT_PARTNER WHERE PARTNR_ID = OOM.PARTNR_ID),0) AS COMMISSION
			  FROM OD_LINKPRICE_SALE OLS
			  INNER JOIN OD_ORDER_MAST OOM ON OLS.PURCHASE_ID = OOM.ORDER_ID
			    AND OOM.PARTNR_ID = #searchPartnerId#
			    <isNotEmpty property="orderMdaDivCd">
					AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
				</isNotEmpty>
			)
			SELECT
			        MAX(A.GBN) AS GBN
			        ,SUM(A.PRICE) AS PRICE
			        ,SUM(A.PRICE) AS GOODS_PRICE
			        ,SUM(A.ORDERCNT) AS ORDERCNT
			        <isEqual property="searchType" compareValue="03">
			   			/* 제휴사실적_실적조회 LINKPRICE 월별 리스트 조회 */
						,A.COMPLETE_MM
					</isEqual>
			   		<isEqual property="searchType" compareValue="04">
			     		/* 제휴사실적_실적조회 LINKPRICE 일별 리스트 조회 */
			     		,A.COMPLETE_DATE
					</isEqual>
			        ,SUM(A.COMMISSION) AS COMMISSION
			        ,0 AS VISITCNT
			        ,0 AS FREE_PRICE
			FROM
			(
			  SELECT  'A' AS GBN /**정상적인 주문*/
			          ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			          ,COUNT(*) AS ORDERCNT
			          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			          ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			          ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			        AND OOI.DC_APPLY_PRC >0
			        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]>  TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			  GROUP BY A.ORDER_ID
			UNION ALL
			  SELECT 'B' AS GBN
			         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0)) AS PRICE
			         ,COUNT(*) AS ORDERCNT
			         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			         ,TO_DATE(MAX(A.APPR_DATE),'YYYY-MM') AS COMPLETE_MM
			         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100) AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'N' /**상품취소여부가 N*/
			        AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			        AND OOI.DC_APPLY_PRC >0
			        AND A.APPR_DATE <![CDATA[<=]]> (SELECT DECODE(MAX(CONFIRM_DAY), NULL, '', LAST_DAY(TO_CHAR(TO_DATE(MAX(CONFIRM_DAY)||'01'), 'YYYY-MM-DD')))  AS CONFIRM_DAY  /*AS-IS : 주문 승인일시 <![CDATA[<=]]> 제휴파트너 최근 정산확정월의 마지막일자 */
			                            FROM PT_PARTNER_ADJUST
			                            WHERE PARTNR_ID = #searchPartnerId#)
			        AND OOI.GOODS_CANCEL_DATE > LAST_DAY(TO_CHAR(A.APPR_DATE, 'YYYY-MM-DD')) /*AS-IS : 주문 상품 취소일자 > 주문승인월의 마지막일자 */
			        AND NVL(A.BIGO3,'N') = 'N'
			        AND A.APPR_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND A.APPR_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			  GROUP BY A.ORDER_ID
			UNION ALL
			  SELECT 'C' AS GBN
			         ,SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*-1 AS PRICE
			         ,COUNT(*)*-1 AS ORDERCNT
			         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM-DD') AS COMPLETE_DATE
			         ,TO_DATE(MAX(OOI.GOODS_CANCEL_DATE),'YYYY-MM') AS COMPLETE_MM
			         ,FLOOR(SUM(OOI.DC_APPLY_PRC+NVL(OOI.OPTN_GOODS_APPLY_PRC,0))*MAX(A.COMMISSION)/100)*-1 AS COMMISSION
			  FROM DATA_TB A INNER JOIN OD_ORDER_ITM OOI ON A.ORDER_ID = OOI.ORDER_ID
			  WHERE NVL(OOI.GOODS_CANCEL_YN,'N') = 'Y' /**상품취소여부가 Y */
			        /*상품취소여부가 Y 인데 주문건은 정상적인 주문 상태 건을 조회*/
			    AND OOI.ORDER_DTAIL_STUS_CD IN ('O01', 'O02', 'O03', 'O04', 'O05', 'O06', 'O07', 'O08', 'O09', 'O10', 'O11', 'O12', 'O13', 'O14', 'R01', 'R02', 'D01', 'D02', 'D03')
			    AND OOI.DC_APPLY_PRC >0
			    AND OOI.GOODS_CANCEL_DATE >= TO_DATE(#searchFromDt#, 'YYYYMMDD') AND OOI.GOODS_CANCEL_DATE <![CDATA[<=]]> TO_DATE(#searchToDt# ,'YYYYMMDDHH24MISS')
			    AND A.APPR_DATE  <![CDATA[<]]>  TO_CHAR(TRUNC(OOI.GOODS_CANCEL_DATE,'MM'),'YYYY-MM-DD') /*주문 승인일시  <![CDATA[<]]> 취소일시*/
			    AND NVL(A.BIGO3,'N') = 'N'
			    GROUP BY A.ORDER_ID
			) A
		<isEqual property="searchType" compareValue="03">
   			/* 제휴사실적_실적조회 LINKPRICE 월별 리스트 조회 */
			GROUP BY ROLLUP(A.COMPLETE_MM)
		</isEqual>
   		<isEqual property="searchType" compareValue="04">
     		/* 제휴사실적_실적조회 LINKPRICE 일별 리스트 조회 */
     		GROUP BY ROLLUP(A.COMPLETE_DATE)
		</isEqual>
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 31 - 지방자치단체 카운트조회-->
	<select id="selectPartnerPartyDDList31TotCnt" parameterClass ="java.util.HashMap" resultClass="int">
		SELECT
					COUNT(*) TOTCNT
		FROM
		(
				SELECT  nvl(a.commission,0) GUBUN,
						0                   VISITCNT,
						nvl(b.ordercnt,0)   ORDERCNT,
						nvl(b.price,0)      PRICE,
						nvl(b.price,0)      GOODS_PRICE,
						0                   FREE_PRICE,
						nvl(b.commission,0) commission
				   from (select commission
				         from PARTNER
				         where partner_id = #searchPartnerId# ) a,
				        (select sum(ordercnt) ordercnt ,sum(price) price,sum(commission) commission
						 from (
								select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
								       '1',
								       substr(b.complete_date,1,8) complete_date,
									   count(distinct a.PURCHASE_ID) ORDERCNT,
									   sum(b.amount) PRICE ,
									   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
								from TXORDER b,
									 LinkPrice_Sale a ,
									 ( select commission
									   from PARTNER
							           where partner_id = #searchPartnerId#
							         ) c
								where a.purchase_id = b.purchase_id
								  and b.status in ('2','3','4','5')
								  and b.cancel_state = 'N'
								  and b.complete_date <![CDATA[>=]]> #searchFromDt#
								  and b.complete_date <![CDATA[<=]]> #searchToDt#
								group by substr(b.complete_date,1,8)
								union all
								select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
								       '2',
								       substr(b.complete_date,1,8) complete_date,
									   count(distinct a.PURCHASE_ID) ORDERCNT,
									   sum(b.amount) PRICE,
									   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
								from TXORDER b,
									 LinkPrice_Sale a,
									 ( select commission
									   from PARTNER
							           where partner_id = #searchPartnerId#
							         ) c
								where a.purchase_id = b.purchase_id
								  and b.status in ('2','3','4','5')
								  AND b.CANCEL_STATE = 'Y'
								  and b.complete_date <![CDATA[>=]]> #searchFromDt#
								  and b.complete_date <![CDATA[<=]]> #searchToDt#
								  AND b.COMPLETE_DATE <![CDATA[<=]]> (
															SELECT max(confirm_day) || '3199999'
															FROM partner_adjust
															where partner_id = #searchPartnerId#
								                         )
								  AND b.CANCEL_DATE   <![CDATA[>]]>> substr(b.complete_date,1,6) || '31999999'
								  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
								group by substr(b.complete_date,1,8)
								union all
								select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
								       '3',
								       substr(b.cancel_date,1,8) complete_date,
									   count(distinct a.PURCHASE_ID) * -1  ORDERCNT,
									   sum(b.amount)                 * -1  PRICE ,
									   floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
								from TXORDER b,
									 LinkPrice_Sale a ,
									 ( select commission
									   from PARTNER
							           where partner_id = #searchPartnerId#
							         ) c
								where a.purchase_id = b.purchase_id
								  and b.status in ('2','3','4','5')
								  and b.cancel_state = 'Y'
								  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
								  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
								  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
								  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
								group by substr(b.cancel_date,1,8)
							)
				)b
				UNION ALL
				SELECT  to_number(a.complete_date) GUBUN,
						0 VISITCNT,
						nvl(sum(a.ordercnt),0)   ORDERCNT,
						nvl(sum(a.price),0)      PRICE,
						nvl(sum(a.price),0)      GOODS_PRICE,
						0                   FREE_PRICE,
						nvl(sum(a.commission),0) COMMISSION
				from (
						select complete_date,
						       sum(ordercnt) ordercnt ,
							   sum(price) price,
							   sum(commission) commission
						from (
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '1',substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE,
						       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 LinkPrice_Sale a,
							 ( select commission
							   from PARTNER
							   where partner_id = #searchPartnerId#
							 ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'N'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '2',substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE,
						       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 LinkPrice_Sale a,
							 ( select commission
							   from PARTNER
							   where partner_id = #searchPartnerId#
							 ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  AND b.CANCEL_STATE = 'Y'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<=]]> (
													SELECT max(confirm_day) || '3199999'
													FROM partner_adjust
													where partner_id = #searchPartnerId#
						                         )
						  AND b.CANCEL_DATE  <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '3',substr(b.cancel_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) * -1 ORDERCNT,
							   sum(b.amount) * -1 PRICE,
						       floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
						from TXORDER b,
							 LinkPrice_Sale a,
							 ( select commission
							   from PARTNER
							   where partner_id = #searchPartnerId#
							 ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'Y'
						  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
						  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.cancel_date,1,8)
						)
						group by complete_date
					) a
				group by a.complete_date
		) A
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 41 - 지방자치단체 -->
	<select id="selectPartnerPartyDDList41" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT  nvl(a.commission,0) GUBUN,
				0                   VISITCNT,
				nvl(b.ordercnt,0)   ORDERCNT,
				nvl(b.price,0)      PRICE,
				nvl(b.price,0)      GOODS_PRICE,
				0                   FREE_PRICE,
				nvl(b.commission,0) commission
		   from (select commission
		         from PARTNER
		         where partner_id = #searchPartnerId# ) a,
		        (select sum(ordercnt) ordercnt ,sum(price) price,sum(commission) commission
				 from (
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '1',
						       substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE ,
							   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 ilikeclick_sale a ,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'N'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '2',
						       substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE,
							   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 ilikeclick_sale a,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  AND b.CANCEL_STATE = 'Y'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<=]]> (
													SELECT max(confirm_day) || '3199999'
													FROM partner_adjust
													where partner_id = #searchPartnerId#
						                         )
						  AND b.CANCEL_DATE  <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '3',
						       substr(b.cancel_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) * -1  ORDERCNT,
							   sum(b.amount)                 * -1  PRICE ,
							   floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
						from TXORDER b,
							 ilikeclick_sale a ,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'Y'
						  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
						  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.cancel_date,1,8)
					)
		)b
		UNION ALL
		SELECT  to_number(a.complete_date) GUBUN,
				0 VISITCNT,
				nvl(sum(a.ordercnt),0)   ORDERCNT,
				nvl(sum(a.price),0)      PRICE,
				nvl(sum(a.price),0)      GOODS_PRICE,
				0                   FREE_PRICE,
				nvl(sum(a.commission),0) COMMISSION
		from (
				select complete_date,
				       sum(ordercnt) ordercnt ,
					   sum(price) price,
					   sum(commission) commission
				from (
				select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				       '1',substr(b.complete_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) ORDERCNT,
					   sum(b.amount) PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
				from TXORDER b,
					 ilikeclick_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and b.status in ('2','3','4','5')
				  and b.cancel_state = 'N'
				  and b.complete_date <![CDATA[>=]]> #searchFromDt#
				  and b.complete_date <![CDATA[<=]]> #searchToDt#
				group by substr(b.complete_date,1,8)
				union all
				select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				       '2',substr(b.complete_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) ORDERCNT,
					   sum(b.amount) PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
				from TXORDER b,
					 ilikeclick_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and b.status in ('2','3','4','5')
				  AND b.CANCEL_STATE = 'Y'
				  and b.complete_date <![CDATA[>=]]> #searchFromDt#
				  and b.complete_date <![CDATA[<=]]> #searchToDt#
				  AND b.COMPLETE_DATE <![CDATA[<=]]> (
											SELECT max(confirm_day) || '3199999'
											FROM partner_adjust
											where partner_id = #searchPartnerId#
				                         )
				  AND b.CANCEL_DATE  <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
				  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
				group by substr(b.complete_date,1,8)
				union all
				select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				       '3',substr(b.cancel_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) * -1 ORDERCNT,
					   sum(b.amount) * -1 PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
				from TXORDER b,
					 ilikeclick_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and b.status in ('2','3','4','5')
				  and b.cancel_state = 'Y'
				  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
				  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
				  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
				  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
				group by substr(b.cancel_date,1,8)
				)
				group by complete_date
			) a
		group by a.complete_date
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 41 - 지방자치단체 카운트조회-->
	<select id="selectPartnerPartyDDList41TotCnt" parameterClass ="java.util.HashMap" resultClass="int">
			SELECT
					COUNT(*) TOTCNT
			FROM
			(
					SELECT  nvl(a.commission,0) GUBUN,
							0                   VISITCNT,
							nvl(b.ordercnt,0)   ORDERCNT,
							nvl(b.price,0)      PRICE,
							nvl(b.price,0)      GOODS_PRICE,
							0                   FREE_PRICE,
							nvl(b.commission,0) commission
					   from (select commission
					         from PARTNER
					         where partner_id = #searchPartnerId# ) a,
					        (select sum(ordercnt) ordercnt ,sum(price) price,sum(commission) commission
							 from (
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '1',
									       substr(b.complete_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) ORDERCNT,
										   sum(b.amount) PRICE ,
										   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
									from TXORDER b,
										 ilikeclick_sale a ,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and b.status in ('2','3','4','5')
									  and b.cancel_state = 'N'
									  and b.complete_date <![CDATA[>=]]> #searchFromDt#
									  and b.complete_date <![CDATA[<=]]> #searchToDt#
									group by substr(b.complete_date,1,8)
									union all
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '2',
									       substr(b.complete_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) ORDERCNT,
										   sum(b.amount) PRICE,
										   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
									from TXORDER b,
										 ilikeclick_sale a,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and b.status in ('2','3','4','5')
									  AND b.CANCEL_STATE = 'Y'
									  and b.complete_date <![CDATA[>=]]> #searchFromDt#
									  and b.complete_date <![CDATA[<=]]> #searchToDt#
									  AND b.COMPLETE_DATE <![CDATA[<=]]> (
																SELECT max(confirm_day) || '3199999'
																FROM partner_adjust
																where partner_id = #searchPartnerId#
									                         )
									  AND b.CANCEL_DATE  <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
									  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
									group by substr(b.complete_date,1,8)
									union all
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '3',
									       substr(b.cancel_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) * -1  ORDERCNT,
										   sum(b.amount)                 * -1  PRICE ,
										   floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
									from TXORDER b,
										 ilikeclick_sale a ,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and b.status in ('2','3','4','5')
									  and b.cancel_state = 'Y'
									  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
									  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
									  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
									  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
									group by substr(b.cancel_date,1,8)
								)
					)b
					UNION ALL
					SELECT  to_number(a.complete_date) GUBUN,
							0 VISITCNT,
							nvl(sum(a.ordercnt),0)   ORDERCNT,
							nvl(sum(a.price),0)      PRICE,
							nvl(sum(a.price),0)      GOODS_PRICE,
							0                   FREE_PRICE,
							nvl(sum(a.commission),0) COMMISSION
					from (
							select complete_date,
							       sum(ordercnt) ordercnt ,
								   sum(price) price,
								   sum(commission) commission
							from (
							select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							       '1',substr(b.complete_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) ORDERCNT,
								   sum(b.amount) PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
							from TXORDER b,
								 ilikeclick_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and b.status in ('2','3','4','5')
							  and b.cancel_state = 'N'
							  and b.complete_date <![CDATA[>=]]> #searchFromDt#
							  and b.complete_date <![CDATA[<=]]> #searchToDt#
							group by substr(b.complete_date,1,8)
							union all
							select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							       '2',substr(b.complete_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) ORDERCNT,
								   sum(b.amount) PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
							from TXORDER b,
								 ilikeclick_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and b.status in ('2','3','4','5')
							  AND b.CANCEL_STATE = 'Y'
							  and b.complete_date <![CDATA[>=]]> #searchFromDt#
							  and b.complete_date <![CDATA[<=]]> #searchToDt#
							  AND b.COMPLETE_DATE <![CDATA[<=]]> (
														SELECT max(confirm_day) || '3199999'
														FROM partner_adjust
														where partner_id = #searchPartnerId#
							                         )
							  AND b.CANCEL_DATE  <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
							  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
							group by substr(b.complete_date,1,8)
							union all
							select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							       '3',substr(b.cancel_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) * -1 ORDERCNT,
								   sum(b.amount) * -1 PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
							from TXORDER b,
								 ilikeclick_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and b.status in ('2','3','4','5')
							  and b.cancel_state = 'Y'
							  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
							  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
							  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
							  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
							group by substr(b.cancel_date,1,8)
							)
							group by complete_date
						) a
					group by a.complete_date
				) A
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 51 - 지방자치단체 -->
	<select id="selectPartnerPartyDDList51" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT  nvl(a.commission,0) GUBUN,
				0                   VISITCNT,
				nvl(b.ordercnt,0)   ORDERCNT,
				nvl(b.price,0)      PRICE,
				nvl(b.price,0)      GOODS_PRICE,
				0                   FREE_PRICE,
				nvl(b.commission,0) commission
		   from (select commission
		         from PARTNER
		         where partner_id = #searchPartnerId# ) a,
		        (select sum(ordercnt) ordercnt ,sum(price) price,sum(commission) commission
				 from (
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '1',
						       substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE ,
							   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 banner_order_sale a ,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and a.gubun       = '01'
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'N'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '2',
						       substr(b.complete_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) ORDERCNT,
							   sum(b.amount) PRICE,
							   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
						from TXORDER b,
							 banner_order_sale a,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and a.gubun       = '01'
						  and b.status in ('2','3','4','5')
						  AND b.CANCEL_STATE = 'Y'
						  and b.complete_date <![CDATA[>=]]> #searchFromDt#
						  and b.complete_date <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<=]]> (
													SELECT max(confirm_day) || '3199999'
													FROM partner_adjust
													where partner_id = #searchPartnerId#
						                         )
						  AND b.CANCEL_DATE <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.complete_date,1,8)
						union all
						select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
						       '3',
						       substr(b.cancel_date,1,8) complete_date,
							   count(distinct a.PURCHASE_ID) * -1  ORDERCNT,
							   sum(b.amount)                 * -1  PRICE ,
							   floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
						from TXORDER b,
							 banner_order_sale a ,
							 ( select commission
							   from PARTNER
					           where partner_id = #searchPartnerId#
					         ) c
						where a.purchase_id = b.purchase_id
						  and a.gubun       = '01'
						  and b.status in ('2','3','4','5')
						  and b.cancel_state = 'Y'
						  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
						  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
						  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
						  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
						group by substr(b.cancel_date,1,8)
					)
		)b
		UNION ALL
		SELECT  to_number(a.complete_date) GUBUN,
				0 VISITCNT,
				nvl(sum(a.ordercnt),0)   ORDERCNT,
				nvl(sum(a.price),0)      PRICE,
				nvl(sum(a.price),0)      GOODS_PRICE,
				0                   FREE_PRICE,
				nvl(sum(a.commission),0) COMMISSION
		from (
				select complete_date,
				       sum(ordercnt) ordercnt ,
					   sum(price) price,
					   sum(commission) commission
				from (
				select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				       '1',substr(b.complete_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) ORDERCNT,
					   sum(b.amount) PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
				from TXORDER b,
					 banner_order_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and a.gubun       = '01'
				  and b.status in ('2','3','4','5')
				  and b.cancel_state = 'N'
				  and b.complete_date <![CDATA[>=]]> #searchFromDt#
				  and b.complete_date <![CDATA[<=]]> #searchToDt#
				group by substr(b.complete_date,1,8)
				union all
				select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
				       '2',substr(b.complete_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) ORDERCNT,
					   sum(b.amount) PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
				from TXORDER b,
					 banner_order_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and a.gubun       = '01'
				  and b.status in ('2','3','4','5')
				  AND b.CANCEL_STATE = 'Y'
				  and b.complete_date <![CDATA[>=]]> #searchFromDt#
				  and b.complete_date <![CDATA[<=]]> #searchToDt#
				  AND b.COMPLETE_DATE <![CDATA[<=]]> (
											SELECT max(confirm_day) || '3199999'
											FROM partner_adjust
											where partner_id = #searchPartnerId#
				                         )
				  AND b.CANCEL_DATE   <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
				  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
				group by substr(b.complete_date,1,8)
				union all
				select /*+ USE_HASH (b a)  INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 )  */
				       '3',substr(b.cancel_date,1,8) complete_date,
					   count(distinct a.PURCHASE_ID) * -1 ORDERCNT,
					   sum(b.amount) * -1 PRICE,
				       floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
				from TXORDER b,
					 banner_order_sale a,
					 ( select commission
					   from PARTNER
					   where partner_id = #searchPartnerId#
					 ) c
				where a.purchase_id = b.purchase_id
				  and a.gubun       = '01'
				  and b.status in ('2','3','4','5')
				  and b.cancel_state = 'Y'
				  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
				  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
				  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
				  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
				group by substr(b.cancel_date,1,8)
				)
				group by complete_date
			) a
		group by a.complete_date
	</select>

	<!-- 제휴사실적_실적조회 일별 리스트 조회 51 - 지방자치단체 카운트조회-->
	<select id="selectPartnerPartyDDList51TotCnt" parameterClass ="java.util.HashMap" resultClass="int">
		SELECT
					COUNT(*) TOTCNT
		FROM
		(
					SELECT  nvl(a.commission,0) GUBUN,
							0                   VISITCNT,
							nvl(b.ordercnt,0)   ORDERCNT,
							nvl(b.price,0)      PRICE,
							nvl(b.price,0)      GOODS_PRICE,
							0                   FREE_PRICE,
							nvl(b.commission,0) commission
					   from (select commission
					         from PARTNER
					         where partner_id = #searchPartnerId# ) a,
					        (select sum(ordercnt) ordercnt ,sum(price) price,sum(commission) commission
							 from (
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '1',
									       substr(b.complete_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) ORDERCNT,
										   sum(b.amount) PRICE ,
										   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
									from TXORDER b,
										 banner_order_sale a ,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and a.gubun       = '01'
									  and b.status in ('2','3','4','5')
									  and b.cancel_state = 'N'
									  and b.complete_date <![CDATA[>=]]> #searchFromDt#
									  and b.complete_date <![CDATA[<=]]> #searchToDt#
									group by substr(b.complete_date,1,8)
									union all
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '2',
									       substr(b.complete_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) ORDERCNT,
										   sum(b.amount) PRICE,
										   floor(sum(b.amount)*max(c.commission)/100) COMMISSION
									from TXORDER b,
										 banner_order_sale a,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and a.gubun       = '01'
									  and b.status in ('2','3','4','5')
									  AND b.CANCEL_STATE = 'Y'
									  and b.complete_date <![CDATA[>=]]> #searchFromDt#
									  and b.complete_date <![CDATA[<=]]> #searchToDt#
									  AND b.COMPLETE_DATE <![CDATA[<=]]> (
																SELECT max(confirm_day) || '3199999'
																FROM partner_adjust
																where partner_id = #searchPartnerId#
									                         )
									  AND b.CANCEL_DATE <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
									  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
									group by substr(b.complete_date,1,8)
									union all
									select /*+ USE_HASH (b a) INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
									       '3',
									       substr(b.cancel_date,1,8) complete_date,
										   count(distinct a.PURCHASE_ID) * -1  ORDERCNT,
										   sum(b.amount)                 * -1  PRICE ,
										   floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
									from TXORDER b,
										 banner_order_sale a ,
										 ( select commission
										   from PARTNER
								           where partner_id = #searchPartnerId#
								         ) c
									where a.purchase_id = b.purchase_id
									  and a.gubun       = '01'
									  and b.status in ('2','3','4','5')
									  and b.cancel_state = 'Y'
									  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
									  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
									  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
									  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
									group by substr(b.cancel_date,1,8)
								)
					)b
					UNION ALL
					SELECT  to_number(a.complete_date) GUBUN,
							0 VISITCNT,
							nvl(sum(a.ordercnt),0)   ORDERCNT,
							nvl(sum(a.price),0)      PRICE,
							nvl(sum(a.price),0)      GOODS_PRICE,
							0                   FREE_PRICE,
							nvl(sum(a.commission),0) COMMISSION
					from (
							select complete_date,
							       sum(ordercnt) ordercnt ,
								   sum(price) price,
								   sum(commission) commission
							from (
							select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							       '1',substr(b.complete_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) ORDERCNT,
								   sum(b.amount) PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
							from TXORDER b,
								 banner_order_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and a.gubun       = '01'
							  and b.status in ('2','3','4','5')
							  and b.cancel_state = 'N'
							  and b.complete_date <![CDATA[>=]]> #searchFromDt#
							  and b.complete_date <![CDATA[<=]]> #searchToDt#
							group by substr(b.complete_date,1,8)
							union all
							select /*+ USE_HASH (b a) INDEX (b TXORDER_IX10 ) INDEX (a IDX_PARTNER_ORDER_01 ) */
							       '2',substr(b.complete_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) ORDERCNT,
								   sum(b.amount) PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) COMMISSION
							from TXORDER b,
								 banner_order_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and a.gubun       = '01'
							  and b.status in ('2','3','4','5')
							  AND b.CANCEL_STATE = 'Y'
							  and b.complete_date <![CDATA[>=]]> #searchFromDt#
							  and b.complete_date <![CDATA[<=]]> #searchToDt#
							  AND b.COMPLETE_DATE <![CDATA[<=]]> (
														SELECT max(confirm_day) || '3199999'
														FROM partner_adjust
														where partner_id = #searchPartnerId#
							                         )
							  AND b.CANCEL_DATE   <![CDATA[>]]> substr(b.complete_date,1,6) || '31999999'
							  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
							group by substr(b.complete_date,1,8)
							union all
							select /*+ USE_HASH (b a)  INDEX (b TXORDER_IX13 ) INDEX (a IDX_PARTNER_ORDER_01 )  */
							       '3',substr(b.cancel_date,1,8) complete_date,
								   count(distinct a.PURCHASE_ID) * -1 ORDERCNT,
								   sum(b.amount) * -1 PRICE,
							       floor(sum(b.amount)*max(c.commission)/100) * -1 COMMISSION
							from TXORDER b,
								 banner_order_sale a,
								 ( select commission
								   from PARTNER
								   where partner_id = #searchPartnerId#
								 ) c
							where a.purchase_id = b.purchase_id
							  and a.gubun       = '01'
							  and b.status in ('2','3','4','5')
							  and b.cancel_state = 'Y'
							  and b.CANCEL_DATE <![CDATA[>=]]> #searchFromDt#
							  AND b.CANCEL_DATE <![CDATA[<=]]> #searchToDt#
							  AND b.COMPLETE_DATE <![CDATA[<]]> substr(b.CANCEL_DATE,1,6) || '01'
							  AND nvl(A.bigo3,'N') <![CDATA[<>]]> 'Y'
							group by substr(b.cancel_date,1,8)
							)
							group by complete_date
						) a
					group by a.complete_date
			) A
	</select>

	<!-- 제휴사관리 상세조회 -->
	<select id="selectPartnerMgrInfo" parameterClass ="java.util.HashMap" resultClass="commMap">
	<![CDATA[
	SELECT PARTNR_ID
		 , 'TmaEAZx+w7oRPl4ay69bZw==' AS PASSWD
		 , PARTNER_TYPE
		 , NAME
		 , BOSS_NAME
		 , SITE_URL
		 , REGNO
		 , ZIPCODE
		 , ZIPCODE_AREACD_TEMP
		 , CASE WHEN LENGTH(ZIPCODE) = 5 THEN ZIPCODE
	            WHEN LENGTH(ZIPCODE) = 6 THEN SUBSTR(ZIPCODE, 1, 3) || '-' || SUBSTR(ZIPCODE, 4)
		        ELSE ZIPCODE END AS ZIPCODE1
		 , ADDRESS1
		 , ADDRESS2
		 , ADDR_TYPE
		 , BANK_NAME
		 , ACC_SEED_NO ACC_NO
		 , ACC_NAME
		 , COMMISSION
		 , CHARGE_NAME
		 , CHARGE_TELNO
		 , CHARGE_MOBILE
		 , CHARGE_EMAIL
		 , REG_YEAR
		 , MEMBER_CNT
		 , DAILY_VISIT
		 , MEMBERSHIP_YN
		 , SITEINFO
		 , LINK_ID
		 , JUNG_DAY
		 , TAX_CHK
		 , TOP_URL
		 , TOP_FRAME_SIZE
		 , COMMISSION_GBN
	  FROM PT_PARTNER
	 WHERE PARTNR_ID = #searchPartnerId#
	   AND DELETE_DATE IS NULL
	]]>
	</select>

	<!-- 제휴사관리 등록 -->
	<insert id="registPartnerMgr" parameterClass="java.util.HashMap">
	<![CDATA[
	INSERT INTO PT_PARTNER (
						  PARTNR_ID
						, PASSWD
						, PARTNER_TYPE
						, NAME
						, BOSS_NAME
						, SITE_URL
						, REGNO
						, ZIPCODE
						, ADDRESS1
						, ADDRESS2
						, BANK_NAME
						, ACC_SEED_NO
						, ACC_NAME
						, COMMISSION
						, CHARGE_NAME
						, CHARGE_TELNO
						, CHARGE_MOBILE
						, CHARGE_EMAIL
						, REG_YEAR
						, MEMBER_CNT
						, DAILY_VISIT
						, MEMBERSHIP_YN
						, SITEINFO
						, LINK_ID
						, CNTR_SDATE
						, CNTR_EDATE
						, CREATE_DATE
						, PROCESS_ID
						, JUNG_DAY
						, TAX_CHK
						, TOP_URL
						, TOP_FRAME_SIZE
						, ADDR_TYPE
						, COMMISSION_GBN
			) VALUES (
						  #searchPartnerId#
						, #searchPasswd#
						, #searchPartnerType#
						, #searchName#
						, #searchBossName#
						, #searchSiteUrl#
						, #searchRegno#
						, #searchZipcode#
						, #searchAddress1#
						, #searchAddress2#
						, #searchBankName#
						, #searchAccSeedNo#
						, #searchAccName#
						, #searchCommission#
						, #searchChargeName#
						, #searchChargeTelno#
						, #searchChargeMobile#
						, #searchChargeEmail#
						, #searchRegYear#
						, #searchMemberCnt#
						, #searchDailyVisit#
						, #searchMembershipYn#
						, #searchSiteinfo#
						, #searchLinkId#
						, TO_CHAR(SYSDATE,'yyyymmdd')
						, '99999999'
						, TO_CHAR (SYSDATE, 'yyyymmdd')
						, #searchProcessId#
						, #searchJungDay#
						, #searchTaxChk#
						, #searchTopUrl#
						, #searchTopFrameSize#
						, #searchAddrType#
						, #searchCommissionGbn#
			)
	]]>
	</insert>

	<!-- 제휴사관리 수정 -->
	<update id="modifyPartnerMgr" parameterClass="java.util.HashMap">
	<![CDATA[
	UPDATE PT_PARTNER
	   SET PARTNER_TYPE   = #searchPartnerType#,
	       NAME           = #searchName#,
	       BOSS_NAME      = #searchBossName#,
	       SITE_URL       = #searchSiteUrl#,
	       REGNO          = #searchRegno#,
	       ZIPCODE        = #searchZipcode#,
	       ADDRESS1       = #searchAddress1#,
	       ADDRESS2       = #searchAddress2#,
	       BANK_NAME      = #searchBankName#,
	       ACC_SEED_NO    = #searchAccSeedNo#,
	       ACC_NAME       = #searchAccName#,
	       COMMISSION     = #searchCommission#,
	       CHARGE_NAME    = #searchChargeName#,
	       CHARGE_TELNO   = #searchChargeTelno#,
	       CHARGE_MOBILE  = #searchChargeMobile#,
	       CHARGE_EMAIL   = #searchChargeEmail#,
	       REG_YEAR       = #searchRegYear#,
	       MEMBER_CNT     = #searchMemberCnt#,
	       DAILY_VISIT    = #searchDailyVisit#,
	       MEMBERSHIP_YN  = #searchMembershipYn#,
	       SITEINFO       = #searchSiteinfo#,
	       LINK_ID        = #searchLinkId#,
	       JUNG_DAY       = #searchJungDay#,
	       TAX_CHK        = #searchTaxChk#,
	       MODIFY_DATE    = TO_CHAR(SYSDATE, 'YYYYMMDD'),
	       PROCESS_ID     = #searchProcessId#,
	       TOP_URL        = #searchTopUrl#,
	       TOP_FRAME_SIZE = #searchTopFrameSize#,
	       ADDR_TYPE      = #searchAddrType#,
	       COMMISSION_GBN = #searchCommissionGbn#
	]]>
    <isNotEmpty property="searchPasswd">
    	<isNotEqual prepend="," property="searchPasswd" compareValue="****">
    		<![CDATA[ PASSWD  = #searchPasswd#	]]>
    	</isNotEqual>
    </isNotEmpty>

	<![CDATA[
	 WHERE PARTNR_ID 	  = #searchPartnerId#
	]]>
	</update>

	<!-- 제휴사관리 삭제 -->
	<update id="deletePartnerMgr" parameterClass="java.util.HashMap">
		UPDATE PT_PARTNER
		SET    DELETE_DATE  = TO_CHAR(sysdate,'yyyymmdd'),
			   PROCESS_ID   = #searchProcessId#
		WHERE  PARTNR_ID 	= #searchPartnerId#
	</update>

	<!-- 제휴사관리 TOP_URL 등록 -->
	<insert id="registCreateMallTopUrl" parameterClass="java.util.HashMap">
	<![CDATA[
	INSERT INTO PT_PARTNER_MALL(
							  PARTNR_ID
							, HEADER
							, HEADER_URL
					) VALUES (
							  #searchPartnerId#
							, 'P'
							, #searchTopUrl#)
	]]>
	</insert>

	<!-- 제휴사관리 TOP_URL 수정 -->
	<update id="modifyCreateMallTopUrl" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE PT_PARTNER_MALL
		SET    HEADER 		= 'P'
			 , HEADER_URL 	= #searchTopUrl#
		WHERE  PARTNR_ID 	= #searchPartnerId#
	]]>
	</update>


	<!-- 제휴사관리 몰인몰생성 카테고리 리스트 -->
	<select id="selectCategoryList" parameterClass ="java.util.HashMap" resultClass="commMap">
		SELECT CATEGORY_CODE
		     , CATEGORY_NAME
			 , ETC
		  FROM GOODS_CATEGORY
		 WHERE LANGUAGE    	= 'KO'
		   AND DEPTH 		= #searchDepth#
		   AND DELETE_DATE > TO_CHAR(SYSDATE,'yyyymmdd')

		<isEqual property="searchDepth" compareValue="0">
			AND ( CATEGORY_CODE = '100000' OR CATEGORY_CODE = '200000')
		</isEqual>

		<isNotEqual property="searchDepth" compareValue="0">
			AND (ETC = '60' OR SUBSTR(CATEGORY_CODE, 1, 1) = '2')
		</isNotEqual>
	</select>

	<!-- 제휴사관리 몰인몰생성 제휴전문몰 정보 -->
	<select id="selectCreateMall" parameterClass ="java.util.HashMap" resultClass="commMap">
	<![CDATA[
		SELECT PARTNR_ID
		     , HEADER
			 , HEADER_URL
			 , PAY_METHOD
			 , MILEAGE_ADD_YN
			 , MILEAGE_ADD
			 , LINK_URL
			 , ETC
		 FROM PT_PARTNER_MALL
		WHERE PARTNR_ID = #searchPartnerId#
		]]>
	</select>

	<!-- 제휴사관리 몰인몰생성 선택 카테고리 리스트 -->
	<select id="selectSelectedCategoryList" parameterClass ="java.util.HashMap" resultClass="commMap">
	<![CDATA[
		SELECT PARTNR_ID
			 , CATEGORY_CODE
		  FROM PT_PARTNER_MALL_CATE
		 WHERE PARTNR_ID = #searchPartnerId#
	]]>
	</select>

	<!--제휴몰정보 등록-->
	<insert id="registCreateMall" parameterClass="java.util.HashMap">
	<![CDATA[
	INSERT INTO PT_PARTNER_MALL(
		  PARTNR_ID
		, HEADER
		, HEADER_URL
		, PAY_METHOD
		, MILEAGE_ADD_YN
		, MILEAGE_ADD
		, LINK_URL
		, ETC
		, REG_DATE
		, MOD_DATE
		, ACCESS_NAME

	)VALUES(
		  #searchPartnerId#
		, #searchHeader#
		, #searchHeaderUrl#
		, #searchPayMethod#
		, #searchMileageAddYn#
		, #searchMileageAdd#
		, #searchLinkUrl#
		, #searchEtc#
		, TO_CHAR(sysdate, 'YYYYMMDD')
		, null
		, #searchAccessName#
	)
	]]>
	</insert>

	<!--제휴몰정보 수정-->
	<update id="modifyCreateMall" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE PT_PARTNER_MALL
		SET    HEADER         = #searchHeader#
			 , HEADER_URL     = #searchHeaderUrl#
			 , PAY_METHOD     = #searchPayMethod#
			 , MILEAGE_ADD_YN = #searchMileageAddyn#
			 , MILEAGE_ADD    = #searchMileageAdd#
			 , LINK_URL       = #searchLinkUrl#
			 , ETC            = #searchEtc#
			 , MOD_DATE       = TO_CHAR(sysdate,'yyyymmdd')
			 , ACCESS_NAME    = #searchAccessName#
		WHERE  PARTNR_ID     = #searchPartnerId#
	]]>
	</update>

	<!-- 제휴몰 링크 접속건수 카운트 증가 -->
	<update id="updatePartnerAccess" parameterClass="com.devwork.common.util.CommandMap">
	<![CDATA[

				MERGE INTO PT_PARTNER_ACCESS A
				USING (SELECT A.LINK_ID
				             ,NVL(B.ACCESS_CNT, 0)
				             ,B.PARTNR_ID
				         FROM PT_PARTNER        A
				             ,PT_PARTNER_ACCESS B
				        WHERE A.PARTNR_ID = #partner_id#
				          AND A.DELETE_DATE IS NULL
				          AND A.PARTNR_ID = B.PARTNR_ID(+)
				          AND B.CON_YMD(+) = TO_CHAR(SYSDATE, 'yyyymmdd')) B
				ON (A.PARTNR_ID = B.PARTNR_ID)
				WHEN MATCHED THEN
				  UPDATE
				     SET ACCESS_CNT = ACCESS_CNT + 1
				   WHERE PARTNR_ID = #partner_id#
				     AND CON_YMD = TO_CHAR(SYSDATE, 'yyyymmdd')
				WHEN NOT MATCHED THEN
				  INSERT VALUES
				    (#partner_id#
				    ,TO_CHAR(SYSDATE, 'yyyymmdd')
				    ,1)
    ]]>
	</update>

	<!-- 제휴몰 상품 접속횟수 카운트 -->
	<update id="updatePartnerGoodsView" parameterClass="com.devwork.common.util.CommandMap">
	<![CDATA[

				MERGE INTO PT_PARTNER_GOODS_VIEW A
				USING (SELECT #partner_id# AS PARTNR_ID
				             ,#GoodsIdn# AS GOODS_IDN
				         FROM DUAL) B
				ON (A.PARTNR_ID = B.PARTNR_ID AND A.GOODS_IDN = B.GOODS_IDN)
				WHEN MATCHED THEN
				  UPDATE
				     SET ACCESS_CNT = NVL(ACCESS_CNT, 0) + 1
				   WHERE ACCESS_DATE = TO_CHAR(SYSDATE, 'yyyymmdd')
				     AND PARTNR_ID = #partner_id#
				     AND GOODS_IDN = #GoodsIdn#
				WHEN NOT MATCHED THEN
				  INSERT VALUES
				    (TO_CHAR(SYSDATE, 'yyyymmdd')
				    ,#partner_id#
				    ,#GoodsIdn#
				    ,1)
    ]]>
	</update>

	<!-- 제휴몰 등록수정 -->
	<insert id="registMgrCreateMall" parameterClass="java.util.HashMap">
		<![CDATA[
			MERGE INTO PT_PARTNER_MALL a
				USING DUAL ON (a.partnr_id = #searchPartnerId#)
				WHEN MATCHED THEN
					UPDATE SET
						pay_method     = #payMethod#,
						link_url       = #searchTopUrl#,
						etc            = #searchSiteinfo#,
						mod_date       = SYSDATE,
						access_name    = #reger_id#
					where  partnr_id  = #searchPartnerId#
				WHEN NOT MATCHED THEN
					INSERT
					(
								 PARTNR_ID,
								 HEADER,
								 HEADER_URL,
								 PAY_METHOD,
								 MILEAGE_ADD_YN,
								 MILEAGE_ADD,
								 LINK_URL,
								 ETC,
								 REG_DATE,
								 MOD_DATE,
								 ACCESS_NAME

					) VALUES (
								 #searchPartnerId#,
								 #header#,
								 #header_url#,
								 #payMethod#,
								 #mileage_add_yn#,
								 #mileage_add#,
								 #searchTopUrl#,
								 #searchSiteinfo#,
								 SYSDATE,
								 '',
								 #reger_id#
					)
		]]>
	</insert>

	<!-- 제휴몰인몰삭제 -->
	<update id="deleteMgrCreateMall" parameterClass="java.util.HashMap">
	<![CDATA[
		DELETE FROM PT_PARTNER_MALL
		WHERE PARTNR_ID = #searchPartnerId#
	]]>
	</update>
	<!-- 제휴몰인몰코드삭제 -->
	<update id="deleteMgrCreateMallCate" parameterClass="java.util.HashMap">
	DELETE
	  FROM PT_PARTNER_MALL_CATE
	 WHERE PARTNR_ID = #searchPartnerId#
	</update>

	<!-- 제휴몰코드등록 -->
	<insert id="registMgrCreateMallCate" parameterClass="java.util.HashMap">
		<![CDATA[
			INSERT INTO PT_PARTNER_MALL_CATE(
                PARTNR_ID, CATEGORY_CODE
            ) VALUES (
            	#searchPartnerId#, #arr_code#
            )
         ]]>
	</insert>

	<!-- 제휴사관리 장터 기획전 상품리스트 -->
	<select id="selectGoodsEventList" parameterClass ="java.util.HashMap" resultClass="commMap">
		<![CDATA[
		SELECT A.EVENT_ID, A.EVENT_NM, B.BBS_NO, B.GOD_NM, B.GOD_INTRO, B.UNIT_COST, A.EVENT_IMG_PATH, B.IMG_PATH, B.EVENT_CTG_NO
              ,C.SELL_ID AS BBS_RGS_MBR_ID, C.STS_CODE, C.DISPLAY_END_DATE, C.RMN_QTY
              ,P.CPN_ID, P.CPN_TYPE, P.CPN_AMT_RATE, P.SELL_APLY_GBN, P.GOODS_APLY_GBN, NVL(C.GOODS_SAVE_RATE,0) AS GOODS_SAVE_RATE
              ,(SELECT COUNT(*) FROM ESC_GOODS_OPTION A WHERE A.GOODS_ID = C.GOODS_ID) AS OPTION_CNT
              , NVL((SELECT GDC.DISCOUNT_UNIT_COST FROM ESC_GOODS_DISCOUNT_INF GDC WHERE GDC.DISCOUNT_STS_CODE = 'APP' AND TO_CHAR(SYSDATE,'yyyymmddhh24miss') BETWEEN GDC.DISCOUNT_START_DATE||'000000' AND GDC.DISCOUNT_END_DATE||'235959' AND GDC.DISCOUNT_GOODS_ID = C.GOODS_ID),0) AS DISCOUNT_UNIT_COST
        FROM HOT_EVENT_LDG A, HOT_EVENT_DTL_LDG B, ESC_GOODS C,
             (SELECT A.CPN_ID, A.CPN_TYPE, A.CPN_AMT_RATE, A.SELL_APLY_GBN, A.GOODS_APLY_GBN, B.SELL_ID, B.GOODS_ID
               FROM ESC_COUPON A,
                   (SELECT
                           CM.CPN_ID, CG.SELL_ID, CG.GOODS_ID
                           ,ROW_NUMBER() OVER(PARTITION BY CG.GOODS_ID ORDER BY CM.REG_DATE DESC) AS RANK
                    FROM ESC_COUPON CM, ESC_COUPON_GOODS CG
                    WHERE CM.CPN_ID = CG.CPN_ID
                      AND CM.USE_START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
                      AND CM.USE_END_DATE >= TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
                      AND CM.STS_CODE = 'APP'
                      AND CM.SELL_APLY_GBN||CM.GOODS_APLY_GBN <> 'AA'
                      AND NVL(CM.PUBLISH_METHOD,'G') = 'G'
                    ORDER BY CM.REG_DATE
                    ) B
               WHERE A.CPN_ID = B.CPN_ID
                 AND B.RANK = 1
               ) P
        WHERE A.EVENT_ID = B.EVENT_ID
          AND B.BBS_NO = C.GOODS_ID
          AND B.USE_FG = 'Y'
          AND A.EVENT_ID = #eventId#
          AND C.GOODS_ID = P.GOODS_ID(+)
        ORDER BY EVENT_ID ASC, B.EVENT_GOD_VIEW_NO ASC
        ]]>
	</select>

	<!-- 기획전(RIS포함) Log Insert/Update -->
	<insert id="updateRetrievePartnerAccessLog" parameterClass="java.util.HashMap">
		<![CDATA[
			MERGE INTO ESC_PARTNER_ACCESS a
				USING DUAL ON (a.PARTNER_ID = #PID#
								AND a.CATGR_TP = #goodsType#
								AND a.ACCESS_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
							   )
			    WHEN MATCHED THEN
					UPDATE
						SET  ACCESS_CNT  = ACCESS_CNT+1
					WHERE 1=1
						AND partner_id  = #PID#
						AND CATGR_TP    = #goodsType#
						AND ACCESS_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
				WHEN NOT MATCHED THEN
					INSERT
					(
						PARTNER_ID, ACCESS_DATE, ACCESS_CNT, CATGR_TP
					) VALUES (
						#PID#, TO_CHAR(SYSDATE, 'YYYYMMDD'), 1, #goodsType#
 					)
			]]>
	</insert>

	<select id="selectTreeData" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
			SELECT CTGRY_CD
                  , CTGRY_NM
                  , HRNK_CTGRY_CD
                  , SORT_ORDER
                  , MENU_LEVEL
                  , leaf AS LEAF
               FROM (
                        SELECT  MENU_ID as CTGRY_CD
                                  ,  MENU_NM as CTGRY_NM
                                  ,  HRNK_MENU_ID as HRNK_CTGRY_CD
                                  ,  SORT_ORDER
                                  ,  MENU_LEVEL
                                  ,  CONNECT_BY_ISLEAF as leaf
                          FROM (
                                SELECT  MENU_NM
                                     ,  MENU_LEVEL
                                     ,  SORT_ORDER
                                     ,  MENU_ID
                                     ,  HRNK_MENU_ID
                                     ,  (SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID=HRNK_MENU_ID  ) AS  HRNK_MENU_NM
                                     ,  MENU_URL
                                     ,  MENU_DESC
                                     ,  USE_YN
                                  FROM  CM_ADMIN_MENU_MAST
                                 )  A
                         START WITH MENU_ID =  NVL(#hrnkMenuId#, '1')
                                   CONNECT BY PRIOR A.MENU_ID = A.HRNK_MENU_ID
                                       ORDER SIBLINGS BY A.SORT_ORDER
                    ) WHERE HRNK_CTGRY_CD = NVL(#hrnkMenuId#, '1')
		]]>
	</select>

	<select id="selectMenuDetail" parameterClass="java.util.HashMap" resultClass="commMap">
		<![CDATA[
			SELECT MENU_ID
                 , MENU_NM
                 , MENU_LEVEL
                 , USE_YN
                 , HRNK_MENU_ID
                 , (SELECT MENU_NM FROM CM_ADMIN_MENU_MAST WHERE MENU_ID= A.HRNK_MENU_ID  ) AS  HRNK_MENU_NM
                 , MENU_URL
                 , SORT_ORDER
                 , MENU_DESC
              FROM CM_ADMIN_MENU_MAST A
             WHERE MENU_ID = #menuId#
		]]>
	</select>

	<sql id="cert_list">
		SELECT A.CRTFCT_ID
			 , A.CRTFCT_NM
			 , A.CRTFC_OR_NM
			 , A.ISSUE_OR_NM
			 , A.CRTFC_PRDLST_CD
			 , CRTFC_PRDLST_CD.COMN_CD_NM AS CRTFC_PRDLST_NM
			 , A.USE_YN
			 , DECODE(A.USE_YN, 'Y', '사용', '미사용') AS USE_YN_NM
             , IMAGE.FILE_STRE_PATH AS IMAGE_PATH
             , IMAGE.STRE_FILE_NM AS IMAGE_NM
             , IMAGE.ORIG_FILE_NM AS IMAGE_ORIG_NM
             , A.ATTCHFILE_ID
             , A.SORT_ORDER
             , A.CRTFC_URL
		  FROM SC_GOODS_CRTFC_MAST A
		  	 , (SELECT COMN_CD_ID, COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'CRTFC_PRDLST_CD') CRTFC_PRDLST_CD
		  	 , CM_FILE_MGT IMAGE
		 WHERE A.CRTFC_PRDLST_CD = CRTFC_PRDLST_CD.COMN_CD_ID(+)
		   AND A.ATTCHFILE_ID = IMAGE.ATTCHFILE_ID(+)
	   <isNotEmpty property="search_text">
			<isNotEmpty property="search_type" prepend="AND">
				<isEqual property="search_type" compareValue="01">
					A.CRTFCT_ID LIKE '%'||#search_text#||'%'
				</isEqual>
				<isEqual property="search_type" compareValue="02">
					A.CRTFCT_NM LIKE '%'||#search_text#||'%'
				</isEqual>
				<isEqual property="search_type" compareValue="03">
					A.CRTFC_OR_NM LIKE '%'||#search_text#||'%'
				</isEqual>
				<isEqual property="search_type" compareValue="04">
					A.ISSUE_OR_NM LIKE '%'||#search_text#||'%'
				</isEqual>
			</isNotEmpty>
			<isEmpty property="search_type" prepend="AND">
				(A.CRTFCT_ID LIKE '%'||#search_text#||'%'
				OR A.CRTFCT_NM LIKE '%'||#search_text#||'%'
				OR A.CRTFC_OR_NM LIKE '%'||#search_text#||'%'
				OR A.ISSUE_OR_NM LIKE '%'||#search_text#||'%'
				)
			</isEmpty>
	   </isNotEmpty>
	   <isNotEmpty property="search_crtfc_prdlst_cd" prepend="AND">
			A.CRTFC_PRDLST_CD = #search_crtfc_prdlst_cd#
	   </isNotEmpty>
	   <isNotEmpty property="search_use_yn" prepend="AND">
			A.USE_YN = #search_use_yn#
	   </isNotEmpty>
	   <isNotEmpty property="crtfct_id" prepend="AND">
			A.CRTFCT_ID = #crtfct_id#
	   </isNotEmpty>
	</sql>

	<select id="selectCertMgrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT *
				FROM ( SELECT
					<isEmpty property="sidx">
						ROW_NUMBER () OVER (ORDER BY SORT_ORDER ASC) RNUM
					</isEmpty>
					, A.*
					FROM (
						SELECT *
							FROM(
							<include refid="cert_list" />
							)
						) A
					) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectCertMgrCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="cert_list" />)
	</select>

	<select id="selectCertMaxSortOrder" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT MAX(NVL(SORT_ORDER, 0))+1 FROM SC_GOODS_CRTFC_MAST
	</select>

	<insert id="insertCertInfo" parameterClass="java.util.HashMap">
		INSERT INTO SC_GOODS_CRTFC_MAST
			 ( CRTFCT_ID
			 , CRTFCT_NM
			 , CRTFC_OR_NM
			 , ISSUE_OR_NM
			 , CRTFC_PRDLST_CD
			 , USE_YN
			 , CRTFC_URL
			 , SORT_ORDER
			 , ATTCHFILE_ID
			 , REG_DATE
			 , CHG_DATE
			 , REGER_ID
			 , CHGER_ID )
		VALUES
			 ( SEQ_CRTFCT_ID.NEXTVAL
			 , #crtfct_nm#
			 , #crtfc_or_nm#
			 , #issue_or_nm#
			 , #crtfc_prdlst_cd#
			 , #use_yn#
			 , #crtfc_url#
			 , #sort_order#
			 , #attchfile_id#
			 , SYSDATE
			 , SYSDATE
			 , #login_usr_id#
			 , #login_usr_id# )
	</insert>

	<update id="updateCertInfo" parameterClass="java.util.HashMap">
		UPDATE SC_GOODS_CRTFC_MAST
		   SET CRTFCT_NM		= #crtfct_nm#
			 , CRTFC_OR_NM		= #crtfc_or_nm#
			 , ISSUE_OR_NM		= #issue_or_nm#
			 , CRTFC_PRDLST_CD	= #crtfc_prdlst_cd#
			 , USE_YN			= #use_yn#
			 , SORT_ORDER		= #sort_order#
		<isNotEmpty property="attchfile_id" prepend=",">
			ATTCHFILE_ID		= #attchfile_id#
		</isNotEmpty>
		<isEmpty property="attchfile_id">
			<isEqual property="image_delyn" compareValue="Y" prepend=",">
				ATTCHFILE_ID		= NULL
			</isEqual>
		</isEmpty>
			 , CRTFC_URL		= #crtfc_url#
			 , CHG_DATE			= SYSDATE
			 , CHGER_ID			= #login_usr_id#
		 WHERE CRTFCT_ID		= #crtfct_id#
	</update>

	<!-- 상품카테고리 조회 IN -->
	<sql id="search_ctgry_in">
		  SELECT
		  	GOODS_CD FROM GD_MGT_GOODS_CTGRY
		  WHERE CTGRY_CD IN ( SELECT A.CTGRY_CD FROM GD_CTGRY_MAST A
					  		  START WITH A.CTGRY_CD = #search_ctgry_cd#
					  		  CONNECT BY PRIOR A.CTGRY_CD = A.HRNK_CTGRY_CD
					  		  AND A.USE_YN = 'Y' 								)
	</sql>

	<!-- 제휴사 주문내역 그외 -->
	<select id="selectPartnerBasicPartyOrderList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* selectPartnerBasicPartyOrderList */
      		SELECT OD.*
		      	   , ROWNUM AS RNUM
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.CNSMR_PRC END ) OVER(),0) as TAXT_Y_CNSMR_PRC	/* 과세 소비자가합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.CNSMR_PRC END ) OVER(),0) as TAXT_N_CNSMR_PRC	/* 비과세 소비자가합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.PUCHAS_PRC END ) OVER(),0) as TAXT_Y_PUCHAS_PRC	/* 과세 매입가합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.PUCHAS_PRC END ) OVER(),0) as TAXT_N_PUCHAS_PRC	/* 비과세 매입가합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.VAT_PRC END ) OVER(),0) as TAXT_Y_VAT_PRC		/* 과세 부가세합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.VAT_PRC END ) OVER(),0) as TAXT_N_VAT_PRC		/* 비과세 부가세합 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.REQ_CNT END ) OVER(),0) as TAXT_Y_REQ_CNT		/* 과세 상품수 */
		      	   , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.REQ_CNT END ) OVER(),0) as TAXT_N_REQ_CNT		/* 비과세 상품수 */
		      	   , (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'ORDER_MDA_DIV_CD' AND COMN_CD_ID = ORDER_MDA_DIV_CD) AS ORDER_MDA_DIV_NM
		      		FROM
		      		(
		        		SELECT
		          			PPO.PARTNR_ID 			/* 파트너 ID */
		          			, PPO.ORDER_ID 			/* 주문 ID */
		          			, PP.NAME				/* 제휴사명 */
		          			, TO_CHAR (OOM.ORDER_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ORDER_DATE   	/* 주문일 */
							, TO_CHAR (OOM.APPR_DATE, 'YYYY-MM-DD HH24:MI:SS') AS APPR_DATE 		/* 결제일 */
		          			, OOM.COPRTN_ORDER_NO
		          			, OOI.GOODS_CD  		/* 상품코드 */
		          			, OOI.GOODS_NM  		/* 상품명 */
		          			, OOI.REQ_CNT 			/* 상품수량 */
		          			, OOI.DC_APPLY_PRC 		/* 주문금액 */
		          			, (SELECT F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) FROM DUAL) PAVLN_NM	/* 전시관 */
		          			, GMGM.VAT_YN 																		/* 부가세 여부 */
		          			, GMGM.PUCHAS_PRC																	/* 매입가 */
		          			, GMGM.CNSMR_PRC																	/* 소비자가 */
                    		, DECODE(GMGM.VAT_YN, 'Y', ROUND(GMGM.CNSMR_PRC*(GMGM.VAT_RATE/100)),DECODE(GMGM.VAT_YN, 'N', null)) as VAT_PRC /* 부가세 적용가 */
		          			, CASE WHEN OOI.GOODS_CANCEL_YN = 'Y' THEN '주문취소'
		                 		   WHEN OOI.DELIV_CERT_YN = 'Y' THEN '배송완료'
		            		  	   ELSE (SELECT F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD) FROM DUAL)
		          			  END STATUS  /* 주문상태 */
		          			, OOM.ORDER_MDA_DIV_CD
		        		FROM PT_PARTNER_ORDER PPO
		        		INNER JOIN (
		          					SELECT
		            					OOM.COPRTN_ORDER_NO        			/* 제휴 주문 번호 */
		            					,OOM.PARTNR_ID              		/* 파트너 ID */
		            					,OOM.ORDER_ID
		            					,OOM.ORDER_DATE
		            					,OOM.APPR_DATE
		            					,OOM.ORDER_STUS_CD
		            					,OOM.ACCESS_NAME
		            					,OOM.ORDER_MDA_DIV_CD
		          					FROM OD_ORDER_MAST OOM
		          					WHERE	OOM.TOT_CNSMR_PRC <![CDATA[>]]> '0' /* 주문금액 > 0 */
		          					<isNotEmpty property="search_partner_id">
				          			   	AND OOM.PARTNR_ID = #search_partner_id#
			          				</isNotEmpty>
		            					<isNotEmpty property="search_strt_ymd">
			            					<isNotEmpty property="search_end_ymd">
			            						AND OOM.ORDER_DATE BETWEEN TO_DATE (#search_strt_ymd#, 'YYYY-MM-DD')AND  TO_DATE (#search_end_ymd# || '235959','YYYY-MM-DDHH24MISS')
			            					</isNotEmpty>
		            					</isNotEmpty>
					 					<isEqual property="search_partnr_div" compareValue="14">
					 						AND OOM.OKCASH_USE_AMT <![CDATA[<>]]> '0'
					 						AND OOM.OKCASH_APPLY_DIV_CD = '02'
					 						AND OOM.RECEVPO_RGISTPOCD = '89903'
					 					</isEqual>
					 					<isNotEmpty property="orderMdaDivCd">
											AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
					 					</isNotEmpty>
		        				   ) OOM
		        			ON PPO.ORDER_ID = OOM.ORDER_ID
		        			<!-- ON PPO.PARTNR_ID = OOM.PARTNR_ID -->
		        		INNER JOIN OD_ORDER_ITM OOI
		          			ON OOI.ORDER_ID = OOM.ORDER_ID
		          			<isNotEmpty property="str_div">
		          				AND OOI.PAVLN_DIV_CD = #str_div#
		   					</isNotEmpty>
	   						<isEqual property="search_partnr_div" compareValue="13">
	 							AND OOI.GIFT_ORDER_YN = 'Y'
	 						</isEqual>
		 					<isEqual property="search_partnr_div" compareValue="14">
		 						AND OOI.OKCASH_USE_AMT <![CDATA[<>]]> '0'
		 					</isEqual>
		 					<isNotEmpty property="search_ctgry_cd" >
			 					AND OOI.GOODS_CD in ( <include refid="search_ctgry_in" />)
			 				 </isNotEmpty>
		 					 <isNotEmpty property="search_order_detail_stus_type">
								AND OOI.ORDER_DTAIL_STUS_CD = #search_order_detail_stus_type#
							 </isNotEmpty>
		   				INNER JOIN 	PT_PARTNER PP
		   					ON PP.PARTNR_ID = PPO.PARTNR_ID
          				 INNER JOIN GD_MGT_GOODS_MAST GMGM
            			    ON GMGM.GOODS_CD = OOI.GOODS_CD
            			    WHERE 1=1
		   					<isNotEmpty property="search_partner_id">
		          			   	AND PP.PARTNR_ID = #search_partner_id#
	          				</isNotEmpty>
	   					<!-- <isNotEmpty property="search_appr_proc_cd">
			   				AND GMGM.APPR_PROC_CD = #search_appr_proc_cd#
		   				</isNotEmpty> -->
	    	   ) OD
	</select>

	<!-- 제휴사 주문내역 LP IC PL -->
	<select id="selectPartnerChoiceOrderList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* selectPartnerChoiceOrderList */
	      		SELECT OD.*
	      			 , ROWNUM AS RNUM
				     , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.CNSMR_PRC END ) OVER(),0) as TAXT_Y_CNSMR_PRC	/* 과세 소비자가합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.CNSMR_PRC END ) OVER(),0) as TAXT_N_CNSMR_PRC	/* 비과세 소비자가합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.PUCHAS_PRC END ) OVER(),0) as TAXT_Y_PUCHAS_PRC	/* 과세 매입가합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.PUCHAS_PRC END ) OVER(),0) as TAXT_N_PUCHAS_PRC	/* 비과세 매입가합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.VAT_PRC END ) OVER(),0) as TAXT_Y_VAT_PRC		/* 과세 부가세합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.VAT_PRC END ) OVER(),0) as TAXT_N_VAT_PRC		/* 비과세 부가세합 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'Y' THEN OD.REQ_CNT END ) OVER(),0) as TAXT_Y_REQ_CNT		/* 과세 상품수 */
			      	 , NVL(SUM(CASE WHEN OD.VAT_YN = 'N' THEN OD.REQ_CNT END ) OVER(),0) as TAXT_N_REQ_CNT		/* 비과세 상품수 */
      			 FROM
	      		(
	                SELECT <isEqual property="orderTable" compareValue="OD_LINKPRICE_SALE"> /*+ LEADING(OOM OS OOI GMGM) USE_NL(OS OOI GMGM) */ </isEqual>
	                	   <isEqual property="orderTable" compareValue="OD_ILIKECLICK_SALE">/*+ LEADING(OOM OS OOI GMGM) USE_NL(OS OOI GMGM) */ </isEqual>
	                 	OOM.ORDER_ID      	/* 주문ID */
	                  , TO_CHAR (OOM.ORDER_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ORDER_DATE   	/* 주문일 */
	                  , TO_CHAR (OOM.APPR_DATE, 'YYYY-MM-DD HH24:MI:SS') AS APPR_DATE 		/* 결제일 */
	                  , OOI.GOODS_CD  		/* 상품코드 */
	                  , OOI.GOODS_NM  		/* 상품명 */
	                  , OOI.REQ_CNT 		/* 상품수량 */
	                  , OOI.DC_APPLY_PRC 	/* 주문금액 */
	                  , GMGM.VAT_YN 		/* 부가세 여부 */
	                  , GMGM.PUCHAS_PRC		/* 매입가 */
          			  , GMGM.CNSMR_PRC		/* 소비자가 */
                  	  , DECODE(GMGM.VAT_YN, 'Y', ROUND(GMGM.CNSMR_PRC*(GMGM.VAT_RATE/100)),DECODE(GMGM.VAT_YN, 'N', null)) as VAT_PRC /* 부가세 적용가 */
	                  , (SELECT F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) FROM DUAL) PAVLN_NM	/* 전시관 */
	                  , CASE WHEN OOI.GOODS_CANCEL_YN = 'Y' THEN '주문취소'
	                         WHEN OOI.DELIV_CERT_YN = 'Y' THEN '배송완료'
	                         ELSE (SELECT F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD) FROM DUAL)
	                    END STATUS  		/* 주문상태 */
	                FROM	OD_ORDER_MAST OOM
					        ,OD_ORDER_ITM OOI
					        ,GD_GOODS_MAST GMGM
	                <isEqual property="orderTable" compareValue="OD_LINKPRICE_SALE">,OD_LINKPRICE_SALE OS</isEqual>
	                <isEqual property="orderTable" compareValue="OD_ILIKECLICK_SALE">,OD_ILIKECLICK_SALE OS</isEqual>
	                <!--  <isEqual property="orderTable" compareValue="OD_BANNER_ORDER_SALE">,OD_BANNER_ORDER_SALE OS</isEqual>-->
			         WHERE       OOM.ORDER_ID = OS.PURCHASE_ID
			         AND OOM.ORDER_ID = OOI.ORDER_ID
			         AND GMGM.GOODS_CD = OOI.GOODS_CD
			         /* AND OOI.ORDER_STUS_CD IN ('O02','O04','D03','D04') */
		                 <isNotEmpty property="str_div">
	         				AND OOI.PAVLN_DIV_CD = #str_div#
	  					 </isNotEmpty>
	  					 <isNotEmpty property="search_ctgry_cd" >
		 					AND OOI.GOODS_CD in ( <include refid="search_ctgry_in" />)
		 				 </isNotEmpty>
		 				 <isNotEmpty property="search_order_detail_stus_type">
							AND OOI.ORDER_STUS_CD = #search_order_detail_stus_type#
						 </isNotEmpty>
						 <isNotEmpty property="search_strt_ymd">
           					<isNotEmpty property="search_end_ymd">
           						AND OOM.ORDER_DATE BETWEEN TO_DATE (#search_strt_ymd#, 'YYYY-MM-DD')AND  TO_DATE (#search_end_ymd# || '235959','YYYY-MM-DDHH24MISS')
           					</isNotEmpty>
           				</isNotEmpty>
           				<isNotEmpty property="orderMdaDivCd">
							AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
	                <isEqual property="search_partner_id" compareValue="pl">
        				AND OS.GUBUN = '01'
        			</isEqual>
        			 			<!-- <isNotEmpty property="search_appr_proc_cd">
		   								AND GMGM.APPR_PROC_CD = #search_appr_proc_cd#
	   							</isNotEmpty> -->
             ) OD
	</select>

	<!-- 제휴사 주문내역 편의점 -->
	<select id="selectPartnerStoreOrderList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* selectPartnerStoreOrderList */
     		SELECT OD.* , ROWNUM AS RNUM
	      		FROM
	      		(
	      			SELECT
					    TO_CHAR (OOM.ORDER_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ORDER_DATE   	/* 주문일 */
					  , OOM.ACCESS_NAME 	/* 제휴사명 */
					  , TO_CHAR (OOM.APPR_DATE, 'YYYY-MM-DD HH24:MI:SS') AS APPR_DATE 		/* 결제일 */
					  , OOM.ORDER_ID
					  , OOI.GOODS_CD  		/* 상품코드 */
					  , OOI.GOODS_NM  		/* 상품명 */
					  , OOI.REQ_CNT 		/* 상품수량 */
					  , OOI.DC_APPLY_PRC 	/* 주문금액 */
					  , (SELECT F_GET_COMN_CD_NM('PAVLN_DIV_CD', OOI.PAVLN_DIV_CD) FROM DUAL) PAVLN_NM	/* 전시관 */
					  , CASE WHEN OOI.GOODS_CANCEL_YN = 'Y' THEN '주문취소'
					         WHEN OOI.DELIV_CERT_YN = 'Y' THEN '배송완료'
						       ELSE (SELECT F_GET_COMN_CD_NM('ORDER_STUS_CD', OOM.ORDER_STUS_CD) FROM DUAL)
						  END STATUS  /* 주문상태 */
					  , (SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'ORDER_MDA_DIV_CD' AND COMN_CD_ID = OOM.ORDER_MDA_DIV_CD) AS ORDER_MDA_DIV_NM
					FROM OD_ORDER_MAST OOM
					INNER JOIN OD_ORDER_ITM OOI
	          			ON OOI.ORDER_ID = OOM.ORDER_ID
	          			<isNotEmpty property="str_div">
	          				AND OOI.PAVLN_DIV_CD = #str_div#
	   					</isNotEmpty>
	 					<isNotEmpty property="search_ctgry_cd" >
		 					AND OOI.GOODS_CD in ( <include refid="search_ctgry_in" />)
		 				 </isNotEmpty>
		 				 <isNotEmpty property="search_order_detail_stus_type">
							AND OOI.ORDER_DTAIL_STUS_CD = #search_order_detail_stus_type#
						 </isNotEmpty>

	      			INNER JOIN MEMINFO M
						ON M.ACCESS_NAME = OOM.ACCESS_NAME
					    AND M.MEMBER_TYPE = '8'
				    WHERE	OOM.COPRTN_ORDER_DIV_CD = '02'  	/* 제휴 주문 구분 코드 */
            		AND 	OOM.TOT_CNSMR_PRC <![CDATA[>]]> '0' /* 주문금액 > 0 */
	      				<isNotEmpty property="search_strt_ymd">
          					<isNotEmpty property="search_end_ymd">
           						AND OOM.ORDER_DATE <![CDATA[<=]]> to_date(#search_end_ymd# || ' 23:59:59','yyyy-mm-dd HH24:MI:ss')
           						AND OOM.ORDER_DATE <![CDATA[>=]]> to_date(#search_strt_ymd#,'yyyy-mm-dd')
           					</isNotEmpty>
         				</isNotEmpty>
         				<isNotEmpty property="orderMdaDivCd">
						AND OOM.ORDER_MDA_DIV_CD = #orderMdaDivCd#
	 					</isNotEmpty>
	    	   ) OD
	</select>
	<select id="selectUrgePerMgr"  resultClass="java.util.HashMap">
		SELECT
		    AUTO_STL_CAN_DAY AS SEL_AUTO_STL_CAN_DAY, /*구매취소*/
		    AUTO_BUY_APV_DAY_1 AS SEL_AUTO_BUY_APV_DAY_1, /*구매승인1*/
		    AUTO_DLVY_CAN_DAY AS SEL_AUTO_DLVY_CAN_DAY, /*판매취소*/
		    AUTO_BUY_APV_DAY_2 AS SEL_AUTO_BUY_APV_DAY_2, /*구매승인2*/
		    STL_REQ_PRS_DAY AS SEL_STL_REQ_PRS_DAY, /*결제요망*/
		    DLVY_REQ_PRS_DAY AS SEL_DLVY_REQ_PRS_DAY, /*배송처리*/
		    CMMT_REQ_PRS_DAY AS SEL_CMMT_REQ_PRS_DAY, /*구매승인*/
		    RFD_REQ_PRS_DAY AS SEL_RFD_REQ_PRS_DAY /*환불승인*/
		from CM_ESC_SYS_LDG
	</select>
	<update id="modifyUrgePerMgr" parameterClass="java.util.HashMap">
		UPDATE
			CM_ESC_SYS_LDG
		SET 	AUTO_STL_CAN_DAY = #SEL_AUTO_STL_CAN_DAY#, /*구매취소*/
		        AUTO_BUY_APV_DAY_1 = #SEL_AUTO_BUY_APV_DAY_1#, /*구매승인1*/
    			AUTO_DLVY_CAN_DAY = #SEL_AUTO_DLVY_CAN_DAY#, /*판매취소*/
    			AUTO_BUY_APV_DAY_2 = #SEL_AUTO_BUY_APV_DAY_2#, /*구매승인2*/
    			STL_REQ_PRS_DAY = #SEL_STL_REQ_PRS_DAY#, /*결제요망*/
    			DLVY_REQ_PRS_DAY = #SEL_DLVY_REQ_PRS_DAY#, /*배송처리*/
    			CMMT_REQ_PRS_DAY = #SEL_CMMT_REQ_PRS_DAY#, /*구매승인*/
    			RFD_REQ_PRS_DAY = #SEL_RFD_REQ_PRS_DAY# /*환불승인*/
		WHERE SEQ_NO ='1'
	</update>

	<!-- 제휴사 제휴신청 승인대기 목록 CNT -->
	<select id="selectCorptnFeeMgrListTotcnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT	COUNT(*)
		FROM CO_SUPP_COMP_MAST
		WHERE 1=1
			AND COPRTN_FEE_CHG_STUS_CD IS NOT NULL
			<isEqual property="coprtnFeeChgStusCd" compareValue="01" prepend="AND">
				COPRTN_FEE_CHG_STUS_CD = 'RQST'
			</isEqual>
			<isEqual property="coprtnFeeChgStusCd" compareValue="02" prepend="AND">
				COPRTN_FEE_CHG_STUS_CD = 'APRV'
			</isEqual>
		ORDER BY COPRTN_FEE_CHG_REQ_YMD DESC
	</select>
	<!-- 제휴신청 승인대기 목록 -->
	<select id="selectCorptnFeeMgrList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
			SELECT  SUPP_COMP_ID
					,SUPP_COMP_DIV_CD
					,F_GET_COMN_CD_NM('SUPP_COMP_DIV_CD',SUPP_COMP_DIV_CD) AS SUPP_COMP_DIV_NM
					,BCNC_NM
					,PRSDT_NM
					,DECODE(NVL(COPRTN_FEE_AGREE_TURF,'N'),'0.03','3%이내','0.06','6%이내','0.10','10%이내','0.15','15%이내','N','신청안함') AS COPRTN_FEE_AGREE_TURF_NM
					,COPRTN_FEE_AGREE_TURF      /*제휴수수료동의구간*/
					,COPRTN_FEE_TURF_CHG_REQ    /*제휴수수료구간변경요청*/
					,COPRTN_FEE_CHG_STUS_CD     /*제휴수수료변경상태코드*/
					,(SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'COPRTN_FEE_CHG_STUS_CD' AND COMN_CD_ID = COPRTN_FEE_CHG_STUS_CD )AS COPRTN_FEE_CHG_STUS_NM /*수수료 상태명*/
					,COPRTN_FEE_CHG_REQ_YMD     /*제휴수수료변경요청일자*/
					,COPRTN_FEE_CHG_APPR_YMD    /*제휴수수료변경승인일자*/
			FROM CO_SUPP_COMP_MAST
			WHERE 1=1
				AND COPRTN_FEE_CHG_STUS_CD IS NOT NULL
				<isEqual property="coprtnFeeChgStusCd" compareValue="01" prepend="AND">
					COPRTN_FEE_CHG_STUS_CD = 'RQST'
				</isEqual>
				<isEqual property="coprtnFeeChgStusCd" compareValue="02" prepend="AND">
					COPRTN_FEE_CHG_STUS_CD = 'APRV'
				</isEqual>
				<isNotEmpty property="search_supp_comp_id" prepend="AND">
					SUPP_COMP_ID = #search_supp_comp_id#
				</isNotEmpty>
			ORDER BY COPRTN_FEE_CHG_REQ_YMD DESC
		<include refid="pagingFooter"/>
	</select>
	<!-- 제휴신청이력 TOTCNT -->
	<select id="selectcoopCompHistListTotcnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT	COUNT(*)
		FROM	CO_SUPP_COMP_HISTOR
		WHERE	COPRTN_FEE_CHG_STUS_CD IS NOT NULL
		AND 	SUPP_COMP_ID = #suppCompId#
	</select>
	<!-- 제휴신청이력 LIST -->
	<select id="selectcoopCompHistList" parameterClass="java.util.HashMap" resultClass="commMap">
		<include refid="pagingHeader"/>
		SELECT	SUPP_COMP_ID
				,BCNC_NM
				,PRSDT_NM
				,COPRTN_FEE_AGREE_TURF
				,TO_DATE(SUBSTR(COPRTN_FEE_CHG_APPR_YMD,0,8),'YYYY-MM-DD') COPRTN_FEE_CHG_APPR_YMD
				,TO_DATE(SUBSTR(COPRTN_FEE_CHG_REQ_YMD,0,8),'YYYY-MM-DD') COPRTN_FEE_CHG_REQ_YMD
				,(SELECT COMN_CD_NM FROM CM_COMN_CD WHERE CD_GRP_ID = 'COPRTN_FEE_CHG_STUS_CD' AND COMN_CD_ID = COPRTN_FEE_CHG_STUS_CD )AS COPRTN_FEE_CHG_STUS_NM
		FROM	CO_SUPP_COMP_HISTOR
		WHERE	COPRTN_FEE_CHG_STUS_CD IS NOT NULL
		AND 	SUPP_COMP_ID = #suppCompId#
		<include refid="pagingFooter"/>
	</select>




	<!-- 제휴신청 승인/취소 처리 -->
	<update id="updateCorptnFeeMgrList" parameterClass="java.util.HashMap">
		UPDATE CO_SUPP_COMP_MAST
		SET		COPRTN_FEE_TURF_CHG_REQ = ''
				,COPRTN_FEE_CHG_STUS_CD = #coprtnFeeChgStusCd#
				<isEqual property="coprtnFeeChgStusCd" compareValue="APRV">
				,COPRTN_FEE_AGREE_TURF = COPRTN_FEE_TURF_CHG_REQ
				</isEqual>
				,COPRTN_FEE_CHG_APPR_YMD = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE	SUPP_COMP_ID = #suppCompId#
	</update>
	<!-- 제휴신청 후 히스토리 추가 -->
	<insert id="insertCoprtnFeeTurfChgHistory" parameterClass="java.util.HashMap" >
		<![CDATA[
			INSERT INTO CO_SUPP_COMP_HISTOR (
					  SUPP_COMP_ID                                     /*공급 업체 ID*/
					, SUPP_COMP_CHG_DATE                               /*공급 업체 변경 일시*/
					, SUPP_COMP_IMPRTY_REASN                           /*공급 업체 불가 사유*/
					, MOV_REG_DIV_CD                                   /*이전 등록 구분 코드*/
					, SUPP_COMP_DIV_CD                                 /*공급 업체 분류 코드*/
					, COMPREG_NO                                       /*사업자등록 번호*/
					, CORP_REG_NO                                      /*법인 등록 번호*/
					, COMM_SELL_RPRT_NO                                /*통신 판매 신고 번호*/
					, SUPP_PO_ID                                       /*공급 우체국 ID*/
					, PO_ECODE                                         /*우체국 ECODE*/
					, BCNC_NM                                          /*거래처 명*/
					, TAX_CALDOC_COMP_NM                               /*세금 계산서_업체 명*/
					, INDUTY                                           /*업종*/
					, ENTRPS                                           /*업태*/
					, PRSDT_NM                                         /*대표자 명*/
					, BCNC_GRADE_CD                                    /*거래처 등급 코드*/
					, PRSDT_GRADE_CD                                   /*대표자 등급 코드*/
					, PRSDT_MOBILE_NO                                  /*대표자 휴대폰 번호*/
					, CORP_SSN                                         /*법인 주민등록번호*/
					, BIZFLD_AEA                                       /*사업장 평수*/
					, EMPEE_CNT                                        /*종업원 수*/
					, SUPP_COMP_INTRCN                                 /*공급 업체 소개*/
					, CUST_NO                                          /*고객 번호*/
					, JOIN_NO                                          /*가맹점 번호*/
					, TAXT_DIV_CD                                      /*과세 구분 코드*/
					, NATION_CD                                        /*국가 코드*/
					, BIZFLD_LOC                                       /*사업장 소재지*/
					, HDOFC_LOC                                        /*본점 소재지*/
					, SUPP_COMP_URL                                    /*공급 업체 URL*/
					, EMAIL                                            /*이메일*/
					, TELNO                                            /*전화번호*/
					, FAXNO                                            /*팩스번호*/
					, ZIPCD                                            /*우편번호*/
					, ADDR1                                            /*주소1*/
					, ADDR2                                            /*주소2*/
					, SEND_ZIPCD                                       /*발송_우편번호*/
					, SEND_ADDR                                        /*발송_주소*/
					, SEND_DTAIL_ADDR                                  /*발송_상세 주소*/
					, SEND_NO                                          /*발송_번호*/
					, SEND_TELNO                                       /*발송_전화번호*/
					, RETRNGD_DLVY_ZIPCD                               /*반품 배송지_우편번호*/
					, RETRNGD_DLVY_POSTADDR                            /*반품 배송지_우편주소*/
					, RETRNGD_DLVY_DTAILADDR                           /*반품 배송지_상세주소*/
					, CNTRAC_STRT_YY                                   /*계약 시작 년도*/
					, CNTRAC_REQ_YMD                                   /*계약 신청 일자*/
					, OPN_YMD                                          /*오픈 일자*/
					, CNTRAC_REASN                                     /*계약 사유*/
					, CNTRAC_STOP_STRT_YMD                             /*계약 중지 시작 일자*/
					, CNTRAC_STOP_END_YMD                              /*계약 중지 종료 일자*/
					, CNTRAC_CANCEL_YMD                                /*계약 취소 일자*/
					, CNTRAC_DSUSE_YMD                                 /*계약 해지 일자*/
					, CNTRAC_STOP_REASN                                /*계약 중지 사유*/
					, CNTRAC_END_REASN                                 /*계약 종료 사유*/
					, CNTRAC_CANCEL_REASN                              /*계약 취소 사유*/
					, CNTRAC_DSUSE_REASN                               /*계약 해지 사유*/
					, BCNC_CNTRAC_NO                                   /*거래처 계약 번호*/
					, LWRNK_BCNC_NO                                    /*하위 거래처 번호*/
					, PO_HDRY_CNTRAC_NO                                /*우체국 택배 계약 번호*/
					, EMS_CNTRAC_NO                                    /*EMS 계약 번호*/
					, ADJ_BANK_CD                                      /*정산_은행 코드*/
					, ADJ_ACC_NO                                       /*정산_계좌 번호*/
					, ADJ_DPSTR                                        /*정산_예금주*/
					, ADJ_AUTO_YN                                      /*정산_자동 여부*/
					, ADJ_TYP_CD                                       /*정산_타입 코드*/
					, ADJ_INFO_DIV                                     /*정산 정보 구분*/
					, ADJ_VAT_ADD_YN                                   /*정산_부가세 포함 여부*/
					, PRC_PAY_DIV_CD                                   /*요금 납부 구분 코드*/
					, SUPPO_RGIST_POCD                                 /*공급국 등기용 국기호*/
					, COPRTN_FEE_AGREE_TURF                            /*제휴 수수료 동의 구간*/
					, COPRTN_FEE_TURF_CHG_REQ                          /*제휴 수수료 구간 변경 요청*/
					, COPRTN_FEE_CHG_STUS_CD                           /*제휴 수수료 변경 상태 코드*/
					, COPRTN_FEE_CHG_REQ_YMD                           /*제휴 수수료 변경 요청 일자*/
					, COPRTN_FEE_CHG_APPR_YMD                          /*제휴 수수료 변경 승인 일자*/
					, SUPP_COMP_PO_ACC_NO                              /*공급 업체 우체국 계좌 번호*/
					, BCNC_NM_US                                       /*거래처 명_영문*/
					, BCNC_NM_JP                                       /*거래처 명_일문*/
					, BCNC_NM_CN                                       /*거래처 명_중문*/
					, PRSDT_NM_US                                      /*대표자 명_영문*/
					, PRSDT_NM_JP                                      /*대표자 명_일문*/
					, PRSDT_NM_CN                                      /*대표자 명_중문*/
					, TRMNL_ID                                         /*터미널 ID*/
					, FLWR_DELIV_COMP_DSTB                             /*꽃 배달 업체 분배*/
					, AFTPMN_TREAT_APPR_NO                             /*후납 처리 승인 번호*/
					, ACCOUNT                                          /*계정*/
					, INET_NOTIC_USE_YN                                /*인터넷 통보 사용 여부*/
					, NOW_SUPP_COMP_CD                                 /*현행 공급 업체 코드*/
					, SUPP_COMP_SEQ                                    /*공급 업체 일련번호*/
					, CNTRAC_STRT_YM                                   /*계약 시작 년월*/
					, BUNDSEND_CONDSUB_NONPAY                          /*묶음배송 조건부 무료*/
					, SEND_MEAN_MBY_DIV_CD                             /*배송 수단 주체 구분 코드*/
					, REG_DATE                                         /*등록 일시*/
					, CHG_DATE                                         /*수정 일시*/
					, REGER_ID                                         /*등록자 아이디*/
					, CHGER_ID                                         /*수정자 아이디*/
		        )
		      (SELECT SUPP_COMP_ID                                     /*공급 업체 ID*/
					, SYSDATE                                          /*공급 업체 변경 일시*/
					, SUPP_COMP_IMPRTY_REASN                           /*공급 업체 불가 사유*/
					, MOV_REG_DIV_CD                                   /*이전 등록 구분 코드*/
					, SUPP_COMP_DIV_CD                                 /*공급 업체 분류 코드*/
					, COMPREG_NO                                       /*사업자등록 번호*/
					, CORP_REG_NO                                      /*법인 등록 번호*/
					, COMM_SELL_RPRT_NO                                /*통신 판매 신고 번호*/
					, SUPP_PO_ID                                       /*공급 우체국 ID*/
					, PO_ECODE                                         /*우체국 ECODE*/
					, BCNC_NM                                          /*거래처 명*/
					, TAX_CALDOC_COMP_NM                               /*세금 계산서_업체 명*/
					, INDUTY                                           /*업종*/
					, ENTRPS                                           /*업태*/
					, PRSDT_NM                                         /*대표자 명*/
					, BCNC_GRADE_CD                                    /*거래처 등급 코드*/
					, PRSDT_GRADE_CD                                   /*대표자 등급 코드*/
					, PRSDT_MOBILE_NO                                  /*대표자 휴대폰 번호*/
					, CORP_SSN                                         /*법인 주민등록번호*/
					, BIZFLD_AEA                                       /*사업장 평수*/
					, EMPEE_CNT                                        /*종업원 수*/
					, SUPP_COMP_INTRCN                                 /*공급 업체 소개*/
					, CUST_NO                                          /*고객 번호*/
					, JOIN_NO                                          /*가맹점 번호*/
					, TAXT_DIV_CD                                      /*과세 구분 코드*/
					, NATION_CD                                        /*국가 코드*/
					, BIZFLD_LOC                                       /*사업장 소재지*/
					, HDOFC_LOC                                        /*본점 소재지*/
					, SUPP_COMP_URL                                    /*공급 업체 URL*/
					, EMAIL                                            /*이메일*/
					, TELNO                                            /*전화번호*/
					, FAXNO                                            /*팩스번호*/
					, ZIPCD                                            /*우편번호*/
					, ADDR1                                            /*주소1*/
					, ADDR2                                            /*주소2*/
					, SEND_ZIPCD                                       /*발송_우편번호*/
					, SEND_ADDR                                        /*발송_주소*/
					, SEND_DTAIL_ADDR                                  /*발송_상세 주소*/
					, SEND_NO                                          /*발송_번호*/
					, SEND_TELNO                                       /*발송_전화번호*/
					, RETRNGD_DLVY_ZIPCD                               /*반품 배송지_우편번호*/
					, RETRNGD_DLVY_POSTADDR                            /*반품 배송지_우편주소*/
					, RETRNGD_DLVY_DTAILADDR                           /*반품 배송지_상세주소*/
					, CNTRAC_STRT_YY                                   /*계약 시작 년도*/
					, CNTRAC_REQ_YMD                                   /*계약 신청 일자*/
					, OPN_YMD                                          /*오픈 일자*/
					, CNTRAC_REASN                                     /*계약 사유*/
					, CNTRAC_STOP_STRT_YMD                             /*계약 중지 시작 일자*/
					, CNTRAC_STOP_END_YMD                              /*계약 중지 종료 일자*/
					, CNTRAC_CANCEL_YMD                                /*계약 취소 일자*/
					, CNTRAC_DSUSE_YMD                                 /*계약 해지 일자*/
					, CNTRAC_STOP_REASN                                /*계약 중지 사유*/
					, CNTRAC_END_REASN                                 /*계약 종료 사유*/
					, CNTRAC_CANCEL_REASN                              /*계약 취소 사유*/
					, CNTRAC_DSUSE_REASN                               /*계약 해지 사유*/
					, BCNC_CNTRAC_NO                                   /*거래처 계약 번호*/
					, LWRNK_BCNC_NO                                    /*하위 거래처 번호*/
					, PO_HDRY_CNTRAC_NO                                /*우체국 택배 계약 번호*/
					, EMS_CNTRAC_NO                                    /*EMS 계약 번호*/
					, ADJ_BANK_CD                                      /*정산_은행 코드*/
					, ADJ_ACC_NO                                       /*정산_계좌 번호*/
					, ADJ_DPSTR                                        /*정산_예금주*/
					, ADJ_AUTO_YN                                      /*정산_자동 여부*/
					, ADJ_TYP_CD                                       /*정산_타입 코드*/
					, ADJ_INFO_DIV                                     /*정산 정보 구분*/
					, ADJ_VAT_ADD_YN                                   /*정산_부가세 포함 여부*/
					, PRC_PAY_DIV_CD                                   /*요금 납부 구분 코드*/
					, SUPPO_RGIST_POCD                                 /*공급국 등기용 국기호*/
					, COPRTN_FEE_AGREE_TURF                            /*제휴 수수료 동의 구간*/
					, COPRTN_FEE_TURF_CHG_REQ                          /*제휴 수수료 구간 변경 요청*/
					, COPRTN_FEE_CHG_STUS_CD                           /*제휴 수수료 변경 상태 코드*/
					, COPRTN_FEE_CHG_REQ_YMD                           /*제휴 수수료 변경 요청 일자*/
					, COPRTN_FEE_CHG_APPR_YMD                          /*제휴 수수료 변경 승인 일자*/
					, SUPP_COMP_PO_ACC_NO                              /*공급 업체 우체국 계좌 번호*/
					, BCNC_NM_US                                       /*거래처 명_영문*/
					, BCNC_NM_JP                                       /*거래처 명_일문*/
					, BCNC_NM_CN                                       /*거래처 명_중문*/
					, PRSDT_NM_US                                      /*대표자 명_영문*/
					, PRSDT_NM_JP                                      /*대표자 명_일문*/
					, PRSDT_NM_CN                                      /*대표자 명_중문*/
					, TRMNL_ID                                         /*터미널 ID*/
					, FLWR_DELIV_COMP_DSTB                             /*꽃 배달 업체 분배*/
					, AFTPMN_TREAT_APPR_NO                             /*후납 처리 승인 번호*/
					, ACCOUNT                                          /*계정*/
					, INET_NOTIC_USE_YN                                /*인터넷 통보 사용 여부*/
					, NOW_SUPP_COMP_CD                                 /*현행 공급 업체 코드*/
					, SUPP_COMP_SEQ                                    /*공급 업체 일련번호*/
					, CNTRAC_STRT_YM                                   /*계약 시작 년월*/
					, BUNDSEND_CONDSUB_NONPAY                          /*묶음배송 조건부 무료*/
					, SEND_MEAN_MBY_DIV_CD                             /*배송 수단 주체 구분 코드*/
					, SYSDATE                                          /*등록 일시*/
					, SYSDATE                                          /*수정 일시*/
					, #loginId#                                         /*등록자 아이디*/
					, #loginId#                                         /*수정자 아이디*/
			FROM CO_SUPP_COMP_MAST
			WHERE  SUPP_COMP_ID = #suppCompId#
			)
		]]>
	</insert>

	<sql id="coprtnCard_list">
		SELECT A.CARD_SEQ
			 , A.CARD_NM
			 , A.CARD_IMAGE_NM
			 , A.CARD_INSTLMT_CONT1
			 , A.CARD_INSTLMT_CONT2
			 , A.APPLY_STRT_YMD
			 , A.APPLY_END_YMD
			 , A.NOTIC_SORT_ORDER
			 , A.STOP_YMD
			 , A.REG_DATE
			 , A.CHG_DATE
			 , A.REGER_ID
			 , A.CHGER_ID
           	 , IMAGE.FILE_STRE_PATH || IMAGE.STRE_FILE_NM AS IMAGE_PATH
           	 , IMAGE.ORIG_FILE_NM AS IMAGE_ORIG_NM
		  FROM CM_COPRTN_CARD_GUIDE A, CM_FILE_MGT IMAGE
		 WHERE A.CARD_IMAGE_NM = IMAGE.ATTCHFILE_ID(+)
		<isNotEmpty property="card_seq" prepend="AND">
			A.CARD_SEQ = #card_seq#
		</isNotEmpty>
		<isNotEmpty property="search_card_nm" prepend="AND">
			A.CARD_NM LIKE #search_card_nm#||'%'
		</isNotEmpty>
		<isNotEmpty property="search_strt_ymd">
			<isNotEmpty property="search_end_ymd">
				<isNotEmpty property="search_date_type" prepend="AND">
					<isEqual property="search_date_type" compareValue="apply_strt_ymd">
						REPLACE(A.APPLY_STRT_YMD, '-') BETWEEN REPLACE(#search_strt_ymd#, '-') AND REPLACE(#search_end_ymd#, '-')
					</isEqual>
					<isEqual property="search_date_type" compareValue="apply_end_date">
						REPLACE(A.APPLY_END_DATE, '-') BETWEEN REPLACE(#search_strt_ymd#, '-') AND REPLACE(#search_end_ymd#, '-')
					</isEqual>
				</isNotEmpty>
			</isNotEmpty>
		</isNotEmpty>
	</sql>

	<select id="selectCoprtnCardList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT *
				FROM ( SELECT
					<isEmpty property="sidx">
						ROW_NUMBER () OVER (ORDER BY CARD_SEQ DESC) RNUM
					</isEmpty>
					, A.*
					FROM (
						SELECT *
							FROM(
							<include refid="coprtnCard_list" />
							)
						) A
					) A
		<isNotEmpty property="firstIndex">
			WHERE RNUM BETWEEN  #firstIndex# AND #lastIndex#
		</isNotEmpty>
	</select>

	<select id="selectCoprtnCardCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*) AS CNT
		  FROM (<include refid="coprtnCard_list" />)
	</select>

	<insert id="insertCoprtnCardInfo" parameterClass="java.util.HashMap">
		MERGE INTO CM_COPRTN_CARD_GUIDE
			 USING DUAL
				ON (CARD_SEQ = #card_seq#)
		WHEN MATCHED THEN
			UPDATE SET
				   CARD_NM				= #card_nm#
				 , CARD_INSTLMT_CONT1	= #card_instlmt_cont1#
				 , CARD_INSTLMT_CONT2	= #card_instlmt_cont2#
				 , APPLY_STRT_YMD		= REPLACE(#apply_strt_ymd#, '-')
				 , APPLY_END_YMD		= REPLACE(#apply_end_ymd#, '-')
				 , NOTIC_SORT_ORDER		= #notic_sort_order#
				 , STOP_YMD				= REPLACE(#stop_ymd#, '-')
				<isNotEmpty property="card_image_nm" prepend=",">
					CARD_IMAGE_NM = #card_image_nm#
				</isNotEmpty>
				<isEmpty property="new_image_yn">
					<isEqual property="image_delyn" compareValue="Y" prepend=",">
						CARD_IMAGE_NM = NULL
					</isEqual>
				</isEmpty>
		         , CHG_DATE			= SYSDATE
		         , CHGER_ID			= #login_usr_id#
		WHEN NOT MATCHED THEN
			INSERT
		         ( CARD_SEQ
		         , CARD_NM
				 , CARD_IMAGE_NM
				 , CARD_INSTLMT_CONT1
				 , CARD_INSTLMT_CONT2
				 , APPLY_STRT_YMD
				 , APPLY_END_YMD
				 , NOTIC_SORT_ORDER
				 , STOP_YMD
				 , REG_DATE
				 , CHG_DATE
				 , REGER_ID
				 , CHGER_ID )
		  VALUES ( (SELECT NVL(MAX(CARD_SEQ), 0) + 1 FROM CM_COPRTN_CARD_GUIDE)
		         , #card_nm#
				 , #card_image_nm#
				 , #card_instlmt_cont1#
				 , #card_instlmt_cont2#
				 , REPLACE(#apply_strt_ymd#, '-')
				 , REPLACE(#apply_end_ymd#, '-')
				 , #notic_sort_order#
				 , REPLACE(#stop_ymd#, '-')
		         , SYSDATE
		         , SYSDATE
		         , NVL(#login_usr_id#, 'ADMIN')
		         , NVL(#login_usr_id#, 'ADMIN') )
	</insert>


	<!-- 운영자 정보 목록 TOTCNT -->
	<select id="selectCmAdminMastMgrListTotCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(ADMIN_ID)
		FROM CM_ADMIN_MAST
		<dynamic prepend="WHERE">
			<isNotEmpty property="searchTxt">
				<isEqual property="searchType" compareValue="01" prepend="AND">
					ADMIN_NM LIKE #searchTxt# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02" prepend="AND">
					ADMIN_ID LIKE #searchTxt# ||'%'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="adminDivCd" prepend="AND">
				ADMIN_DIV_CD = #adminDivCd#
			</isNotEmpty>
			<isNotEmpty property="searchAdminStusCd" prepend="AND">
				ADMIN_STUS_CD = #searchAdminStusCd#
			</isNotEmpty>
		</dynamic>
	</select>
	<!-- 운영자 정보 목록 LIST -->
	<select id="selectCmAdminMastMgrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<include refid="pagingHeader"/>
		SELECT	ADMIN_ID
				,ADMIN_NM
				,ADMIN_DIV_CD
				,F_GET_COMN_CD_NM('ADMIN_DIV_CD',ADMIN_DIV_CD) AS ADMIN_DIV_CD_NM
				,BELONG_OR_CD
				,PO_CD
				,CALCNTR_GRP_CD
				,TELNO
				,MOBILENO
				,EMAIL_ADDR
				,ADMIN_STUS_CD
				,F_GET_COMN_CD_NM('ADMIN_STUS_CD',ADMIN_STUS_CD) AS ADMIN_STUS_CD_NM
				,ADMIN_STUS_CHG_REASN_CD
				,LAST_LOGIN_DATE
				,PASSWD_LOCK_YN
				,DECODE(NVL(PASSWD_LOCK_YN,'N'),'N','정상','Y','잠김') AS PASSWD_LOCK_YN_NM
				,POSTNET_ID
				,TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS REG_DATE
				,TO_CHAR(CHG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CHG_DATE
				,REGER_ID
				,CHGER_ID
		FROM CM_ADMIN_MAST
		<dynamic prepend="WHERE">
			<isNotEmpty property="searchTxt">
				<isEqual property="searchType" compareValue="01" prepend="AND">
					ADMIN_NM LIKE #searchTxt# ||'%'
				</isEqual>
				<isEqual property="searchType" compareValue="02" prepend="AND">
					ADMIN_ID LIKE #searchTxt# ||'%'
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="adminDivCd" prepend="AND">
				ADMIN_DIV_CD = #adminDivCd#
			</isNotEmpty>
			<isNotEmpty property="searchAdminStusCd" prepend="AND">
				ADMIN_STUS_CD = #searchAdminStusCd#
			</isNotEmpty>
		</dynamic>
		<include refid="pagingFooter"/>
	</select>
	<!-- 관리자 상태 변경  -->
	<update id="updateAdminStusCd" parameterClass="java.util.HashMap">
		UPDATE	CM_ADMIN_MAST
		SET		ADMIN_STUS_CD = #adminStusCd#
				,CHG_DATE = SYSDATE
				,CHGER_ID = #loginId#
		WHERE	ADMIN_ID = #adminId#
	</update>
	<!-- 관리자 비밀번호 변경  -->
	<update id="updateAdminPassword" parameterClass="java.util.HashMap">
		UPDATE	CM_ADMIN_MAST
		SET		ADMIN_PASSWD = #password#
				,PASSWD_LOCK_YN = 'N'
				,CHG_DATE = SYSDATE
				,CHGER_ID = #loginId#
		WHERE	ADMIN_ID = #adminId#
	</update>


	<!-- 권한그룹 INFO -->
	<select id="selectAdminInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	ADMIN_ID
				,ADMIN_NM
				,ADMIN_DIV_CD
				,BELONG_OR_CD
				,PO_CD
				,CALCNTR_GRP_CD
				,TELNO
				,MOBILENO
				,EMAIL_ADDR
				,ADMIN_STUS_CD
				,ADMIN_STUS_CHG_REASN_CD
				,LAST_LOGIN_DATE
				,NVL(PASSWD_LOCK_YN,'N')AS PASSWD_LOCK_YN
				,POSTNET_ID
				,TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS REG_DATE
				,TO_CHAR(CHG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CHG_DATE
				,REGER_ID
				,CHGER_ID
				,JUMINNO
				,DEPTNM
				,ACCESSIP
		FROM	CM_ADMIN_MAST
		WHERE	ADMIN_ID = #adminId#
	</select>
	<update id="updateAdminInfo" parameterClass="java.util.HashMap">
		UPDATE	CM_ADMIN_MAST
		SET		ADMIN_STUS_CD = #adminStusCd#
				,ADMIN_DIV_CD = #adminDivCd#
				,PASSWD_LOCK_YN = #passwdLockYn#
				,CHG_DATE = SYSDATE
				,CHGER_ID = #loginId#
		WHERE	ADMIN_ID = #adminId#
	</update>


	<select id="selectPermIdDupCheck" parameterClass="java.util.HashMap" resultClass="int">
		SELECT  COUNT(1)
		FROM CM_PERM_GRP
		WHERE PERM_ID = #permId#
	</select>


</sqlMap>