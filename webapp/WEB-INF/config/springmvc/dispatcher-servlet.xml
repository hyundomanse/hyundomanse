<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for Application's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!--
        - The controllers are autodetected POJOs labeled with the @Controller annotation.
    -->
    <context:component-scan base-package="com.devwork, egovframework">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!--
        - The form-based controllers within this application provide @RequestMapping
        - annotations at the type level for path mapping URLs and @RequestMapping
        - at the method level for request type mappings (e.g., GET and POST).
        - In contrast, ClinicController - which is not form-based - provides
        - @RequestMapping only at the method level for path mapping URLs.
        -
        - DefaultAnnotationHandlerMapping is driven by these annotations and is
        - enabled by default with Java 5+.
    -->

    <!--
        - This bean processes annotated handler methods, applying Application-specific PropertyEditors
        - for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
     -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="egovframework.rte.cmmn.web.EgovBindingInitializer"/>
        </property>
         <property name="customArgumentResolvers" >
			<list>
				<bean class="com.devwork.common.resolver.CommandMapArgumentResolver" />
			</list>
		</property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

    <!--
        - This bean resolves specific types of exceptions to corresponding logical
        - view names for error views. The default behaviour of DispatcherServlet
        - is to propagate all exceptions to the servlet container: this will happen
        - here with all other types of exceptions.
    -->


    <!--  -->
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="exception/error"/>
    </bean> -->



      <!--
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
    p:viewClass="org.springframework.web.servlet.view.JstlView"
    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
     -->
    <!--
    <bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
      <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
           <property name="definitions">
                <list>
                     <value>/WEB-INF/tiles/tiles.xml</value>
                </list>
           </property>
      </bean>

 -->



    <!--
        - This bean configures the 'prefix' and 'suffix' properties of
        - InternalResourceViewResolver, which resolves logical view names
        - returned by Controllers. For example, a logical view name of "vets"
        - will be mapped to "/WEB-INF/jsp/vets.jsp".
    -->
    <!--
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
    p:viewClass="org.springframework.web.servlet.view.JstlView"
    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
 -->
    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Could also reside in the root application context, as it is generic,
        - but is currently just used within Application's web tier.

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
            p:basename="messages"/>
    -->


    <!-- ViewResolver구요~ jsp와 name을 매핑시켜주는 녀석이죠 -->
 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
 		<property name="mediaTypes">
			 <map>
				 <entry key="atom" value="application/atom+xml" />
				 <entry key="html" value="text/html" />
				 <entry key="json" value="application/json" />
				 <entry key="js" value="text/javascript" />
				 <entry key="css" value="text/css" />
			 </map>
		 </property>
		 <property name="viewResolvers">
			 <list>
				 <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />

				 <bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
				 	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
				 </bean>

			 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			 		<property name="prefix" value="/WEB-INF/jsp/" />
			 		<property name="suffix" value=".jsp" />
			 	</bean>
			 </list>
		 </property>

 		<property name="defaultViews">
 			<list>
 				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
 			</list>
 		</property>
 	</bean>


	 <!-- TilesConfigurer -->
	 <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	 	<property name="definitions" value="/WEB-INF/tiles/tiles.xml"/>
	 </bean>

 	<!-- 멀티파트 관련 문제시 우선 확인 必. 절대 유지 -->
 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000"/>
        <property name="maxInMemorySize" value="100000000"/>
    </bean>


    <!-- 로그인 체크가 필요한 URL과 로그인 여부를 체크해줄 인터셉터를 등록한다. -->
	<bean id="selectAnnotaionMapper" class="egovframework.rte.ptl.mvc.handler.SimpleUrlAnnotationHandlerMapping" p:order="1">
		<property name="interceptors">
			<list>
				<ref local="authenticInterceptor" />
			</list>
		</property>
		<property name="urls">
			<set>
				<value>/bo/*/*.do</value>
			</set>
		</property>

	</bean>

	<!-- 로그인 체크 인터셉터 -->
	<bean id="authenticInterceptor" class="egovframework.com.cmm.interceptor.AuthenticInterceptor">
		<property name="permittedURL">
			<set>
				<value>/bo/login.do</value>
				<value>/bo/logout.do</value>
			</set>
		</property>
	</bean>

</beans>